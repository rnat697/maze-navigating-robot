ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.section	.text.motorGoStraight,"ax",%progbits
 107              		.align	2
 108              		.global	motorGoStraight
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 3


 109              		.thumb
 110              		.thumb_func
 111              		.type	motorGoStraight, %function
 112              	motorGoStraight:
 113              	.LFB64:
 114              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <stdbool.h>
  19:main.c        **** #include <string.h>
  20:main.c        **** #include <stdlib.h>
  21:main.c        **** #include <math.h>
  22:main.c        **** #include <project.h>
  23:main.c        **** //* ========================================
  24:main.c        **** #include "defines.h"
  25:main.c        **** #include "vars.h"
  26:main.c        **** #include "isr_eoc.h"
  27:main.c        **** //* ========================================
  28:main.c        **** void usbPutString(char *s);
  29:main.c        **** void usbPutChar(char c);
  30:main.c        **** void handle_usb();
  31:main.c        **** //* ========================================
  32:main.c        **** 
  33:main.c        **** 
  34:main.c        **** #define rota180 500 //turns
  35:main.c        **** #define rota90Left 250
  36:main.c        **** 
  37:main.c        **** #define moveSlow 50
  38:main.c        **** #define travelDist 326 // how
  39:main.c        **** #define Q1CHANNEL 3
  40:main.c        **** #define Q2CHANNEL 5 
  41:main.c        **** #define Q3CHANNEL 0
  42:main.c        **** #define Q4CHANNEL 1
  43:main.c        **** #define Q5CHANNEL 2
  44:main.c        **** #define Q6CHANNEL 4
  45:main.c        **** 
  46:main.c        **** CY_ISR_PROTO(isr_eoc_Interrupt_test);
  47:main.c        **** CY_ISR_PROTO(isr_motor_interrupt_speed);
  48:main.c        **** CY_ISR_PROTO(isr_TS_interrupt_sample);
  49:main.c        **** int convertSensorBinary();
  50:main.c        **** int convertBackBinary();
  51:main.c        **** 
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 4


  52:main.c        **** void motorGoStraight(){
 115              		.loc 1 52 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119 0000 80B5     		push	{r7, lr}
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 7, -8
 122              		.cfi_offset 14, -4
 123 0002 00AF     		add	r7, sp, #0
 124              		.cfi_def_cfa_register 7
  53:main.c        ****     ////PWM_1_WriteCompare(150); // left wheel near power switch is stronker than right wheel //150
  54:main.c        ****     //M1_IN2_Write(0);
  55:main.c        ****     PWM_1_WriteCompare(160);//200 //180 //160
 125              		.loc 1 55 0
 126 0004 A020     		movs	r0, #160
 127 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  56:main.c        ****     PWM_2_WriteCompare(93); //52 //72 //93
 128              		.loc 1 56 0
 129 000a 5D20     		movs	r0, #93
 130 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  57:main.c        **** }
 131              		.loc 1 57 0
 132 0010 00BF     		nop
 133 0012 80BD     		pop	{r7, pc}
 134              		.cfi_endproc
 135              	.LFE64:
 136              		.size	motorGoStraight, .-motorGoStraight
 137              		.section	.text.motorSetSpeed,"ax",%progbits
 138              		.align	2
 139              		.global	motorSetSpeed
 140              		.thumb
 141              		.thumb_func
 142              		.type	motorSetSpeed, %function
 143              	motorSetSpeed:
 144              	.LFB65:
  58:main.c        **** void motorSetSpeed(int x){
 145              		.loc 1 58 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 8
 148              		@ frame_needed = 1, uses_anonymous_args = 0
 149 0000 80B5     		push	{r7, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 82B0     		sub	sp, sp, #8
 154              		.cfi_def_cfa_offset 16
 155 0004 00AF     		add	r7, sp, #0
 156              		.cfi_def_cfa_register 7
 157 0006 7860     		str	r0, [r7, #4]
  59:main.c        ****     ////PWM_1_WriteCompare(150); // left wheel near power switch is stronker than right wheel //150
  60:main.c        ****     //M1_IN2_Write(0);
  61:main.c        ****     
  62:main.c        ****     //fastest speed
  63:main.c        ****     PWM_1_WriteCompare(200+x);//200 //180 //160
 158              		.loc 1 63 0
 159 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 5


 160 000a DBB2     		uxtb	r3, r3
 161 000c 383B     		subs	r3, r3, #56
 162 000e DBB2     		uxtb	r3, r3
 163 0010 1846     		mov	r0, r3
 164 0012 FFF7FEFF 		bl	PWM_1_WriteCompare
  64:main.c        ****     PWM_2_WriteCompare(52-x); //52 //72 //93
 165              		.loc 1 64 0
 166 0016 7B68     		ldr	r3, [r7, #4]
 167 0018 DBB2     		uxtb	r3, r3
 168 001a C3F13403 		rsb	r3, r3, #52
 169 001e DBB2     		uxtb	r3, r3
 170 0020 1846     		mov	r0, r3
 171 0022 FFF7FEFF 		bl	PWM_2_WriteCompare
  65:main.c        **** }
 172              		.loc 1 65 0
 173 0026 00BF     		nop
 174 0028 0837     		adds	r7, r7, #8
 175              		.cfi_def_cfa_offset 8
 176 002a BD46     		mov	sp, r7
 177              		.cfi_def_cfa_register 13
 178              		@ sp needed
 179 002c 80BD     		pop	{r7, pc}
 180              		.cfi_endproc
 181              	.LFE65:
 182              		.size	motorSetSpeed, .-motorSetSpeed
 183 002e 00BF     		.section	.text.motorGoBackwards,"ax",%progbits
 184              		.align	2
 185              		.global	motorGoBackwards
 186              		.thumb
 187              		.thumb_func
 188              		.type	motorGoBackwards, %function
 189              	motorGoBackwards:
 190              	.LFB66:
  66:main.c        **** void motorGoBackwards(){
 191              		.loc 1 66 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 1, uses_anonymous_args = 0
 195 0000 80B5     		push	{r7, lr}
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 7, -8
 198              		.cfi_offset 14, -4
 199 0002 00AF     		add	r7, sp, #0
 200              		.cfi_def_cfa_register 7
  67:main.c        ****     
  68:main.c        ****     //M1_IN2_Write(0);
  69:main.c        ****     PWM_1_WriteCompare(93); //55
 201              		.loc 1 69 0
 202 0004 5D20     		movs	r0, #93
 203 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  70:main.c        ****     PWM_2_WriteCompare(160); //201
 204              		.loc 1 70 0
 205 000a A020     		movs	r0, #160
 206 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  71:main.c        **** }
 207              		.loc 1 71 0
 208 0010 00BF     		nop
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 6


 209 0012 80BD     		pop	{r7, pc}
 210              		.cfi_endproc
 211              	.LFE66:
 212              		.size	motorGoBackwards, .-motorGoBackwards
 213              		.section	.text.motorStop,"ax",%progbits
 214              		.align	2
 215              		.global	motorStop
 216              		.thumb
 217              		.thumb_func
 218              		.type	motorStop, %function
 219              	motorStop:
 220              	.LFB67:
  72:main.c        **** void motorStop(){
 221              		.loc 1 72 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 1, uses_anonymous_args = 0
 225 0000 80B5     		push	{r7, lr}
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 7, -8
 228              		.cfi_offset 14, -4
 229 0002 00AF     		add	r7, sp, #0
 230              		.cfi_def_cfa_register 7
  73:main.c        ****     PWM_1_WriteCompare(127); 
 231              		.loc 1 73 0
 232 0004 7F20     		movs	r0, #127
 233 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  74:main.c        ****     PWM_2_WriteCompare(127);
 234              		.loc 1 74 0
 235 000a 7F20     		movs	r0, #127
 236 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  75:main.c        **** }
 237              		.loc 1 75 0
 238 0010 00BF     		nop
 239 0012 80BD     		pop	{r7, pc}
 240              		.cfi_endproc
 241              	.LFE67:
 242              		.size	motorStop, .-motorStop
 243              		.section	.text.motorBeyblade,"ax",%progbits
 244              		.align	2
 245              		.global	motorBeyblade
 246              		.thumb
 247              		.thumb_func
 248              		.type	motorBeyblade, %function
 249              	motorBeyblade:
 250              	.LFB68:
  76:main.c        **** 
  77:main.c        **** void motorBeyblade(uint8 x){
 251              		.loc 1 77 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 8
 254              		@ frame_needed = 1, uses_anonymous_args = 0
 255 0000 80B5     		push	{r7, lr}
 256              		.cfi_def_cfa_offset 8
 257              		.cfi_offset 7, -8
 258              		.cfi_offset 14, -4
 259 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 7


 260              		.cfi_def_cfa_offset 16
 261 0004 00AF     		add	r7, sp, #0
 262              		.cfi_def_cfa_register 7
 263 0006 0346     		mov	r3, r0
 264 0008 FB71     		strb	r3, [r7, #7]
  78:main.c        ****     // TO DO
  79:main.c        ****     
  80:main.c        ****     PWM_1_WriteCompare(x); //55
 265              		.loc 1 80 0
 266 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 267 000c 1846     		mov	r0, r3
 268 000e FFF7FEFF 		bl	PWM_1_WriteCompare
  81:main.c        ****     PWM_2_WriteCompare(x); //201
 269              		.loc 1 81 0
 270 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 271 0014 1846     		mov	r0, r3
 272 0016 FFF7FEFF 		bl	PWM_2_WriteCompare
  82:main.c        ****     
  83:main.c        **** }
 273              		.loc 1 83 0
 274 001a 00BF     		nop
 275 001c 0837     		adds	r7, r7, #8
 276              		.cfi_def_cfa_offset 8
 277 001e BD46     		mov	sp, r7
 278              		.cfi_def_cfa_register 13
 279              		@ sp needed
 280 0020 80BD     		pop	{r7, pc}
 281              		.cfi_endproc
 282              	.LFE68:
 283              		.size	motorBeyblade, .-motorBeyblade
 284 0022 00BF     		.section	.text.motorTurnLeft,"ax",%progbits
 285              		.align	2
 286              		.global	motorTurnLeft
 287              		.thumb
 288              		.thumb_func
 289              		.type	motorTurnLeft, %function
 290              	motorTurnLeft:
 291              	.LFB69:
  84:main.c        **** void motorTurnLeft(uint8 x){
 292              		.loc 1 84 0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 8
 295              		@ frame_needed = 1, uses_anonymous_args = 0
 296 0000 80B5     		push	{r7, lr}
 297              		.cfi_def_cfa_offset 8
 298              		.cfi_offset 7, -8
 299              		.cfi_offset 14, -4
 300 0002 82B0     		sub	sp, sp, #8
 301              		.cfi_def_cfa_offset 16
 302 0004 00AF     		add	r7, sp, #0
 303              		.cfi_def_cfa_register 7
 304 0006 0346     		mov	r3, r0
 305 0008 FB71     		strb	r3, [r7, #7]
  85:main.c        ****     // TO DO
  86:main.c        ****     
  87:main.c        ****     PWM_1_WriteCompare(127); //55
 306              		.loc 1 87 0
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 8


 307 000a 7F20     		movs	r0, #127
 308 000c FFF7FEFF 		bl	PWM_1_WriteCompare
  88:main.c        ****     PWM_2_WriteCompare(x); //201
 309              		.loc 1 88 0
 310 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 311 0012 1846     		mov	r0, r3
 312 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
  89:main.c        ****     
  90:main.c        ****     
  91:main.c        ****     
  92:main.c        ****     //255
  93:main.c        **** }
 313              		.loc 1 93 0
 314 0018 00BF     		nop
 315 001a 0837     		adds	r7, r7, #8
 316              		.cfi_def_cfa_offset 8
 317 001c BD46     		mov	sp, r7
 318              		.cfi_def_cfa_register 13
 319              		@ sp needed
 320 001e 80BD     		pop	{r7, pc}
 321              		.cfi_endproc
 322              	.LFE69:
 323              		.size	motorTurnLeft, .-motorTurnLeft
 324              		.section	.text.motorTurnRight,"ax",%progbits
 325              		.align	2
 326              		.global	motorTurnRight
 327              		.thumb
 328              		.thumb_func
 329              		.type	motorTurnRight, %function
 330              	motorTurnRight:
 331              	.LFB70:
  94:main.c        **** 
  95:main.c        **** void motorTurnRight(int x){
 332              		.loc 1 95 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 8
 335              		@ frame_needed = 1, uses_anonymous_args = 0
 336 0000 80B5     		push	{r7, lr}
 337              		.cfi_def_cfa_offset 8
 338              		.cfi_offset 7, -8
 339              		.cfi_offset 14, -4
 340 0002 82B0     		sub	sp, sp, #8
 341              		.cfi_def_cfa_offset 16
 342 0004 00AF     		add	r7, sp, #0
 343              		.cfi_def_cfa_register 7
 344 0006 7860     		str	r0, [r7, #4]
  96:main.c        ****     // TO DO
  97:main.c        ****     
  98:main.c        ****     PWM_1_WriteCompare(x);//200
 345              		.loc 1 98 0
 346 0008 7B68     		ldr	r3, [r7, #4]
 347 000a DBB2     		uxtb	r3, r3
 348 000c 1846     		mov	r0, r3
 349 000e FFF7FEFF 		bl	PWM_1_WriteCompare
  99:main.c        ****     PWM_2_WriteCompare(127); //50
 350              		.loc 1 99 0
 351 0012 7F20     		movs	r0, #127
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 9


 352 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
 100:main.c        **** 
 101:main.c        **** }
 353              		.loc 1 101 0
 354 0018 00BF     		nop
 355 001a 0837     		adds	r7, r7, #8
 356              		.cfi_def_cfa_offset 8
 357 001c BD46     		mov	sp, r7
 358              		.cfi_def_cfa_register 13
 359              		@ sp needed
 360 001e 80BD     		pop	{r7, pc}
 361              		.cfi_endproc
 362              	.LFE70:
 363              		.size	motorTurnRight, .-motorTurnRight
 364              		.section	.text.motorCircle,"ax",%progbits
 365              		.align	2
 366              		.global	motorCircle
 367              		.thumb
 368              		.thumb_func
 369              		.type	motorCircle, %function
 370              	motorCircle:
 371              	.LFB71:
 102:main.c        **** 
 103:main.c        **** 
 104:main.c        **** void motorCircle(uint8 x){
 372              		.loc 1 104 0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 8
 375              		@ frame_needed = 1, uses_anonymous_args = 0
 376 0000 80B5     		push	{r7, lr}
 377              		.cfi_def_cfa_offset 8
 378              		.cfi_offset 7, -8
 379              		.cfi_offset 14, -4
 380 0002 82B0     		sub	sp, sp, #8
 381              		.cfi_def_cfa_offset 16
 382 0004 00AF     		add	r7, sp, #0
 383              		.cfi_def_cfa_register 7
 384 0006 0346     		mov	r3, r0
 385 0008 FB71     		strb	r3, [r7, #7]
 105:main.c        ****     // TO DO
 106:main.c        ****     //positive value turns left
 107:main.c        ****     //negative value turns right
 108:main.c        ****     PWM_1_WriteCompare(127+x); //147
 386              		.loc 1 108 0
 387 000a FB79     		ldrb	r3, [r7, #7]
 388 000c 7F33     		adds	r3, r3, #127
 389 000e DBB2     		uxtb	r3, r3
 390 0010 1846     		mov	r0, r3
 391 0012 FFF7FEFF 		bl	PWM_1_WriteCompare
 109:main.c        ****     PWM_2_WriteCompare(127+x); //
 392              		.loc 1 109 0
 393 0016 FB79     		ldrb	r3, [r7, #7]
 394 0018 7F33     		adds	r3, r3, #127
 395 001a DBB2     		uxtb	r3, r3
 396 001c 1846     		mov	r0, r3
 397 001e FFF7FEFF 		bl	PWM_2_WriteCompare
 110:main.c        ****     
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 10


 111:main.c        ****     
 112:main.c        ****     
 113:main.c        ****     //255
 114:main.c        **** }
 398              		.loc 1 114 0
 399 0022 00BF     		nop
 400 0024 0837     		adds	r7, r7, #8
 401              		.cfi_def_cfa_offset 8
 402 0026 BD46     		mov	sp, r7
 403              		.cfi_def_cfa_register 13
 404              		@ sp needed
 405 0028 80BD     		pop	{r7, pc}
 406              		.cfi_endproc
 407              	.LFE71:
 408              		.size	motorCircle, .-motorCircle
 409              		.global	changeMotor
 410 002a 00BF     		.bss
 411 0012 0000     		.align	2
 412              		.type	changeMotor, %object
 413              		.size	changeMotor, 4
 414              	changeMotor:
 415 0014 00000000 		.space	4
 416              		.global	checkLight
 417              		.align	2
 418              		.type	checkLight, %object
 419              		.size	checkLight, 4
 420              	checkLight:
 421 0018 00000000 		.space	4
 422              		.global	lightState
 423              		.align	2
 424              		.type	lightState, %object
 425              		.size	lightState, 4
 426              	lightState:
 427 001c 00000000 		.space	4
 428              		.global	lightDetectedFront
 429              		.align	2
 430              		.type	lightDetectedFront, %object
 431              		.size	lightDetectedFront, 12
 432              	lightDetectedFront:
 433 0020 00000000 		.space	12
 433      00000000 
 433      00000000 
 434              		.global	lightDetectedBack
 435              		.align	2
 436              		.type	lightDetectedBack, %object
 437              		.size	lightDetectedBack, 12
 438              	lightDetectedBack:
 439 002c 00000000 		.space	12
 439      00000000 
 439      00000000 
 440              		.global	counteoc
 441              		.align	2
 442              		.type	counteoc, %object
 443              		.size	counteoc, 4
 444              	counteoc:
 445 0038 00000000 		.space	4
 446              		.global	processSensors
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 11


 447              		.align	2
 448              		.type	processSensors, %object
 449              		.size	processSensors, 4
 450              	processSensors:
 451 003c 00000000 		.space	4
 452              		.global	middle
 453              		.align	2
 454              		.type	middle, %object
 455              		.size	middle, 4
 456              	middle:
 457 0040 00000000 		.space	4
 458              		.section	.text.isr_eoc_Interrupt_test,"ax",%progbits
 459              		.align	2
 460              		.global	isr_eoc_Interrupt_test
 461              		.thumb
 462              		.thumb_func
 463              		.type	isr_eoc_Interrupt_test, %function
 464              	isr_eoc_Interrupt_test:
 465              	.LFB72:
 115:main.c        **** int changeMotor=0;
 116:main.c        **** int checkLight =0;
 117:main.c        **** int lightState=0;
 118:main.c        **** volatile int lightDetectedFront[3] = {0,0,0};
 119:main.c        **** volatile int lightDetectedBack[3] = {0,0,0};
 120:main.c        **** volatile int counteoc = 0;
 121:main.c        **** volatile int processSensors = 0;
 122:main.c        **** volatile int middle =0;
 123:main.c        **** CY_ISR(isr_eoc_Interrupt_test)
 124:main.c        **** {
 466              		.loc 1 124 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 16
 469              		@ frame_needed = 1, uses_anonymous_args = 0
 470 0000 80B5     		push	{r7, lr}
 471              		.cfi_def_cfa_offset 8
 472              		.cfi_offset 7, -8
 473              		.cfi_offset 14, -4
 474 0002 84B0     		sub	sp, sp, #16
 475              		.cfi_def_cfa_offset 24
 476 0004 00AF     		add	r7, sp, #0
 477              		.cfi_def_cfa_register 7
 125:main.c        ****     #ifdef isr_test_INTERRUPT_INTERRUPT_CALLBACK
 126:main.c        ****         isr_TS_Interrupt_InterruptCallback();
 127:main.c        ****     #endif /* isr_eoc_INTERRUPT_INTERRUPT_CALLBACK */ 
 128:main.c        **** 
 129:main.c        ****     /*  Place your Interrupt code here. */
 130:main.c        ****     /* `#START isr_eoc_Interrupt` */
 131:main.c        ****     
 132:main.c        ****     
 133:main.c        ****     // get value from ADC then convert to DAC to send to external LEDs
 134:main.c        ****     if (counteoc < 13){//10
 478              		.loc 1 134 0
 479 0006 324B     		ldr	r3, .L19
 480 0008 1B68     		ldr	r3, [r3]
 481 000a 0C2B     		cmp	r3, #12
 482 000c 59DC     		bgt	.L10
 483              	.LBB2:
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 12


 135:main.c        ****         
 136:main.c        ****         int16 valueQ3 =  ADC_GetResult16(Q3CHANNEL);
 484              		.loc 1 136 0
 485 000e 0020     		movs	r0, #0
 486 0010 FFF7FEFF 		bl	ADC_GetResult16
 487 0014 0346     		mov	r3, r0
 488 0016 FB81     		strh	r3, [r7, #14]	@ movhi
 137:main.c        ****         int16 valueQ4 =  ADC_GetResult16(Q4CHANNEL);
 489              		.loc 1 137 0
 490 0018 0120     		movs	r0, #1
 491 001a FFF7FEFF 		bl	ADC_GetResult16
 492 001e 0346     		mov	r3, r0
 493 0020 BB81     		strh	r3, [r7, #12]	@ movhi
 138:main.c        ****         int16 valueQ5 =  ADC_GetResult16(Q5CHANNEL);
 494              		.loc 1 138 0
 495 0022 0220     		movs	r0, #2
 496 0024 FFF7FEFF 		bl	ADC_GetResult16
 497 0028 0346     		mov	r3, r0
 498 002a 7B81     		strh	r3, [r7, #10]	@ movhi
 139:main.c        ****     
 140:main.c        ****         int16 valueQ1 =  ADC_GetResult16(Q1CHANNEL);
 499              		.loc 1 140 0
 500 002c 0320     		movs	r0, #3
 501 002e FFF7FEFF 		bl	ADC_GetResult16
 502 0032 0346     		mov	r3, r0
 503 0034 3B81     		strh	r3, [r7, #8]	@ movhi
 141:main.c        ****         int16 valueQ2 =  ADC_GetResult16(Q2CHANNEL);
 504              		.loc 1 141 0
 505 0036 0520     		movs	r0, #5
 506 0038 FFF7FEFF 		bl	ADC_GetResult16
 507 003c 0346     		mov	r3, r0
 508 003e FB80     		strh	r3, [r7, #6]	@ movhi
 142:main.c        ****         int16 valueQ6 =  ADC_GetResult16(Q6CHANNEL);
 509              		.loc 1 142 0
 510 0040 0420     		movs	r0, #4
 511 0042 FFF7FEFF 		bl	ADC_GetResult16
 512 0046 0346     		mov	r3, r0
 513 0048 BB80     		strh	r3, [r7, #4]	@ movhi
 143:main.c        ****         
 144:main.c        ****         
 145:main.c        ****         //2211
 146:main.c        ****         if (valueQ3 >= 2211) {
 514              		.loc 1 146 0
 515 004a B7F90E30 		ldrsh	r3, [r7, #14]
 516 004e 40F6A202 		movw	r2, #2210
 517 0052 9342     		cmp	r3, r2
 518 0054 02DD     		ble	.L11
 147:main.c        ****         //set flag for white light detected
 148:main.c        ****         lightDetectedFront[0] = 1;
 519              		.loc 1 148 0
 520 0056 1F4B     		ldr	r3, .L19+4
 521 0058 0122     		movs	r2, #1
 522 005a 1A60     		str	r2, [r3]
 523              	.L11:
 149:main.c        ****         }
 150:main.c        ****         if (valueQ4 >= 2211) {
 524              		.loc 1 150 0
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 13


 525 005c B7F90C30 		ldrsh	r3, [r7, #12]
 526 0060 40F6A202 		movw	r2, #2210
 527 0064 9342     		cmp	r3, r2
 528 0066 02DD     		ble	.L12
 151:main.c        ****         //set flag for white light detected
 152:main.c        ****         lightDetectedFront[1] = 1;
 529              		.loc 1 152 0
 530 0068 1A4B     		ldr	r3, .L19+4
 531 006a 0122     		movs	r2, #1
 532 006c 5A60     		str	r2, [r3, #4]
 533              	.L12:
 153:main.c        ****         }
 154:main.c        ****     
 155:main.c        ****         if (valueQ5 >= 2211) {
 534              		.loc 1 155 0
 535 006e B7F90A30 		ldrsh	r3, [r7, #10]
 536 0072 40F6A202 		movw	r2, #2210
 537 0076 9342     		cmp	r3, r2
 538 0078 02DD     		ble	.L13
 156:main.c        ****         //set flag for white light detected
 157:main.c        ****         lightDetectedFront[2] = 1;
 539              		.loc 1 157 0
 540 007a 164B     		ldr	r3, .L19+4
 541 007c 0122     		movs	r2, #1
 542 007e 9A60     		str	r2, [r3, #8]
 543              	.L13:
 158:main.c        ****         }
 159:main.c        ****         
 160:main.c        ****         if (valueQ1 >= 2211) {
 544              		.loc 1 160 0
 545 0080 B7F90830 		ldrsh	r3, [r7, #8]
 546 0084 40F6A202 		movw	r2, #2210
 547 0088 9342     		cmp	r3, r2
 548 008a 02DD     		ble	.L14
 161:main.c        ****         //set flag for white light detected
 162:main.c        ****             lightDetectedBack[1] = 1;
 549              		.loc 1 162 0
 550 008c 124B     		ldr	r3, .L19+8
 551 008e 0122     		movs	r2, #1
 552 0090 5A60     		str	r2, [r3, #4]
 553              	.L14:
 163:main.c        ****         }
 164:main.c        ****         
 165:main.c        ****         if (valueQ2 >= 2211) {
 554              		.loc 1 165 0
 555 0092 B7F90630 		ldrsh	r3, [r7, #6]
 556 0096 40F6A202 		movw	r2, #2210
 557 009a 9342     		cmp	r3, r2
 558 009c 02DD     		ble	.L15
 166:main.c        ****         //set flag for white light detected
 167:main.c        ****             lightDetectedBack[2] = 1;
 559              		.loc 1 167 0
 560 009e 0E4B     		ldr	r3, .L19+8
 561 00a0 0122     		movs	r2, #1
 562 00a2 9A60     		str	r2, [r3, #8]
 563              	.L15:
 168:main.c        ****         }
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 14


 169:main.c        ****                 
 170:main.c        ****                 
 171:main.c        ****         if (valueQ6 >= 2211) {
 564              		.loc 1 171 0
 565 00a4 B7F90430 		ldrsh	r3, [r7, #4]
 566 00a8 40F6A202 		movw	r2, #2210
 567 00ac 9342     		cmp	r3, r2
 568 00ae 02DD     		ble	.L16
 172:main.c        ****         //set flag for white light detected
 173:main.c        ****             lightDetectedBack[0] = 1;
 569              		.loc 1 173 0
 570 00b0 094B     		ldr	r3, .L19+8
 571 00b2 0122     		movs	r2, #1
 572 00b4 1A60     		str	r2, [r3]
 573              	.L16:
 174:main.c        ****         }
 175:main.c        ****         
 176:main.c        ****         counteoc++;
 574              		.loc 1 176 0
 575 00b6 064B     		ldr	r3, .L19
 576 00b8 1B68     		ldr	r3, [r3]
 577 00ba 0133     		adds	r3, r3, #1
 578 00bc 044A     		ldr	r2, .L19
 579 00be 1360     		str	r3, [r2]
 580              	.LBE2:
 177:main.c        ****     } else {
 178:main.c        ****         processSensors = 1;   
 179:main.c        ****        
 180:main.c        ****     }
 181:main.c        ****     /* `#END` */
 182:main.c        **** }
 581              		.loc 1 182 0
 582 00c0 02E0     		b	.L18
 583              	.L10:
 178:main.c        ****        
 584              		.loc 1 178 0
 585 00c2 064B     		ldr	r3, .L19+12
 586 00c4 0122     		movs	r2, #1
 587 00c6 1A60     		str	r2, [r3]
 588              	.L18:
 589              		.loc 1 182 0
 590 00c8 00BF     		nop
 591 00ca 1037     		adds	r7, r7, #16
 592              		.cfi_def_cfa_offset 8
 593 00cc BD46     		mov	sp, r7
 594              		.cfi_def_cfa_register 13
 595              		@ sp needed
 596 00ce 80BD     		pop	{r7, pc}
 597              	.L20:
 598              		.align	2
 599              	.L19:
 600 00d0 00000000 		.word	counteoc
 601 00d4 00000000 		.word	lightDetectedFront
 602 00d8 00000000 		.word	lightDetectedBack
 603 00dc 00000000 		.word	processSensors
 604              		.cfi_endproc
 605              	.LFE72:
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 15


 606              		.size	isr_eoc_Interrupt_test, .-isr_eoc_Interrupt_test
 607              		.bss
 608              	count:
 609 0044 00       		.space	1
 610              		.section	.text.isr_motor_interrupt_speed,"ax",%progbits
 611              		.align	2
 612              		.global	isr_motor_interrupt_speed
 613              		.thumb
 614              		.thumb_func
 615              		.type	isr_motor_interrupt_speed, %function
 616              	isr_motor_interrupt_speed:
 617              	.LFB73:
 183:main.c        **** // NEED TO INCREASE/DECREASE SPEED TOO
 184:main.c        **** // AND IMPLEMENT LIGHT SENSOR THINGS
 185:main.c        **** volatile static int8 count;
 186:main.c        **** CY_ISR(isr_motor_interrupt_speed)
 187:main.c        **** {
 618              		.loc 1 187 0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 0
 621              		@ frame_needed = 1, uses_anonymous_args = 0
 622              		@ link register save eliminated.
 623 0000 80B4     		push	{r7}
 624              		.cfi_def_cfa_offset 4
 625              		.cfi_offset 7, -4
 626 0002 00AF     		add	r7, sp, #0
 627              		.cfi_def_cfa_register 7
 188:main.c        ****     #ifdef isr_motor_INTERRUPT_INTERRUPT_CALLBACK
 189:main.c        ****         isr_motor_Interrupt_InterruptCallback();
 190:main.c        ****     #endif /* isr_motor_INTERRUPT_INTERRUPT_CALLBACK */ 
 191:main.c        **** 
 192:main.c        ****     /*  Place your Interrupt code here. */
 193:main.c        ****     /* `#START isr_motor_Interrupt` */
 194:main.c        ****       /*int16 currCountMotor2 = QuadDec_M2_GetCounter();
 195:main.c        ****       int16 currCountMotor1 = QuadDec_M1_GetCounter();  
 196:main.c        ****       
 197:main.c        ****      speedMotor1 = (currCountMotor1 - prevcountMotor1) / 0.2;
 198:main.c        ****      speedMotor2 = (currCountMotor2 - prevcountMotor2) / 0.2;
 199:main.c        ****     
 200:main.c        ****       prevcountMotor1 = currCountMotor1;
 201:main.c        ****       prevcountMotor2 = currCountMotor2;*/
 202:main.c        ****     
 203:main.c        ****     /* `#END` */
 204:main.c        **** }
 628              		.loc 1 204 0
 629 0004 00BF     		nop
 630 0006 BD46     		mov	sp, r7
 631              		.cfi_def_cfa_register 13
 632              		@ sp needed
 633 0008 80BC     		pop	{r7}
 634              		.cfi_restore 7
 635              		.cfi_def_cfa_offset 0
 636 000a 7047     		bx	lr
 637              		.cfi_endproc
 638              	.LFE73:
 639              		.size	isr_motor_interrupt_speed, .-isr_motor_interrupt_speed
 640              		.section	.rodata
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 16


 641              		.align	2
 642              	.LC0:
 643 0000 4D6F746F 		.ascii	"Motor 1 - start count: %d, end count: %d \012\000"
 643      72203120 
 643      2D207374 
 643      61727420 
 643      636F756E 
 644 002b 00       		.align	2
 645              	.LC1:
 646 002c 4D6F746F 		.ascii	"Motor 2 - start count: %d, end count: %d \012\000"
 646      72203220 
 646      2D207374 
 646      61727420 
 646      636F756E 
 647              		.section	.text.motorCount,"ax",%progbits
 648              		.align	2
 649              		.global	motorCount
 650              		.thumb
 651              		.thumb_func
 652              		.type	motorCount, %function
 653              	motorCount:
 654              	.LFB74:
 205:main.c        **** void motorCount(){
 655              		.loc 1 205 0
 656              		.cfi_startproc
 657              		@ args = 0, pretend = 0, frame = 20008
 658              		@ frame_needed = 1, uses_anonymous_args = 0
 659 0000 80B5     		push	{r7, lr}
 660              		.cfi_def_cfa_offset 8
 661              		.cfi_offset 7, -8
 662              		.cfi_offset 14, -4
 663 0002 ADF59C4D 		sub	sp, sp, #19968
 664              		.cfi_def_cfa_offset 19976
 665 0006 8AB0     		sub	sp, sp, #40
 666              		.cfi_def_cfa_offset 20016
 667 0008 00AF     		add	r7, sp, #0
 668              		.cfi_def_cfa_register 7
 206:main.c        ****     int16 beginningCountMotor1 = 0;
 669              		.loc 1 206 0
 670 000a 0023     		movs	r3, #0
 671 000c 07F59C42 		add	r2, r7, #19968
 672 0010 02F12602 		add	r2, r2, #38
 673 0014 1380     		strh	r3, [r2]	@ movhi
 207:main.c        ****     int16 beginningCountMotor2 = 0;
 674              		.loc 1 207 0
 675 0016 0023     		movs	r3, #0
 676 0018 07F59C42 		add	r2, r7, #19968
 677 001c 02F12402 		add	r2, r2, #36
 678 0020 1380     		strh	r3, [r2]	@ movhi
 208:main.c        ****     int16 endCountMotor2 = QuadDec_M2_GetCounter();
 679              		.loc 1 208 0
 680 0022 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 681 0026 0346     		mov	r3, r0
 682 0028 07F59C42 		add	r2, r7, #19968
 683 002c 02F12202 		add	r2, r2, #34
 684 0030 1380     		strh	r3, [r2]	@ movhi
 209:main.c        ****     int16 endCountMotor1 = QuadDec_M1_GetCounter();
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 17


 685              		.loc 1 209 0
 686 0032 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 687 0036 0346     		mov	r3, r0
 688 0038 07F59C42 		add	r2, r7, #19968
 689 003c 02F12002 		add	r2, r2, #32
 690 0040 1380     		strh	r3, [r2]	@ movhi
 210:main.c        ****     char motor1String[10000]; 
 211:main.c        ****     sprintf(motor1String,"Motor 1 - start count: %d, end count: %d \n", beginningCountMotor1, endCo
 691              		.loc 1 211 0
 692 0042 07F59C43 		add	r3, r7, #19968
 693 0046 03F12603 		add	r3, r3, #38
 694 004a B3F90020 		ldrsh	r2, [r3]
 695 004e 07F59C43 		add	r3, r7, #19968
 696 0052 03F12003 		add	r3, r3, #32
 697 0056 B3F90030 		ldrsh	r3, [r3]
 698 005a 07F51C50 		add	r0, r7, #9984
 699 005e 00F12800 		add	r0, r0, #40
 700 0062 1838     		subs	r0, r0, #24
 701 0064 1449     		ldr	r1, .L23
 702 0066 FFF7FEFF 		bl	sprintf
 212:main.c        ****     char motor2String[10000];
 213:main.c        ****     sprintf(motor2String,"Motor 2 - start count: %d, end count: %d \n", beginningCountMotor2 , endC
 703              		.loc 1 213 0
 704 006a 07F59C43 		add	r3, r7, #19968
 705 006e 03F12403 		add	r3, r3, #36
 706 0072 B3F90020 		ldrsh	r2, [r3]
 707 0076 07F59C43 		add	r3, r7, #19968
 708 007a 03F12203 		add	r3, r3, #34
 709 007e B3F90030 		ldrsh	r3, [r3]
 710 0082 07F12800 		add	r0, r7, #40
 711 0086 2838     		subs	r0, r0, #40
 712 0088 0C49     		ldr	r1, .L23+4
 713 008a FFF7FEFF 		bl	sprintf
 214:main.c        ****     
 215:main.c        ****     usbPutString(motor1String);
 714              		.loc 1 215 0
 715 008e 07F51C53 		add	r3, r7, #9984
 716 0092 03F12803 		add	r3, r3, #40
 717 0096 183B     		subs	r3, r3, #24
 718 0098 1846     		mov	r0, r3
 719 009a FFF7FEFF 		bl	usbPutString
 216:main.c        ****     usbPutString(motor2String);
 720              		.loc 1 216 0
 721 009e 07F12803 		add	r3, r7, #40
 722 00a2 283B     		subs	r3, r3, #40
 723 00a4 1846     		mov	r0, r3
 724 00a6 FFF7FEFF 		bl	usbPutString
 217:main.c        **** 
 218:main.c        **** }
 725              		.loc 1 218 0
 726 00aa 00BF     		nop
 727 00ac 07F59C47 		add	r7, r7, #19968
 728 00b0 2837     		adds	r7, r7, #40
 729              		.cfi_def_cfa_offset 8
 730 00b2 BD46     		mov	sp, r7
 731              		.cfi_def_cfa_register 13
 732              		@ sp needed
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 18


 733 00b4 80BD     		pop	{r7, pc}
 734              	.L24:
 735 00b6 00BF     		.align	2
 736              	.L23:
 737 00b8 00000000 		.word	.LC0
 738 00bc 2C000000 		.word	.LC1
 739              		.cfi_endproc
 740              	.LFE74:
 741              		.size	motorCount, .-motorCount
 742              		.section	.text.motorRun,"ax",%progbits
 743              		.align	2
 744              		.global	motorRun
 745              		.thumb
 746              		.thumb_func
 747              		.type	motorRun, %function
 748              	motorRun:
 749              	.LFB75:
 219:main.c        **** 
 220:main.c        **** void motorRun(int x){
 750              		.loc 1 220 0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 8
 753              		@ frame_needed = 1, uses_anonymous_args = 0
 754 0000 80B5     		push	{r7, lr}
 755              		.cfi_def_cfa_offset 8
 756              		.cfi_offset 7, -8
 757              		.cfi_offset 14, -4
 758 0002 82B0     		sub	sp, sp, #8
 759              		.cfi_def_cfa_offset 16
 760 0004 00AF     		add	r7, sp, #0
 761              		.cfi_def_cfa_register 7
 762 0006 7860     		str	r0, [r7, #4]
 221:main.c        ****     
 222:main.c        ****     
 223:main.c        ****     
 224:main.c        ****     //PWM_1_Start();
 225:main.c        ****     //PWM_2_Start();
 226:main.c        **** 
 227:main.c        **** 
 228:main.c        ****     //motorStop();
 229:main.c        ****     //CyDelay(time); // so we have time to set the robot up
 230:main.c        ****     motorSetSpeed(x);
 763              		.loc 1 230 0
 764 0008 7868     		ldr	r0, [r7, #4]
 765 000a FFF7FEFF 		bl	motorSetSpeed
 231:main.c        ****     //CyDelay(time);
 232:main.c        ****     motorStop();
 766              		.loc 1 232 0
 767 000e FFF7FEFF 		bl	motorStop
 233:main.c        ****     
 234:main.c        ****     //motorGoBackwards();
 235:main.c        **** 
 236:main.c        ****     
 237:main.c        ****     //CyDelay(2000);
 238:main.c        ****  
 239:main.c        ****     //motorStop();
 240:main.c        ****     //motorCount();//checks count per second.
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 19


 241:main.c        **** 
 242:main.c        ****     
 243:main.c        **** }
 768              		.loc 1 243 0
 769 0012 00BF     		nop
 770 0014 0837     		adds	r7, r7, #8
 771              		.cfi_def_cfa_offset 8
 772 0016 BD46     		mov	sp, r7
 773              		.cfi_def_cfa_register 13
 774              		@ sp needed
 775 0018 80BD     		pop	{r7, pc}
 776              		.cfi_endproc
 777              	.LFE75:
 778              		.size	motorRun, .-motorRun
 779 001a 00BF     		.section	.text.isr_TS_Interrupt_sample,"ax",%progbits
 780              		.align	2
 781              		.global	isr_TS_Interrupt_sample
 782              		.thumb
 783              		.thumb_func
 784              		.type	isr_TS_Interrupt_sample, %function
 785              	isr_TS_Interrupt_sample:
 786              	.LFB76:
 244:main.c        **** CY_ISR(isr_TS_Interrupt_sample)
 245:main.c        **** {
 787              		.loc 1 245 0
 788              		.cfi_startproc
 789              		@ args = 0, pretend = 0, frame = 0
 790              		@ frame_needed = 1, uses_anonymous_args = 0
 791 0000 80B5     		push	{r7, lr}
 792              		.cfi_def_cfa_offset 8
 793              		.cfi_offset 7, -8
 794              		.cfi_offset 14, -4
 795 0002 00AF     		add	r7, sp, #0
 796              		.cfi_def_cfa_register 7
 246:main.c        ****     #ifdef isr_TS_INTERRUPT_INTERRUPT_CALLBACK
 247:main.c        ****         isr_TS_Interrupt_InterruptCallback();
 248:main.c        ****     #endif /* isr_TS_INTERRUPT_INTERRUPT_CALLBACK */ 
 249:main.c        ****         ADC_StartConvert();
 797              		.loc 1 249 0
 798 0004 FFF7FEFF 		bl	ADC_StartConvert
 250:main.c        ****     /*  Place your Interrupt code here. */
 251:main.c        ****     /* `#START isr_TS_Interrupt` */
 252:main.c        **** 
 253:main.c        ****     /* `#END` */
 254:main.c        **** }
 799              		.loc 1 254 0
 800 0008 00BF     		nop
 801 000a 80BD     		pop	{r7, pc}
 802              		.cfi_endproc
 803              	.LFE76:
 804              		.size	isr_TS_Interrupt_sample, .-isr_TS_Interrupt_sample
 805              		.section	.text.main,"ax",%progbits
 806              		.align	2
 807              		.global	main
 808              		.thumb
 809              		.thumb_func
 810              		.type	main, %function
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 20


 811              	main:
 812              	.LFB77:
 255:main.c        **** 
 256:main.c        **** 
 257:main.c        **** int main()
 258:main.c        **** {
 813              		.loc 1 258 0
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 4040
 816              		@ frame_needed = 1, uses_anonymous_args = 0
 817 0000 80B5     		push	{r7, lr}
 818              		.cfi_def_cfa_offset 8
 819              		.cfi_offset 7, -8
 820              		.cfi_offset 14, -4
 821 0002 ADF6C87D 		subw	sp, sp, #4040
 822              		.cfi_def_cfa_offset 4048
 823 0006 00AF     		add	r7, sp, #0
 824              		.cfi_def_cfa_register 7
 259:main.c        ****     
 260:main.c        **** 
 261:main.c        **** // --------------------------------    
 262:main.c        **** // ----- INITIALIZATIONS ----------
 263:main.c        ****     CYGlobalIntEnable;
 825              		.loc 1 263 0
 826              		.syntax unified
 827              	@ 263 "main.c" 1
 828 0008 62B6     		CPSIE   i
 829              	@ 0 "" 2
 264:main.c        ****     count  = 0;
 830              		.loc 1 264 0
 831              		.thumb
 832              		.syntax unified
 833 000a B64B     		ldr	r3, .L51
 834 000c 0022     		movs	r2, #0
 835 000e 1A70     		strb	r2, [r3]
 265:main.c        ****     
 266:main.c        ****     ADC_Start();
 836              		.loc 1 266 0
 837 0010 FFF7FEFF 		bl	ADC_Start
 267:main.c        ****     Timer_TS_Start();
 838              		.loc 1 267 0
 839 0014 FFF7FEFF 		bl	Timer_TS_Start
 268:main.c        ****     Timer_Motor_Start();
 840              		.loc 1 268 0
 841 0018 FFF7FEFF 		bl	Timer_Motor_Start
 269:main.c        ****     QuadDec_M1_Start();
 842              		.loc 1 269 0
 843 001c FFF7FEFF 		bl	QuadDec_M1_Start
 270:main.c        ****     QuadDec_M2_Start(); //init the quadencoder,
 844              		.loc 1 270 0
 845 0020 FFF7FEFF 		bl	QuadDec_M2_Start
 271:main.c        ****     //isr_motor_StartEx(isr_motor_interrupt_speed);
 272:main.c        ****     
 273:main.c        ****     isr_TS_StartEx(isr_TS_Interrupt_sample);
 846              		.loc 1 273 0
 847 0024 B048     		ldr	r0, .L51+4
 848 0026 FFF7FEFF 		bl	isr_TS_StartEx
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 21


 274:main.c        ****     isr_eoc_StartEx(isr_eoc_Interrupt_test);
 849              		.loc 1 274 0
 850 002a B048     		ldr	r0, .L51+8
 851 002c FFF7FEFF 		bl	isr_eoc_StartEx
 275:main.c        ****     
 276:main.c        ****     
 277:main.c        ****     //ADC_StartConvert();
 278:main.c        ****     
 279:main.c        ****     PWM_1_Start();
 852              		.loc 1 279 0
 853 0030 FFF7FEFF 		bl	PWM_1_Start
 280:main.c        ****     PWM_2_Start();
 854              		.loc 1 280 0
 855 0034 FFF7FEFF 		bl	PWM_2_Start
 281:main.c        ****     LED_Write(0);
 856              		.loc 1 281 0
 857 0038 0020     		movs	r0, #0
 858 003a FFF7FEFF 		bl	LED_Write
 282:main.c        ****     motorStop();
 859              		.loc 1 282 0
 860 003e FFF7FEFF 		bl	motorStop
 283:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION)   ; 
 861              		.loc 1 283 0
 862 0042 0121     		movs	r1, #1
 863 0044 0020     		movs	r0, #0
 864 0046 FFF7FEFF 		bl	USBUART_Start
 284:main.c        ****     ////////////////////////////////
 285:main.c        ****     
 286:main.c        ****     // Speed//
 287:main.c        ****     //int speed = -33;
 288:main.c        ****     //int time = 2000;
 289:main.c        ****    // motorRun(speed,time);
 290:main.c        **** 
 291:main.c        ****     /////////////////////////////////////////////
 292:main.c        ****     int lastState=0;
 865              		.loc 1 292 0
 866 004a 0023     		movs	r3, #0
 867 004c C7F8B83F 		str	r3, [r7, #4024]
 293:main.c        ****     //usbPutString(displaystring);
 294:main.c        ****      //87cm motor 1 945, motor2 -958. 2seconds.
 295:main.c        ****     //10.8 counts per cm for distance.
 296:main.c        ****    //for speed,43.5cm/s 
 297:main.c        ****     
 298:main.c        **** //    
 299:main.c        **** // ----------      //distance ---------
 300:main.c        ****  int travelDis = 1740;//10.8 * travelDis
 868              		.loc 1 300 0
 869 0050 40F2CC63 		movw	r3, #1740
 870 0054 C7F8B43F 		str	r3, [r7, #4020]
 301:main.c        ****     /*
 302:main.c        ****   while(QuadDec_M1_GetCounter()<travelDis){
 303:main.c        ****         if (processSensors == 1) {
 304:main.c        ****     
 305:main.c        ****             int operation = convertSensorBinary();
 306:main.c        ****             
 307:main.c        ****     
 308:main.c        ****             switch(operation){
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 22


 309:main.c        ****                 case 3:// 0 1 1 // Q3 under black
 310:main.c        ****                     motorTurnLeft(50);//decrease go fast used to be 50 by 6
 311:main.c        ****                     LED_Write(1);
 312:main.c        ****                     break;    
 313:main.c        ****                     
 314:main.c        ****                 case 6:// 1 1 0 // Q5 under black  
 315:main.c        ****                     motorTurnRight(200);//increase 200 by 6
 316:main.c        ****                     LED_Write(1);
 317:main.c        ****                     break;
 318:main.c        ****                     
 319:main.c        ****                 case 5:// 101 // Q4 under black
 320:main.c        ****                     motorSetSpeed(-7); //-40 is original
 321:main.c        ****                     LED_Write(0);
 322:main.c        ****                     break;
 323:main.c        ****             }
 324:main.c        ****             
 325:main.c        ****              processSensors = 0;
 326:main.c        ****             //reset counter
 327:main.c        **** 
 328:main.c        ****             counteoc = 0;
 329:main.c        ****             //reset flags for lightsensors because it checks every 10 iterations, adds delay/
 330:main.c        ****             lightDetectedFront[0] = 0;
 331:main.c        ****             lightDetectedFront[1] = 0;
 332:main.c        ****             lightDetectedFront[2] = 0;
 333:main.c        ****             lightDetectedBack[0] = 0;
 334:main.c        ****             lightDetectedBack[1] = 0;
 335:main.c        ****             lightDetectedBack[2] = 0;
 336:main.c        ****           
 337:main.c        ****             
 338:main.c        ****     
 339:main.c        ****         }
 340:main.c        ****     }
 341:main.c        ****     motorStop();
 342:main.c        ****     motorCount();
 343:main.c        ****     
 344:main.c        ****     /// ---------End here----------
 345:main.c        ****     
 346:main.c        ****     
 347:main.c        ****         
 348:main.c        ****    
 349:main.c        ****     
 350:main.c        ****     */
 351:main.c        ****     int decisionflag =0;
 871              		.loc 1 351 0
 872 0058 0023     		movs	r3, #0
 873 005a C7F8C43F 		str	r3, [r7, #4036]
 352:main.c        ****     
 353:main.c        ****     /// 1 go straight
 354:main.c        ****     // 2 go right
 355:main.c        ****     // 0 go left
 356:main.c        ****     //3 is uturn
 357:main.c        ****     
 358:main.c        ****                      
 359:main.c        ****     //int queue[1000] = {2,2,0,0,2,3,0,0,2,2,3,1,0,2,2,3,0,2,0,0};
 360:main.c        ****     //int queue[1000] = {2,2,0,1,2,0,0,1,1,0,0,2,2,3,0,0,2,2,1,1,2,2,0,1,2,0,0,3,2,2,1,2,0,0,0,2,0,
 361:main.c        ****     int queue[1000] = {2,2,0,0,2,1,2,1,1,0,3,2,1,0,0,2,2,0,0,2,0,2,0,1,0,0,2,3,0,2,2,2,0,2,0,0,2,2,
 874              		.loc 1 361 0
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 23


 875 005e 3B1D     		adds	r3, r7, #4
 876 0060 1846     		mov	r0, r3
 877 0062 4FF47A63 		mov	r3, #4000
 878 0066 1A46     		mov	r2, r3
 879 0068 0021     		movs	r1, #0
 880 006a FFF7FEFF 		bl	memset
 881 006e 3B1D     		adds	r3, r7, #4
 882 0070 0222     		movs	r2, #2
 883 0072 1A60     		str	r2, [r3]
 884 0074 3B1D     		adds	r3, r7, #4
 885 0076 0222     		movs	r2, #2
 886 0078 5A60     		str	r2, [r3, #4]
 887 007a 3B1D     		adds	r3, r7, #4
 888 007c 0222     		movs	r2, #2
 889 007e 1A61     		str	r2, [r3, #16]
 890 0080 3B1D     		adds	r3, r7, #4
 891 0082 0122     		movs	r2, #1
 892 0084 5A61     		str	r2, [r3, #20]
 893 0086 3B1D     		adds	r3, r7, #4
 894 0088 0222     		movs	r2, #2
 895 008a 9A61     		str	r2, [r3, #24]
 896 008c 3B1D     		adds	r3, r7, #4
 897 008e 0122     		movs	r2, #1
 898 0090 DA61     		str	r2, [r3, #28]
 899 0092 3B1D     		adds	r3, r7, #4
 900 0094 0122     		movs	r2, #1
 901 0096 1A62     		str	r2, [r3, #32]
 902 0098 3B1D     		adds	r3, r7, #4
 903 009a 0322     		movs	r2, #3
 904 009c 9A62     		str	r2, [r3, #40]
 905 009e 3B1D     		adds	r3, r7, #4
 906 00a0 0222     		movs	r2, #2
 907 00a2 DA62     		str	r2, [r3, #44]
 908 00a4 3B1D     		adds	r3, r7, #4
 909 00a6 0122     		movs	r2, #1
 910 00a8 1A63     		str	r2, [r3, #48]
 911 00aa 3B1D     		adds	r3, r7, #4
 912 00ac 0222     		movs	r2, #2
 913 00ae DA63     		str	r2, [r3, #60]
 914 00b0 3B1D     		adds	r3, r7, #4
 915 00b2 0222     		movs	r2, #2
 916 00b4 1A64     		str	r2, [r3, #64]
 917 00b6 3B1D     		adds	r3, r7, #4
 918 00b8 0222     		movs	r2, #2
 919 00ba DA64     		str	r2, [r3, #76]
 920 00bc 3B1D     		adds	r3, r7, #4
 921 00be 0222     		movs	r2, #2
 922 00c0 5A65     		str	r2, [r3, #84]
 923 00c2 3B1D     		adds	r3, r7, #4
 924 00c4 0122     		movs	r2, #1
 925 00c6 DA65     		str	r2, [r3, #92]
 926 00c8 3B1D     		adds	r3, r7, #4
 927 00ca 0222     		movs	r2, #2
 928 00cc 9A66     		str	r2, [r3, #104]
 929 00ce 3B1D     		adds	r3, r7, #4
 930 00d0 0322     		movs	r2, #3
 931 00d2 DA66     		str	r2, [r3, #108]
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 24


 932 00d4 3B1D     		adds	r3, r7, #4
 933 00d6 0222     		movs	r2, #2
 934 00d8 5A67     		str	r2, [r3, #116]
 935 00da 3B1D     		adds	r3, r7, #4
 936 00dc 0222     		movs	r2, #2
 937 00de 9A67     		str	r2, [r3, #120]
 938 00e0 3B1D     		adds	r3, r7, #4
 939 00e2 0222     		movs	r2, #2
 940 00e4 DA67     		str	r2, [r3, #124]
 941 00e6 3B1D     		adds	r3, r7, #4
 942 00e8 0222     		movs	r2, #2
 943 00ea C3F88420 		str	r2, [r3, #132]
 944 00ee 3B1D     		adds	r3, r7, #4
 945 00f0 0222     		movs	r2, #2
 946 00f2 C3F89020 		str	r2, [r3, #144]
 947 00f6 3B1D     		adds	r3, r7, #4
 948 00f8 0222     		movs	r2, #2
 949 00fa C3F89420 		str	r2, [r3, #148]
 950 00fe 3B1D     		adds	r3, r7, #4
 951 0100 0222     		movs	r2, #2
 952 0102 C3F89820 		str	r2, [r3, #152]
 362:main.c        ****     int indexPointer = 0;
 953              		.loc 1 362 0
 954 0106 0023     		movs	r3, #0
 955 0108 C7F8C03F 		str	r3, [r7, #4032]
 363:main.c        ****     //int queueSize = 19;
 364:main.c        ****     //int queueSize = 52;
 365:main.c        ****     int queueSize = 40;
 956              		.loc 1 365 0
 957 010c 2823     		movs	r3, #40
 958 010e C7F8B03F 		str	r3, [r7, #4016]
 366:main.c        ****     int motoerFlagSTOP=0;
 959              		.loc 1 366 0
 960 0112 0023     		movs	r3, #0
 961 0114 C7F8BC3F 		str	r3, [r7, #4028]
 962              	.L49:
 367:main.c        ****     
 368:main.c        ****             
 369:main.c        ****     
 370:main.c        ****    ///////////////////////////////////////// LINE TRACKING////////
 371:main.c        ****     
 372:main.c        ****     while(1)
 373:main.c        ****     {
 374:main.c        ****         /* Place your application code here. */
 375:main.c        ****        
 376:main.c        ****         if (processSensors == 1) {
 963              		.loc 1 376 0
 964 0118 754B     		ldr	r3, .L51+12
 965 011a 1B68     		ldr	r3, [r3]
 966 011c 012B     		cmp	r3, #1
 967 011e FBD1     		bne	.L49
 968              	.LBB3:
 377:main.c        ****             CYGlobalIntDisable;
 969              		.loc 1 377 0
 970              		.syntax unified
 971              	@ 377 "main.c" 1
 972 0120 72B6     		CPSID   i
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 25


 973              	@ 0 "" 2
 378:main.c        ****                    
 379:main.c        ****             int operation = convertSensorBinary();
 974              		.loc 1 379 0
 975              		.thumb
 976              		.syntax unified
 977 0122 FFF7FEFF 		bl	convertSensorBinary
 978 0126 C7F8AC0F 		str	r0, [r7, #4012]
 380:main.c        ****             int backOps = convertBackBinary();
 979              		.loc 1 380 0
 980 012a FFF7FEFF 		bl	convertBackBinary
 981 012e C7F8A80F 		str	r0, [r7, #4008]
 381:main.c        ****             int decision = queue[indexPointer];
 982              		.loc 1 381 0
 983 0132 3B1D     		adds	r3, r7, #4
 984 0134 D7F8C02F 		ldr	r2, [r7, #4032]
 985 0138 53F82230 		ldr	r3, [r3, r2, lsl #2]
 986 013c C7F8A43F 		str	r3, [r7, #4004]
 382:main.c        **** 
 383:main.c        ****                 switch(operation){
 987              		.loc 1 383 0
 988 0140 D7F8AC3F 		ldr	r3, [r7, #4012]
 989 0144 072B     		cmp	r3, #7
 990 0146 4FD8     		bhi	.L29
 991 0148 01A2     		adr	r2, .L31
 992 014a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 993 014e 00BF     		.p2align 2
 994              	.L31:
 995 0150 C3010000 		.word	.L30+1
 996 0154 CF010000 		.word	.L32+1
 997 0158 E9010000 		.word	.L29+1
 998 015c 9B010000 		.word	.L33+1
 999 0160 DB010000 		.word	.L34+1
 1000 0164 B7010000 		.word	.L35+1
 1001 0168 A9010000 		.word	.L36+1
 1002 016c 71010000 		.word	.L37+1
 1003              		.p2align 1
 1004              	.L37:
 384:main.c        ****                 //where 1 is on white, 0 is on black.
 385:main.c        ****                     
 386:main.c        ****                     case 7: // 111 // all under white\\
 387:main.c        ****                         
 388:main.c        **** //                            if(backOps == 7 &&(decision == 3)){
 389:main.c        **** //                                decisionflag = 1;
 390:main.c        **** //                                break;
 391:main.c        **** //                            }
 392:main.c        **** //                  
 393:main.c        ****                            if(backOps == 7){
 1005              		.loc 1 393 0
 1006 0170 D7F8A83F 		ldr	r3, [r7, #4008]
 1007 0174 072B     		cmp	r3, #7
 1008 0176 09D1     		bne	.L38
 394:main.c        ****                                 
 395:main.c        ****                                 if (motoerFlagSTOP==1){
 1009              		.loc 1 395 0
 1010 0178 D7F8BC3F 		ldr	r3, [r7, #4028]
 1011 017c 012B     		cmp	r3, #1
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 26


 1012 017e 02D1     		bne	.L39
 396:main.c        ****                                     motorStop();
 1013              		.loc 1 396 0
 1014 0180 FFF7FEFF 		bl	motorStop
 1015 0184 02E0     		b	.L38
 1016              	.L39:
 397:main.c        ****                                 }
 398:main.c        ****                                 else{
 399:main.c        ****                                     //motorStop();
 400:main.c        ****                                     //motorGoBackwards();
 401:main.c        ****                                     //CyDelay(100);
 402:main.c        ****                                     motorCircle(40);
 1017              		.loc 1 402 0
 1018 0186 2820     		movs	r0, #40
 1019 0188 FFF7FEFF 		bl	motorCircle
 1020              	.L38:
 403:main.c        ****                                     //CyDelay(800);
 404:main.c        ****                                 }
 405:main.c        ****                             }
 406:main.c        ****                             
 407:main.c        ****                         
 408:main.c        ****                             if(backOps <=5){
 1021              		.loc 1 408 0
 1022 018c D7F8A83F 		ldr	r3, [r7, #4008]
 1023 0190 052B     		cmp	r3, #5
 1024 0192 28DC     		bgt	.L50
 409:main.c        ****                                 motorGoStraight();
 1025              		.loc 1 409 0
 1026 0194 FFF7FEFF 		bl	motorGoStraight
 410:main.c        ****                             } 
 411:main.c        ****                             break;
 1027              		.loc 1 411 0
 1028 0198 25E0     		b	.L50
 1029              	.L33:
 412:main.c        ****                         
 413:main.c        ****                     case 3:// 0 1 1 // Q3 under black
 414:main.c        ****                         motorTurnLeft(70);//decrease go fast used to be 50 by 6
 1030              		.loc 1 414 0
 1031 019a 4620     		movs	r0, #70
 1032 019c FFF7FEFF 		bl	motorTurnLeft
 415:main.c        ****                         LED_Write(1);
 1033              		.loc 1 415 0
 1034 01a0 0120     		movs	r0, #1
 1035 01a2 FFF7FEFF 		bl	LED_Write
 416:main.c        ****                         break;    
 1036              		.loc 1 416 0
 1037 01a6 1FE0     		b	.L29
 1038              	.L36:
 417:main.c        ****                         
 418:main.c        ****                     case 6:// 1 1 0 // Q5 under black  
 419:main.c        ****                         motorTurnRight(180);//increase 200 by 6``
 1039              		.loc 1 419 0
 1040 01a8 B420     		movs	r0, #180
 1041 01aa FFF7FEFF 		bl	motorTurnRight
 420:main.c        ****                         LED_Write(1);
 1042              		.loc 1 420 0
 1043 01ae 0120     		movs	r0, #1
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 27


 1044 01b0 FFF7FEFF 		bl	LED_Write
 421:main.c        ****                         break;
 1045              		.loc 1 421 0
 1046 01b4 18E0     		b	.L29
 1047              	.L35:
 422:main.c        ****                         
 423:main.c        ****                     case 5:// 101 // Q4 under black
 424:main.c        ****                         motorGoStraight();
 1048              		.loc 1 424 0
 1049 01b6 FFF7FEFF 		bl	motorGoStraight
 425:main.c        ****                         LED_Write(0);
 1050              		.loc 1 425 0
 1051 01ba 0020     		movs	r0, #0
 1052 01bc FFF7FEFF 		bl	LED_Write
 426:main.c        ****                         break;
 1053              		.loc 1 426 0
 1054 01c0 12E0     		b	.L29
 1055              	.L30:
 427:main.c        ****                     
 428:main.c        ****                     case 0:  // 000 // ALL UNDER black
 429:main.c        ****                         motorStop();
 1056              		.loc 1 429 0
 1057 01c2 FFF7FEFF 		bl	motorStop
 430:main.c        ****                         decisionflag = 1;
 1058              		.loc 1 430 0
 1059 01c6 0123     		movs	r3, #1
 1060 01c8 C7F8C43F 		str	r3, [r7, #4036]
 431:main.c        ****                         break;
 1061              		.loc 1 431 0
 1062 01cc 0CE0     		b	.L29
 1063              	.L32:
 432:main.c        ****                     case 1: // 001 --> left intersection # 65 turn for 500s
 433:main.c        ****                         //lastState=1;
 434:main.c        ****                         motorStop();
 1064              		.loc 1 434 0
 1065 01ce FFF7FEFF 		bl	motorStop
 435:main.c        ****                         decisionflag = 1;
 1066              		.loc 1 435 0
 1067 01d2 0123     		movs	r3, #1
 1068 01d4 C7F8C43F 		str	r3, [r7, #4036]
 436:main.c        ****                         break;
 1069              		.loc 1 436 0
 1070 01d8 06E0     		b	.L29
 1071              	.L34:
 437:main.c        ****                     case 4: // 100 --> right intersection #180 turn for 500s
 438:main.c        ****                        // lastState=2;
 439:main.c        ****                         motorStop();
 1072              		.loc 1 439 0
 1073 01da FFF7FEFF 		bl	motorStop
 440:main.c        ****                         decisionflag = 1;
 1074              		.loc 1 440 0
 1075 01de 0123     		movs	r3, #1
 1076 01e0 C7F8C43F 		str	r3, [r7, #4036]
 441:main.c        ****                         break;
 1077              		.loc 1 441 0
 1078 01e4 00E0     		b	.L29
 1079              	.L50:
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 28


 411:main.c        ****                         
 1080              		.loc 1 411 0
 1081 01e6 00BF     		nop
 1082              	.L29:
 442:main.c        ****                         
 443:main.c        ****                     
 444:main.c        ****                    
 445:main.c        ****                 
 446:main.c        ****                 }
 447:main.c        ****                 
 448:main.c        ****                 
 449:main.c        ****                 
 450:main.c        ****                 
 451:main.c        ****                 //make decision at intersection 
 452:main.c        ****                 if ((decisionflag == 1) && (motoerFlagSTOP == 0)){
 1083              		.loc 1 452 0
 1084 01e8 D7F8C43F 		ldr	r3, [r7, #4036]
 1085 01ec 012B     		cmp	r3, #1
 1086 01ee 5ED1     		bne	.L41
 1087              		.loc 1 452 0 is_stmt 0 discriminator 1
 1088 01f0 D7F8BC3F 		ldr	r3, [r7, #4028]
 1089 01f4 002B     		cmp	r3, #0
 1090 01f6 5AD1     		bne	.L41
 453:main.c        ****                     //CYGlobalIntDisable;
 454:main.c        ****         
 455:main.c        ****                     
 456:main.c        ****                     //get overall size of array
 457:main.c        ****                     
 458:main.c        ****                     //0 - left, 1 -straight, 2 - right 
 459:main.c        ****                     
 460:main.c        ****                     
 461:main.c        ****                     switch(decision) {
 1091              		.loc 1 461 0 is_stmt 1
 1092 01f8 D7F8A43F 		ldr	r3, [r7, #4004]
 1093 01fc 032B     		cmp	r3, #3
 1094 01fe 42D8     		bhi	.L42
 1095 0200 01A2     		adr	r2, .L44
 1096 0202 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1097 0206 00BF     		.p2align 2
 1098              	.L44:
 1099 0208 19020000 		.word	.L43+1
 1100 020c 35020000 		.word	.L45+1
 1101 0210 4F020000 		.word	.L46+1
 1102 0214 6B020000 		.word	.L47+1
 1103              		.p2align 1
 1104              	.L43:
 462:main.c        ****                       case 0:
 463:main.c        ****                         //turn left
 464:main.c        ****                         motorStop();
 1105              		.loc 1 464 0
 1106 0218 FFF7FEFF 		bl	motorStop
 465:main.c        ****                         CyDelay(400);
 1107              		.loc 1 465 0
 1108 021c 4FF4C870 		mov	r0, #400
 1109 0220 FFF7FEFF 		bl	CyDelay
 466:main.c        ****                         motorTurnLeft(65);
 1110              		.loc 1 466 0
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 29


 1111 0224 4120     		movs	r0, #65
 1112 0226 FFF7FEFF 		bl	motorTurnLeft
 467:main.c        ****                         CyDelay(500);
 1113              		.loc 1 467 0
 1114 022a 4FF4FA70 		mov	r0, #500
 1115 022e FFF7FEFF 		bl	CyDelay
 468:main.c        ****                         
 469:main.c        ****                         break;
 1116              		.loc 1 469 0
 1117 0232 28E0     		b	.L42
 1118              	.L45:
 470:main.c        ****                       case 1:
 471:main.c        ****                         //go straight
 472:main.c        ****                         motorStop();
 1119              		.loc 1 472 0
 1120 0234 FFF7FEFF 		bl	motorStop
 473:main.c        ****                         CyDelay(400);
 1121              		.loc 1 473 0
 1122 0238 4FF4C870 		mov	r0, #400
 1123 023c FFF7FEFF 		bl	CyDelay
 474:main.c        ****                         motorGoStraight();
 1124              		.loc 1 474 0
 1125 0240 FFF7FEFF 		bl	motorGoStraight
 475:main.c        ****                         CyDelay(400);
 1126              		.loc 1 475 0
 1127 0244 4FF4C870 		mov	r0, #400
 1128 0248 FFF7FEFF 		bl	CyDelay
 476:main.c        ****                         
 477:main.c        ****                         break;
 1129              		.loc 1 477 0
 1130 024c 1BE0     		b	.L42
 1131              	.L46:
 478:main.c        ****                       case 2:
 479:main.c        ****                         //turn right
 480:main.c        ****                         motorStop();
 1132              		.loc 1 480 0
 1133 024e FFF7FEFF 		bl	motorStop
 481:main.c        ****                         CyDelay(400);
 1134              		.loc 1 481 0
 1135 0252 4FF4C870 		mov	r0, #400
 1136 0256 FFF7FEFF 		bl	CyDelay
 482:main.c        ****                         motorTurnRight(180);
 1137              		.loc 1 482 0
 1138 025a B420     		movs	r0, #180
 1139 025c FFF7FEFF 		bl	motorTurnRight
 483:main.c        ****                         CyDelay(500);
 1140              		.loc 1 483 0
 1141 0260 4FF4FA70 		mov	r0, #500
 1142 0264 FFF7FEFF 		bl	CyDelay
 484:main.c        ****                         
 485:main.c        ****                         break;
 1143              		.loc 1 485 0
 1144 0268 0DE0     		b	.L42
 1145              	.L47:
 486:main.c        ****                         
 487:main.c        ****                     case 3:
 488:main.c        ****                         motorStop();
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 30


 1146              		.loc 1 488 0
 1147 026a FFF7FEFF 		bl	motorStop
 489:main.c        ****                         CyDelay(400);
 1148              		.loc 1 489 0
 1149 026e 4FF4C870 		mov	r0, #400
 1150 0272 FFF7FEFF 		bl	CyDelay
 490:main.c        ****                         motorBeyblade(170);
 1151              		.loc 1 490 0
 1152 0276 AA20     		movs	r0, #170
 1153 0278 FFF7FEFF 		bl	motorBeyblade
 491:main.c        ****                         CyDelay(800);
 1154              		.loc 1 491 0
 1155 027c 4FF44870 		mov	r0, #800
 1156 0280 FFF7FEFF 		bl	CyDelay
 492:main.c        ****                        // motorGoStraight();
 493:main.c        ****                         //CyDelay(400);
 494:main.c        ****                         break;
 1157              		.loc 1 494 0
 1158 0284 00BF     		nop
 1159              	.L42:
 495:main.c        ****                     }
 496:main.c        ****                     
 497:main.c        ****                     indexPointer++;
 1160              		.loc 1 497 0
 1161 0286 D7F8C03F 		ldr	r3, [r7, #4032]
 1162 028a 0133     		adds	r3, r3, #1
 1163 028c C7F8C03F 		str	r3, [r7, #4032]
 498:main.c        ****                     
 499:main.c        ****                     if (indexPointer+1 > queueSize ) {
 1164              		.loc 1 499 0
 1165 0290 D7F8C03F 		ldr	r3, [r7, #4032]
 1166 0294 5A1C     		adds	r2, r3, #1
 1167 0296 D7F8B03F 		ldr	r3, [r7, #4016]
 1168 029a 9A42     		cmp	r2, r3
 1169 029c 04DD     		ble	.L48
 500:main.c        ****                         motorStop();
 1170              		.loc 1 500 0
 1171 029e FFF7FEFF 		bl	motorStop
 501:main.c        ****                         motoerFlagSTOP = 1;
 1172              		.loc 1 501 0
 1173 02a2 0123     		movs	r3, #1
 1174 02a4 C7F8BC3F 		str	r3, [r7, #4028]
 1175              	.L48:
 502:main.c        ****                         //while(1){};   
 503:main.c        ****                     }
 504:main.c        ****                     
 505:main.c        ****                     //reset decision
 506:main.c        ****                     decisionflag = 0;
 1176              		.loc 1 506 0
 1177 02a8 0023     		movs	r3, #0
 1178 02aa C7F8C43F 		str	r3, [r7, #4036]
 1179              	.L41:
 507:main.c        ****         
 508:main.c        ****                 
 509:main.c        ****            //renable interrupt
 510:main.c        ****                 //CYGlobalIntEnable;
 511:main.c        ****             }
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 31


 512:main.c        ****             //reset variable.
 513:main.c        ****             processSensors = 0;
 1180              		.loc 1 513 0
 1181 02ae 104B     		ldr	r3, .L51+12
 1182 02b0 0022     		movs	r2, #0
 1183 02b2 1A60     		str	r2, [r3]
 514:main.c        ****             //reset counter
 515:main.c        **** 
 516:main.c        ****              counteoc = 0;
 1184              		.loc 1 516 0
 1185 02b4 0F4B     		ldr	r3, .L51+16
 1186 02b6 0022     		movs	r2, #0
 1187 02b8 1A60     		str	r2, [r3]
 517:main.c        ****             //reset flags for lightsensors because it checks every 10 iterations, adds delay/
 518:main.c        ****             lightDetectedFront[0] = 0;
 1188              		.loc 1 518 0
 1189 02ba 0F4B     		ldr	r3, .L51+20
 1190 02bc 0022     		movs	r2, #0
 1191 02be 1A60     		str	r2, [r3]
 519:main.c        ****             lightDetectedFront[1] = 0;
 1192              		.loc 1 519 0
 1193 02c0 0D4B     		ldr	r3, .L51+20
 1194 02c2 0022     		movs	r2, #0
 1195 02c4 5A60     		str	r2, [r3, #4]
 520:main.c        ****             lightDetectedFront[2] = 0;
 1196              		.loc 1 520 0
 1197 02c6 0C4B     		ldr	r3, .L51+20
 1198 02c8 0022     		movs	r2, #0
 1199 02ca 9A60     		str	r2, [r3, #8]
 521:main.c        ****             lightDetectedBack[0] = 0;
 1200              		.loc 1 521 0
 1201 02cc 0B4B     		ldr	r3, .L51+24
 1202 02ce 0022     		movs	r2, #0
 1203 02d0 1A60     		str	r2, [r3]
 522:main.c        ****             lightDetectedBack[1] = 0;
 1204              		.loc 1 522 0
 1205 02d2 0A4B     		ldr	r3, .L51+24
 1206 02d4 0022     		movs	r2, #0
 1207 02d6 5A60     		str	r2, [r3, #4]
 523:main.c        ****             lightDetectedBack[2] = 0;
 1208              		.loc 1 523 0
 1209 02d8 084B     		ldr	r3, .L51+24
 1210 02da 0022     		movs	r2, #0
 1211 02dc 9A60     		str	r2, [r3, #8]
 524:main.c        ****             
 525:main.c        ****             CYGlobalIntEnable;
 1212              		.loc 1 525 0
 1213              		.syntax unified
 1214              	@ 525 "main.c" 1
 1215 02de 62B6     		CPSIE   i
 1216              	@ 0 "" 2
 1217              		.thumb
 1218              		.syntax unified
 1219              	.LBE3:
 526:main.c        ****           
 527:main.c        ****         }
 528:main.c        ****         
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 32


 529:main.c        ****         
 530:main.c        ****     }   
 1220              		.loc 1 530 0
 1221 02e0 1AE7     		b	.L49
 1222              	.L52:
 1223 02e2 00BF     		.align	2
 1224              	.L51:
 1225 02e4 44000000 		.word	count
 1226 02e8 00000000 		.word	isr_TS_Interrupt_sample
 1227 02ec 00000000 		.word	isr_eoc_Interrupt_test
 1228 02f0 00000000 		.word	processSensors
 1229 02f4 00000000 		.word	counteoc
 1230 02f8 00000000 		.word	lightDetectedFront
 1231 02fc 00000000 		.word	lightDetectedBack
 1232              		.cfi_endproc
 1233              	.LFE77:
 1234              		.size	main, .-main
 1235              		.section	.text.convertBackBinary,"ax",%progbits
 1236              		.align	2
 1237              		.global	convertBackBinary
 1238              		.thumb
 1239              		.thumb_func
 1240              		.type	convertBackBinary, %function
 1241              	convertBackBinary:
 1242              	.LFB78:
 531:main.c        ****     
 532:main.c        **** //////////////////////////////////////
 533:main.c        **** }
 534:main.c        **** 
 535:main.c        ****   
 536:main.c        **** 
 537:main.c        **** int convertBackBinary(){
 1243              		.loc 1 537 0
 1244              		.cfi_startproc
 1245              		@ args = 0, pretend = 0, frame = 16
 1246              		@ frame_needed = 1, uses_anonymous_args = 0
 1247              		@ link register save eliminated.
 1248 0000 80B4     		push	{r7}
 1249              		.cfi_def_cfa_offset 4
 1250              		.cfi_offset 7, -4
 1251 0002 85B0     		sub	sp, sp, #20
 1252              		.cfi_def_cfa_offset 24
 1253 0004 00AF     		add	r7, sp, #0
 1254              		.cfi_def_cfa_register 7
 538:main.c        **** 
 539:main.c        ****     int value1=0;
 1255              		.loc 1 539 0
 1256 0006 0023     		movs	r3, #0
 1257 0008 FB60     		str	r3, [r7, #12]
 540:main.c        ****     int Q1 = lightDetectedBack[1] ;
 1258              		.loc 1 540 0
 1259 000a 104B     		ldr	r3, .L55
 1260 000c 5B68     		ldr	r3, [r3, #4]
 1261 000e BB60     		str	r3, [r7, #8]
 541:main.c        ****     int Q2 = lightDetectedBack[2];
 1262              		.loc 1 541 0
 1263 0010 0E4B     		ldr	r3, .L55
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 33


 1264 0012 9B68     		ldr	r3, [r3, #8]
 1265 0014 7B60     		str	r3, [r7, #4]
 542:main.c        ****     int Q6 =lightDetectedBack[0];
 1266              		.loc 1 542 0
 1267 0016 0D4B     		ldr	r3, .L55
 1268 0018 1B68     		ldr	r3, [r3]
 1269 001a 3B60     		str	r3, [r7]
 543:main.c        ****     value1 =  value1 + lightDetectedBack[1] *2;
 1270              		.loc 1 543 0
 1271 001c 0B4B     		ldr	r3, .L55
 1272 001e 5B68     		ldr	r3, [r3, #4]
 1273 0020 5B00     		lsls	r3, r3, #1
 1274 0022 FA68     		ldr	r2, [r7, #12]
 1275 0024 1344     		add	r3, r3, r2
 1276 0026 FB60     		str	r3, [r7, #12]
 544:main.c        ****     value1 = value1 +  lightDetectedBack[2] *4;
 1277              		.loc 1 544 0
 1278 0028 084B     		ldr	r3, .L55
 1279 002a 9B68     		ldr	r3, [r3, #8]
 1280 002c 9B00     		lsls	r3, r3, #2
 1281 002e FA68     		ldr	r2, [r7, #12]
 1282 0030 1344     		add	r3, r3, r2
 1283 0032 FB60     		str	r3, [r7, #12]
 545:main.c        ****     value1 = value1 + lightDetectedBack[0] *1;
 1284              		.loc 1 545 0
 1285 0034 054B     		ldr	r3, .L55
 1286 0036 1B68     		ldr	r3, [r3]
 1287 0038 FA68     		ldr	r2, [r7, #12]
 1288 003a 1344     		add	r3, r3, r2
 1289 003c FB60     		str	r3, [r7, #12]
 546:main.c        **** 
 547:main.c        ****     return value1;
 1290              		.loc 1 547 0
 1291 003e FB68     		ldr	r3, [r7, #12]
 548:main.c        **** 
 549:main.c        **** }
 1292              		.loc 1 549 0
 1293 0040 1846     		mov	r0, r3
 1294 0042 1437     		adds	r7, r7, #20
 1295              		.cfi_def_cfa_offset 4
 1296 0044 BD46     		mov	sp, r7
 1297              		.cfi_def_cfa_register 13
 1298              		@ sp needed
 1299 0046 80BC     		pop	{r7}
 1300              		.cfi_restore 7
 1301              		.cfi_def_cfa_offset 0
 1302 0048 7047     		bx	lr
 1303              	.L56:
 1304 004a 00BF     		.align	2
 1305              	.L55:
 1306 004c 00000000 		.word	lightDetectedBack
 1307              		.cfi_endproc
 1308              	.LFE78:
 1309              		.size	convertBackBinary, .-convertBackBinary
 1310              		.section	.text.convertSensorBinary,"ax",%progbits
 1311              		.align	2
 1312              		.global	convertSensorBinary
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 34


 1313              		.thumb
 1314              		.thumb_func
 1315              		.type	convertSensorBinary, %function
 1316              	convertSensorBinary:
 1317              	.LFB79:
 550:main.c        **** 
 551:main.c        **** int convertSensorBinary()
 552:main.c        **** {
 1318              		.loc 1 552 0
 1319              		.cfi_startproc
 1320              		@ args = 0, pretend = 0, frame = 16
 1321              		@ frame_needed = 1, uses_anonymous_args = 0
 1322              		@ link register save eliminated.
 1323 0000 80B4     		push	{r7}
 1324              		.cfi_def_cfa_offset 4
 1325              		.cfi_offset 7, -4
 1326 0002 85B0     		sub	sp, sp, #20
 1327              		.cfi_def_cfa_offset 24
 1328 0004 00AF     		add	r7, sp, #0
 1329              		.cfi_def_cfa_register 7
 553:main.c        ****    int value=0;
 1330              		.loc 1 553 0
 1331 0006 0023     		movs	r3, #0
 1332 0008 FB60     		str	r3, [r7, #12]
 554:main.c        ****   int Q3 = lightDetectedFront[0];
 1333              		.loc 1 554 0
 1334 000a 104B     		ldr	r3, .L59
 1335 000c 1B68     		ldr	r3, [r3]
 1336 000e BB60     		str	r3, [r7, #8]
 555:main.c        ****   int Q4 = lightDetectedFront[1];
 1337              		.loc 1 555 0
 1338 0010 0E4B     		ldr	r3, .L59
 1339 0012 5B68     		ldr	r3, [r3, #4]
 1340 0014 7B60     		str	r3, [r7, #4]
 556:main.c        ****    int Q5 = lightDetectedFront[2];
 1341              		.loc 1 556 0
 1342 0016 0D4B     		ldr	r3, .L59
 1343 0018 9B68     		ldr	r3, [r3, #8]
 1344 001a 3B60     		str	r3, [r7]
 557:main.c        ****   value=value + lightDetectedFront[0]*4;
 1345              		.loc 1 557 0
 1346 001c 0B4B     		ldr	r3, .L59
 1347 001e 1B68     		ldr	r3, [r3]
 1348 0020 9B00     		lsls	r3, r3, #2
 1349 0022 FA68     		ldr	r2, [r7, #12]
 1350 0024 1344     		add	r3, r3, r2
 1351 0026 FB60     		str	r3, [r7, #12]
 558:main.c        ****   value=value + lightDetectedFront[1]*2;
 1352              		.loc 1 558 0
 1353 0028 084B     		ldr	r3, .L59
 1354 002a 5B68     		ldr	r3, [r3, #4]
 1355 002c 5B00     		lsls	r3, r3, #1
 1356 002e FA68     		ldr	r2, [r7, #12]
 1357 0030 1344     		add	r3, r3, r2
 1358 0032 FB60     		str	r3, [r7, #12]
 559:main.c        ****   value=value + lightDetectedFront[2]*1;
 1359              		.loc 1 559 0
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 35


 1360 0034 054B     		ldr	r3, .L59
 1361 0036 9B68     		ldr	r3, [r3, #8]
 1362 0038 FA68     		ldr	r2, [r7, #12]
 1363 003a 1344     		add	r3, r3, r2
 1364 003c FB60     		str	r3, [r7, #12]
 560:main.c        ****     return value;
 1365              		.loc 1 560 0
 1366 003e FB68     		ldr	r3, [r7, #12]
 561:main.c        **** }
 1367              		.loc 1 561 0
 1368 0040 1846     		mov	r0, r3
 1369 0042 1437     		adds	r7, r7, #20
 1370              		.cfi_def_cfa_offset 4
 1371 0044 BD46     		mov	sp, r7
 1372              		.cfi_def_cfa_register 13
 1373              		@ sp needed
 1374 0046 80BC     		pop	{r7}
 1375              		.cfi_restore 7
 1376              		.cfi_def_cfa_offset 0
 1377 0048 7047     		bx	lr
 1378              	.L60:
 1379 004a 00BF     		.align	2
 1380              	.L59:
 1381 004c 00000000 		.word	lightDetectedFront
 1382              		.cfi_endproc
 1383              	.LFE79:
 1384              		.size	convertSensorBinary, .-convertSensorBinary
 1385              		.section	.text.usbPutString,"ax",%progbits
 1386              		.align	2
 1387              		.global	usbPutString
 1388              		.thumb
 1389              		.thumb_func
 1390              		.type	usbPutString, %function
 1391              	usbPutString:
 1392              	.LFB80:
 562:main.c        **** //* ========================================
 563:main.c        **** void usbPutString(char *s)
 564:main.c        **** {
 1393              		.loc 1 564 0
 1394              		.cfi_startproc
 1395              		@ args = 0, pretend = 0, frame = 8
 1396              		@ frame_needed = 1, uses_anonymous_args = 0
 1397 0000 80B5     		push	{r7, lr}
 1398              		.cfi_def_cfa_offset 8
 1399              		.cfi_offset 7, -8
 1400              		.cfi_offset 14, -4
 1401 0002 82B0     		sub	sp, sp, #8
 1402              		.cfi_def_cfa_offset 16
 1403 0004 00AF     		add	r7, sp, #0
 1404              		.cfi_def_cfa_register 7
 1405 0006 7860     		str	r0, [r7, #4]
 565:main.c        **** // !! Assumes that *s is a string with allocated space >=64 chars     
 566:main.c        **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 567:main.c        **** //  length to 62 char (63rd char is a '!')
 568:main.c        **** 
 569:main.c        **** #ifdef USE_USB     
 570:main.c        ****     while (USBUART_CDCIsReady() == 0);
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 36


 1406              		.loc 1 570 0
 1407 0008 00BF     		nop
 1408              	.L62:
 1409              		.loc 1 570 0 is_stmt 0 discriminator 1
 1410 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 1411 000e 0346     		mov	r3, r0
 1412 0010 002B     		cmp	r3, #0
 1413 0012 FAD0     		beq	.L62
 571:main.c        ****     s[63]='\0';
 1414              		.loc 1 571 0 is_stmt 1
 1415 0014 7B68     		ldr	r3, [r7, #4]
 1416 0016 3F33     		adds	r3, r3, #63
 1417 0018 0022     		movs	r2, #0
 1418 001a 1A70     		strb	r2, [r3]
 572:main.c        ****     s[62]='!';
 1419              		.loc 1 572 0
 1420 001c 7B68     		ldr	r3, [r7, #4]
 1421 001e 3E33     		adds	r3, r3, #62
 1422 0020 2122     		movs	r2, #33
 1423 0022 1A70     		strb	r2, [r3]
 573:main.c        ****     USBUART_PutData((uint8*)s,strlen(s));
 1424              		.loc 1 573 0
 1425 0024 7868     		ldr	r0, [r7, #4]
 1426 0026 FFF7FEFF 		bl	strlen
 1427 002a 0346     		mov	r3, r0
 1428 002c 9BB2     		uxth	r3, r3
 1429 002e 1946     		mov	r1, r3
 1430 0030 7868     		ldr	r0, [r7, #4]
 1431 0032 FFF7FEFF 		bl	USBUART_PutData
 574:main.c        **** #endif
 575:main.c        **** }
 1432              		.loc 1 575 0
 1433 0036 00BF     		nop
 1434 0038 0837     		adds	r7, r7, #8
 1435              		.cfi_def_cfa_offset 8
 1436 003a BD46     		mov	sp, r7
 1437              		.cfi_def_cfa_register 13
 1438              		@ sp needed
 1439 003c 80BD     		pop	{r7, pc}
 1440              		.cfi_endproc
 1441              	.LFE80:
 1442              		.size	usbPutString, .-usbPutString
 1443 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 1444              		.align	2
 1445              		.global	usbPutChar
 1446              		.thumb
 1447              		.thumb_func
 1448              		.type	usbPutChar, %function
 1449              	usbPutChar:
 1450              	.LFB81:
 576:main.c        **** //* ========================================
 577:main.c        **** void usbPutChar(char c)
 578:main.c        **** {
 1451              		.loc 1 578 0
 1452              		.cfi_startproc
 1453              		@ args = 0, pretend = 0, frame = 8
 1454              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 37


 1455 0000 80B5     		push	{r7, lr}
 1456              		.cfi_def_cfa_offset 8
 1457              		.cfi_offset 7, -8
 1458              		.cfi_offset 14, -4
 1459 0002 82B0     		sub	sp, sp, #8
 1460              		.cfi_def_cfa_offset 16
 1461 0004 00AF     		add	r7, sp, #0
 1462              		.cfi_def_cfa_register 7
 1463 0006 0346     		mov	r3, r0
 1464 0008 FB71     		strb	r3, [r7, #7]
 579:main.c        **** #ifdef USE_USB     
 580:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1465              		.loc 1 580 0
 1466 000a 00BF     		nop
 1467              	.L64:
 1468              		.loc 1 580 0 is_stmt 0 discriminator 1
 1469 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 1470 0010 0346     		mov	r3, r0
 1471 0012 002B     		cmp	r3, #0
 1472 0014 FAD0     		beq	.L64
 581:main.c        ****     USBUART_PutChar(c);
 1473              		.loc 1 581 0 is_stmt 1
 1474 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1475 0018 1846     		mov	r0, r3
 1476 001a FFF7FEFF 		bl	USBUART_PutChar
 582:main.c        **** #endif    
 583:main.c        **** }
 1477              		.loc 1 583 0
 1478 001e 00BF     		nop
 1479 0020 0837     		adds	r7, r7, #8
 1480              		.cfi_def_cfa_offset 8
 1481 0022 BD46     		mov	sp, r7
 1482              		.cfi_def_cfa_register 13
 1483              		@ sp needed
 1484 0024 80BD     		pop	{r7, pc}
 1485              		.cfi_endproc
 1486              	.LFE81:
 1487              		.size	usbPutChar, .-usbPutChar
 1488 0026 00BF     		.section	.text.handle_usb,"ax",%progbits
 1489              		.align	2
 1490              		.global	handle_usb
 1491              		.thumb
 1492              		.thumb_func
 1493              		.type	handle_usb, %function
 1494              	handle_usb:
 1495              	.LFB82:
 584:main.c        **** //* ========================================
 585:main.c        **** void handle_usb()
 586:main.c        **** {
 1496              		.loc 1 586 0
 1497              		.cfi_startproc
 1498              		@ args = 0, pretend = 0, frame = 8
 1499              		@ frame_needed = 1, uses_anonymous_args = 0
 1500 0000 80B5     		push	{r7, lr}
 1501              		.cfi_def_cfa_offset 8
 1502              		.cfi_offset 7, -8
 1503              		.cfi_offset 14, -4
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 38


 1504 0002 82B0     		sub	sp, sp, #8
 1505              		.cfi_def_cfa_offset 16
 1506 0004 00AF     		add	r7, sp, #0
 1507              		.cfi_def_cfa_register 7
 587:main.c        ****     // handles input at terminal, echos it back to the terminal
 588:main.c        ****     // turn echo OFF, key emulation: only CR
 589:main.c        ****     // entered string is made available in 'line' and 'flag_KB_string' is set
 590:main.c        ****     
 591:main.c        ****     static uint8 usbStarted = FALSE;
 592:main.c        ****     static uint16 usbBufCount = 0;
 593:main.c        ****     uint8 c = 0; 
 1508              		.loc 1 593 0
 1509 0006 0023     		movs	r3, #0
 1510 0008 FB71     		strb	r3, [r7, #7]
 594:main.c        ****     
 595:main.c        **** 
 596:main.c        ****     if (!usbStarted)
 1511              		.loc 1 596 0
 1512 000a 2B4B     		ldr	r3, .L75
 1513 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1514 000e 002B     		cmp	r3, #0
 1515 0010 0AD1     		bne	.L66
 597:main.c        ****     {
 598:main.c        ****         if (USBUART_GetConfiguration())
 1516              		.loc 1 598 0
 1517 0012 FFF7FEFF 		bl	USBUART_GetConfiguration
 1518 0016 0346     		mov	r3, r0
 1519 0018 002B     		cmp	r3, #0
 1520 001a 49D0     		beq	.L74
 599:main.c        ****         {
 600:main.c        ****             USBUART_CDC_Init();
 1521              		.loc 1 600 0
 1522 001c FFF7FEFF 		bl	USBUART_CDC_Init
 601:main.c        ****             usbStarted = TRUE;
 1523              		.loc 1 601 0
 1524 0020 254B     		ldr	r3, .L75
 1525 0022 0122     		movs	r2, #1
 1526 0024 1A70     		strb	r2, [r3]
 602:main.c        ****         }
 603:main.c        ****     }
 604:main.c        ****     else
 605:main.c        ****     {
 606:main.c        ****         if (USBUART_DataIsReady() != 0)
 607:main.c        ****         {  
 608:main.c        ****             c = USBUART_GetChar();
 609:main.c        **** 
 610:main.c        ****             if ((c == 13) || (c == 10))
 611:main.c        ****             {
 612:main.c        **** //                if (usbBufCount > 0)
 613:main.c        ****                 {
 614:main.c        ****                     entry[usbBufCount]= '\0';
 615:main.c        ****                     strcpy(line,entry);
 616:main.c        ****                     usbBufCount = 0;
 617:main.c        ****                     flag_KB_string = 1;
 618:main.c        ****                 }
 619:main.c        ****             }
 620:main.c        ****             else 
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 39


 621:main.c        ****             {
 622:main.c        ****                 if (((c == CHAR_BACKSP) || (c == CHAR_DEL) ) && (usbBufCount > 0) )
 623:main.c        ****                     usbBufCount--;
 624:main.c        ****                 else
 625:main.c        ****                 {
 626:main.c        ****                     if (usbBufCount > (BUF_SIZE-2) ) // one less else strtok triggers a crash
 627:main.c        ****                     {
 628:main.c        ****                        USBUART_PutChar('!');        
 629:main.c        ****                     }
 630:main.c        ****                     else
 631:main.c        ****                         entry[usbBufCount++] = c;  
 632:main.c        ****                 }  
 633:main.c        ****             }
 634:main.c        ****         }
 635:main.c        ****     }    
 636:main.c        **** }
 1527              		.loc 1 636 0
 1528 0026 43E0     		b	.L74
 1529              	.L66:
 606:main.c        ****         {  
 1530              		.loc 1 606 0
 1531 0028 FFF7FEFF 		bl	USBUART_DataIsReady
 1532 002c 0346     		mov	r3, r0
 1533 002e 002B     		cmp	r3, #0
 1534 0030 3ED0     		beq	.L74
 608:main.c        **** 
 1535              		.loc 1 608 0
 1536 0032 FFF7FEFF 		bl	USBUART_GetChar
 1537 0036 0346     		mov	r3, r0
 1538 0038 FB71     		strb	r3, [r7, #7]
 610:main.c        ****             {
 1539              		.loc 1 610 0
 1540 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1541 003c 0D2B     		cmp	r3, #13
 1542 003e 02D0     		beq	.L69
 610:main.c        ****             {
 1543              		.loc 1 610 0 is_stmt 0 discriminator 1
 1544 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1545 0042 0A2B     		cmp	r3, #10
 1546 0044 10D1     		bne	.L70
 1547              	.L69:
 614:main.c        ****                     strcpy(line,entry);
 1548              		.loc 1 614 0 is_stmt 1
 1549 0046 1D4B     		ldr	r3, .L75+4
 1550 0048 1B88     		ldrh	r3, [r3]
 1551 004a 1A46     		mov	r2, r3
 1552 004c 1C4B     		ldr	r3, .L75+8
 1553 004e 0021     		movs	r1, #0
 1554 0050 9954     		strb	r1, [r3, r2]
 615:main.c        ****                     usbBufCount = 0;
 1555              		.loc 1 615 0
 1556 0052 1B49     		ldr	r1, .L75+8
 1557 0054 1B48     		ldr	r0, .L75+12
 1558 0056 FFF7FEFF 		bl	strcpy
 616:main.c        ****                     flag_KB_string = 1;
 1559              		.loc 1 616 0
 1560 005a 184B     		ldr	r3, .L75+4
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 40


 1561 005c 0022     		movs	r2, #0
 1562 005e 1A80     		strh	r2, [r3]	@ movhi
 617:main.c        ****                 }
 1563              		.loc 1 617 0
 1564 0060 194B     		ldr	r3, .L75+16
 1565 0062 0122     		movs	r2, #1
 1566 0064 1A70     		strb	r2, [r3]
 1567 0066 23E0     		b	.L68
 1568              	.L70:
 622:main.c        ****                     usbBufCount--;
 1569              		.loc 1 622 0
 1570 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1571 006a 082B     		cmp	r3, #8
 1572 006c 02D0     		beq	.L71
 622:main.c        ****                     usbBufCount--;
 1573              		.loc 1 622 0 is_stmt 0 discriminator 2
 1574 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1575 0070 7F2B     		cmp	r3, #127
 1576 0072 0AD1     		bne	.L72
 1577              	.L71:
 622:main.c        ****                     usbBufCount--;
 1578              		.loc 1 622 0 discriminator 3
 1579 0074 114B     		ldr	r3, .L75+4
 1580 0076 1B88     		ldrh	r3, [r3]
 1581 0078 002B     		cmp	r3, #0
 1582 007a 06D0     		beq	.L72
 623:main.c        ****                 else
 1583              		.loc 1 623 0 is_stmt 1
 1584 007c 0F4B     		ldr	r3, .L75+4
 1585 007e 1B88     		ldrh	r3, [r3]
 1586 0080 013B     		subs	r3, r3, #1
 1587 0082 9AB2     		uxth	r2, r3
 1588 0084 0D4B     		ldr	r3, .L75+4
 1589 0086 1A80     		strh	r2, [r3]	@ movhi
 1590 0088 12E0     		b	.L68
 1591              	.L72:
 626:main.c        ****                     {
 1592              		.loc 1 626 0
 1593 008a 0C4B     		ldr	r3, .L75+4
 1594 008c 1B88     		ldrh	r3, [r3]
 1595 008e 3E2B     		cmp	r3, #62
 1596 0090 03D9     		bls	.L73
 628:main.c        ****                     }
 1597              		.loc 1 628 0
 1598 0092 2120     		movs	r0, #33
 1599 0094 FFF7FEFF 		bl	USBUART_PutChar
 1600              		.loc 1 636 0
 1601 0098 0AE0     		b	.L74
 1602              	.L73:
 631:main.c        ****                 }  
 1603              		.loc 1 631 0
 1604 009a 084B     		ldr	r3, .L75+4
 1605 009c 1B88     		ldrh	r3, [r3]
 1606 009e 5A1C     		adds	r2, r3, #1
 1607 00a0 91B2     		uxth	r1, r2
 1608 00a2 064A     		ldr	r2, .L75+4
 1609 00a4 1180     		strh	r1, [r2]	@ movhi
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 41


 1610 00a6 1946     		mov	r1, r3
 1611 00a8 054A     		ldr	r2, .L75+8
 1612 00aa FB79     		ldrb	r3, [r7, #7]
 1613 00ac 5354     		strb	r3, [r2, r1]
 1614              		.loc 1 636 0
 1615 00ae FFE7     		b	.L74
 1616              	.L68:
 1617              	.L74:
 1618 00b0 00BF     		nop
 1619 00b2 0837     		adds	r7, r7, #8
 1620              		.cfi_def_cfa_offset 8
 1621 00b4 BD46     		mov	sp, r7
 1622              		.cfi_def_cfa_register 13
 1623              		@ sp needed
 1624 00b6 80BD     		pop	{r7, pc}
 1625              	.L76:
 1626              		.align	2
 1627              	.L75:
 1628 00b8 45000000 		.word	usbStarted.8829
 1629 00bc 46000000 		.word	usbBufCount.8830
 1630 00c0 00000000 		.word	entry
 1631 00c4 00000000 		.word	line
 1632 00c8 00000000 		.word	flag_KB_string
 1633              		.cfi_endproc
 1634              	.LFE82:
 1635              		.size	handle_usb, .-handle_usb
 1636              		.bss
 1637              	usbStarted.8829:
 1638 0045 00       		.space	1
 1639              		.align	1
 1640              	usbBufCount.8830:
 1641 0046 0000     		.space	2
 1642              		.text
 1643              	.Letext0:
 1644              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1645              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1646              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1647              		.file 5 "vars.h"
 1648              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1649              		.section	.debug_info,"",%progbits
 1650              	.Ldebug_info0:
 1651 0000 F9070000 		.4byte	0x7f9
 1652 0004 0400     		.2byte	0x4
 1653 0006 00000000 		.4byte	.Ldebug_abbrev0
 1654 000a 04       		.byte	0x4
 1655 000b 01       		.uleb128 0x1
 1656 000c CC000000 		.4byte	.LASF110
 1657 0010 0C       		.byte	0xc
 1658 0011 11050000 		.4byte	.LASF111
 1659 0015 CD010000 		.4byte	.LASF112
 1660 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1661 001d 00000000 		.4byte	0
 1662 0021 00000000 		.4byte	.Ldebug_line0
 1663 0025 02       		.uleb128 0x2
 1664 0026 01       		.byte	0x1
 1665 0027 06       		.byte	0x6
 1666 0028 E3030000 		.4byte	.LASF0
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 42


 1667 002c 02       		.uleb128 0x2
 1668 002d 01       		.byte	0x1
 1669 002e 08       		.byte	0x8
 1670 002f A1030000 		.4byte	.LASF1
 1671 0033 02       		.uleb128 0x2
 1672 0034 02       		.byte	0x2
 1673 0035 05       		.byte	0x5
 1674 0036 98000000 		.4byte	.LASF2
 1675 003a 02       		.uleb128 0x2
 1676 003b 02       		.byte	0x2
 1677 003c 07       		.byte	0x7
 1678 003d FE040000 		.4byte	.LASF3
 1679 0041 03       		.uleb128 0x3
 1680 0042 5A050000 		.4byte	.LASF12
 1681 0046 02       		.byte	0x2
 1682 0047 3F       		.byte	0x3f
 1683 0048 4C000000 		.4byte	0x4c
 1684 004c 02       		.uleb128 0x2
 1685 004d 04       		.byte	0x4
 1686 004e 05       		.byte	0x5
 1687 004f F0020000 		.4byte	.LASF4
 1688 0053 02       		.uleb128 0x2
 1689 0054 04       		.byte	0x4
 1690 0055 07       		.byte	0x7
 1691 0056 18050000 		.4byte	.LASF5
 1692 005a 02       		.uleb128 0x2
 1693 005b 08       		.byte	0x8
 1694 005c 05       		.byte	0x5
 1695 005d A4020000 		.4byte	.LASF6
 1696 0061 02       		.uleb128 0x2
 1697 0062 08       		.byte	0x8
 1698 0063 07       		.byte	0x7
 1699 0064 EF030000 		.4byte	.LASF7
 1700 0068 04       		.uleb128 0x4
 1701 0069 04       		.byte	0x4
 1702 006a 05       		.byte	0x5
 1703 006b 696E7400 		.ascii	"int\000"
 1704 006f 02       		.uleb128 0x2
 1705 0070 04       		.byte	0x4
 1706 0071 07       		.byte	0x7
 1707 0072 21040000 		.4byte	.LASF8
 1708 0076 02       		.uleb128 0x2
 1709 0077 08       		.byte	0x8
 1710 0078 04       		.byte	0x4
 1711 0079 8E030000 		.4byte	.LASF9
 1712 007d 02       		.uleb128 0x2
 1713 007e 04       		.byte	0x4
 1714 007f 07       		.byte	0x7
 1715 0080 AF000000 		.4byte	.LASF10
 1716 0084 05       		.uleb128 0x5
 1717 0085 04       		.byte	0x4
 1718 0086 8A000000 		.4byte	0x8a
 1719 008a 02       		.uleb128 0x2
 1720 008b 01       		.byte	0x1
 1721 008c 08       		.byte	0x8
 1722 008d 76040000 		.4byte	.LASF11
 1723 0091 03       		.uleb128 0x3
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 43


 1724 0092 86040000 		.4byte	.LASF13
 1725 0096 03       		.byte	0x3
 1726 0097 2C       		.byte	0x2c
 1727 0098 41000000 		.4byte	0x41
 1728 009c 02       		.uleb128 0x2
 1729 009d 08       		.byte	0x8
 1730 009e 04       		.byte	0x4
 1731 009f 36000000 		.4byte	.LASF14
 1732 00a3 02       		.uleb128 0x2
 1733 00a4 04       		.byte	0x4
 1734 00a5 04       		.byte	0x4
 1735 00a6 84020000 		.4byte	.LASF15
 1736 00aa 06       		.uleb128 0x6
 1737 00ab B7040000 		.4byte	.LASF16
 1738 00af 04       		.byte	0x4
 1739 00b0 E401     		.2byte	0x1e4
 1740 00b2 2C000000 		.4byte	0x2c
 1741 00b6 06       		.uleb128 0x6
 1742 00b7 A3010000 		.4byte	.LASF17
 1743 00bb 04       		.byte	0x4
 1744 00bc E501     		.2byte	0x1e5
 1745 00be 3A000000 		.4byte	0x3a
 1746 00c2 06       		.uleb128 0x6
 1747 00c3 BF020000 		.4byte	.LASF18
 1748 00c7 04       		.byte	0x4
 1749 00c8 E701     		.2byte	0x1e7
 1750 00ca 25000000 		.4byte	0x25
 1751 00ce 06       		.uleb128 0x6
 1752 00cf BA010000 		.4byte	.LASF19
 1753 00d3 04       		.byte	0x4
 1754 00d4 E801     		.2byte	0x1e8
 1755 00d6 33000000 		.4byte	0x33
 1756 00da 07       		.uleb128 0x7
 1757 00db B0010000 		.4byte	.LASF113
 1758 00df 20       		.byte	0x20
 1759 00e0 05       		.byte	0x5
 1760 00e1 29       		.byte	0x29
 1761 00e2 B3010000 		.4byte	0x1b3
 1762 00e6 08       		.uleb128 0x8
 1763 00e7 29060000 		.4byte	.LASF20
 1764 00eb 05       		.byte	0x5
 1765 00ec 2A       		.byte	0x2a
 1766 00ed C2000000 		.4byte	0xc2
 1767 00f1 00       		.byte	0
 1768 00f2 08       		.uleb128 0x8
 1769 00f3 AA010000 		.4byte	.LASF21
 1770 00f7 05       		.byte	0x5
 1771 00f8 2B       		.byte	0x2b
 1772 00f9 AA000000 		.4byte	0xaa
 1773 00fd 01       		.byte	0x1
 1774 00fe 08       		.uleb128 0x8
 1775 00ff 7B040000 		.4byte	.LASF22
 1776 0103 05       		.byte	0x5
 1777 0104 2C       		.byte	0x2c
 1778 0105 CE000000 		.4byte	0xce
 1779 0109 02       		.byte	0x2
 1780 010a 08       		.uleb128 0x8
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 44


 1781 010b DB050000 		.4byte	.LASF23
 1782 010f 05       		.byte	0x5
 1783 0110 2D       		.byte	0x2d
 1784 0111 CE000000 		.4byte	0xce
 1785 0115 04       		.byte	0x4
 1786 0116 08       		.uleb128 0x8
 1787 0117 2E060000 		.4byte	.LASF24
 1788 011b 05       		.byte	0x5
 1789 011c 2E       		.byte	0x2e
 1790 011d CE000000 		.4byte	0xce
 1791 0121 06       		.byte	0x6
 1792 0122 08       		.uleb128 0x8
 1793 0123 E8020000 		.4byte	.LASF25
 1794 0127 05       		.byte	0x5
 1795 0128 2F       		.byte	0x2f
 1796 0129 CE000000 		.4byte	0xce
 1797 012d 08       		.byte	0x8
 1798 012e 08       		.uleb128 0x8
 1799 012f 8D050000 		.4byte	.LASF26
 1800 0133 05       		.byte	0x5
 1801 0134 30       		.byte	0x30
 1802 0135 CE000000 		.4byte	0xce
 1803 0139 0A       		.byte	0xa
 1804 013a 08       		.uleb128 0x8
 1805 013b C2030000 		.4byte	.LASF27
 1806 013f 05       		.byte	0x5
 1807 0140 31       		.byte	0x31
 1808 0141 CE000000 		.4byte	0xce
 1809 0145 0C       		.byte	0xc
 1810 0146 08       		.uleb128 0x8
 1811 0147 DB020000 		.4byte	.LASF28
 1812 014b 05       		.byte	0x5
 1813 014c 32       		.byte	0x32
 1814 014d CE000000 		.4byte	0xce
 1815 0151 0E       		.byte	0xe
 1816 0152 08       		.uleb128 0x8
 1817 0153 52040000 		.4byte	.LASF29
 1818 0157 05       		.byte	0x5
 1819 0158 33       		.byte	0x33
 1820 0159 CE000000 		.4byte	0xce
 1821 015d 10       		.byte	0x10
 1822 015e 08       		.uleb128 0x8
 1823 015f 8E040000 		.4byte	.LASF30
 1824 0163 05       		.byte	0x5
 1825 0164 34       		.byte	0x34
 1826 0165 CE000000 		.4byte	0xce
 1827 0169 12       		.byte	0x12
 1828 016a 08       		.uleb128 0x8
 1829 016b CB030000 		.4byte	.LASF31
 1830 016f 05       		.byte	0x5
 1831 0170 35       		.byte	0x35
 1832 0171 CE000000 		.4byte	0xce
 1833 0175 14       		.byte	0x14
 1834 0176 08       		.uleb128 0x8
 1835 0177 06060000 		.4byte	.LASF32
 1836 017b 05       		.byte	0x5
 1837 017c 36       		.byte	0x36
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 45


 1838 017d CE000000 		.4byte	0xce
 1839 0181 16       		.byte	0x16
 1840 0182 08       		.uleb128 0x8
 1841 0183 90000000 		.4byte	.LASF33
 1842 0187 05       		.byte	0x5
 1843 0188 37       		.byte	0x37
 1844 0189 CE000000 		.4byte	0xce
 1845 018d 18       		.byte	0x18
 1846 018e 08       		.uleb128 0x8
 1847 018f D3020000 		.4byte	.LASF34
 1848 0193 05       		.byte	0x5
 1849 0194 38       		.byte	0x38
 1850 0195 CE000000 		.4byte	0xce
 1851 0199 1A       		.byte	0x1a
 1852 019a 08       		.uleb128 0x8
 1853 019b 49040000 		.4byte	.LASF35
 1854 019f 05       		.byte	0x5
 1855 01a0 39       		.byte	0x39
 1856 01a1 CE000000 		.4byte	0xce
 1857 01a5 1C       		.byte	0x1c
 1858 01a6 08       		.uleb128 0x8
 1859 01a7 96040000 		.4byte	.LASF36
 1860 01ab 05       		.byte	0x5
 1861 01ac 3A       		.byte	0x3a
 1862 01ad CE000000 		.4byte	0xce
 1863 01b1 1E       		.byte	0x1e
 1864 01b2 00       		.byte	0
 1865 01b3 09       		.uleb128 0x9
 1866 01b4 72050000 		.4byte	.LASF37
 1867 01b8 01       		.byte	0x1
 1868 01b9 34       		.byte	0x34
 1869 01ba 00000000 		.4byte	.LFB64
 1870 01be 14000000 		.4byte	.LFE64-.LFB64
 1871 01c2 01       		.uleb128 0x1
 1872 01c3 9C       		.byte	0x9c
 1873 01c4 0A       		.uleb128 0xa
 1874 01c5 A9040000 		.4byte	.LASF40
 1875 01c9 01       		.byte	0x1
 1876 01ca 3A       		.byte	0x3a
 1877 01cb 00000000 		.4byte	.LFB65
 1878 01cf 2E000000 		.4byte	.LFE65-.LFB65
 1879 01d3 01       		.uleb128 0x1
 1880 01d4 9C       		.byte	0x9c
 1881 01d5 E6010000 		.4byte	0x1e6
 1882 01d9 0B       		.uleb128 0xb
 1883 01da 7800     		.ascii	"x\000"
 1884 01dc 01       		.byte	0x1
 1885 01dd 3A       		.byte	0x3a
 1886 01de 68000000 		.4byte	0x68
 1887 01e2 02       		.uleb128 0x2
 1888 01e3 91       		.byte	0x91
 1889 01e4 74       		.sleb128 -12
 1890 01e5 00       		.byte	0
 1891 01e6 09       		.uleb128 0x9
 1892 01e7 74000000 		.4byte	.LASF38
 1893 01eb 01       		.byte	0x1
 1894 01ec 42       		.byte	0x42
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 46


 1895 01ed 00000000 		.4byte	.LFB66
 1896 01f1 14000000 		.4byte	.LFE66-.LFB66
 1897 01f5 01       		.uleb128 0x1
 1898 01f6 9C       		.byte	0x9c
 1899 01f7 09       		.uleb128 0x9
 1900 01f8 00000000 		.4byte	.LASF39
 1901 01fc 01       		.byte	0x1
 1902 01fd 48       		.byte	0x48
 1903 01fe 00000000 		.4byte	.LFB67
 1904 0202 14000000 		.4byte	.LFE67-.LFB67
 1905 0206 01       		.uleb128 0x1
 1906 0207 9C       		.byte	0x9c
 1907 0208 0A       		.uleb128 0xa
 1908 0209 23030000 		.4byte	.LASF41
 1909 020d 01       		.byte	0x1
 1910 020e 4D       		.byte	0x4d
 1911 020f 00000000 		.4byte	.LFB68
 1912 0213 22000000 		.4byte	.LFE68-.LFB68
 1913 0217 01       		.uleb128 0x1
 1914 0218 9C       		.byte	0x9c
 1915 0219 2A020000 		.4byte	0x22a
 1916 021d 0B       		.uleb128 0xb
 1917 021e 7800     		.ascii	"x\000"
 1918 0220 01       		.byte	0x1
 1919 0221 4D       		.byte	0x4d
 1920 0222 AA000000 		.4byte	0xaa
 1921 0226 02       		.uleb128 0x2
 1922 0227 91       		.byte	0x91
 1923 0228 77       		.sleb128 -9
 1924 0229 00       		.byte	0
 1925 022a 0A       		.uleb128 0xa
 1926 022b 64050000 		.4byte	.LASF42
 1927 022f 01       		.byte	0x1
 1928 0230 54       		.byte	0x54
 1929 0231 00000000 		.4byte	.LFB69
 1930 0235 20000000 		.4byte	.LFE69-.LFB69
 1931 0239 01       		.uleb128 0x1
 1932 023a 9C       		.byte	0x9c
 1933 023b 4C020000 		.4byte	0x24c
 1934 023f 0B       		.uleb128 0xb
 1935 0240 7800     		.ascii	"x\000"
 1936 0242 01       		.byte	0x1
 1937 0243 54       		.byte	0x54
 1938 0244 AA000000 		.4byte	0xaa
 1939 0248 02       		.uleb128 0x2
 1940 0249 91       		.byte	0x91
 1941 024a 77       		.sleb128 -9
 1942 024b 00       		.byte	0
 1943 024c 0A       		.uleb128 0xa
 1944 024d 13060000 		.4byte	.LASF43
 1945 0251 01       		.byte	0x1
 1946 0252 5F       		.byte	0x5f
 1947 0253 00000000 		.4byte	.LFB70
 1948 0257 20000000 		.4byte	.LFE70-.LFB70
 1949 025b 01       		.uleb128 0x1
 1950 025c 9C       		.byte	0x9c
 1951 025d 6E020000 		.4byte	0x26e
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 47


 1952 0261 0B       		.uleb128 0xb
 1953 0262 7800     		.ascii	"x\000"
 1954 0264 01       		.byte	0x1
 1955 0265 5F       		.byte	0x5f
 1956 0266 68000000 		.4byte	0x68
 1957 026a 02       		.uleb128 0x2
 1958 026b 91       		.byte	0x91
 1959 026c 74       		.sleb128 -12
 1960 026d 00       		.byte	0
 1961 026e 0A       		.uleb128 0xa
 1962 026f 15040000 		.4byte	.LASF44
 1963 0273 01       		.byte	0x1
 1964 0274 68       		.byte	0x68
 1965 0275 00000000 		.4byte	.LFB71
 1966 0279 2A000000 		.4byte	.LFE71-.LFB71
 1967 027d 01       		.uleb128 0x1
 1968 027e 9C       		.byte	0x9c
 1969 027f 90020000 		.4byte	0x290
 1970 0283 0B       		.uleb128 0xb
 1971 0284 7800     		.ascii	"x\000"
 1972 0286 01       		.byte	0x1
 1973 0287 68       		.byte	0x68
 1974 0288 AA000000 		.4byte	0xaa
 1975 028c 02       		.uleb128 0x2
 1976 028d 91       		.byte	0x91
 1977 028e 77       		.sleb128 -9
 1978 028f 00       		.byte	0
 1979 0290 0A       		.uleb128 0xa
 1980 0291 5D000000 		.4byte	.LASF45
 1981 0295 01       		.byte	0x1
 1982 0296 7B       		.byte	0x7b
 1983 0297 00000000 		.4byte	.LFB72
 1984 029b E0000000 		.4byte	.LFE72-.LFB72
 1985 029f 01       		.uleb128 0x1
 1986 02a0 9C       		.byte	0x9c
 1987 02a1 04030000 		.4byte	0x304
 1988 02a5 0C       		.uleb128 0xc
 1989 02a6 0E000000 		.4byte	.LBB2
 1990 02aa B2000000 		.4byte	.LBE2-.LBB2
 1991 02ae 0D       		.uleb128 0xd
 1992 02af 78010000 		.4byte	.LASF46
 1993 02b3 01       		.byte	0x1
 1994 02b4 88       		.byte	0x88
 1995 02b5 CE000000 		.4byte	0xce
 1996 02b9 02       		.uleb128 0x2
 1997 02ba 91       		.byte	0x91
 1998 02bb 76       		.sleb128 -10
 1999 02bc 0D       		.uleb128 0xd
 2000 02bd 80010000 		.4byte	.LASF47
 2001 02c1 01       		.byte	0x1
 2002 02c2 89       		.byte	0x89
 2003 02c3 CE000000 		.4byte	0xce
 2004 02c7 02       		.uleb128 0x2
 2005 02c8 91       		.byte	0x91
 2006 02c9 74       		.sleb128 -12
 2007 02ca 0D       		.uleb128 0xd
 2008 02cb 88010000 		.4byte	.LASF48
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 48


 2009 02cf 01       		.byte	0x1
 2010 02d0 8A       		.byte	0x8a
 2011 02d1 CE000000 		.4byte	0xce
 2012 02d5 02       		.uleb128 0x2
 2013 02d6 91       		.byte	0x91
 2014 02d7 72       		.sleb128 -14
 2015 02d8 0D       		.uleb128 0xd
 2016 02d9 68010000 		.4byte	.LASF49
 2017 02dd 01       		.byte	0x1
 2018 02de 8C       		.byte	0x8c
 2019 02df CE000000 		.4byte	0xce
 2020 02e3 02       		.uleb128 0x2
 2021 02e4 91       		.byte	0x91
 2022 02e5 70       		.sleb128 -16
 2023 02e6 0D       		.uleb128 0xd
 2024 02e7 70010000 		.4byte	.LASF50
 2025 02eb 01       		.byte	0x1
 2026 02ec 8D       		.byte	0x8d
 2027 02ed CE000000 		.4byte	0xce
 2028 02f1 02       		.uleb128 0x2
 2029 02f2 91       		.byte	0x91
 2030 02f3 6E       		.sleb128 -18
 2031 02f4 0D       		.uleb128 0xd
 2032 02f5 90010000 		.4byte	.LASF51
 2033 02f9 01       		.byte	0x1
 2034 02fa 8E       		.byte	0x8e
 2035 02fb CE000000 		.4byte	0xce
 2036 02ff 02       		.uleb128 0x2
 2037 0300 91       		.byte	0x91
 2038 0301 6C       		.sleb128 -20
 2039 0302 00       		.byte	0
 2040 0303 00       		.byte	0
 2041 0304 0E       		.uleb128 0xe
 2042 0305 8A020000 		.4byte	.LASF59
 2043 0309 01       		.byte	0x1
 2044 030a BA       		.byte	0xba
 2045 030b 00000000 		.4byte	.LFB73
 2046 030f 0C000000 		.4byte	.LFE73-.LFB73
 2047 0313 01       		.uleb128 0x1
 2048 0314 9C       		.byte	0x9c
 2049 0315 0F       		.uleb128 0xf
 2050 0316 82050000 		.4byte	.LASF78
 2051 031a 01       		.byte	0x1
 2052 031b CD       		.byte	0xcd
 2053 031c 00000000 		.4byte	.LFB74
 2054 0320 C0000000 		.4byte	.LFE74-.LFB74
 2055 0324 01       		.uleb128 0x1
 2056 0325 9C       		.byte	0x9c
 2057 0326 83030000 		.4byte	0x383
 2058 032a 0D       		.uleb128 0xd
 2059 032b F9020000 		.4byte	.LASF52
 2060 032f 01       		.byte	0x1
 2061 0330 CE       		.byte	0xce
 2062 0331 CE000000 		.4byte	0xce
 2063 0335 02       		.uleb128 0x2
 2064 0336 91       		.byte	0x91
 2065 0337 76       		.sleb128 -10
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 49


 2066 0338 0D       		.uleb128 0xd
 2067 0339 0E030000 		.4byte	.LASF53
 2068 033d 01       		.byte	0x1
 2069 033e CF       		.byte	0xcf
 2070 033f CE000000 		.4byte	0xce
 2071 0343 02       		.uleb128 0x2
 2072 0344 91       		.byte	0x91
 2073 0345 74       		.sleb128 -12
 2074 0346 0D       		.uleb128 0xd
 2075 0347 79030000 		.4byte	.LASF54
 2076 034b 01       		.byte	0x1
 2077 034c D0       		.byte	0xd0
 2078 034d CE000000 		.4byte	0xce
 2079 0351 02       		.uleb128 0x2
 2080 0352 91       		.byte	0x91
 2081 0353 72       		.sleb128 -14
 2082 0354 0D       		.uleb128 0xd
 2083 0355 6A030000 		.4byte	.LASF55
 2084 0359 01       		.byte	0x1
 2085 035a D1       		.byte	0xd1
 2086 035b CE000000 		.4byte	0xce
 2087 035f 02       		.uleb128 0x2
 2088 0360 91       		.byte	0x91
 2089 0361 70       		.sleb128 -16
 2090 0362 0D       		.uleb128 0xd
 2091 0363 31030000 		.4byte	.LASF56
 2092 0367 01       		.byte	0x1
 2093 0368 D2       		.byte	0xd2
 2094 0369 83030000 		.4byte	0x383
 2095 036d 04       		.uleb128 0x4
 2096 036e 91       		.byte	0x91
 2097 036f E0B17F   		.sleb128 -10016
 2098 0372 0D       		.uleb128 0xd
 2099 0373 F9050000 		.4byte	.LASF57
 2100 0377 01       		.byte	0x1
 2101 0378 D4       		.byte	0xd4
 2102 0379 83030000 		.4byte	0x383
 2103 037d 04       		.uleb128 0x4
 2104 037e 91       		.byte	0x91
 2105 037f D0E37E   		.sleb128 -20016
 2106 0382 00       		.byte	0
 2107 0383 10       		.uleb128 0x10
 2108 0384 8A000000 		.4byte	0x8a
 2109 0388 94030000 		.4byte	0x394
 2110 038c 11       		.uleb128 0x11
 2111 038d 7D000000 		.4byte	0x7d
 2112 0391 0F27     		.2byte	0x270f
 2113 0393 00       		.byte	0
 2114 0394 0A       		.uleb128 0xa
 2115 0395 5F010000 		.4byte	.LASF58
 2116 0399 01       		.byte	0x1
 2117 039a DC       		.byte	0xdc
 2118 039b 00000000 		.4byte	.LFB75
 2119 039f 1A000000 		.4byte	.LFE75-.LFB75
 2120 03a3 01       		.uleb128 0x1
 2121 03a4 9C       		.byte	0x9c
 2122 03a5 B6030000 		.4byte	0x3b6
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 50


 2123 03a9 0B       		.uleb128 0xb
 2124 03aa 7800     		.ascii	"x\000"
 2125 03ac 01       		.byte	0x1
 2126 03ad DC       		.byte	0xdc
 2127 03ae 68000000 		.4byte	0x68
 2128 03b2 02       		.uleb128 0x2
 2129 03b3 91       		.byte	0x91
 2130 03b4 74       		.sleb128 -12
 2131 03b5 00       		.byte	0
 2132 03b6 12       		.uleb128 0x12
 2133 03b7 0A000000 		.4byte	.LASF60
 2134 03bb 01       		.byte	0x1
 2135 03bc F4       		.byte	0xf4
 2136 03bd 00000000 		.4byte	.LFB76
 2137 03c1 0C000000 		.4byte	.LFE76-.LFB76
 2138 03c5 01       		.uleb128 0x1
 2139 03c6 9C       		.byte	0x9c
 2140 03c7 13       		.uleb128 0x13
 2141 03c8 5A010000 		.4byte	.LASF61
 2142 03cc 01       		.byte	0x1
 2143 03cd 0101     		.2byte	0x101
 2144 03cf 68000000 		.4byte	0x68
 2145 03d3 00000000 		.4byte	.LFB77
 2146 03d7 00030000 		.4byte	.LFE77-.LFB77
 2147 03db 01       		.uleb128 0x1
 2148 03dc 9C       		.byte	0x9c
 2149 03dd 83040000 		.4byte	0x483
 2150 03e1 14       		.uleb128 0x14
 2151 03e2 A0050000 		.4byte	.LASF62
 2152 03e6 01       		.byte	0x1
 2153 03e7 2401     		.2byte	0x124
 2154 03e9 68000000 		.4byte	0x68
 2155 03ed 02       		.uleb128 0x2
 2156 03ee 91       		.byte	0x91
 2157 03ef 68       		.sleb128 -24
 2158 03f0 14       		.uleb128 0x14
 2159 03f1 35050000 		.4byte	.LASF63
 2160 03f5 01       		.byte	0x1
 2161 03f6 2C01     		.2byte	0x12c
 2162 03f8 68000000 		.4byte	0x68
 2163 03fc 02       		.uleb128 0x2
 2164 03fd 91       		.byte	0x91
 2165 03fe 64       		.sleb128 -28
 2166 03ff 14       		.uleb128 0x14
 2167 0400 22000000 		.4byte	.LASF64
 2168 0404 01       		.byte	0x1
 2169 0405 5F01     		.2byte	0x15f
 2170 0407 68000000 		.4byte	0x68
 2171 040b 02       		.uleb128 0x2
 2172 040c 91       		.byte	0x91
 2173 040d 74       		.sleb128 -12
 2174 040e 14       		.uleb128 0x14
 2175 040f A3040000 		.4byte	.LASF65
 2176 0413 01       		.byte	0x1
 2177 0414 6901     		.2byte	0x169
 2178 0416 83040000 		.4byte	0x483
 2179 041a 03       		.uleb128 0x3
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 51


 2180 041b 91       		.byte	0x91
 2181 041c B460     		.sleb128 -4044
 2182 041e 14       		.uleb128 0x14
 2183 041f C0010000 		.4byte	.LASF66
 2184 0423 01       		.byte	0x1
 2185 0424 6A01     		.2byte	0x16a
 2186 0426 68000000 		.4byte	0x68
 2187 042a 02       		.uleb128 0x2
 2188 042b 91       		.byte	0x91
 2189 042c 70       		.sleb128 -16
 2190 042d 14       		.uleb128 0x14
 2191 042e B8000000 		.4byte	.LASF67
 2192 0432 01       		.byte	0x1
 2193 0433 6D01     		.2byte	0x16d
 2194 0435 68000000 		.4byte	0x68
 2195 0439 02       		.uleb128 0x2
 2196 043a 91       		.byte	0x91
 2197 043b 60       		.sleb128 -32
 2198 043c 14       		.uleb128 0x14
 2199 043d 06040000 		.4byte	.LASF68
 2200 0441 01       		.byte	0x1
 2201 0442 6E01     		.2byte	0x16e
 2202 0444 68000000 		.4byte	0x68
 2203 0448 02       		.uleb128 0x2
 2204 0449 91       		.byte	0x91
 2205 044a 6C       		.sleb128 -20
 2206 044b 0C       		.uleb128 0xc
 2207 044c 20010000 		.4byte	.LBB3
 2208 0450 C0010000 		.4byte	.LBE3-.LBB3
 2209 0454 14       		.uleb128 0x14
 2210 0455 5A040000 		.4byte	.LASF69
 2211 0459 01       		.byte	0x1
 2212 045a 7B01     		.2byte	0x17b
 2213 045c 68000000 		.4byte	0x68
 2214 0460 02       		.uleb128 0x2
 2215 0461 91       		.byte	0x91
 2216 0462 5C       		.sleb128 -36
 2217 0463 14       		.uleb128 0x14
 2218 0464 BD040000 		.4byte	.LASF70
 2219 0468 01       		.byte	0x1
 2220 0469 7C01     		.2byte	0x17c
 2221 046b 68000000 		.4byte	0x68
 2222 046f 02       		.uleb128 0x2
 2223 0470 91       		.byte	0x91
 2224 0471 58       		.sleb128 -40
 2225 0472 14       		.uleb128 0x14
 2226 0473 D3040000 		.4byte	.LASF71
 2227 0477 01       		.byte	0x1
 2228 0478 7D01     		.2byte	0x17d
 2229 047a 68000000 		.4byte	0x68
 2230 047e 02       		.uleb128 0x2
 2231 047f 91       		.byte	0x91
 2232 0480 54       		.sleb128 -44
 2233 0481 00       		.byte	0
 2234 0482 00       		.byte	0
 2235 0483 10       		.uleb128 0x10
 2236 0484 68000000 		.4byte	0x68
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 52


 2237 0488 94040000 		.4byte	0x494
 2238 048c 11       		.uleb128 0x11
 2239 048d 7D000000 		.4byte	0x7d
 2240 0491 E703     		.2byte	0x3e7
 2241 0493 00       		.byte	0
 2242 0494 15       		.uleb128 0x15
 2243 0495 64040000 		.4byte	.LASF72
 2244 0499 01       		.byte	0x1
 2245 049a 1902     		.2byte	0x219
 2246 049c 68000000 		.4byte	0x68
 2247 04a0 00000000 		.4byte	.LFB78
 2248 04a4 50000000 		.4byte	.LFE78-.LFB78
 2249 04a8 01       		.uleb128 0x1
 2250 04a9 9C       		.byte	0x9c
 2251 04aa E8040000 		.4byte	0x4e8
 2252 04ae 14       		.uleb128 0x14
 2253 04af 9A030000 		.4byte	.LASF73
 2254 04b3 01       		.byte	0x1
 2255 04b4 1B02     		.2byte	0x21b
 2256 04b6 68000000 		.4byte	0x68
 2257 04ba 02       		.uleb128 0x2
 2258 04bb 91       		.byte	0x91
 2259 04bc 74       		.sleb128 -12
 2260 04bd 16       		.uleb128 0x16
 2261 04be 513100   		.ascii	"Q1\000"
 2262 04c1 01       		.byte	0x1
 2263 04c2 1C02     		.2byte	0x21c
 2264 04c4 68000000 		.4byte	0x68
 2265 04c8 02       		.uleb128 0x2
 2266 04c9 91       		.byte	0x91
 2267 04ca 70       		.sleb128 -16
 2268 04cb 16       		.uleb128 0x16
 2269 04cc 513200   		.ascii	"Q2\000"
 2270 04cf 01       		.byte	0x1
 2271 04d0 1D02     		.2byte	0x21d
 2272 04d2 68000000 		.4byte	0x68
 2273 04d6 02       		.uleb128 0x2
 2274 04d7 91       		.byte	0x91
 2275 04d8 6C       		.sleb128 -20
 2276 04d9 16       		.uleb128 0x16
 2277 04da 513600   		.ascii	"Q6\000"
 2278 04dd 01       		.byte	0x1
 2279 04de 1E02     		.2byte	0x21e
 2280 04e0 68000000 		.4byte	0x68
 2281 04e4 02       		.uleb128 0x2
 2282 04e5 91       		.byte	0x91
 2283 04e6 68       		.sleb128 -24
 2284 04e7 00       		.byte	0
 2285 04e8 15       		.uleb128 0x15
 2286 04e9 EA040000 		.4byte	.LASF74
 2287 04ed 01       		.byte	0x1
 2288 04ee 2702     		.2byte	0x227
 2289 04f0 68000000 		.4byte	0x68
 2290 04f4 00000000 		.4byte	.LFB79
 2291 04f8 50000000 		.4byte	.LFE79-.LFB79
 2292 04fc 01       		.uleb128 0x1
 2293 04fd 9C       		.byte	0x9c
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 53


 2294 04fe 3C050000 		.4byte	0x53c
 2295 0502 14       		.uleb128 0x14
 2296 0503 F3050000 		.4byte	.LASF75
 2297 0507 01       		.byte	0x1
 2298 0508 2902     		.2byte	0x229
 2299 050a 68000000 		.4byte	0x68
 2300 050e 02       		.uleb128 0x2
 2301 050f 91       		.byte	0x91
 2302 0510 74       		.sleb128 -12
 2303 0511 16       		.uleb128 0x16
 2304 0512 513300   		.ascii	"Q3\000"
 2305 0515 01       		.byte	0x1
 2306 0516 2A02     		.2byte	0x22a
 2307 0518 68000000 		.4byte	0x68
 2308 051c 02       		.uleb128 0x2
 2309 051d 91       		.byte	0x91
 2310 051e 70       		.sleb128 -16
 2311 051f 16       		.uleb128 0x16
 2312 0520 513400   		.ascii	"Q4\000"
 2313 0523 01       		.byte	0x1
 2314 0524 2B02     		.2byte	0x22b
 2315 0526 68000000 		.4byte	0x68
 2316 052a 02       		.uleb128 0x2
 2317 052b 91       		.byte	0x91
 2318 052c 6C       		.sleb128 -20
 2319 052d 16       		.uleb128 0x16
 2320 052e 513500   		.ascii	"Q5\000"
 2321 0531 01       		.byte	0x1
 2322 0532 2C02     		.2byte	0x22c
 2323 0534 68000000 		.4byte	0x68
 2324 0538 02       		.uleb128 0x2
 2325 0539 91       		.byte	0x91
 2326 053a 68       		.sleb128 -24
 2327 053b 00       		.byte	0
 2328 053c 17       		.uleb128 0x17
 2329 053d B2020000 		.4byte	.LASF76
 2330 0541 01       		.byte	0x1
 2331 0542 3302     		.2byte	0x233
 2332 0544 00000000 		.4byte	.LFB80
 2333 0548 3E000000 		.4byte	.LFE80-.LFB80
 2334 054c 01       		.uleb128 0x1
 2335 054d 9C       		.byte	0x9c
 2336 054e 60050000 		.4byte	0x560
 2337 0552 18       		.uleb128 0x18
 2338 0553 7300     		.ascii	"s\000"
 2339 0555 01       		.byte	0x1
 2340 0556 3302     		.2byte	0x233
 2341 0558 84000000 		.4byte	0x84
 2342 055c 02       		.uleb128 0x2
 2343 055d 91       		.byte	0x91
 2344 055e 74       		.sleb128 -12
 2345 055f 00       		.byte	0
 2346 0560 17       		.uleb128 0x17
 2347 0561 49000000 		.4byte	.LASF77
 2348 0565 01       		.byte	0x1
 2349 0566 4102     		.2byte	0x241
 2350 0568 00000000 		.4byte	.LFB81
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 54


 2351 056c 26000000 		.4byte	.LFE81-.LFB81
 2352 0570 01       		.uleb128 0x1
 2353 0571 9C       		.byte	0x9c
 2354 0572 84050000 		.4byte	0x584
 2355 0576 18       		.uleb128 0x18
 2356 0577 6300     		.ascii	"c\000"
 2357 0579 01       		.byte	0x1
 2358 057a 4102     		.2byte	0x241
 2359 057c 8A000000 		.4byte	0x8a
 2360 0580 02       		.uleb128 0x2
 2361 0581 91       		.byte	0x91
 2362 0582 77       		.sleb128 -9
 2363 0583 00       		.byte	0
 2364 0584 19       		.uleb128 0x19
 2365 0585 B4050000 		.4byte	.LASF79
 2366 0589 01       		.byte	0x1
 2367 058a 4902     		.2byte	0x249
 2368 058c 00000000 		.4byte	.LFB82
 2369 0590 CC000000 		.4byte	.LFE82-.LFB82
 2370 0594 01       		.uleb128 0x1
 2371 0595 9C       		.byte	0x9c
 2372 0596 CC050000 		.4byte	0x5cc
 2373 059a 14       		.uleb128 0x14
 2374 059b 2A050000 		.4byte	.LASF80
 2375 059f 01       		.byte	0x1
 2376 05a0 4F02     		.2byte	0x24f
 2377 05a2 AA000000 		.4byte	0xaa
 2378 05a6 05       		.uleb128 0x5
 2379 05a7 03       		.byte	0x3
 2380 05a8 45000000 		.4byte	usbStarted.8829
 2381 05ac 14       		.uleb128 0x14
 2382 05ad 3D040000 		.4byte	.LASF81
 2383 05b1 01       		.byte	0x1
 2384 05b2 5002     		.2byte	0x250
 2385 05b4 B6000000 		.4byte	0xb6
 2386 05b8 05       		.uleb128 0x5
 2387 05b9 03       		.byte	0x3
 2388 05ba 46000000 		.4byte	usbBufCount.8830
 2389 05be 16       		.uleb128 0x16
 2390 05bf 6300     		.ascii	"c\000"
 2391 05c1 01       		.byte	0x1
 2392 05c2 5102     		.2byte	0x251
 2393 05c4 AA000000 		.4byte	0xaa
 2394 05c8 02       		.uleb128 0x2
 2395 05c9 91       		.byte	0x91
 2396 05ca 77       		.sleb128 -9
 2397 05cb 00       		.byte	0
 2398 05cc 0D       		.uleb128 0xd
 2399 05cd 48050000 		.4byte	.LASF82
 2400 05d1 01       		.byte	0x1
 2401 05d2 B9       		.byte	0xb9
 2402 05d3 DD050000 		.4byte	0x5dd
 2403 05d7 05       		.uleb128 0x5
 2404 05d8 03       		.byte	0x3
 2405 05d9 44000000 		.4byte	count
 2406 05dd 1A       		.uleb128 0x1a
 2407 05de C2000000 		.4byte	0xc2
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 55


 2408 05e2 1B       		.uleb128 0x1b
 2409 05e3 E6050000 		.4byte	.LASF83
 2410 05e7 06       		.byte	0x6
 2411 05e8 1207     		.2byte	0x712
 2412 05ea EE050000 		.4byte	0x5ee
 2413 05ee 1A       		.uleb128 0x1a
 2414 05ef 91000000 		.4byte	0x91
 2415 05f3 1C       		.uleb128 0x1c
 2416 05f4 747300   		.ascii	"ts\000"
 2417 05f7 05       		.byte	0x5
 2418 05f8 10       		.byte	0x10
 2419 05f9 AA000000 		.4byte	0xaa
 2420 05fd 05       		.uleb128 0x5
 2421 05fe 03       		.byte	0x3
 2422 05ff 00000000 		.4byte	ts
 2423 0603 1D       		.uleb128 0x1d
 2424 0604 2F000000 		.4byte	.LASF84
 2425 0608 05       		.byte	0x5
 2426 0609 11       		.byte	0x11
 2427 060a B6000000 		.4byte	0xb6
 2428 060e 05       		.uleb128 0x5
 2429 060f 03       		.byte	0x3
 2430 0610 00000000 		.4byte	ts_enc
 2431 0614 1D       		.uleb128 0x1d
 2432 0615 AA050000 		.4byte	.LASF85
 2433 0619 05       		.byte	0x5
 2434 061a 12       		.byte	0x12
 2435 061b B6000000 		.4byte	0xb6
 2436 061f 05       		.uleb128 0x5
 2437 0620 03       		.byte	0x3
 2438 0621 00000000 		.4byte	ts_update
 2439 0625 1D       		.uleb128 0x1d
 2440 0626 3F050000 		.4byte	.LASF86
 2441 062a 05       		.byte	0x5
 2442 062b 13       		.byte	0x13
 2443 062c B6000000 		.4byte	0xb6
 2444 0630 05       		.uleb128 0x5
 2445 0631 03       		.byte	0x3
 2446 0632 00000000 		.4byte	ts_speed
 2447 0636 1D       		.uleb128 0x1d
 2448 0637 95050000 		.4byte	.LASF87
 2449 063b 05       		.byte	0x5
 2450 063c 14       		.byte	0x14
 2451 063d B6000000 		.4byte	0xb6
 2452 0641 05       		.uleb128 0x5
 2453 0642 03       		.byte	0x3
 2454 0643 00000000 		.4byte	ts_display
 2455 0647 1D       		.uleb128 0x1d
 2456 0648 4E050000 		.4byte	.LASF88
 2457 064c 05       		.byte	0x5
 2458 064d 16       		.byte	0x16
 2459 064e AA000000 		.4byte	0xaa
 2460 0652 05       		.uleb128 0x5
 2461 0653 03       		.byte	0x3
 2462 0654 00000000 		.4byte	flag_ts_enc
 2463 0658 1D       		.uleb128 0x1d
 2464 0659 C4020000 		.4byte	.LASF89
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 56


 2465 065d 05       		.byte	0x5
 2466 065e 17       		.byte	0x17
 2467 065f AA000000 		.4byte	0xaa
 2468 0663 05       		.uleb128 0x5
 2469 0664 03       		.byte	0x3
 2470 0665 00000000 		.4byte	flag_ts_update
 2471 0669 1D       		.uleb128 0x1d
 2472 066a DC040000 		.4byte	.LASF90
 2473 066e 05       		.byte	0x5
 2474 066f 18       		.byte	0x18
 2475 0670 AA000000 		.4byte	0xaa
 2476 0674 05       		.uleb128 0x5
 2477 0675 03       		.byte	0x3
 2478 0676 00000000 		.4byte	flag_ts_speed
 2479 067a 1D       		.uleb128 0x1d
 2480 067b 52030000 		.4byte	.LASF91
 2481 067f 05       		.byte	0x5
 2482 0680 19       		.byte	0x19
 2483 0681 AA000000 		.4byte	0xaa
 2484 0685 05       		.uleb128 0x5
 2485 0686 03       		.byte	0x3
 2486 0687 00000000 		.4byte	flag_ts_display
 2487 068b 1D       		.uleb128 0x1d
 2488 068c 62030000 		.4byte	.LASF92
 2489 0690 05       		.byte	0x5
 2490 0691 1C       		.byte	0x1c
 2491 0692 AA000000 		.4byte	0xaa
 2492 0696 05       		.uleb128 0x5
 2493 0697 03       		.byte	0x3
 2494 0698 00000000 		.4byte	flag_rx
 2495 069c 1D       		.uleb128 0x1d
 2496 069d 3D000000 		.4byte	.LASF93
 2497 06a1 05       		.byte	0x5
 2498 06a2 1D       		.byte	0x1d
 2499 06a3 AA000000 		.4byte	0xaa
 2500 06a7 05       		.uleb128 0x5
 2501 06a8 03       		.byte	0x3
 2502 06a9 00000000 		.4byte	flag_packet
 2503 06ad 1D       		.uleb128 0x1d
 2504 06ae 2E040000 		.4byte	.LASF94
 2505 06b2 05       		.byte	0x5
 2506 06b3 1E       		.byte	0x1e
 2507 06b4 AA000000 		.4byte	0xaa
 2508 06b8 05       		.uleb128 0x5
 2509 06b9 03       		.byte	0x3
 2510 06ba 00000000 		.4byte	flag_KB_string
 2511 06be 1D       		.uleb128 0x1d
 2512 06bf D4030000 		.4byte	.LASF95
 2513 06c3 05       		.byte	0x5
 2514 06c4 20       		.byte	0x20
 2515 06c5 AA000000 		.4byte	0xaa
 2516 06c9 05       		.uleb128 0x5
 2517 06ca 03       		.byte	0x3
 2518 06cb 00000000 		.4byte	dataready_flag
 2519 06cf 1D       		.uleb128 0x1d
 2520 06d0 BF050000 		.4byte	.LASF96
 2521 06d4 05       		.byte	0x5
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 57


 2522 06d5 22       		.byte	0x22
 2523 06d6 AA000000 		.4byte	0xaa
 2524 06da 05       		.uleb128 0x5
 2525 06db 03       		.byte	0x3
 2526 06dc 00000000 		.4byte	flag_rf_transmission_active
 2527 06e0 10       		.uleb128 0x10
 2528 06e1 8A000000 		.4byte	0x8a
 2529 06e5 F0060000 		.4byte	0x6f0
 2530 06e9 1E       		.uleb128 0x1e
 2531 06ea 7D000000 		.4byte	0x7d
 2532 06ee 3F       		.byte	0x3f
 2533 06ef 00       		.byte	0
 2534 06f0 1D       		.uleb128 0x1d
 2535 06f1 C5040000 		.4byte	.LASF97
 2536 06f5 05       		.byte	0x5
 2537 06f6 25       		.byte	0x25
 2538 06f7 E0060000 		.4byte	0x6e0
 2539 06fb 05       		.uleb128 0x5
 2540 06fc 03       		.byte	0x3
 2541 06fd 00000000 		.4byte	displaystring
 2542 0701 1D       		.uleb128 0x1d
 2543 0702 4D030000 		.4byte	.LASF98
 2544 0706 05       		.byte	0x5
 2545 0707 26       		.byte	0x26
 2546 0708 E0060000 		.4byte	0x6e0
 2547 070c 05       		.uleb128 0x5
 2548 070d 03       		.byte	0x3
 2549 070e 00000000 		.4byte	line
 2550 0712 1D       		.uleb128 0x1d
 2551 0713 88030000 		.4byte	.LASF99
 2552 0717 05       		.byte	0x5
 2553 0718 26       		.byte	0x26
 2554 0719 E0060000 		.4byte	0x6e0
 2555 071d 05       		.uleb128 0x5
 2556 071e 03       		.byte	0x3
 2557 071f 00000000 		.4byte	entry
 2558 0723 10       		.uleb128 0x10
 2559 0724 AA000000 		.4byte	0xaa
 2560 0728 33070000 		.4byte	0x733
 2561 072c 1E       		.uleb128 0x1e
 2562 072d 7D000000 		.4byte	0x7d
 2563 0731 3F       		.byte	0x3f
 2564 0732 00       		.byte	0
 2565 0733 1D       		.uleb128 0x1d
 2566 0734 C2000000 		.4byte	.LASF100
 2567 0738 05       		.byte	0x5
 2568 0739 27       		.byte	0x27
 2569 073a 23070000 		.4byte	0x723
 2570 073e 05       		.uleb128 0x5
 2571 073f 03       		.byte	0x3
 2572 0740 00000000 		.4byte	usbBuffer
 2573 0744 1D       		.uleb128 0x1d
 2574 0745 A2000000 		.4byte	.LASF101
 2575 0749 05       		.byte	0x5
 2576 074a 3C       		.byte	0x3c
 2577 074b DA000000 		.4byte	0xda
 2578 074f 05       		.uleb128 0x5
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 58


 2579 0750 03       		.byte	0x3
 2580 0751 00000000 		.4byte	system_state
 2581 0755 1D       		.uleb128 0x1d
 2582 0756 66020000 		.4byte	.LASF102
 2583 075a 01       		.byte	0x1
 2584 075b 73       		.byte	0x73
 2585 075c 68000000 		.4byte	0x68
 2586 0760 05       		.uleb128 0x5
 2587 0761 03       		.byte	0x3
 2588 0762 00000000 		.4byte	changeMotor
 2589 0766 1D       		.uleb128 0x1d
 2590 0767 85000000 		.4byte	.LASF103
 2591 076b 01       		.byte	0x1
 2592 076c 74       		.byte	0x74
 2593 076d 68000000 		.4byte	0x68
 2594 0771 05       		.uleb128 0x5
 2595 0772 03       		.byte	0x3
 2596 0773 00000000 		.4byte	checkLight
 2597 0777 1D       		.uleb128 0x1d
 2598 0778 98010000 		.4byte	.LASF104
 2599 077c 01       		.byte	0x1
 2600 077d 75       		.byte	0x75
 2601 077e 68000000 		.4byte	0x68
 2602 0782 05       		.uleb128 0x5
 2603 0783 03       		.byte	0x3
 2604 0784 00000000 		.4byte	lightState
 2605 0788 10       		.uleb128 0x10
 2606 0789 98070000 		.4byte	0x798
 2607 078d 98070000 		.4byte	0x798
 2608 0791 1E       		.uleb128 0x1e
 2609 0792 7D000000 		.4byte	0x7d
 2610 0796 02       		.byte	0x2
 2611 0797 00       		.byte	0
 2612 0798 1A       		.uleb128 0x1a
 2613 0799 68000000 		.4byte	0x68
 2614 079d 1D       		.uleb128 0x1d
 2615 079e AF030000 		.4byte	.LASF105
 2616 07a2 01       		.byte	0x1
 2617 07a3 76       		.byte	0x76
 2618 07a4 AE070000 		.4byte	0x7ae
 2619 07a8 05       		.uleb128 0x5
 2620 07a9 03       		.byte	0x3
 2621 07aa 00000000 		.4byte	lightDetectedFront
 2622 07ae 1A       		.uleb128 0x1a
 2623 07af 88070000 		.4byte	0x788
 2624 07b3 1D       		.uleb128 0x1d
 2625 07b4 72020000 		.4byte	.LASF106
 2626 07b8 01       		.byte	0x1
 2627 07b9 77       		.byte	0x77
 2628 07ba C4070000 		.4byte	0x7c4
 2629 07be 05       		.uleb128 0x5
 2630 07bf 03       		.byte	0x3
 2631 07c0 00000000 		.4byte	lightDetectedBack
 2632 07c4 1A       		.uleb128 0x1a
 2633 07c5 88070000 		.4byte	0x788
 2634 07c9 1D       		.uleb128 0x1d
 2635 07ca 54000000 		.4byte	.LASF107
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 59


 2636 07ce 01       		.byte	0x1
 2637 07cf 78       		.byte	0x78
 2638 07d0 98070000 		.4byte	0x798
 2639 07d4 05       		.uleb128 0x5
 2640 07d5 03       		.byte	0x3
 2641 07d6 00000000 		.4byte	counteoc
 2642 07da 1D       		.uleb128 0x1d
 2643 07db 3E030000 		.4byte	.LASF108
 2644 07df 01       		.byte	0x1
 2645 07e0 79       		.byte	0x79
 2646 07e1 98070000 		.4byte	0x798
 2647 07e5 05       		.uleb128 0x5
 2648 07e6 03       		.byte	0x3
 2649 07e7 00000000 		.4byte	processSensors
 2650 07eb 1D       		.uleb128 0x1d
 2651 07ec 22060000 		.4byte	.LASF109
 2652 07f0 01       		.byte	0x1
 2653 07f1 7A       		.byte	0x7a
 2654 07f2 98070000 		.4byte	0x798
 2655 07f6 05       		.uleb128 0x5
 2656 07f7 03       		.byte	0x3
 2657 07f8 00000000 		.4byte	middle
 2658 07fc 00       		.byte	0
 2659              		.section	.debug_abbrev,"",%progbits
 2660              	.Ldebug_abbrev0:
 2661 0000 01       		.uleb128 0x1
 2662 0001 11       		.uleb128 0x11
 2663 0002 01       		.byte	0x1
 2664 0003 25       		.uleb128 0x25
 2665 0004 0E       		.uleb128 0xe
 2666 0005 13       		.uleb128 0x13
 2667 0006 0B       		.uleb128 0xb
 2668 0007 03       		.uleb128 0x3
 2669 0008 0E       		.uleb128 0xe
 2670 0009 1B       		.uleb128 0x1b
 2671 000a 0E       		.uleb128 0xe
 2672 000b 55       		.uleb128 0x55
 2673 000c 17       		.uleb128 0x17
 2674 000d 11       		.uleb128 0x11
 2675 000e 01       		.uleb128 0x1
 2676 000f 10       		.uleb128 0x10
 2677 0010 17       		.uleb128 0x17
 2678 0011 00       		.byte	0
 2679 0012 00       		.byte	0
 2680 0013 02       		.uleb128 0x2
 2681 0014 24       		.uleb128 0x24
 2682 0015 00       		.byte	0
 2683 0016 0B       		.uleb128 0xb
 2684 0017 0B       		.uleb128 0xb
 2685 0018 3E       		.uleb128 0x3e
 2686 0019 0B       		.uleb128 0xb
 2687 001a 03       		.uleb128 0x3
 2688 001b 0E       		.uleb128 0xe
 2689 001c 00       		.byte	0
 2690 001d 00       		.byte	0
 2691 001e 03       		.uleb128 0x3
 2692 001f 16       		.uleb128 0x16
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 60


 2693 0020 00       		.byte	0
 2694 0021 03       		.uleb128 0x3
 2695 0022 0E       		.uleb128 0xe
 2696 0023 3A       		.uleb128 0x3a
 2697 0024 0B       		.uleb128 0xb
 2698 0025 3B       		.uleb128 0x3b
 2699 0026 0B       		.uleb128 0xb
 2700 0027 49       		.uleb128 0x49
 2701 0028 13       		.uleb128 0x13
 2702 0029 00       		.byte	0
 2703 002a 00       		.byte	0
 2704 002b 04       		.uleb128 0x4
 2705 002c 24       		.uleb128 0x24
 2706 002d 00       		.byte	0
 2707 002e 0B       		.uleb128 0xb
 2708 002f 0B       		.uleb128 0xb
 2709 0030 3E       		.uleb128 0x3e
 2710 0031 0B       		.uleb128 0xb
 2711 0032 03       		.uleb128 0x3
 2712 0033 08       		.uleb128 0x8
 2713 0034 00       		.byte	0
 2714 0035 00       		.byte	0
 2715 0036 05       		.uleb128 0x5
 2716 0037 0F       		.uleb128 0xf
 2717 0038 00       		.byte	0
 2718 0039 0B       		.uleb128 0xb
 2719 003a 0B       		.uleb128 0xb
 2720 003b 49       		.uleb128 0x49
 2721 003c 13       		.uleb128 0x13
 2722 003d 00       		.byte	0
 2723 003e 00       		.byte	0
 2724 003f 06       		.uleb128 0x6
 2725 0040 16       		.uleb128 0x16
 2726 0041 00       		.byte	0
 2727 0042 03       		.uleb128 0x3
 2728 0043 0E       		.uleb128 0xe
 2729 0044 3A       		.uleb128 0x3a
 2730 0045 0B       		.uleb128 0xb
 2731 0046 3B       		.uleb128 0x3b
 2732 0047 05       		.uleb128 0x5
 2733 0048 49       		.uleb128 0x49
 2734 0049 13       		.uleb128 0x13
 2735 004a 00       		.byte	0
 2736 004b 00       		.byte	0
 2737 004c 07       		.uleb128 0x7
 2738 004d 13       		.uleb128 0x13
 2739 004e 01       		.byte	0x1
 2740 004f 03       		.uleb128 0x3
 2741 0050 0E       		.uleb128 0xe
 2742 0051 0B       		.uleb128 0xb
 2743 0052 0B       		.uleb128 0xb
 2744 0053 3A       		.uleb128 0x3a
 2745 0054 0B       		.uleb128 0xb
 2746 0055 3B       		.uleb128 0x3b
 2747 0056 0B       		.uleb128 0xb
 2748 0057 01       		.uleb128 0x1
 2749 0058 13       		.uleb128 0x13
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 61


 2750 0059 00       		.byte	0
 2751 005a 00       		.byte	0
 2752 005b 08       		.uleb128 0x8
 2753 005c 0D       		.uleb128 0xd
 2754 005d 00       		.byte	0
 2755 005e 03       		.uleb128 0x3
 2756 005f 0E       		.uleb128 0xe
 2757 0060 3A       		.uleb128 0x3a
 2758 0061 0B       		.uleb128 0xb
 2759 0062 3B       		.uleb128 0x3b
 2760 0063 0B       		.uleb128 0xb
 2761 0064 49       		.uleb128 0x49
 2762 0065 13       		.uleb128 0x13
 2763 0066 38       		.uleb128 0x38
 2764 0067 0B       		.uleb128 0xb
 2765 0068 00       		.byte	0
 2766 0069 00       		.byte	0
 2767 006a 09       		.uleb128 0x9
 2768 006b 2E       		.uleb128 0x2e
 2769 006c 00       		.byte	0
 2770 006d 3F       		.uleb128 0x3f
 2771 006e 19       		.uleb128 0x19
 2772 006f 03       		.uleb128 0x3
 2773 0070 0E       		.uleb128 0xe
 2774 0071 3A       		.uleb128 0x3a
 2775 0072 0B       		.uleb128 0xb
 2776 0073 3B       		.uleb128 0x3b
 2777 0074 0B       		.uleb128 0xb
 2778 0075 11       		.uleb128 0x11
 2779 0076 01       		.uleb128 0x1
 2780 0077 12       		.uleb128 0x12
 2781 0078 06       		.uleb128 0x6
 2782 0079 40       		.uleb128 0x40
 2783 007a 18       		.uleb128 0x18
 2784 007b 9642     		.uleb128 0x2116
 2785 007d 19       		.uleb128 0x19
 2786 007e 00       		.byte	0
 2787 007f 00       		.byte	0
 2788 0080 0A       		.uleb128 0xa
 2789 0081 2E       		.uleb128 0x2e
 2790 0082 01       		.byte	0x1
 2791 0083 3F       		.uleb128 0x3f
 2792 0084 19       		.uleb128 0x19
 2793 0085 03       		.uleb128 0x3
 2794 0086 0E       		.uleb128 0xe
 2795 0087 3A       		.uleb128 0x3a
 2796 0088 0B       		.uleb128 0xb
 2797 0089 3B       		.uleb128 0x3b
 2798 008a 0B       		.uleb128 0xb
 2799 008b 27       		.uleb128 0x27
 2800 008c 19       		.uleb128 0x19
 2801 008d 11       		.uleb128 0x11
 2802 008e 01       		.uleb128 0x1
 2803 008f 12       		.uleb128 0x12
 2804 0090 06       		.uleb128 0x6
 2805 0091 40       		.uleb128 0x40
 2806 0092 18       		.uleb128 0x18
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 62


 2807 0093 9642     		.uleb128 0x2116
 2808 0095 19       		.uleb128 0x19
 2809 0096 01       		.uleb128 0x1
 2810 0097 13       		.uleb128 0x13
 2811 0098 00       		.byte	0
 2812 0099 00       		.byte	0
 2813 009a 0B       		.uleb128 0xb
 2814 009b 05       		.uleb128 0x5
 2815 009c 00       		.byte	0
 2816 009d 03       		.uleb128 0x3
 2817 009e 08       		.uleb128 0x8
 2818 009f 3A       		.uleb128 0x3a
 2819 00a0 0B       		.uleb128 0xb
 2820 00a1 3B       		.uleb128 0x3b
 2821 00a2 0B       		.uleb128 0xb
 2822 00a3 49       		.uleb128 0x49
 2823 00a4 13       		.uleb128 0x13
 2824 00a5 02       		.uleb128 0x2
 2825 00a6 18       		.uleb128 0x18
 2826 00a7 00       		.byte	0
 2827 00a8 00       		.byte	0
 2828 00a9 0C       		.uleb128 0xc
 2829 00aa 0B       		.uleb128 0xb
 2830 00ab 01       		.byte	0x1
 2831 00ac 11       		.uleb128 0x11
 2832 00ad 01       		.uleb128 0x1
 2833 00ae 12       		.uleb128 0x12
 2834 00af 06       		.uleb128 0x6
 2835 00b0 00       		.byte	0
 2836 00b1 00       		.byte	0
 2837 00b2 0D       		.uleb128 0xd
 2838 00b3 34       		.uleb128 0x34
 2839 00b4 00       		.byte	0
 2840 00b5 03       		.uleb128 0x3
 2841 00b6 0E       		.uleb128 0xe
 2842 00b7 3A       		.uleb128 0x3a
 2843 00b8 0B       		.uleb128 0xb
 2844 00b9 3B       		.uleb128 0x3b
 2845 00ba 0B       		.uleb128 0xb
 2846 00bb 49       		.uleb128 0x49
 2847 00bc 13       		.uleb128 0x13
 2848 00bd 02       		.uleb128 0x2
 2849 00be 18       		.uleb128 0x18
 2850 00bf 00       		.byte	0
 2851 00c0 00       		.byte	0
 2852 00c1 0E       		.uleb128 0xe
 2853 00c2 2E       		.uleb128 0x2e
 2854 00c3 00       		.byte	0
 2855 00c4 3F       		.uleb128 0x3f
 2856 00c5 19       		.uleb128 0x19
 2857 00c6 03       		.uleb128 0x3
 2858 00c7 0E       		.uleb128 0xe
 2859 00c8 3A       		.uleb128 0x3a
 2860 00c9 0B       		.uleb128 0xb
 2861 00ca 3B       		.uleb128 0x3b
 2862 00cb 0B       		.uleb128 0xb
 2863 00cc 27       		.uleb128 0x27
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 63


 2864 00cd 19       		.uleb128 0x19
 2865 00ce 11       		.uleb128 0x11
 2866 00cf 01       		.uleb128 0x1
 2867 00d0 12       		.uleb128 0x12
 2868 00d1 06       		.uleb128 0x6
 2869 00d2 40       		.uleb128 0x40
 2870 00d3 18       		.uleb128 0x18
 2871 00d4 9742     		.uleb128 0x2117
 2872 00d6 19       		.uleb128 0x19
 2873 00d7 00       		.byte	0
 2874 00d8 00       		.byte	0
 2875 00d9 0F       		.uleb128 0xf
 2876 00da 2E       		.uleb128 0x2e
 2877 00db 01       		.byte	0x1
 2878 00dc 3F       		.uleb128 0x3f
 2879 00dd 19       		.uleb128 0x19
 2880 00de 03       		.uleb128 0x3
 2881 00df 0E       		.uleb128 0xe
 2882 00e0 3A       		.uleb128 0x3a
 2883 00e1 0B       		.uleb128 0xb
 2884 00e2 3B       		.uleb128 0x3b
 2885 00e3 0B       		.uleb128 0xb
 2886 00e4 11       		.uleb128 0x11
 2887 00e5 01       		.uleb128 0x1
 2888 00e6 12       		.uleb128 0x12
 2889 00e7 06       		.uleb128 0x6
 2890 00e8 40       		.uleb128 0x40
 2891 00e9 18       		.uleb128 0x18
 2892 00ea 9642     		.uleb128 0x2116
 2893 00ec 19       		.uleb128 0x19
 2894 00ed 01       		.uleb128 0x1
 2895 00ee 13       		.uleb128 0x13
 2896 00ef 00       		.byte	0
 2897 00f0 00       		.byte	0
 2898 00f1 10       		.uleb128 0x10
 2899 00f2 01       		.uleb128 0x1
 2900 00f3 01       		.byte	0x1
 2901 00f4 49       		.uleb128 0x49
 2902 00f5 13       		.uleb128 0x13
 2903 00f6 01       		.uleb128 0x1
 2904 00f7 13       		.uleb128 0x13
 2905 00f8 00       		.byte	0
 2906 00f9 00       		.byte	0
 2907 00fa 11       		.uleb128 0x11
 2908 00fb 21       		.uleb128 0x21
 2909 00fc 00       		.byte	0
 2910 00fd 49       		.uleb128 0x49
 2911 00fe 13       		.uleb128 0x13
 2912 00ff 2F       		.uleb128 0x2f
 2913 0100 05       		.uleb128 0x5
 2914 0101 00       		.byte	0
 2915 0102 00       		.byte	0
 2916 0103 12       		.uleb128 0x12
 2917 0104 2E       		.uleb128 0x2e
 2918 0105 00       		.byte	0
 2919 0106 3F       		.uleb128 0x3f
 2920 0107 19       		.uleb128 0x19
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 64


 2921 0108 03       		.uleb128 0x3
 2922 0109 0E       		.uleb128 0xe
 2923 010a 3A       		.uleb128 0x3a
 2924 010b 0B       		.uleb128 0xb
 2925 010c 3B       		.uleb128 0x3b
 2926 010d 0B       		.uleb128 0xb
 2927 010e 27       		.uleb128 0x27
 2928 010f 19       		.uleb128 0x19
 2929 0110 11       		.uleb128 0x11
 2930 0111 01       		.uleb128 0x1
 2931 0112 12       		.uleb128 0x12
 2932 0113 06       		.uleb128 0x6
 2933 0114 40       		.uleb128 0x40
 2934 0115 18       		.uleb128 0x18
 2935 0116 9642     		.uleb128 0x2116
 2936 0118 19       		.uleb128 0x19
 2937 0119 00       		.byte	0
 2938 011a 00       		.byte	0
 2939 011b 13       		.uleb128 0x13
 2940 011c 2E       		.uleb128 0x2e
 2941 011d 01       		.byte	0x1
 2942 011e 3F       		.uleb128 0x3f
 2943 011f 19       		.uleb128 0x19
 2944 0120 03       		.uleb128 0x3
 2945 0121 0E       		.uleb128 0xe
 2946 0122 3A       		.uleb128 0x3a
 2947 0123 0B       		.uleb128 0xb
 2948 0124 3B       		.uleb128 0x3b
 2949 0125 05       		.uleb128 0x5
 2950 0126 49       		.uleb128 0x49
 2951 0127 13       		.uleb128 0x13
 2952 0128 11       		.uleb128 0x11
 2953 0129 01       		.uleb128 0x1
 2954 012a 12       		.uleb128 0x12
 2955 012b 06       		.uleb128 0x6
 2956 012c 40       		.uleb128 0x40
 2957 012d 18       		.uleb128 0x18
 2958 012e 9642     		.uleb128 0x2116
 2959 0130 19       		.uleb128 0x19
 2960 0131 01       		.uleb128 0x1
 2961 0132 13       		.uleb128 0x13
 2962 0133 00       		.byte	0
 2963 0134 00       		.byte	0
 2964 0135 14       		.uleb128 0x14
 2965 0136 34       		.uleb128 0x34
 2966 0137 00       		.byte	0
 2967 0138 03       		.uleb128 0x3
 2968 0139 0E       		.uleb128 0xe
 2969 013a 3A       		.uleb128 0x3a
 2970 013b 0B       		.uleb128 0xb
 2971 013c 3B       		.uleb128 0x3b
 2972 013d 05       		.uleb128 0x5
 2973 013e 49       		.uleb128 0x49
 2974 013f 13       		.uleb128 0x13
 2975 0140 02       		.uleb128 0x2
 2976 0141 18       		.uleb128 0x18
 2977 0142 00       		.byte	0
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 65


 2978 0143 00       		.byte	0
 2979 0144 15       		.uleb128 0x15
 2980 0145 2E       		.uleb128 0x2e
 2981 0146 01       		.byte	0x1
 2982 0147 3F       		.uleb128 0x3f
 2983 0148 19       		.uleb128 0x19
 2984 0149 03       		.uleb128 0x3
 2985 014a 0E       		.uleb128 0xe
 2986 014b 3A       		.uleb128 0x3a
 2987 014c 0B       		.uleb128 0xb
 2988 014d 3B       		.uleb128 0x3b
 2989 014e 05       		.uleb128 0x5
 2990 014f 49       		.uleb128 0x49
 2991 0150 13       		.uleb128 0x13
 2992 0151 11       		.uleb128 0x11
 2993 0152 01       		.uleb128 0x1
 2994 0153 12       		.uleb128 0x12
 2995 0154 06       		.uleb128 0x6
 2996 0155 40       		.uleb128 0x40
 2997 0156 18       		.uleb128 0x18
 2998 0157 9742     		.uleb128 0x2117
 2999 0159 19       		.uleb128 0x19
 3000 015a 01       		.uleb128 0x1
 3001 015b 13       		.uleb128 0x13
 3002 015c 00       		.byte	0
 3003 015d 00       		.byte	0
 3004 015e 16       		.uleb128 0x16
 3005 015f 34       		.uleb128 0x34
 3006 0160 00       		.byte	0
 3007 0161 03       		.uleb128 0x3
 3008 0162 08       		.uleb128 0x8
 3009 0163 3A       		.uleb128 0x3a
 3010 0164 0B       		.uleb128 0xb
 3011 0165 3B       		.uleb128 0x3b
 3012 0166 05       		.uleb128 0x5
 3013 0167 49       		.uleb128 0x49
 3014 0168 13       		.uleb128 0x13
 3015 0169 02       		.uleb128 0x2
 3016 016a 18       		.uleb128 0x18
 3017 016b 00       		.byte	0
 3018 016c 00       		.byte	0
 3019 016d 17       		.uleb128 0x17
 3020 016e 2E       		.uleb128 0x2e
 3021 016f 01       		.byte	0x1
 3022 0170 3F       		.uleb128 0x3f
 3023 0171 19       		.uleb128 0x19
 3024 0172 03       		.uleb128 0x3
 3025 0173 0E       		.uleb128 0xe
 3026 0174 3A       		.uleb128 0x3a
 3027 0175 0B       		.uleb128 0xb
 3028 0176 3B       		.uleb128 0x3b
 3029 0177 05       		.uleb128 0x5
 3030 0178 27       		.uleb128 0x27
 3031 0179 19       		.uleb128 0x19
 3032 017a 11       		.uleb128 0x11
 3033 017b 01       		.uleb128 0x1
 3034 017c 12       		.uleb128 0x12
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 66


 3035 017d 06       		.uleb128 0x6
 3036 017e 40       		.uleb128 0x40
 3037 017f 18       		.uleb128 0x18
 3038 0180 9642     		.uleb128 0x2116
 3039 0182 19       		.uleb128 0x19
 3040 0183 01       		.uleb128 0x1
 3041 0184 13       		.uleb128 0x13
 3042 0185 00       		.byte	0
 3043 0186 00       		.byte	0
 3044 0187 18       		.uleb128 0x18
 3045 0188 05       		.uleb128 0x5
 3046 0189 00       		.byte	0
 3047 018a 03       		.uleb128 0x3
 3048 018b 08       		.uleb128 0x8
 3049 018c 3A       		.uleb128 0x3a
 3050 018d 0B       		.uleb128 0xb
 3051 018e 3B       		.uleb128 0x3b
 3052 018f 05       		.uleb128 0x5
 3053 0190 49       		.uleb128 0x49
 3054 0191 13       		.uleb128 0x13
 3055 0192 02       		.uleb128 0x2
 3056 0193 18       		.uleb128 0x18
 3057 0194 00       		.byte	0
 3058 0195 00       		.byte	0
 3059 0196 19       		.uleb128 0x19
 3060 0197 2E       		.uleb128 0x2e
 3061 0198 01       		.byte	0x1
 3062 0199 3F       		.uleb128 0x3f
 3063 019a 19       		.uleb128 0x19
 3064 019b 03       		.uleb128 0x3
 3065 019c 0E       		.uleb128 0xe
 3066 019d 3A       		.uleb128 0x3a
 3067 019e 0B       		.uleb128 0xb
 3068 019f 3B       		.uleb128 0x3b
 3069 01a0 05       		.uleb128 0x5
 3070 01a1 11       		.uleb128 0x11
 3071 01a2 01       		.uleb128 0x1
 3072 01a3 12       		.uleb128 0x12
 3073 01a4 06       		.uleb128 0x6
 3074 01a5 40       		.uleb128 0x40
 3075 01a6 18       		.uleb128 0x18
 3076 01a7 9642     		.uleb128 0x2116
 3077 01a9 19       		.uleb128 0x19
 3078 01aa 01       		.uleb128 0x1
 3079 01ab 13       		.uleb128 0x13
 3080 01ac 00       		.byte	0
 3081 01ad 00       		.byte	0
 3082 01ae 1A       		.uleb128 0x1a
 3083 01af 35       		.uleb128 0x35
 3084 01b0 00       		.byte	0
 3085 01b1 49       		.uleb128 0x49
 3086 01b2 13       		.uleb128 0x13
 3087 01b3 00       		.byte	0
 3088 01b4 00       		.byte	0
 3089 01b5 1B       		.uleb128 0x1b
 3090 01b6 34       		.uleb128 0x34
 3091 01b7 00       		.byte	0
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 67


 3092 01b8 03       		.uleb128 0x3
 3093 01b9 0E       		.uleb128 0xe
 3094 01ba 3A       		.uleb128 0x3a
 3095 01bb 0B       		.uleb128 0xb
 3096 01bc 3B       		.uleb128 0x3b
 3097 01bd 05       		.uleb128 0x5
 3098 01be 49       		.uleb128 0x49
 3099 01bf 13       		.uleb128 0x13
 3100 01c0 3F       		.uleb128 0x3f
 3101 01c1 19       		.uleb128 0x19
 3102 01c2 3C       		.uleb128 0x3c
 3103 01c3 19       		.uleb128 0x19
 3104 01c4 00       		.byte	0
 3105 01c5 00       		.byte	0
 3106 01c6 1C       		.uleb128 0x1c
 3107 01c7 34       		.uleb128 0x34
 3108 01c8 00       		.byte	0
 3109 01c9 03       		.uleb128 0x3
 3110 01ca 08       		.uleb128 0x8
 3111 01cb 3A       		.uleb128 0x3a
 3112 01cc 0B       		.uleb128 0xb
 3113 01cd 3B       		.uleb128 0x3b
 3114 01ce 0B       		.uleb128 0xb
 3115 01cf 49       		.uleb128 0x49
 3116 01d0 13       		.uleb128 0x13
 3117 01d1 3F       		.uleb128 0x3f
 3118 01d2 19       		.uleb128 0x19
 3119 01d3 02       		.uleb128 0x2
 3120 01d4 18       		.uleb128 0x18
 3121 01d5 00       		.byte	0
 3122 01d6 00       		.byte	0
 3123 01d7 1D       		.uleb128 0x1d
 3124 01d8 34       		.uleb128 0x34
 3125 01d9 00       		.byte	0
 3126 01da 03       		.uleb128 0x3
 3127 01db 0E       		.uleb128 0xe
 3128 01dc 3A       		.uleb128 0x3a
 3129 01dd 0B       		.uleb128 0xb
 3130 01de 3B       		.uleb128 0x3b
 3131 01df 0B       		.uleb128 0xb
 3132 01e0 49       		.uleb128 0x49
 3133 01e1 13       		.uleb128 0x13
 3134 01e2 3F       		.uleb128 0x3f
 3135 01e3 19       		.uleb128 0x19
 3136 01e4 02       		.uleb128 0x2
 3137 01e5 18       		.uleb128 0x18
 3138 01e6 00       		.byte	0
 3139 01e7 00       		.byte	0
 3140 01e8 1E       		.uleb128 0x1e
 3141 01e9 21       		.uleb128 0x21
 3142 01ea 00       		.byte	0
 3143 01eb 49       		.uleb128 0x49
 3144 01ec 13       		.uleb128 0x13
 3145 01ed 2F       		.uleb128 0x2f
 3146 01ee 0B       		.uleb128 0xb
 3147 01ef 00       		.byte	0
 3148 01f0 00       		.byte	0
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 68


 3149 01f1 00       		.byte	0
 3150              		.section	.debug_aranges,"",%progbits
 3151 0000 AC000000 		.4byte	0xac
 3152 0004 0200     		.2byte	0x2
 3153 0006 00000000 		.4byte	.Ldebug_info0
 3154 000a 04       		.byte	0x4
 3155 000b 00       		.byte	0
 3156 000c 0000     		.2byte	0
 3157 000e 0000     		.2byte	0
 3158 0010 00000000 		.4byte	.LFB64
 3159 0014 14000000 		.4byte	.LFE64-.LFB64
 3160 0018 00000000 		.4byte	.LFB65
 3161 001c 2E000000 		.4byte	.LFE65-.LFB65
 3162 0020 00000000 		.4byte	.LFB66
 3163 0024 14000000 		.4byte	.LFE66-.LFB66
 3164 0028 00000000 		.4byte	.LFB67
 3165 002c 14000000 		.4byte	.LFE67-.LFB67
 3166 0030 00000000 		.4byte	.LFB68
 3167 0034 22000000 		.4byte	.LFE68-.LFB68
 3168 0038 00000000 		.4byte	.LFB69
 3169 003c 20000000 		.4byte	.LFE69-.LFB69
 3170 0040 00000000 		.4byte	.LFB70
 3171 0044 20000000 		.4byte	.LFE70-.LFB70
 3172 0048 00000000 		.4byte	.LFB71
 3173 004c 2A000000 		.4byte	.LFE71-.LFB71
 3174 0050 00000000 		.4byte	.LFB72
 3175 0054 E0000000 		.4byte	.LFE72-.LFB72
 3176 0058 00000000 		.4byte	.LFB73
 3177 005c 0C000000 		.4byte	.LFE73-.LFB73
 3178 0060 00000000 		.4byte	.LFB74
 3179 0064 C0000000 		.4byte	.LFE74-.LFB74
 3180 0068 00000000 		.4byte	.LFB75
 3181 006c 1A000000 		.4byte	.LFE75-.LFB75
 3182 0070 00000000 		.4byte	.LFB76
 3183 0074 0C000000 		.4byte	.LFE76-.LFB76
 3184 0078 00000000 		.4byte	.LFB77
 3185 007c 00030000 		.4byte	.LFE77-.LFB77
 3186 0080 00000000 		.4byte	.LFB78
 3187 0084 50000000 		.4byte	.LFE78-.LFB78
 3188 0088 00000000 		.4byte	.LFB79
 3189 008c 50000000 		.4byte	.LFE79-.LFB79
 3190 0090 00000000 		.4byte	.LFB80
 3191 0094 3E000000 		.4byte	.LFE80-.LFB80
 3192 0098 00000000 		.4byte	.LFB81
 3193 009c 26000000 		.4byte	.LFE81-.LFB81
 3194 00a0 00000000 		.4byte	.LFB82
 3195 00a4 CC000000 		.4byte	.LFE82-.LFB82
 3196 00a8 00000000 		.4byte	0
 3197 00ac 00000000 		.4byte	0
 3198              		.section	.debug_ranges,"",%progbits
 3199              	.Ldebug_ranges0:
 3200 0000 00000000 		.4byte	.LFB64
 3201 0004 14000000 		.4byte	.LFE64
 3202 0008 00000000 		.4byte	.LFB65
 3203 000c 2E000000 		.4byte	.LFE65
 3204 0010 00000000 		.4byte	.LFB66
 3205 0014 14000000 		.4byte	.LFE66
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 69


 3206 0018 00000000 		.4byte	.LFB67
 3207 001c 14000000 		.4byte	.LFE67
 3208 0020 00000000 		.4byte	.LFB68
 3209 0024 22000000 		.4byte	.LFE68
 3210 0028 00000000 		.4byte	.LFB69
 3211 002c 20000000 		.4byte	.LFE69
 3212 0030 00000000 		.4byte	.LFB70
 3213 0034 20000000 		.4byte	.LFE70
 3214 0038 00000000 		.4byte	.LFB71
 3215 003c 2A000000 		.4byte	.LFE71
 3216 0040 00000000 		.4byte	.LFB72
 3217 0044 E0000000 		.4byte	.LFE72
 3218 0048 00000000 		.4byte	.LFB73
 3219 004c 0C000000 		.4byte	.LFE73
 3220 0050 00000000 		.4byte	.LFB74
 3221 0054 C0000000 		.4byte	.LFE74
 3222 0058 00000000 		.4byte	.LFB75
 3223 005c 1A000000 		.4byte	.LFE75
 3224 0060 00000000 		.4byte	.LFB76
 3225 0064 0C000000 		.4byte	.LFE76
 3226 0068 00000000 		.4byte	.LFB77
 3227 006c 00030000 		.4byte	.LFE77
 3228 0070 00000000 		.4byte	.LFB78
 3229 0074 50000000 		.4byte	.LFE78
 3230 0078 00000000 		.4byte	.LFB79
 3231 007c 50000000 		.4byte	.LFE79
 3232 0080 00000000 		.4byte	.LFB80
 3233 0084 3E000000 		.4byte	.LFE80
 3234 0088 00000000 		.4byte	.LFB81
 3235 008c 26000000 		.4byte	.LFE81
 3236 0090 00000000 		.4byte	.LFB82
 3237 0094 CC000000 		.4byte	.LFE82
 3238 0098 00000000 		.4byte	0
 3239 009c 00000000 		.4byte	0
 3240              		.section	.debug_line,"",%progbits
 3241              	.Ldebug_line0:
 3242 0000 99030000 		.section	.debug_str,"MS",%progbits,1
 3242      02005601 
 3242      00000201 
 3242      FB0E0D00 
 3242      01010101 
 3243              	.LASF39:
 3244 0000 6D6F746F 		.ascii	"motorStop\000"
 3244      7253746F 
 3244      7000
 3245              	.LASF60:
 3246 000a 6973725F 		.ascii	"isr_TS_Interrupt_sample\000"
 3246      54535F49 
 3246      6E746572 
 3246      72757074 
 3246      5F73616D 
 3247              	.LASF64:
 3248 0022 64656369 		.ascii	"decisionflag\000"
 3248      73696F6E 
 3248      666C6167 
 3248      00
 3249              	.LASF84:
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 70


 3250 002f 74735F65 		.ascii	"ts_enc\000"
 3250      6E6300
 3251              	.LASF14:
 3252 0036 646F7562 		.ascii	"double\000"
 3252      6C6500
 3253              	.LASF93:
 3254 003d 666C6167 		.ascii	"flag_packet\000"
 3254      5F706163 
 3254      6B657400 
 3255              	.LASF77:
 3256 0049 75736250 		.ascii	"usbPutChar\000"
 3256      75744368 
 3256      617200
 3257              	.LASF107:
 3258 0054 636F756E 		.ascii	"counteoc\000"
 3258      74656F63 
 3258      00
 3259              	.LASF45:
 3260 005d 6973725F 		.ascii	"isr_eoc_Interrupt_test\000"
 3260      656F635F 
 3260      496E7465 
 3260      72727570 
 3260      745F7465 
 3261              	.LASF38:
 3262 0074 6D6F746F 		.ascii	"motorGoBackwards\000"
 3262      72476F42 
 3262      61636B77 
 3262      61726473 
 3262      00
 3263              	.LASF103:
 3264 0085 63686563 		.ascii	"checkLight\000"
 3264      6B4C6967 
 3264      687400
 3265              	.LASF33:
 3266 0090 67325F78 		.ascii	"g2_xpos\000"
 3266      706F7300 
 3267              	.LASF2:
 3268 0098 73686F72 		.ascii	"short int\000"
 3268      7420696E 
 3268      7400
 3269              	.LASF101:
 3270 00a2 73797374 		.ascii	"system_state\000"
 3270      656D5F73 
 3270      74617465 
 3270      00
 3271              	.LASF10:
 3272 00af 73697A65 		.ascii	"sizetype\000"
 3272      74797065 
 3272      00
 3273              	.LASF67:
 3274 00b8 71756575 		.ascii	"queueSize\000"
 3274      6553697A 
 3274      6500
 3275              	.LASF100:
 3276 00c2 75736242 		.ascii	"usbBuffer\000"
 3276      75666665 
 3276      7200
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 71


 3277              	.LASF110:
 3278 00cc 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3278      43313120 
 3278      352E342E 
 3278      31203230 
 3278      31363036 
 3279 00ff 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3279      20726576 
 3279      6973696F 
 3279      6E203233 
 3279      37373135 
 3280 0132 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3280      66756E63 
 3280      74696F6E 
 3280      2D736563 
 3280      74696F6E 
 3281              	.LASF61:
 3282 015a 6D61696E 		.ascii	"main\000"
 3282      00
 3283              	.LASF58:
 3284 015f 6D6F746F 		.ascii	"motorRun\000"
 3284      7252756E 
 3284      00
 3285              	.LASF49:
 3286 0168 76616C75 		.ascii	"valueQ1\000"
 3286      65513100 
 3287              	.LASF50:
 3288 0170 76616C75 		.ascii	"valueQ2\000"
 3288      65513200 
 3289              	.LASF46:
 3290 0178 76616C75 		.ascii	"valueQ3\000"
 3290      65513300 
 3291              	.LASF47:
 3292 0180 76616C75 		.ascii	"valueQ4\000"
 3292      65513400 
 3293              	.LASF48:
 3294 0188 76616C75 		.ascii	"valueQ5\000"
 3294      65513500 
 3295              	.LASF51:
 3296 0190 76616C75 		.ascii	"valueQ6\000"
 3296      65513600 
 3297              	.LASF104:
 3298 0198 6C696768 		.ascii	"lightState\000"
 3298      74537461 
 3298      746500
 3299              	.LASF17:
 3300 01a3 75696E74 		.ascii	"uint16\000"
 3300      313600
 3301              	.LASF21:
 3302 01aa 696E6465 		.ascii	"index\000"
 3302      7800
 3303              	.LASF113:
 3304 01b0 64617461 		.ascii	"data_main\000"
 3304      5F6D6169 
 3304      6E00
 3305              	.LASF19:
 3306 01ba 696E7431 		.ascii	"int16\000"
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 72


 3306      3600
 3307              	.LASF66:
 3308 01c0 696E6465 		.ascii	"indexPointer\000"
 3308      78506F69 
 3308      6E746572 
 3308      00
 3309              	.LASF112:
 3310 01cd 5C5C6669 		.ascii	"\\\\files.auckland.ac.nz\\myhome\\Documents\\GitHub"
 3310      6C65732E 
 3310      6175636B 
 3310      6C616E64 
 3310      2E61632E 
 3311 01fb 5C70726F 		.ascii	"\\project-project_group_11\\COMPSYS 301\\psoc stude"
 3311      6A656374 
 3311      2D70726F 
 3311      6A656374 
 3311      5F67726F 
 3312 022b 6E742070 		.ascii	"nt pack\\psoc student pack\\psoc_code_base\\CS301_C"
 3312      61636B5C 
 3312      70736F63 
 3312      20737475 
 3312      64656E74 
 3313 025b 6C617373 		.ascii	"lass.cydsn\000"
 3313      2E637964 
 3313      736E00
 3314              	.LASF102:
 3315 0266 6368616E 		.ascii	"changeMotor\000"
 3315      67654D6F 
 3315      746F7200 
 3316              	.LASF106:
 3317 0272 6C696768 		.ascii	"lightDetectedBack\000"
 3317      74446574 
 3317      65637465 
 3317      64426163 
 3317      6B00
 3318              	.LASF15:
 3319 0284 666C6F61 		.ascii	"float\000"
 3319      7400
 3320              	.LASF59:
 3321 028a 6973725F 		.ascii	"isr_motor_interrupt_speed\000"
 3321      6D6F746F 
 3321      725F696E 
 3321      74657272 
 3321      7570745F 
 3322              	.LASF6:
 3323 02a4 6C6F6E67 		.ascii	"long long int\000"
 3323      206C6F6E 
 3323      6720696E 
 3323      7400
 3324              	.LASF76:
 3325 02b2 75736250 		.ascii	"usbPutString\000"
 3325      75745374 
 3325      72696E67 
 3325      00
 3326              	.LASF18:
 3327 02bf 696E7438 		.ascii	"int8\000"
 3327      00
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 73


 3328              	.LASF89:
 3329 02c4 666C6167 		.ascii	"flag_ts_update\000"
 3329      5F74735F 
 3329      75706461 
 3329      746500
 3330              	.LASF34:
 3331 02d3 67325F79 		.ascii	"g2_ypos\000"
 3331      706F7300 
 3332              	.LASF28:
 3333 02db 67305F64 		.ascii	"g0_direction\000"
 3333      69726563 
 3333      74696F6E 
 3333      00
 3334              	.LASF25:
 3335 02e8 67305F78 		.ascii	"g0_xpos\000"
 3335      706F7300 
 3336              	.LASF4:
 3337 02f0 6C6F6E67 		.ascii	"long int\000"
 3337      20696E74 
 3337      00
 3338              	.LASF52:
 3339 02f9 62656769 		.ascii	"beginningCountMotor1\000"
 3339      6E6E696E 
 3339      67436F75 
 3339      6E744D6F 
 3339      746F7231 
 3340              	.LASF53:
 3341 030e 62656769 		.ascii	"beginningCountMotor2\000"
 3341      6E6E696E 
 3341      67436F75 
 3341      6E744D6F 
 3341      746F7232 
 3342              	.LASF41:
 3343 0323 6D6F746F 		.ascii	"motorBeyblade\000"
 3343      72426579 
 3343      626C6164 
 3343      6500
 3344              	.LASF56:
 3345 0331 6D6F746F 		.ascii	"motor1String\000"
 3345      72315374 
 3345      72696E67 
 3345      00
 3346              	.LASF108:
 3347 033e 70726F63 		.ascii	"processSensors\000"
 3347      65737353 
 3347      656E736F 
 3347      727300
 3348              	.LASF98:
 3349 034d 6C696E65 		.ascii	"line\000"
 3349      00
 3350              	.LASF91:
 3351 0352 666C6167 		.ascii	"flag_ts_display\000"
 3351      5F74735F 
 3351      64697370 
 3351      6C617900 
 3352              	.LASF92:
 3353 0362 666C6167 		.ascii	"flag_rx\000"
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 74


 3353      5F727800 
 3354              	.LASF55:
 3355 036a 656E6443 		.ascii	"endCountMotor1\000"
 3355      6F756E74 
 3355      4D6F746F 
 3355      723100
 3356              	.LASF54:
 3357 0379 656E6443 		.ascii	"endCountMotor2\000"
 3357      6F756E74 
 3357      4D6F746F 
 3357      723200
 3358              	.LASF99:
 3359 0388 656E7472 		.ascii	"entry\000"
 3359      7900
 3360              	.LASF9:
 3361 038e 6C6F6E67 		.ascii	"long double\000"
 3361      20646F75 
 3361      626C6500 
 3362              	.LASF73:
 3363 039a 76616C75 		.ascii	"value1\000"
 3363      653100
 3364              	.LASF1:
 3365 03a1 756E7369 		.ascii	"unsigned char\000"
 3365      676E6564 
 3365      20636861 
 3365      7200
 3366              	.LASF105:
 3367 03af 6C696768 		.ascii	"lightDetectedFront\000"
 3367      74446574 
 3367      65637465 
 3367      6446726F 
 3367      6E7400
 3368              	.LASF27:
 3369 03c2 67305F73 		.ascii	"g0_speed\000"
 3369      70656564 
 3369      00
 3370              	.LASF31:
 3371 03cb 67315F73 		.ascii	"g1_speed\000"
 3371      70656564 
 3371      00
 3372              	.LASF95:
 3373 03d4 64617461 		.ascii	"dataready_flag\000"
 3373      72656164 
 3373      795F666C 
 3373      616700
 3374              	.LASF0:
 3375 03e3 7369676E 		.ascii	"signed char\000"
 3375      65642063 
 3375      68617200 
 3376              	.LASF7:
 3377 03ef 6C6F6E67 		.ascii	"long long unsigned int\000"
 3377      206C6F6E 
 3377      6720756E 
 3377      7369676E 
 3377      65642069 
 3378              	.LASF68:
 3379 0406 6D6F746F 		.ascii	"motoerFlagSTOP\000"
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 75


 3379      6572466C 
 3379      61675354 
 3379      4F5000
 3380              	.LASF44:
 3381 0415 6D6F746F 		.ascii	"motorCircle\000"
 3381      72436972 
 3381      636C6500 
 3382              	.LASF8:
 3383 0421 756E7369 		.ascii	"unsigned int\000"
 3383      676E6564 
 3383      20696E74 
 3383      00
 3384              	.LASF94:
 3385 042e 666C6167 		.ascii	"flag_KB_string\000"
 3385      5F4B425F 
 3385      73747269 
 3385      6E6700
 3386              	.LASF81:
 3387 043d 75736242 		.ascii	"usbBufCount\000"
 3387      7566436F 
 3387      756E7400 
 3388              	.LASF35:
 3389 0449 67325F73 		.ascii	"g2_speed\000"
 3389      70656564 
 3389      00
 3390              	.LASF29:
 3391 0452 67315F78 		.ascii	"g1_xpos\000"
 3391      706F7300 
 3392              	.LASF69:
 3393 045a 6F706572 		.ascii	"operation\000"
 3393      6174696F 
 3393      6E00
 3394              	.LASF72:
 3395 0464 636F6E76 		.ascii	"convertBackBinary\000"
 3395      65727442 
 3395      61636B42 
 3395      696E6172 
 3395      7900
 3396              	.LASF11:
 3397 0476 63686172 		.ascii	"char\000"
 3397      00
 3398              	.LASF22:
 3399 047b 726F626F 		.ascii	"robot_xpos\000"
 3399      745F7870 
 3399      6F7300
 3400              	.LASF13:
 3401 0486 696E7433 		.ascii	"int32_t\000"
 3401      325F7400 
 3402              	.LASF30:
 3403 048e 67315F79 		.ascii	"g1_ypos\000"
 3403      706F7300 
 3404              	.LASF36:
 3405 0496 67325F64 		.ascii	"g2_direction\000"
 3405      69726563 
 3405      74696F6E 
 3405      00
 3406              	.LASF65:
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 76


 3407 04a3 71756575 		.ascii	"queue\000"
 3407      6500
 3408              	.LASF40:
 3409 04a9 6D6F746F 		.ascii	"motorSetSpeed\000"
 3409      72536574 
 3409      53706565 
 3409      6400
 3410              	.LASF16:
 3411 04b7 75696E74 		.ascii	"uint8\000"
 3411      3800
 3412              	.LASF70:
 3413 04bd 6261636B 		.ascii	"backOps\000"
 3413      4F707300 
 3414              	.LASF97:
 3415 04c5 64697370 		.ascii	"displaystring\000"
 3415      6C617973 
 3415      7472696E 
 3415      6700
 3416              	.LASF71:
 3417 04d3 64656369 		.ascii	"decision\000"
 3417      73696F6E 
 3417      00
 3418              	.LASF90:
 3419 04dc 666C6167 		.ascii	"flag_ts_speed\000"
 3419      5F74735F 
 3419      73706565 
 3419      6400
 3420              	.LASF74:
 3421 04ea 636F6E76 		.ascii	"convertSensorBinary\000"
 3421      65727453 
 3421      656E736F 
 3421      7242696E 
 3421      61727900 
 3422              	.LASF3:
 3423 04fe 73686F72 		.ascii	"short unsigned int\000"
 3423      7420756E 
 3423      7369676E 
 3423      65642069 
 3423      6E7400
 3424              	.LASF111:
 3425 0511 6D61696E 		.ascii	"main.c\000"
 3425      2E6300
 3426              	.LASF5:
 3427 0518 6C6F6E67 		.ascii	"long unsigned int\000"
 3427      20756E73 
 3427      69676E65 
 3427      6420696E 
 3427      7400
 3428              	.LASF80:
 3429 052a 75736253 		.ascii	"usbStarted\000"
 3429      74617274 
 3429      656400
 3430              	.LASF63:
 3431 0535 74726176 		.ascii	"travelDis\000"
 3431      656C4469 
 3431      7300
 3432              	.LASF86:
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 77


 3433 053f 74735F73 		.ascii	"ts_speed\000"
 3433      70656564 
 3433      00
 3434              	.LASF82:
 3435 0548 636F756E 		.ascii	"count\000"
 3435      7400
 3436              	.LASF88:
 3437 054e 666C6167 		.ascii	"flag_ts_enc\000"
 3437      5F74735F 
 3437      656E6300 
 3438              	.LASF12:
 3439 055a 5F5F696E 		.ascii	"__int32_t\000"
 3439      7433325F 
 3439      7400
 3440              	.LASF42:
 3441 0564 6D6F746F 		.ascii	"motorTurnLeft\000"
 3441      72547572 
 3441      6E4C6566 
 3441      7400
 3442              	.LASF37:
 3443 0572 6D6F746F 		.ascii	"motorGoStraight\000"
 3443      72476F53 
 3443      74726169 
 3443      67687400 
 3444              	.LASF78:
 3445 0582 6D6F746F 		.ascii	"motorCount\000"
 3445      72436F75 
 3445      6E7400
 3446              	.LASF26:
 3447 058d 67305F79 		.ascii	"g0_ypos\000"
 3447      706F7300 
 3448              	.LASF87:
 3449 0595 74735F64 		.ascii	"ts_display\000"
 3449      6973706C 
 3449      617900
 3450              	.LASF62:
 3451 05a0 6C617374 		.ascii	"lastState\000"
 3451      53746174 
 3451      6500
 3452              	.LASF85:
 3453 05aa 74735F75 		.ascii	"ts_update\000"
 3453      70646174 
 3453      6500
 3454              	.LASF79:
 3455 05b4 68616E64 		.ascii	"handle_usb\000"
 3455      6C655F75 
 3455      736200
 3456              	.LASF96:
 3457 05bf 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3457      5F72665F 
 3457      7472616E 
 3457      736D6973 
 3457      73696F6E 
 3458              	.LASF23:
 3459 05db 726F626F 		.ascii	"robot_ypos\000"
 3459      745F7970 
 3459      6F7300
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\cc844OQ2.s 			page 78


 3460              	.LASF83:
 3461 05e6 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3461      52784275 
 3461      66666572 
 3461      00
 3462              	.LASF75:
 3463 05f3 76616C75 		.ascii	"value\000"
 3463      6500
 3464              	.LASF57:
 3465 05f9 6D6F746F 		.ascii	"motor2String\000"
 3465      72325374 
 3465      72696E67 
 3465      00
 3466              	.LASF32:
 3467 0606 67315F64 		.ascii	"g1_direction\000"
 3467      69726563 
 3467      74696F6E 
 3467      00
 3468              	.LASF43:
 3469 0613 6D6F746F 		.ascii	"motorTurnRight\000"
 3469      72547572 
 3469      6E526967 
 3469      687400
 3470              	.LASF109:
 3471 0622 6D696464 		.ascii	"middle\000"
 3471      6C6500
 3472              	.LASF20:
 3473 0629 72737369 		.ascii	"rssi\000"
 3473      00
 3474              	.LASF24:
 3475 062e 726F626F 		.ascii	"robot_orientation\000"
 3475      745F6F72 
 3475      69656E74 
 3475      6174696F 
 3475      6E00
 3476              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
