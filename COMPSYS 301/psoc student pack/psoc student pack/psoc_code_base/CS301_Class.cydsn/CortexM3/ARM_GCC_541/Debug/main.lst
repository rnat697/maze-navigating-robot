ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.section	.text.motorGoStraight,"ax",%progbits
 107              		.align	2
 108              		.global	motorGoStraight
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 3


 109              		.thumb
 110              		.thumb_func
 111              		.type	motorGoStraight, %function
 112              	motorGoStraight:
 113              	.LFB64:
 114              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <stdbool.h>
  19:main.c        **** #include <string.h>
  20:main.c        **** #include <stdlib.h>
  21:main.c        **** #include <math.h>
  22:main.c        **** #include <project.h>
  23:main.c        **** //* ========================================
  24:main.c        **** #include "defines.h"
  25:main.c        **** #include "vars.h"
  26:main.c        **** #include "isr_eoc.h"
  27:main.c        **** //* ========================================
  28:main.c        **** void usbPutString(char *s);
  29:main.c        **** void usbPutChar(char c);
  30:main.c        **** void handle_usb();
  31:main.c        **** //* ========================================
  32:main.c        **** 
  33:main.c        **** 
  34:main.c        **** #define rota180 500 //turns
  35:main.c        **** #define rota90Left 250
  36:main.c        **** 
  37:main.c        **** #define moveSlow 50
  38:main.c        **** #define travelDist 326 // how
  39:main.c        **** #define Q1CHANNEL 3
  40:main.c        **** #define Q2CHANNEL 5 
  41:main.c        **** #define Q3CHANNEL 0
  42:main.c        **** #define Q4CHANNEL 1
  43:main.c        **** #define Q5CHANNEL 2
  44:main.c        **** #define Q6CHANNEL 4
  45:main.c        **** 
  46:main.c        **** CY_ISR_PROTO(isr_eoc_Interrupt_test);
  47:main.c        **** CY_ISR_PROTO(isr_motor_interrupt_speed);
  48:main.c        **** CY_ISR_PROTO(isr_TS_interrupt_sample);
  49:main.c        **** int convertSensorBinary();
  50:main.c        **** int convertBackBinary();
  51:main.c        **** 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 4


  52:main.c        **** void motorGoStraight(){
 115              		.loc 1 52 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119 0000 80B5     		push	{r7, lr}
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 7, -8
 122              		.cfi_offset 14, -4
 123 0002 00AF     		add	r7, sp, #0
 124              		.cfi_def_cfa_register 7
  53:main.c        ****     ////PWM_1_WriteCompare(150); // left wheel near power switch is stronker than right wheel //150
  54:main.c        ****     //M1_IN2_Write(0);
  55:main.c        ****     PWM_1_WriteCompare(160);//200 //180 //160
 125              		.loc 1 55 0
 126 0004 A020     		movs	r0, #160
 127 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  56:main.c        ****     PWM_2_WriteCompare(93); //52 //72 //93
 128              		.loc 1 56 0
 129 000a 5D20     		movs	r0, #93
 130 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  57:main.c        **** }
 131              		.loc 1 57 0
 132 0010 00BF     		nop
 133 0012 80BD     		pop	{r7, pc}
 134              		.cfi_endproc
 135              	.LFE64:
 136              		.size	motorGoStraight, .-motorGoStraight
 137              		.section	.text.motorSetSpeed,"ax",%progbits
 138              		.align	2
 139              		.global	motorSetSpeed
 140              		.thumb
 141              		.thumb_func
 142              		.type	motorSetSpeed, %function
 143              	motorSetSpeed:
 144              	.LFB65:
  58:main.c        **** void motorSetSpeed(int x){
 145              		.loc 1 58 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 8
 148              		@ frame_needed = 1, uses_anonymous_args = 0
 149 0000 80B5     		push	{r7, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 82B0     		sub	sp, sp, #8
 154              		.cfi_def_cfa_offset 16
 155 0004 00AF     		add	r7, sp, #0
 156              		.cfi_def_cfa_register 7
 157 0006 7860     		str	r0, [r7, #4]
  59:main.c        ****     ////PWM_1_WriteCompare(150); // left wheel near power switch is stronker than right wheel //150
  60:main.c        ****     //M1_IN2_Write(0);
  61:main.c        ****     
  62:main.c        ****     //fastest speed
  63:main.c        ****     PWM_1_WriteCompare(200+x);//200 //180 //160
 158              		.loc 1 63 0
 159 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 5


 160 000a DBB2     		uxtb	r3, r3
 161 000c 383B     		subs	r3, r3, #56
 162 000e DBB2     		uxtb	r3, r3
 163 0010 1846     		mov	r0, r3
 164 0012 FFF7FEFF 		bl	PWM_1_WriteCompare
  64:main.c        ****     PWM_2_WriteCompare(52-x); //52 //72 //93
 165              		.loc 1 64 0
 166 0016 7B68     		ldr	r3, [r7, #4]
 167 0018 DBB2     		uxtb	r3, r3
 168 001a C3F13403 		rsb	r3, r3, #52
 169 001e DBB2     		uxtb	r3, r3
 170 0020 1846     		mov	r0, r3
 171 0022 FFF7FEFF 		bl	PWM_2_WriteCompare
  65:main.c        **** }
 172              		.loc 1 65 0
 173 0026 00BF     		nop
 174 0028 0837     		adds	r7, r7, #8
 175              		.cfi_def_cfa_offset 8
 176 002a BD46     		mov	sp, r7
 177              		.cfi_def_cfa_register 13
 178              		@ sp needed
 179 002c 80BD     		pop	{r7, pc}
 180              		.cfi_endproc
 181              	.LFE65:
 182              		.size	motorSetSpeed, .-motorSetSpeed
 183 002e 00BF     		.section	.text.motorGoBackwards,"ax",%progbits
 184              		.align	2
 185              		.global	motorGoBackwards
 186              		.thumb
 187              		.thumb_func
 188              		.type	motorGoBackwards, %function
 189              	motorGoBackwards:
 190              	.LFB66:
  66:main.c        **** void motorGoBackwards(){
 191              		.loc 1 66 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 1, uses_anonymous_args = 0
 195 0000 80B5     		push	{r7, lr}
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 7, -8
 198              		.cfi_offset 14, -4
 199 0002 00AF     		add	r7, sp, #0
 200              		.cfi_def_cfa_register 7
  67:main.c        ****     
  68:main.c        ****     //M1_IN2_Write(0);
  69:main.c        ****     PWM_1_WriteCompare(55); //55
 201              		.loc 1 69 0
 202 0004 3720     		movs	r0, #55
 203 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  70:main.c        ****     PWM_2_WriteCompare(201); //201
 204              		.loc 1 70 0
 205 000a C920     		movs	r0, #201
 206 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  71:main.c        **** }
 207              		.loc 1 71 0
 208 0010 00BF     		nop
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 6


 209 0012 80BD     		pop	{r7, pc}
 210              		.cfi_endproc
 211              	.LFE66:
 212              		.size	motorGoBackwards, .-motorGoBackwards
 213              		.section	.text.motorStop,"ax",%progbits
 214              		.align	2
 215              		.global	motorStop
 216              		.thumb
 217              		.thumb_func
 218              		.type	motorStop, %function
 219              	motorStop:
 220              	.LFB67:
  72:main.c        **** void motorStop(){
 221              		.loc 1 72 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 1, uses_anonymous_args = 0
 225 0000 80B5     		push	{r7, lr}
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 7, -8
 228              		.cfi_offset 14, -4
 229 0002 00AF     		add	r7, sp, #0
 230              		.cfi_def_cfa_register 7
  73:main.c        ****     PWM_1_WriteCompare(127); 
 231              		.loc 1 73 0
 232 0004 7F20     		movs	r0, #127
 233 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  74:main.c        ****     PWM_2_WriteCompare(127);
 234              		.loc 1 74 0
 235 000a 7F20     		movs	r0, #127
 236 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  75:main.c        **** }
 237              		.loc 1 75 0
 238 0010 00BF     		nop
 239 0012 80BD     		pop	{r7, pc}
 240              		.cfi_endproc
 241              	.LFE67:
 242              		.size	motorStop, .-motorStop
 243              		.section	.text.motorTurnLeft,"ax",%progbits
 244              		.align	2
 245              		.global	motorTurnLeft
 246              		.thumb
 247              		.thumb_func
 248              		.type	motorTurnLeft, %function
 249              	motorTurnLeft:
 250              	.LFB68:
  76:main.c        **** 
  77:main.c        **** void motorTurnLeft(uint8 x){
 251              		.loc 1 77 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 8
 254              		@ frame_needed = 1, uses_anonymous_args = 0
 255 0000 80B5     		push	{r7, lr}
 256              		.cfi_def_cfa_offset 8
 257              		.cfi_offset 7, -8
 258              		.cfi_offset 14, -4
 259 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 7


 260              		.cfi_def_cfa_offset 16
 261 0004 00AF     		add	r7, sp, #0
 262              		.cfi_def_cfa_register 7
 263 0006 0346     		mov	r3, r0
 264 0008 FB71     		strb	r3, [r7, #7]
  78:main.c        ****     // TO DO
  79:main.c        ****     
  80:main.c        ****     PWM_1_WriteCompare(127); //55
 265              		.loc 1 80 0
 266 000a 7F20     		movs	r0, #127
 267 000c FFF7FEFF 		bl	PWM_1_WriteCompare
  81:main.c        ****     PWM_2_WriteCompare(x); //201
 268              		.loc 1 81 0
 269 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 270 0012 1846     		mov	r0, r3
 271 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
  82:main.c        ****     
  83:main.c        ****     
  84:main.c        ****     
  85:main.c        ****     //255
  86:main.c        **** }
 272              		.loc 1 86 0
 273 0018 00BF     		nop
 274 001a 0837     		adds	r7, r7, #8
 275              		.cfi_def_cfa_offset 8
 276 001c BD46     		mov	sp, r7
 277              		.cfi_def_cfa_register 13
 278              		@ sp needed
 279 001e 80BD     		pop	{r7, pc}
 280              		.cfi_endproc
 281              	.LFE68:
 282              		.size	motorTurnLeft, .-motorTurnLeft
 283              		.section	.text.motorTurnRight,"ax",%progbits
 284              		.align	2
 285              		.global	motorTurnRight
 286              		.thumb
 287              		.thumb_func
 288              		.type	motorTurnRight, %function
 289              	motorTurnRight:
 290              	.LFB69:
  87:main.c        **** 
  88:main.c        **** void motorTurnRight(int x){
 291              		.loc 1 88 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 8
 294              		@ frame_needed = 1, uses_anonymous_args = 0
 295 0000 80B5     		push	{r7, lr}
 296              		.cfi_def_cfa_offset 8
 297              		.cfi_offset 7, -8
 298              		.cfi_offset 14, -4
 299 0002 82B0     		sub	sp, sp, #8
 300              		.cfi_def_cfa_offset 16
 301 0004 00AF     		add	r7, sp, #0
 302              		.cfi_def_cfa_register 7
 303 0006 7860     		str	r0, [r7, #4]
  89:main.c        ****     // TO DO
  90:main.c        ****     
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 8


  91:main.c        ****     PWM_1_WriteCompare(x);//200
 304              		.loc 1 91 0
 305 0008 7B68     		ldr	r3, [r7, #4]
 306 000a DBB2     		uxtb	r3, r3
 307 000c 1846     		mov	r0, r3
 308 000e FFF7FEFF 		bl	PWM_1_WriteCompare
  92:main.c        ****     PWM_2_WriteCompare(127); //50
 309              		.loc 1 92 0
 310 0012 7F20     		movs	r0, #127
 311 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
  93:main.c        **** 
  94:main.c        **** }
 312              		.loc 1 94 0
 313 0018 00BF     		nop
 314 001a 0837     		adds	r7, r7, #8
 315              		.cfi_def_cfa_offset 8
 316 001c BD46     		mov	sp, r7
 317              		.cfi_def_cfa_register 13
 318              		@ sp needed
 319 001e 80BD     		pop	{r7, pc}
 320              		.cfi_endproc
 321              	.LFE69:
 322              		.size	motorTurnRight, .-motorTurnRight
 323              		.section	.text.motorCircle,"ax",%progbits
 324              		.align	2
 325              		.global	motorCircle
 326              		.thumb
 327              		.thumb_func
 328              		.type	motorCircle, %function
 329              	motorCircle:
 330              	.LFB70:
  95:main.c        **** 
  96:main.c        **** 
  97:main.c        **** void motorCircle(uint8 x){
 331              		.loc 1 97 0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 8
 334              		@ frame_needed = 1, uses_anonymous_args = 0
 335 0000 80B5     		push	{r7, lr}
 336              		.cfi_def_cfa_offset 8
 337              		.cfi_offset 7, -8
 338              		.cfi_offset 14, -4
 339 0002 82B0     		sub	sp, sp, #8
 340              		.cfi_def_cfa_offset 16
 341 0004 00AF     		add	r7, sp, #0
 342              		.cfi_def_cfa_register 7
 343 0006 0346     		mov	r3, r0
 344 0008 FB71     		strb	r3, [r7, #7]
  98:main.c        ****     // TO DO
  99:main.c        ****     //positive value turns left
 100:main.c        ****     //negative value turns right
 101:main.c        ****     PWM_1_WriteCompare(127+x); //147
 345              		.loc 1 101 0
 346 000a FB79     		ldrb	r3, [r7, #7]
 347 000c 7F33     		adds	r3, r3, #127
 348 000e DBB2     		uxtb	r3, r3
 349 0010 1846     		mov	r0, r3
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 9


 350 0012 FFF7FEFF 		bl	PWM_1_WriteCompare
 102:main.c        ****     PWM_2_WriteCompare(127+x); //
 351              		.loc 1 102 0
 352 0016 FB79     		ldrb	r3, [r7, #7]
 353 0018 7F33     		adds	r3, r3, #127
 354 001a DBB2     		uxtb	r3, r3
 355 001c 1846     		mov	r0, r3
 356 001e FFF7FEFF 		bl	PWM_2_WriteCompare
 103:main.c        ****     
 104:main.c        ****     
 105:main.c        ****     
 106:main.c        ****     //255
 107:main.c        **** }
 357              		.loc 1 107 0
 358 0022 00BF     		nop
 359 0024 0837     		adds	r7, r7, #8
 360              		.cfi_def_cfa_offset 8
 361 0026 BD46     		mov	sp, r7
 362              		.cfi_def_cfa_register 13
 363              		@ sp needed
 364 0028 80BD     		pop	{r7, pc}
 365              		.cfi_endproc
 366              	.LFE70:
 367              		.size	motorCircle, .-motorCircle
 368              		.global	changeMotor
 369 002a 00BF     		.bss
 370 0012 0000     		.align	2
 371              		.type	changeMotor, %object
 372              		.size	changeMotor, 4
 373              	changeMotor:
 374 0014 00000000 		.space	4
 375              		.global	checkLight
 376              		.align	2
 377              		.type	checkLight, %object
 378              		.size	checkLight, 4
 379              	checkLight:
 380 0018 00000000 		.space	4
 381              		.global	lightState
 382              		.align	2
 383              		.type	lightState, %object
 384              		.size	lightState, 4
 385              	lightState:
 386 001c 00000000 		.space	4
 387              		.global	lightDetectedFront
 388              		.align	2
 389              		.type	lightDetectedFront, %object
 390              		.size	lightDetectedFront, 12
 391              	lightDetectedFront:
 392 0020 00000000 		.space	12
 392      00000000 
 392      00000000 
 393              		.global	lightDetectedBack
 394              		.align	2
 395              		.type	lightDetectedBack, %object
 396              		.size	lightDetectedBack, 12
 397              	lightDetectedBack:
 398 002c 00000000 		.space	12
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 10


 398      00000000 
 398      00000000 
 399              		.global	counteoc
 400              		.align	2
 401              		.type	counteoc, %object
 402              		.size	counteoc, 4
 403              	counteoc:
 404 0038 00000000 		.space	4
 405              		.global	processSensors
 406              		.align	2
 407              		.type	processSensors, %object
 408              		.size	processSensors, 4
 409              	processSensors:
 410 003c 00000000 		.space	4
 411              		.global	middle
 412              		.align	2
 413              		.type	middle, %object
 414              		.size	middle, 4
 415              	middle:
 416 0040 00000000 		.space	4
 417              		.global	sumvalueQ3
 418              		.align	1
 419              		.type	sumvalueQ3, %object
 420              		.size	sumvalueQ3, 2
 421              	sumvalueQ3:
 422 0044 0000     		.space	2
 423              		.global	sumvalueQ4
 424              		.align	1
 425              		.type	sumvalueQ4, %object
 426              		.size	sumvalueQ4, 2
 427              	sumvalueQ4:
 428 0046 0000     		.space	2
 429              		.global	sumvalueQ5
 430              		.align	1
 431              		.type	sumvalueQ5, %object
 432              		.size	sumvalueQ5, 2
 433              	sumvalueQ5:
 434 0048 0000     		.space	2
 435              		.global	sumvalueQ1
 436              		.align	1
 437              		.type	sumvalueQ1, %object
 438              		.size	sumvalueQ1, 2
 439              	sumvalueQ1:
 440 004a 0000     		.space	2
 441              		.global	sumvalueQ2
 442              		.align	1
 443              		.type	sumvalueQ2, %object
 444              		.size	sumvalueQ2, 2
 445              	sumvalueQ2:
 446 004c 0000     		.space	2
 447              		.global	sumvalueQ6
 448              		.align	1
 449              		.type	sumvalueQ6, %object
 450              		.size	sumvalueQ6, 2
 451              	sumvalueQ6:
 452 004e 0000     		.space	2
 453              		.section	.text.calculateLight,"ax",%progbits
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 11


 454              		.align	2
 455              		.global	calculateLight
 456              		.thumb
 457              		.thumb_func
 458              		.type	calculateLight, %function
 459              	calculateLight:
 460              	.LFB71:
 108:main.c        **** int changeMotor=0;
 109:main.c        **** int checkLight =0;
 110:main.c        **** int lightState=0;
 111:main.c        **** volatile int lightDetectedFront[3] = {0,0,0};
 112:main.c        **** volatile int lightDetectedBack[3] = {0,0,0};
 113:main.c        **** volatile int counteoc = 0;
 114:main.c        **** volatile int processSensors = 0;
 115:main.c        **** volatile int middle =0;
 116:main.c        **** volatile int16 sumvalueQ3 =  0;
 117:main.c        **** volatile int16 sumvalueQ4 =  0;
 118:main.c        **** volatile int16 sumvalueQ5 =  0;
 119:main.c        **** 
 120:main.c        **** volatile int16 sumvalueQ1 =  0;
 121:main.c        **** volatile int16 sumvalueQ2 =  0;
 122:main.c        **** volatile int16 sumvalueQ6 =  0;
 123:main.c        **** 
 124:main.c        **** 
 125:main.c        **** void calculateLight(int q3,int q4,int q5){
 461              		.loc 1 125 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 32
 464              		@ frame_needed = 1, uses_anonymous_args = 0
 465              		@ link register save eliminated.
 466 0000 80B4     		push	{r7}
 467              		.cfi_def_cfa_offset 4
 468              		.cfi_offset 7, -4
 469 0002 89B0     		sub	sp, sp, #36
 470              		.cfi_def_cfa_offset 40
 471 0004 00AF     		add	r7, sp, #0
 472              		.cfi_def_cfa_register 7
 473 0006 F860     		str	r0, [r7, #12]
 474 0008 B960     		str	r1, [r7, #8]
 475 000a 7A60     		str	r2, [r7, #4]
 126:main.c        ****     int averageQ3 = 0, averageQ4 = 0,averageQ5 = 0;
 476              		.loc 1 126 0
 477 000c 0023     		movs	r3, #0
 478 000e FB61     		str	r3, [r7, #28]
 479 0010 0023     		movs	r3, #0
 480 0012 BB61     		str	r3, [r7, #24]
 481 0014 0023     		movs	r3, #0
 482 0016 7B61     		str	r3, [r7, #20]
 127:main.c        ****     int divide=3;
 483              		.loc 1 127 0
 484 0018 0323     		movs	r3, #3
 485 001a 3B61     		str	r3, [r7, #16]
 128:main.c        ****     averageQ3 = q3/divide;
 486              		.loc 1 128 0
 487 001c FA68     		ldr	r2, [r7, #12]
 488 001e 3B69     		ldr	r3, [r7, #16]
 489 0020 92FBF3F3 		sdiv	r3, r2, r3
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 12


 490 0024 FB61     		str	r3, [r7, #28]
 129:main.c        ****     averageQ4 = q4/divide;
 491              		.loc 1 129 0
 492 0026 BA68     		ldr	r2, [r7, #8]
 493 0028 3B69     		ldr	r3, [r7, #16]
 494 002a 92FBF3F3 		sdiv	r3, r2, r3
 495 002e BB61     		str	r3, [r7, #24]
 130:main.c        ****     averageQ5 = q5/divide;
 496              		.loc 1 130 0
 497 0030 7A68     		ldr	r2, [r7, #4]
 498 0032 3B69     		ldr	r3, [r7, #16]
 499 0034 92FBF3F3 		sdiv	r3, r2, r3
 500 0038 7B61     		str	r3, [r7, #20]
 131:main.c        ****     
 132:main.c        ****     
 133:main.c        ****     if (averageQ3>=2211){  //2211 2400
 501              		.loc 1 133 0
 502 003a FB69     		ldr	r3, [r7, #28]
 503 003c 40F6A202 		movw	r2, #2210
 504 0040 9342     		cmp	r3, r2
 505 0042 02DD     		ble	.L9
 134:main.c        ****     
 135:main.c        ****        lightDetectedFront[0]=1;
 506              		.loc 1 135 0
 507 0044 104B     		ldr	r3, .L12
 508 0046 0122     		movs	r2, #1
 509 0048 1A60     		str	r2, [r3]
 510              	.L9:
 136:main.c        ****     
 137:main.c        ****     
 138:main.c        ****     }
 139:main.c        ****     if (averageQ4>=2211){
 511              		.loc 1 139 0
 512 004a BB69     		ldr	r3, [r7, #24]
 513 004c 40F6A202 		movw	r2, #2210
 514 0050 9342     		cmp	r3, r2
 515 0052 02DD     		ble	.L10
 140:main.c        ****     
 141:main.c        ****        lightDetectedFront[1]=1;
 516              		.loc 1 141 0
 517 0054 0C4B     		ldr	r3, .L12
 518 0056 0122     		movs	r2, #1
 519 0058 5A60     		str	r2, [r3, #4]
 520              	.L10:
 142:main.c        ****     
 143:main.c        ****     
 144:main.c        ****     }
 145:main.c        **** 
 146:main.c        ****     if (averageQ5>=2211){
 521              		.loc 1 146 0
 522 005a 7B69     		ldr	r3, [r7, #20]
 523 005c 40F6A202 		movw	r2, #2210
 524 0060 9342     		cmp	r3, r2
 525 0062 02DD     		ble	.L11
 147:main.c        ****     
 148:main.c        ****        lightDetectedFront[2]=1;
 526              		.loc 1 148 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 13


 527 0064 084B     		ldr	r3, .L12
 528 0066 0122     		movs	r2, #1
 529 0068 9A60     		str	r2, [r3, #8]
 530              	.L11:
 149:main.c        ****     
 150:main.c        ****     
 151:main.c        ****     }
 152:main.c        **** 
 153:main.c        ****     sumvalueQ3=0;
 531              		.loc 1 153 0
 532 006a 084B     		ldr	r3, .L12+4
 533 006c 0022     		movs	r2, #0
 534 006e 1A80     		strh	r2, [r3]	@ movhi
 154:main.c        ****     sumvalueQ4=0;
 535              		.loc 1 154 0
 536 0070 074B     		ldr	r3, .L12+8
 537 0072 0022     		movs	r2, #0
 538 0074 1A80     		strh	r2, [r3]	@ movhi
 155:main.c        ****     sumvalueQ5=0;
 539              		.loc 1 155 0
 540 0076 074B     		ldr	r3, .L12+12
 541 0078 0022     		movs	r2, #0
 542 007a 1A80     		strh	r2, [r3]	@ movhi
 156:main.c        **** } 
 543              		.loc 1 156 0
 544 007c 00BF     		nop
 545 007e 2437     		adds	r7, r7, #36
 546              		.cfi_def_cfa_offset 4
 547 0080 BD46     		mov	sp, r7
 548              		.cfi_def_cfa_register 13
 549              		@ sp needed
 550 0082 80BC     		pop	{r7}
 551              		.cfi_restore 7
 552              		.cfi_def_cfa_offset 0
 553 0084 7047     		bx	lr
 554              	.L13:
 555 0086 00BF     		.align	2
 556              	.L12:
 557 0088 00000000 		.word	lightDetectedFront
 558 008c 00000000 		.word	sumvalueQ3
 559 0090 00000000 		.word	sumvalueQ4
 560 0094 00000000 		.word	sumvalueQ5
 561              		.cfi_endproc
 562              	.LFE71:
 563              		.size	calculateLight, .-calculateLight
 564              		.section	.text.isr_eoc_Interrupt_test,"ax",%progbits
 565              		.align	2
 566              		.global	isr_eoc_Interrupt_test
 567              		.thumb
 568              		.thumb_func
 569              		.type	isr_eoc_Interrupt_test, %function
 570              	isr_eoc_Interrupt_test:
 571              	.LFB72:
 157:main.c        **** CY_ISR(isr_eoc_Interrupt_test)
 158:main.c        **** {
 572              		.loc 1 158 0
 573              		.cfi_startproc
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 14


 574              		@ args = 0, pretend = 0, frame = 16
 575              		@ frame_needed = 1, uses_anonymous_args = 0
 576 0000 80B5     		push	{r7, lr}
 577              		.cfi_def_cfa_offset 8
 578              		.cfi_offset 7, -8
 579              		.cfi_offset 14, -4
 580 0002 84B0     		sub	sp, sp, #16
 581              		.cfi_def_cfa_offset 24
 582 0004 00AF     		add	r7, sp, #0
 583              		.cfi_def_cfa_register 7
 159:main.c        ****     #ifdef isr_test_INTERRUPT_INTERRUPT_CALLBACK
 160:main.c        ****         isr_TS_Interrupt_InterruptCallback();
 161:main.c        ****     #endif /* isr_eoc_INTERRUPT_INTERRUPT_CALLBACK */ 
 162:main.c        **** 
 163:main.c        ****     /*  Place your Interrupt code here. */
 164:main.c        ****     /* `#START isr_eoc_Interrupt` */
 165:main.c        ****     int16 valueQ3 =  ADC_GetResult16(Q3CHANNEL);
 584              		.loc 1 165 0
 585 0006 0020     		movs	r0, #0
 586 0008 FFF7FEFF 		bl	ADC_GetResult16
 587 000c 0346     		mov	r3, r0
 588 000e FB81     		strh	r3, [r7, #14]	@ movhi
 166:main.c        ****     int16 valueQ4 =  ADC_GetResult16(Q4CHANNEL);
 589              		.loc 1 166 0
 590 0010 0120     		movs	r0, #1
 591 0012 FFF7FEFF 		bl	ADC_GetResult16
 592 0016 0346     		mov	r3, r0
 593 0018 BB81     		strh	r3, [r7, #12]	@ movhi
 167:main.c        ****     int16 valueQ5 =  ADC_GetResult16(Q5CHANNEL);
 594              		.loc 1 167 0
 595 001a 0220     		movs	r0, #2
 596 001c FFF7FEFF 		bl	ADC_GetResult16
 597 0020 0346     		mov	r3, r0
 598 0022 7B81     		strh	r3, [r7, #10]	@ movhi
 168:main.c        ****     
 169:main.c        ****     int16 valueQ1 =  ADC_GetResult16(Q1CHANNEL);
 599              		.loc 1 169 0
 600 0024 0320     		movs	r0, #3
 601 0026 FFF7FEFF 		bl	ADC_GetResult16
 602 002a 0346     		mov	r3, r0
 603 002c 3B81     		strh	r3, [r7, #8]	@ movhi
 170:main.c        ****     int16 valueQ2 =  ADC_GetResult16(Q2CHANNEL);
 604              		.loc 1 170 0
 605 002e 0520     		movs	r0, #5
 606 0030 FFF7FEFF 		bl	ADC_GetResult16
 607 0034 0346     		mov	r3, r0
 608 0036 FB80     		strh	r3, [r7, #6]	@ movhi
 171:main.c        ****     int16 valueQ6 =  ADC_GetResult16(Q6CHANNEL);
 609              		.loc 1 171 0
 610 0038 0420     		movs	r0, #4
 611 003a FFF7FEFF 		bl	ADC_GetResult16
 612 003e 0346     		mov	r3, r0
 613 0040 BB80     		strh	r3, [r7, #4]	@ movhi
 172:main.c        ****     
 173:main.c        ****     // get value from ADC then convert to DAC to send to external LEDs
 174:main.c        ****     if (counteoc < 3) {
 614              		.loc 1 174 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 15


 615 0042 1E4B     		ldr	r3, .L18
 616 0044 1B68     		ldr	r3, [r3]
 617 0046 022B     		cmp	r3, #2
 618 0048 23DC     		bgt	.L15
 175:main.c        ****         //2211
 176:main.c        **** //        if (valueQ3 >= 2211) {
 177:main.c        **** //        //set flag for white light detected
 178:main.c        **** //        lightDetectedFront[0] = 1;
 179:main.c        **** //        }
 180:main.c        **** //        if (valueQ4 >= 2211) {
 181:main.c        **** //        //set flag for white light detected
 182:main.c        **** //        lightDetectedFront[1] = 1;
 183:main.c        **** //        }
 184:main.c        **** //    
 185:main.c        **** //        if (valueQ5 >= 2211) {
 186:main.c        **** //        //set flag for white light detected
 187:main.c        **** //        lightDetectedFront[2] = 1;
 188:main.c        **** //        }
 189:main.c        **** //        
 190:main.c        **** //        if (valueQ1 >= 2211) {
 191:main.c        **** //        //set flag for white light detected
 192:main.c        **** //            lightDetectedBack[1] = 1;
 193:main.c        **** //        }
 194:main.c        **** //        
 195:main.c        **** //        if (valueQ2 >= 2211) {
 196:main.c        **** //        //set flag for white light detected
 197:main.c        **** //            lightDetectedBack[2] = 1;
 198:main.c        **** //        }
 199:main.c        **** //                
 200:main.c        **** //                
 201:main.c        **** //        if (valueQ6 >= 2211) {
 202:main.c        **** //        //set flag for white light detected
 203:main.c        **** //            lightDetectedBack[0] = 1;
 204:main.c        **** //        }
 205:main.c        ****         sumvalueQ3+= valueQ3;
 619              		.loc 1 205 0
 620 004a 1D4B     		ldr	r3, .L18+4
 621 004c 1B88     		ldrh	r3, [r3]	@ movhi
 622 004e 1BB2     		sxth	r3, r3
 623 0050 9AB2     		uxth	r2, r3
 624 0052 FB89     		ldrh	r3, [r7, #14]
 625 0054 1344     		add	r3, r3, r2
 626 0056 9BB2     		uxth	r3, r3
 627 0058 1AB2     		sxth	r2, r3
 628 005a 194B     		ldr	r3, .L18+4
 629 005c 1A80     		strh	r2, [r3]	@ movhi
 206:main.c        ****         sumvalueQ4+= valueQ4;
 630              		.loc 1 206 0
 631 005e 194B     		ldr	r3, .L18+8
 632 0060 1B88     		ldrh	r3, [r3]	@ movhi
 633 0062 1BB2     		sxth	r3, r3
 634 0064 9AB2     		uxth	r2, r3
 635 0066 BB89     		ldrh	r3, [r7, #12]
 636 0068 1344     		add	r3, r3, r2
 637 006a 9BB2     		uxth	r3, r3
 638 006c 1AB2     		sxth	r2, r3
 639 006e 154B     		ldr	r3, .L18+8
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 16


 640 0070 1A80     		strh	r2, [r3]	@ movhi
 207:main.c        ****         sumvalueQ5+= valueQ5;
 641              		.loc 1 207 0
 642 0072 154B     		ldr	r3, .L18+12
 643 0074 1B88     		ldrh	r3, [r3]	@ movhi
 644 0076 1BB2     		sxth	r3, r3
 645 0078 9AB2     		uxth	r2, r3
 646 007a 7B89     		ldrh	r3, [r7, #10]
 647 007c 1344     		add	r3, r3, r2
 648 007e 9BB2     		uxth	r3, r3
 649 0080 1AB2     		sxth	r2, r3
 650 0082 114B     		ldr	r3, .L18+12
 651 0084 1A80     		strh	r2, [r3]	@ movhi
 208:main.c        ****         counteoc++;
 652              		.loc 1 208 0
 653 0086 0D4B     		ldr	r3, .L18
 654 0088 1B68     		ldr	r3, [r3]
 655 008a 0133     		adds	r3, r3, #1
 656 008c 0B4A     		ldr	r2, .L18
 657 008e 1360     		str	r3, [r2]
 209:main.c        ****     } else {
 210:main.c        ****         //CYGlobalIntDisable;
 211:main.c        ****         calculateLight(sumvalueQ3,sumvalueQ4,sumvalueQ5);
 212:main.c        ****         processSensors = 1;   
 213:main.c        ****        
 214:main.c        ****     }
 215:main.c        ****     /* `#END` */
 216:main.c        **** }
 658              		.loc 1 216 0
 659 0090 10E0     		b	.L17
 660              	.L15:
 211:main.c        ****         processSensors = 1;   
 661              		.loc 1 211 0
 662 0092 0B4B     		ldr	r3, .L18+4
 663 0094 1B88     		ldrh	r3, [r3]	@ movhi
 664 0096 1BB2     		sxth	r3, r3
 665 0098 1846     		mov	r0, r3
 666 009a 0A4B     		ldr	r3, .L18+8
 667 009c 1B88     		ldrh	r3, [r3]	@ movhi
 668 009e 1BB2     		sxth	r3, r3
 669 00a0 1946     		mov	r1, r3
 670 00a2 094B     		ldr	r3, .L18+12
 671 00a4 1B88     		ldrh	r3, [r3]	@ movhi
 672 00a6 1BB2     		sxth	r3, r3
 673 00a8 1A46     		mov	r2, r3
 674 00aa FFF7FEFF 		bl	calculateLight
 212:main.c        ****        
 675              		.loc 1 212 0
 676 00ae 074B     		ldr	r3, .L18+16
 677 00b0 0122     		movs	r2, #1
 678 00b2 1A60     		str	r2, [r3]
 679              	.L17:
 680              		.loc 1 216 0
 681 00b4 00BF     		nop
 682 00b6 1037     		adds	r7, r7, #16
 683              		.cfi_def_cfa_offset 8
 684 00b8 BD46     		mov	sp, r7
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 17


 685              		.cfi_def_cfa_register 13
 686              		@ sp needed
 687 00ba 80BD     		pop	{r7, pc}
 688              	.L19:
 689              		.align	2
 690              	.L18:
 691 00bc 00000000 		.word	counteoc
 692 00c0 00000000 		.word	sumvalueQ3
 693 00c4 00000000 		.word	sumvalueQ4
 694 00c8 00000000 		.word	sumvalueQ5
 695 00cc 00000000 		.word	processSensors
 696              		.cfi_endproc
 697              	.LFE72:
 698              		.size	isr_eoc_Interrupt_test, .-isr_eoc_Interrupt_test
 699              		.bss
 700              	count:
 701 0050 00       		.space	1
 702              		.section	.text.isr_motor_interrupt_speed,"ax",%progbits
 703              		.align	2
 704              		.global	isr_motor_interrupt_speed
 705              		.thumb
 706              		.thumb_func
 707              		.type	isr_motor_interrupt_speed, %function
 708              	isr_motor_interrupt_speed:
 709              	.LFB73:
 217:main.c        **** // NEED TO INCREASE/DECREASE SPEED TOO
 218:main.c        **** // AND IMPLEMENT LIGHT SENSOR THINGS
 219:main.c        **** volatile static int8 count;
 220:main.c        **** CY_ISR(isr_motor_interrupt_speed)
 221:main.c        **** {
 710              		.loc 1 221 0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 0
 713              		@ frame_needed = 1, uses_anonymous_args = 0
 714              		@ link register save eliminated.
 715 0000 80B4     		push	{r7}
 716              		.cfi_def_cfa_offset 4
 717              		.cfi_offset 7, -4
 718 0002 00AF     		add	r7, sp, #0
 719              		.cfi_def_cfa_register 7
 222:main.c        ****     #ifdef isr_motor_INTERRUPT_INTERRUPT_CALLBACK
 223:main.c        ****         isr_motor_Interrupt_InterruptCallback();
 224:main.c        ****     #endif /* isr_motor_INTERRUPT_INTERRUPT_CALLBACK */ 
 225:main.c        **** 
 226:main.c        ****     /*  Place your Interrupt code here. */
 227:main.c        ****     /* `#START isr_motor_Interrupt` */
 228:main.c        ****       /*int16 currCountMotor2 = QuadDec_M2_GetCounter();
 229:main.c        ****       int16 currCountMotor1 = QuadDec_M1_GetCounter();  
 230:main.c        ****       
 231:main.c        ****      speedMotor1 = (currCountMotor1 - prevcountMotor1) / 0.2;
 232:main.c        ****      speedMotor2 = (currCountMotor2 - prevcountMotor2) / 0.2;
 233:main.c        ****     
 234:main.c        ****       prevcountMotor1 = currCountMotor1;
 235:main.c        ****       prevcountMotor2 = currCountMotor2;*/
 236:main.c        ****     
 237:main.c        ****     /* `#END` */
 238:main.c        **** }
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 18


 720              		.loc 1 238 0
 721 0004 00BF     		nop
 722 0006 BD46     		mov	sp, r7
 723              		.cfi_def_cfa_register 13
 724              		@ sp needed
 725 0008 80BC     		pop	{r7}
 726              		.cfi_restore 7
 727              		.cfi_def_cfa_offset 0
 728 000a 7047     		bx	lr
 729              		.cfi_endproc
 730              	.LFE73:
 731              		.size	isr_motor_interrupt_speed, .-isr_motor_interrupt_speed
 732              		.section	.rodata
 733              		.align	2
 734              	.LC0:
 735 0000 4D6F746F 		.ascii	"Motor 1 - start count: %d, end count: %d \012\000"
 735      72203120 
 735      2D207374 
 735      61727420 
 735      636F756E 
 736 002b 00       		.align	2
 737              	.LC1:
 738 002c 4D6F746F 		.ascii	"Motor 2 - start count: %d, end count: %d \012\000"
 738      72203220 
 738      2D207374 
 738      61727420 
 738      636F756E 
 739              		.section	.text.motorCount,"ax",%progbits
 740              		.align	2
 741              		.global	motorCount
 742              		.thumb
 743              		.thumb_func
 744              		.type	motorCount, %function
 745              	motorCount:
 746              	.LFB74:
 239:main.c        **** void motorCount(){
 747              		.loc 1 239 0
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 20008
 750              		@ frame_needed = 1, uses_anonymous_args = 0
 751 0000 80B5     		push	{r7, lr}
 752              		.cfi_def_cfa_offset 8
 753              		.cfi_offset 7, -8
 754              		.cfi_offset 14, -4
 755 0002 ADF59C4D 		sub	sp, sp, #19968
 756              		.cfi_def_cfa_offset 19976
 757 0006 8AB0     		sub	sp, sp, #40
 758              		.cfi_def_cfa_offset 20016
 759 0008 00AF     		add	r7, sp, #0
 760              		.cfi_def_cfa_register 7
 240:main.c        ****     int16 beginningCountMotor1 = 0;
 761              		.loc 1 240 0
 762 000a 0023     		movs	r3, #0
 763 000c 07F59C42 		add	r2, r7, #19968
 764 0010 02F12602 		add	r2, r2, #38
 765 0014 1380     		strh	r3, [r2]	@ movhi
 241:main.c        ****     int16 beginningCountMotor2 = 0;
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 19


 766              		.loc 1 241 0
 767 0016 0023     		movs	r3, #0
 768 0018 07F59C42 		add	r2, r7, #19968
 769 001c 02F12402 		add	r2, r2, #36
 770 0020 1380     		strh	r3, [r2]	@ movhi
 242:main.c        ****     int16 endCountMotor2 = QuadDec_M2_GetCounter();
 771              		.loc 1 242 0
 772 0022 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 773 0026 0346     		mov	r3, r0
 774 0028 07F59C42 		add	r2, r7, #19968
 775 002c 02F12202 		add	r2, r2, #34
 776 0030 1380     		strh	r3, [r2]	@ movhi
 243:main.c        ****     int16 endCountMotor1 = QuadDec_M1_GetCounter();
 777              		.loc 1 243 0
 778 0032 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 779 0036 0346     		mov	r3, r0
 780 0038 07F59C42 		add	r2, r7, #19968
 781 003c 02F12002 		add	r2, r2, #32
 782 0040 1380     		strh	r3, [r2]	@ movhi
 244:main.c        ****     char motor1String[10000]; 
 245:main.c        ****     sprintf(motor1String,"Motor 1 - start count: %d, end count: %d \n", beginningCountMotor1, endCo
 783              		.loc 1 245 0
 784 0042 07F59C43 		add	r3, r7, #19968
 785 0046 03F12603 		add	r3, r3, #38
 786 004a B3F90020 		ldrsh	r2, [r3]
 787 004e 07F59C43 		add	r3, r7, #19968
 788 0052 03F12003 		add	r3, r3, #32
 789 0056 B3F90030 		ldrsh	r3, [r3]
 790 005a 07F51C50 		add	r0, r7, #9984
 791 005e 00F12800 		add	r0, r0, #40
 792 0062 1838     		subs	r0, r0, #24
 793 0064 1449     		ldr	r1, .L22
 794 0066 FFF7FEFF 		bl	sprintf
 246:main.c        ****     char motor2String[10000];
 247:main.c        ****     sprintf(motor2String,"Motor 2 - start count: %d, end count: %d \n", beginningCountMotor2 , endC
 795              		.loc 1 247 0
 796 006a 07F59C43 		add	r3, r7, #19968
 797 006e 03F12403 		add	r3, r3, #36
 798 0072 B3F90020 		ldrsh	r2, [r3]
 799 0076 07F59C43 		add	r3, r7, #19968
 800 007a 03F12203 		add	r3, r3, #34
 801 007e B3F90030 		ldrsh	r3, [r3]
 802 0082 07F12800 		add	r0, r7, #40
 803 0086 2838     		subs	r0, r0, #40
 804 0088 0C49     		ldr	r1, .L22+4
 805 008a FFF7FEFF 		bl	sprintf
 248:main.c        ****     
 249:main.c        ****     usbPutString(motor1String);
 806              		.loc 1 249 0
 807 008e 07F51C53 		add	r3, r7, #9984
 808 0092 03F12803 		add	r3, r3, #40
 809 0096 183B     		subs	r3, r3, #24
 810 0098 1846     		mov	r0, r3
 811 009a FFF7FEFF 		bl	usbPutString
 250:main.c        ****     usbPutString(motor2String);
 812              		.loc 1 250 0
 813 009e 07F12803 		add	r3, r7, #40
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 20


 814 00a2 283B     		subs	r3, r3, #40
 815 00a4 1846     		mov	r0, r3
 816 00a6 FFF7FEFF 		bl	usbPutString
 251:main.c        **** 
 252:main.c        **** }
 817              		.loc 1 252 0
 818 00aa 00BF     		nop
 819 00ac 07F59C47 		add	r7, r7, #19968
 820 00b0 2837     		adds	r7, r7, #40
 821              		.cfi_def_cfa_offset 8
 822 00b2 BD46     		mov	sp, r7
 823              		.cfi_def_cfa_register 13
 824              		@ sp needed
 825 00b4 80BD     		pop	{r7, pc}
 826              	.L23:
 827 00b6 00BF     		.align	2
 828              	.L22:
 829 00b8 00000000 		.word	.LC0
 830 00bc 2C000000 		.word	.LC1
 831              		.cfi_endproc
 832              	.LFE74:
 833              		.size	motorCount, .-motorCount
 834              		.section	.text.motorRun,"ax",%progbits
 835              		.align	2
 836              		.global	motorRun
 837              		.thumb
 838              		.thumb_func
 839              		.type	motorRun, %function
 840              	motorRun:
 841              	.LFB75:
 253:main.c        **** 
 254:main.c        **** void motorRun(int x){
 842              		.loc 1 254 0
 843              		.cfi_startproc
 844              		@ args = 0, pretend = 0, frame = 8
 845              		@ frame_needed = 1, uses_anonymous_args = 0
 846 0000 80B5     		push	{r7, lr}
 847              		.cfi_def_cfa_offset 8
 848              		.cfi_offset 7, -8
 849              		.cfi_offset 14, -4
 850 0002 82B0     		sub	sp, sp, #8
 851              		.cfi_def_cfa_offset 16
 852 0004 00AF     		add	r7, sp, #0
 853              		.cfi_def_cfa_register 7
 854 0006 7860     		str	r0, [r7, #4]
 255:main.c        ****     
 256:main.c        ****     
 257:main.c        ****     
 258:main.c        ****     //PWM_1_Start();
 259:main.c        ****     //PWM_2_Start();
 260:main.c        **** 
 261:main.c        **** 
 262:main.c        ****     //motorStop();
 263:main.c        ****     //CyDelay(time); // so we have time to set the robot up
 264:main.c        ****     motorSetSpeed(x);
 855              		.loc 1 264 0
 856 0008 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 21


 857 000a FFF7FEFF 		bl	motorSetSpeed
 265:main.c        ****     //CyDelay(time);
 266:main.c        ****     motorStop();
 858              		.loc 1 266 0
 859 000e FFF7FEFF 		bl	motorStop
 267:main.c        ****     
 268:main.c        ****     //motorGoBackwards();
 269:main.c        **** 
 270:main.c        ****     
 271:main.c        ****     //CyDelay(2000);
 272:main.c        ****  
 273:main.c        ****     //motorStop();
 274:main.c        ****     //motorCount();//checks count per second.
 275:main.c        **** 
 276:main.c        ****     
 277:main.c        **** }
 860              		.loc 1 277 0
 861 0012 00BF     		nop
 862 0014 0837     		adds	r7, r7, #8
 863              		.cfi_def_cfa_offset 8
 864 0016 BD46     		mov	sp, r7
 865              		.cfi_def_cfa_register 13
 866              		@ sp needed
 867 0018 80BD     		pop	{r7, pc}
 868              		.cfi_endproc
 869              	.LFE75:
 870              		.size	motorRun, .-motorRun
 871 001a 00BF     		.section	.text.isr_TS_Interrupt_sample,"ax",%progbits
 872              		.align	2
 873              		.global	isr_TS_Interrupt_sample
 874              		.thumb
 875              		.thumb_func
 876              		.type	isr_TS_Interrupt_sample, %function
 877              	isr_TS_Interrupt_sample:
 878              	.LFB76:
 278:main.c        **** CY_ISR(isr_TS_Interrupt_sample)
 279:main.c        **** {
 879              		.loc 1 279 0
 880              		.cfi_startproc
 881              		@ args = 0, pretend = 0, frame = 0
 882              		@ frame_needed = 1, uses_anonymous_args = 0
 883 0000 80B5     		push	{r7, lr}
 884              		.cfi_def_cfa_offset 8
 885              		.cfi_offset 7, -8
 886              		.cfi_offset 14, -4
 887 0002 00AF     		add	r7, sp, #0
 888              		.cfi_def_cfa_register 7
 280:main.c        ****     #ifdef isr_TS_INTERRUPT_INTERRUPT_CALLBACK
 281:main.c        ****         isr_TS_Interrupt_InterruptCallback();
 282:main.c        ****     #endif /* isr_TS_INTERRUPT_INTERRUPT_CALLBACK */ 
 283:main.c        ****         ADC_StartConvert();
 889              		.loc 1 283 0
 890 0004 FFF7FEFF 		bl	ADC_StartConvert
 284:main.c        ****     /*  Place your Interrupt code here. */
 285:main.c        ****     /* `#START isr_TS_Interrupt` */
 286:main.c        **** 
 287:main.c        ****     /* `#END` */
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 22


 288:main.c        **** }
 891              		.loc 1 288 0
 892 0008 00BF     		nop
 893 000a 80BD     		pop	{r7, pc}
 894              		.cfi_endproc
 895              	.LFE76:
 896              		.size	isr_TS_Interrupt_sample, .-isr_TS_Interrupt_sample
 897              		.section	.text.main,"ax",%progbits
 898              		.align	2
 899              		.global	main
 900              		.thumb
 901              		.thumb_func
 902              		.type	main, %function
 903              	main:
 904              	.LFB77:
 289:main.c        **** 
 290:main.c        **** 
 291:main.c        **** int main()
 292:main.c        **** {
 905              		.loc 1 292 0
 906              		.cfi_startproc
 907              		@ args = 0, pretend = 0, frame = 16
 908              		@ frame_needed = 1, uses_anonymous_args = 0
 909 0000 80B5     		push	{r7, lr}
 910              		.cfi_def_cfa_offset 8
 911              		.cfi_offset 7, -8
 912              		.cfi_offset 14, -4
 913 0002 84B0     		sub	sp, sp, #16
 914              		.cfi_def_cfa_offset 24
 915 0004 00AF     		add	r7, sp, #0
 916              		.cfi_def_cfa_register 7
 293:main.c        ****     
 294:main.c        **** 
 295:main.c        **** // --------------------------------    
 296:main.c        **** // ----- INITIALIZATIONS ----------
 297:main.c        ****     CYGlobalIntEnable;
 917              		.loc 1 297 0
 918              		.syntax unified
 919              	@ 297 "main.c" 1
 920 0006 62B6     		CPSIE   i
 921              	@ 0 "" 2
 298:main.c        ****     count  = 0;
 922              		.loc 1 298 0
 923              		.thumb
 924              		.syntax unified
 925 0008 4C4B     		ldr	r3, .L41
 926 000a 0022     		movs	r2, #0
 927 000c 1A70     		strb	r2, [r3]
 299:main.c        ****     
 300:main.c        ****     ADC_Start();
 928              		.loc 1 300 0
 929 000e FFF7FEFF 		bl	ADC_Start
 301:main.c        ****     Timer_TS_Start();
 930              		.loc 1 301 0
 931 0012 FFF7FEFF 		bl	Timer_TS_Start
 302:main.c        ****     Timer_Motor_Start();
 932              		.loc 1 302 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 23


 933 0016 FFF7FEFF 		bl	Timer_Motor_Start
 303:main.c        ****     QuadDec_M1_Start();
 934              		.loc 1 303 0
 935 001a FFF7FEFF 		bl	QuadDec_M1_Start
 304:main.c        ****     QuadDec_M2_Start(); //init the quadencoder,
 936              		.loc 1 304 0
 937 001e FFF7FEFF 		bl	QuadDec_M2_Start
 305:main.c        ****     //isr_motor_StartEx(isr_motor_interrupt_speed);
 306:main.c        ****     
 307:main.c        ****     isr_TS_StartEx(isr_TS_Interrupt_sample);
 938              		.loc 1 307 0
 939 0022 4748     		ldr	r0, .L41+4
 940 0024 FFF7FEFF 		bl	isr_TS_StartEx
 308:main.c        ****     isr_eoc_StartEx(isr_eoc_Interrupt_test);
 941              		.loc 1 308 0
 942 0028 4648     		ldr	r0, .L41+8
 943 002a FFF7FEFF 		bl	isr_eoc_StartEx
 309:main.c        ****     
 310:main.c        ****     
 311:main.c        ****     //ADC_StartConvert();
 312:main.c        ****     
 313:main.c        ****     PWM_1_Start();
 944              		.loc 1 313 0
 945 002e FFF7FEFF 		bl	PWM_1_Start
 314:main.c        ****     PWM_2_Start();
 946              		.loc 1 314 0
 947 0032 FFF7FEFF 		bl	PWM_2_Start
 315:main.c        ****     LED_Write(0);
 948              		.loc 1 315 0
 949 0036 0020     		movs	r0, #0
 950 0038 FFF7FEFF 		bl	LED_Write
 316:main.c        ****     motorStop();
 951              		.loc 1 316 0
 952 003c FFF7FEFF 		bl	motorStop
 317:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION)   ; 
 953              		.loc 1 317 0
 954 0040 0121     		movs	r1, #1
 955 0042 0020     		movs	r0, #0
 956 0044 FFF7FEFF 		bl	USBUART_Start
 318:main.c        ****     ////////////////////////////////
 319:main.c        ****     
 320:main.c        ****     // Speed//
 321:main.c        ****     //int speed = -33;
 322:main.c        ****     //int time = 2000;
 323:main.c        ****    // motorRun(speed,time);
 324:main.c        **** 
 325:main.c        ****     /////////////////////////////////////////////
 326:main.c        ****     int lastState=0;
 957              		.loc 1 326 0
 958 0048 0023     		movs	r3, #0
 959 004a FB60     		str	r3, [r7, #12]
 960              	.L39:
 327:main.c        ****     //usbPutString(displaystring);
 328:main.c        ****      //87cm motor 1 945, motor2 -958. 2seconds.
 329:main.c        ****     //10.8 counts per cm for distance.
 330:main.c        ****    //for speed,43.5cm/s 
 331:main.c        ****     
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 24


 332:main.c        **** //    
 333:main.c        **** // ----------      //distance ---------
 334:main.c        **** // int travelDis = 1740;//10.8 * travelDis
 335:main.c        **** //  while(QuadDec_M1_GetCounter()<travelDis){
 336:main.c        **** //        if (processSensors == 1) {
 337:main.c        **** //    
 338:main.c        **** //            int operation = convertSensorBinary();
 339:main.c        **** //            
 340:main.c        **** //    
 341:main.c        **** //            switch(operation){
 342:main.c        **** //                case 3:// 0 1 1 // Q3 under black
 343:main.c        **** //                    motorTurnLeft(50);//decrease go fast used to be 50 by 6
 344:main.c        **** //                    LED_Write(1);
 345:main.c        **** //                    break;    
 346:main.c        **** //                    
 347:main.c        **** //                case 6:// 1 1 0 // Q5 under black  
 348:main.c        **** //                    motorTurnRight(200);//increase 200 by 6
 349:main.c        **** //                    LED_Write(1);
 350:main.c        **** //                    break;
 351:main.c        **** //                    
 352:main.c        **** //                case 5:// 101 // Q4 under black
 353:main.c        **** //                    motorSetSpeed(-7); //-40 is original
 354:main.c        **** //                    LED_Write(0);
 355:main.c        **** //                    break;
 356:main.c        **** //            }
 357:main.c        **** //            
 358:main.c        **** //             processSensors = 0;
 359:main.c        **** //            //reset counter
 360:main.c        **** //
 361:main.c        **** //            counteoc = 0;
 362:main.c        **** //            //reset flags for lightsensors because it checks every 10 iterations, adds delay/
 363:main.c        **** //            lightDetectedFront[0] = 0;
 364:main.c        **** //            lightDetectedFront[1] = 0;
 365:main.c        **** //            lightDetectedFront[2] = 0;
 366:main.c        **** //            lightDetectedBack[0] = 0;
 367:main.c        **** //            lightDetectedBack[1] = 0;
 368:main.c        **** //            lightDetectedBack[2] = 0;
 369:main.c        **** //          
 370:main.c        **** //            
 371:main.c        **** //    
 372:main.c        **** //        }
 373:main.c        **** //    }
 374:main.c        **** //    motorStop();
 375:main.c        **** //    motorCount();
 376:main.c        ****     
 377:main.c        ****     /// ---------End here----------
 378:main.c        ****     
 379:main.c        ****     
 380:main.c        ****     
 381:main.c        ****     
 382:main.c        ****     
 383:main.c        ****     
 384:main.c        ****     
 385:main.c        ****    ///////////////////////////////////////// LINE TRACKING////////
 386:main.c        ****     
 387:main.c        ****     while(1)
 388:main.c        ****     {
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 25


 389:main.c        ****         /* Place your application code here. */
 390:main.c        ****        
 391:main.c        ****         if (processSensors == 1) {
 961              		.loc 1 391 0
 962 004c 3E4B     		ldr	r3, .L41+12
 963 004e 1B68     		ldr	r3, [r3]
 964 0050 012B     		cmp	r3, #1
 965 0052 FBD1     		bne	.L39
 966              	.LBB2:
 392:main.c        ****                    
 393:main.c        ****             int operation = convertSensorBinary();
 967              		.loc 1 393 0
 968 0054 FFF7FEFF 		bl	convertSensorBinary
 969 0058 B860     		str	r0, [r7, #8]
 394:main.c        ****             int backOps = convertBackBinary();
 970              		.loc 1 394 0
 971 005a FFF7FEFF 		bl	convertBackBinary
 972 005e 7860     		str	r0, [r7, #4]
 395:main.c        **** 
 396:main.c        ****             switch(operation){
 973              		.loc 1 396 0
 974 0060 BB68     		ldr	r3, [r7, #8]
 975 0062 072B     		cmp	r3, #7
 976 0064 51D8     		bhi	.L28
 977 0066 01A2     		adr	r2, .L30
 978 0068 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 979              		.p2align 2
 980              	.L30:
 981 006c 03010000 		.word	.L29+1
 982 0070 CF000000 		.word	.L31+1
 983 0074 0B010000 		.word	.L28+1
 984 0078 A7000000 		.word	.L32+1
 985 007c E9000000 		.word	.L33+1
 986 0080 C3000000 		.word	.L34+1
 987 0084 B5000000 		.word	.L35+1
 988 0088 8D000000 		.word	.L36+1
 989              		.p2align 1
 990              	.L36:
 397:main.c        ****             //where 1 is on white, 0 is on black.
 398:main.c        ****                 
 399:main.c        ****                 case 7: // 111 // all under white\\
 400:main.c        ****                     
 401:main.c        ****                 
 402:main.c        ****               
 403:main.c        ****                         if(backOps == 7){
 991              		.loc 1 403 0
 992 008c 7B68     		ldr	r3, [r7, #4]
 993 008e 072B     		cmp	r3, #7
 994 0090 03D1     		bne	.L37
 404:main.c        ****                             
 405:main.c        ****                              motorCircle(40);
 995              		.loc 1 405 0
 996 0092 2820     		movs	r0, #40
 997 0094 FFF7FEFF 		bl	motorCircle
 406:main.c        ****                             
 407:main.c        ****                         }
 408:main.c        ****                         
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 26


 409:main.c        ****                     
 410:main.c        ****                         else if(backOps == 5){
 411:main.c        ****                             motorGoStraight();
 412:main.c        ****                         }   
 413:main.c        ****                         break;
 998              		.loc 1 413 0
 999 0098 36E0     		b	.L40
 1000              	.L37:
 410:main.c        ****                             motorGoStraight();
 1001              		.loc 1 410 0
 1002 009a 7B68     		ldr	r3, [r7, #4]
 1003 009c 052B     		cmp	r3, #5
 1004 009e 33D1     		bne	.L40
 411:main.c        ****                         }   
 1005              		.loc 1 411 0
 1006 00a0 FFF7FEFF 		bl	motorGoStraight
 1007              		.loc 1 413 0
 1008 00a4 30E0     		b	.L40
 1009              	.L32:
 414:main.c        ****                     
 415:main.c        ****                 case 3:// 0 1 1 // Q3 under black
 416:main.c        ****                     motorTurnLeft(50);//decrease go fast used to be 50 by 6
 1010              		.loc 1 416 0
 1011 00a6 3220     		movs	r0, #50
 1012 00a8 FFF7FEFF 		bl	motorTurnLeft
 417:main.c        ****                     LED_Write(1);
 1013              		.loc 1 417 0
 1014 00ac 0120     		movs	r0, #1
 1015 00ae FFF7FEFF 		bl	LED_Write
 418:main.c        ****                     break;    
 1016              		.loc 1 418 0
 1017 00b2 2AE0     		b	.L28
 1018              	.L35:
 419:main.c        ****                     
 420:main.c        ****                 case 6:// 1 1 0 // Q5 under black  
 421:main.c        ****                     motorTurnRight(200);//increase 200 by 6
 1019              		.loc 1 421 0
 1020 00b4 C820     		movs	r0, #200
 1021 00b6 FFF7FEFF 		bl	motorTurnRight
 422:main.c        ****                     LED_Write(1);
 1022              		.loc 1 422 0
 1023 00ba 0120     		movs	r0, #1
 1024 00bc FFF7FEFF 		bl	LED_Write
 423:main.c        ****                     break;
 1025              		.loc 1 423 0
 1026 00c0 23E0     		b	.L28
 1027              	.L34:
 424:main.c        ****                     
 425:main.c        ****                 case 5:// 101 // Q4 under black
 426:main.c        ****                     motorGoStraight();
 1028              		.loc 1 426 0
 1029 00c2 FFF7FEFF 		bl	motorGoStraight
 427:main.c        ****                     LED_Write(0);
 1030              		.loc 1 427 0
 1031 00c6 0020     		movs	r0, #0
 1032 00c8 FFF7FEFF 		bl	LED_Write
 428:main.c        ****                     break;
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 27


 1033              		.loc 1 428 0
 1034 00cc 1DE0     		b	.L28
 1035              	.L31:
 429:main.c        ****                 case 1: // 001 --> left intersection
 430:main.c        ****                     //lastState=1;
 431:main.c        ****                     motorStop();
 1036              		.loc 1 431 0
 1037 00ce FFF7FEFF 		bl	motorStop
 432:main.c        ****                     CyDelay(50);
 1038              		.loc 1 432 0
 1039 00d2 3220     		movs	r0, #50
 1040 00d4 FFF7FEFF 		bl	CyDelay
 433:main.c        ****                     motorTurnLeft(44);
 1041              		.loc 1 433 0
 1042 00d8 2C20     		movs	r0, #44
 1043 00da FFF7FEFF 		bl	motorTurnLeft
 434:main.c        ****                     CyDelay(350);
 1044              		.loc 1 434 0
 1045 00de 4FF4AF70 		mov	r0, #350
 1046 00e2 FFF7FEFF 		bl	CyDelay
 435:main.c        ****                     break;
 1047              		.loc 1 435 0
 1048 00e6 10E0     		b	.L28
 1049              	.L33:
 436:main.c        ****                 case 4: // 100 --> right intersection
 437:main.c        ****                    // lastState=2;
 438:main.c        ****                     motorStop();
 1050              		.loc 1 438 0
 1051 00e8 FFF7FEFF 		bl	motorStop
 439:main.c        ****                     CyDelay(50);
 1052              		.loc 1 439 0
 1053 00ec 3220     		movs	r0, #50
 1054 00ee FFF7FEFF 		bl	CyDelay
 440:main.c        ****                     motorTurnRight(206);
 1055              		.loc 1 440 0
 1056 00f2 CE20     		movs	r0, #206
 1057 00f4 FFF7FEFF 		bl	motorTurnRight
 441:main.c        ****                     CyDelay(350);
 1058              		.loc 1 441 0
 1059 00f8 4FF4AF70 		mov	r0, #350
 1060 00fc FFF7FEFF 		bl	CyDelay
 442:main.c        ****                     break;
 1061              		.loc 1 442 0
 1062 0100 03E0     		b	.L28
 1063              	.L29:
 443:main.c        ****                     
 444:main.c        ****                 
 445:main.c        ****                 
 446:main.c        ****                 
 447:main.c        ****                     
 448:main.c        ****                 case 0: // 000 // ALL UNDER black
 449:main.c        ****                       
 450:main.c        ****                     motorStop();
 1064              		.loc 1 450 0
 1065 0102 FFF7FEFF 		bl	motorStop
 451:main.c        ****                     break;    
 1066              		.loc 1 451 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 28


 1067 0106 00E0     		b	.L28
 1068              	.L40:
 413:main.c        ****                     
 1069              		.loc 1 413 0
 1070 0108 00BF     		nop
 1071              	.L28:
 452:main.c        **** 
 453:main.c        ****                
 454:main.c        ****                 
 455:main.c        ****                
 456:main.c        ****             
 457:main.c        ****             }
 458:main.c        ****             
 459:main.c        ****         
 460:main.c        **** 
 461:main.c        ****        
 462:main.c        ****             //reset variable.
 463:main.c        ****             processSensors = 0;
 1072              		.loc 1 463 0
 1073 010a 0F4B     		ldr	r3, .L41+12
 1074 010c 0022     		movs	r2, #0
 1075 010e 1A60     		str	r2, [r3]
 464:main.c        ****             //reset counter
 465:main.c        **** 
 466:main.c        ****              counteoc = 0;
 1076              		.loc 1 466 0
 1077 0110 0E4B     		ldr	r3, .L41+16
 1078 0112 0022     		movs	r2, #0
 1079 0114 1A60     		str	r2, [r3]
 467:main.c        ****             //reset flags for lightsensors because it checks every 10 iterations, adds delay/
 468:main.c        ****             lightDetectedFront[0] = 0;
 1080              		.loc 1 468 0
 1081 0116 0E4B     		ldr	r3, .L41+20
 1082 0118 0022     		movs	r2, #0
 1083 011a 1A60     		str	r2, [r3]
 469:main.c        ****             lightDetectedFront[1] = 0;
 1084              		.loc 1 469 0
 1085 011c 0C4B     		ldr	r3, .L41+20
 1086 011e 0022     		movs	r2, #0
 1087 0120 5A60     		str	r2, [r3, #4]
 470:main.c        ****             lightDetectedFront[2] = 0;
 1088              		.loc 1 470 0
 1089 0122 0B4B     		ldr	r3, .L41+20
 1090 0124 0022     		movs	r2, #0
 1091 0126 9A60     		str	r2, [r3, #8]
 471:main.c        ****             lightDetectedBack[0] = 0;
 1092              		.loc 1 471 0
 1093 0128 0A4B     		ldr	r3, .L41+24
 1094 012a 0022     		movs	r2, #0
 1095 012c 1A60     		str	r2, [r3]
 472:main.c        ****             lightDetectedBack[1] = 0;
 1096              		.loc 1 472 0
 1097 012e 094B     		ldr	r3, .L41+24
 1098 0130 0022     		movs	r2, #0
 1099 0132 5A60     		str	r2, [r3, #4]
 473:main.c        ****             lightDetectedBack[2] = 0;
 1100              		.loc 1 473 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 29


 1101 0134 074B     		ldr	r3, .L41+24
 1102 0136 0022     		movs	r2, #0
 1103 0138 9A60     		str	r2, [r3, #8]
 1104              	.LBE2:
 474:main.c        ****             //CYGlobalIntEnable;
 475:main.c        ****           
 476:main.c        ****         }
 477:main.c        ****         
 478:main.c        ****     }   
 1105              		.loc 1 478 0
 1106 013a 87E7     		b	.L39
 1107              	.L42:
 1108              		.align	2
 1109              	.L41:
 1110 013c 50000000 		.word	count
 1111 0140 00000000 		.word	isr_TS_Interrupt_sample
 1112 0144 00000000 		.word	isr_eoc_Interrupt_test
 1113 0148 00000000 		.word	processSensors
 1114 014c 00000000 		.word	counteoc
 1115 0150 00000000 		.word	lightDetectedFront
 1116 0154 00000000 		.word	lightDetectedBack
 1117              		.cfi_endproc
 1118              	.LFE77:
 1119              		.size	main, .-main
 1120              		.section	.text.convertBackBinary,"ax",%progbits
 1121              		.align	2
 1122              		.global	convertBackBinary
 1123              		.thumb
 1124              		.thumb_func
 1125              		.type	convertBackBinary, %function
 1126              	convertBackBinary:
 1127              	.LFB78:
 479:main.c        ****     
 480:main.c        **** //////////////////////////////////////
 481:main.c        **** }
 482:main.c        **** 
 483:main.c        ****   
 484:main.c        **** 
 485:main.c        **** int convertBackBinary(){
 1128              		.loc 1 485 0
 1129              		.cfi_startproc
 1130              		@ args = 0, pretend = 0, frame = 16
 1131              		@ frame_needed = 1, uses_anonymous_args = 0
 1132              		@ link register save eliminated.
 1133 0000 80B4     		push	{r7}
 1134              		.cfi_def_cfa_offset 4
 1135              		.cfi_offset 7, -4
 1136 0002 85B0     		sub	sp, sp, #20
 1137              		.cfi_def_cfa_offset 24
 1138 0004 00AF     		add	r7, sp, #0
 1139              		.cfi_def_cfa_register 7
 486:main.c        **** 
 487:main.c        ****     int value1=0;
 1140              		.loc 1 487 0
 1141 0006 0023     		movs	r3, #0
 1142 0008 FB60     		str	r3, [r7, #12]
 488:main.c        ****     int Q1 = lightDetectedBack[1] ;
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 30


 1143              		.loc 1 488 0
 1144 000a 104B     		ldr	r3, .L45
 1145 000c 5B68     		ldr	r3, [r3, #4]
 1146 000e BB60     		str	r3, [r7, #8]
 489:main.c        ****     int Q2 = lightDetectedBack[2];
 1147              		.loc 1 489 0
 1148 0010 0E4B     		ldr	r3, .L45
 1149 0012 9B68     		ldr	r3, [r3, #8]
 1150 0014 7B60     		str	r3, [r7, #4]
 490:main.c        ****     int Q6 =lightDetectedBack[0];
 1151              		.loc 1 490 0
 1152 0016 0D4B     		ldr	r3, .L45
 1153 0018 1B68     		ldr	r3, [r3]
 1154 001a 3B60     		str	r3, [r7]
 491:main.c        ****     value1 =  value1 + lightDetectedBack[1] *2;
 1155              		.loc 1 491 0
 1156 001c 0B4B     		ldr	r3, .L45
 1157 001e 5B68     		ldr	r3, [r3, #4]
 1158 0020 5B00     		lsls	r3, r3, #1
 1159 0022 FA68     		ldr	r2, [r7, #12]
 1160 0024 1344     		add	r3, r3, r2
 1161 0026 FB60     		str	r3, [r7, #12]
 492:main.c        ****     value1 = value1 +  lightDetectedBack[2] *4;
 1162              		.loc 1 492 0
 1163 0028 084B     		ldr	r3, .L45
 1164 002a 9B68     		ldr	r3, [r3, #8]
 1165 002c 9B00     		lsls	r3, r3, #2
 1166 002e FA68     		ldr	r2, [r7, #12]
 1167 0030 1344     		add	r3, r3, r2
 1168 0032 FB60     		str	r3, [r7, #12]
 493:main.c        ****     value1 = value1 + lightDetectedBack[0] *1;
 1169              		.loc 1 493 0
 1170 0034 054B     		ldr	r3, .L45
 1171 0036 1B68     		ldr	r3, [r3]
 1172 0038 FA68     		ldr	r2, [r7, #12]
 1173 003a 1344     		add	r3, r3, r2
 1174 003c FB60     		str	r3, [r7, #12]
 494:main.c        **** 
 495:main.c        ****     return value1;
 1175              		.loc 1 495 0
 1176 003e FB68     		ldr	r3, [r7, #12]
 496:main.c        **** 
 497:main.c        **** }
 1177              		.loc 1 497 0
 1178 0040 1846     		mov	r0, r3
 1179 0042 1437     		adds	r7, r7, #20
 1180              		.cfi_def_cfa_offset 4
 1181 0044 BD46     		mov	sp, r7
 1182              		.cfi_def_cfa_register 13
 1183              		@ sp needed
 1184 0046 80BC     		pop	{r7}
 1185              		.cfi_restore 7
 1186              		.cfi_def_cfa_offset 0
 1187 0048 7047     		bx	lr
 1188              	.L46:
 1189 004a 00BF     		.align	2
 1190              	.L45:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 31


 1191 004c 00000000 		.word	lightDetectedBack
 1192              		.cfi_endproc
 1193              	.LFE78:
 1194              		.size	convertBackBinary, .-convertBackBinary
 1195              		.section	.text.convertSensorBinary,"ax",%progbits
 1196              		.align	2
 1197              		.global	convertSensorBinary
 1198              		.thumb
 1199              		.thumb_func
 1200              		.type	convertSensorBinary, %function
 1201              	convertSensorBinary:
 1202              	.LFB79:
 498:main.c        **** 
 499:main.c        **** int convertSensorBinary()
 500:main.c        **** {
 1203              		.loc 1 500 0
 1204              		.cfi_startproc
 1205              		@ args = 0, pretend = 0, frame = 16
 1206              		@ frame_needed = 1, uses_anonymous_args = 0
 1207              		@ link register save eliminated.
 1208 0000 80B4     		push	{r7}
 1209              		.cfi_def_cfa_offset 4
 1210              		.cfi_offset 7, -4
 1211 0002 85B0     		sub	sp, sp, #20
 1212              		.cfi_def_cfa_offset 24
 1213 0004 00AF     		add	r7, sp, #0
 1214              		.cfi_def_cfa_register 7
 501:main.c        ****    int value=0;
 1215              		.loc 1 501 0
 1216 0006 0023     		movs	r3, #0
 1217 0008 FB60     		str	r3, [r7, #12]
 502:main.c        ****   int Q3 = lightDetectedFront[0];
 1218              		.loc 1 502 0
 1219 000a 104B     		ldr	r3, .L49
 1220 000c 1B68     		ldr	r3, [r3]
 1221 000e BB60     		str	r3, [r7, #8]
 503:main.c        ****   int Q4 = lightDetectedFront[1];
 1222              		.loc 1 503 0
 1223 0010 0E4B     		ldr	r3, .L49
 1224 0012 5B68     		ldr	r3, [r3, #4]
 1225 0014 7B60     		str	r3, [r7, #4]
 504:main.c        ****    int Q5 = lightDetectedFront[2];
 1226              		.loc 1 504 0
 1227 0016 0D4B     		ldr	r3, .L49
 1228 0018 9B68     		ldr	r3, [r3, #8]
 1229 001a 3B60     		str	r3, [r7]
 505:main.c        ****   value=value + lightDetectedFront[0]*4;
 1230              		.loc 1 505 0
 1231 001c 0B4B     		ldr	r3, .L49
 1232 001e 1B68     		ldr	r3, [r3]
 1233 0020 9B00     		lsls	r3, r3, #2
 1234 0022 FA68     		ldr	r2, [r7, #12]
 1235 0024 1344     		add	r3, r3, r2
 1236 0026 FB60     		str	r3, [r7, #12]
 506:main.c        ****   value=value + lightDetectedFront[1]*2;
 1237              		.loc 1 506 0
 1238 0028 084B     		ldr	r3, .L49
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 32


 1239 002a 5B68     		ldr	r3, [r3, #4]
 1240 002c 5B00     		lsls	r3, r3, #1
 1241 002e FA68     		ldr	r2, [r7, #12]
 1242 0030 1344     		add	r3, r3, r2
 1243 0032 FB60     		str	r3, [r7, #12]
 507:main.c        ****   value=value + lightDetectedFront[2]*1;
 1244              		.loc 1 507 0
 1245 0034 054B     		ldr	r3, .L49
 1246 0036 9B68     		ldr	r3, [r3, #8]
 1247 0038 FA68     		ldr	r2, [r7, #12]
 1248 003a 1344     		add	r3, r3, r2
 1249 003c FB60     		str	r3, [r7, #12]
 508:main.c        ****     return value;
 1250              		.loc 1 508 0
 1251 003e FB68     		ldr	r3, [r7, #12]
 509:main.c        **** }
 1252              		.loc 1 509 0
 1253 0040 1846     		mov	r0, r3
 1254 0042 1437     		adds	r7, r7, #20
 1255              		.cfi_def_cfa_offset 4
 1256 0044 BD46     		mov	sp, r7
 1257              		.cfi_def_cfa_register 13
 1258              		@ sp needed
 1259 0046 80BC     		pop	{r7}
 1260              		.cfi_restore 7
 1261              		.cfi_def_cfa_offset 0
 1262 0048 7047     		bx	lr
 1263              	.L50:
 1264 004a 00BF     		.align	2
 1265              	.L49:
 1266 004c 00000000 		.word	lightDetectedFront
 1267              		.cfi_endproc
 1268              	.LFE79:
 1269              		.size	convertSensorBinary, .-convertSensorBinary
 1270              		.section	.text.usbPutString,"ax",%progbits
 1271              		.align	2
 1272              		.global	usbPutString
 1273              		.thumb
 1274              		.thumb_func
 1275              		.type	usbPutString, %function
 1276              	usbPutString:
 1277              	.LFB80:
 510:main.c        **** //* ========================================
 511:main.c        **** void usbPutString(char *s)
 512:main.c        **** {
 1278              		.loc 1 512 0
 1279              		.cfi_startproc
 1280              		@ args = 0, pretend = 0, frame = 8
 1281              		@ frame_needed = 1, uses_anonymous_args = 0
 1282 0000 80B5     		push	{r7, lr}
 1283              		.cfi_def_cfa_offset 8
 1284              		.cfi_offset 7, -8
 1285              		.cfi_offset 14, -4
 1286 0002 82B0     		sub	sp, sp, #8
 1287              		.cfi_def_cfa_offset 16
 1288 0004 00AF     		add	r7, sp, #0
 1289              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 33


 1290 0006 7860     		str	r0, [r7, #4]
 513:main.c        **** // !! Assumes that *s is a string with allocated space >=64 chars     
 514:main.c        **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 515:main.c        **** //  length to 62 char (63rd char is a '!')
 516:main.c        **** 
 517:main.c        **** #ifdef USE_USB     
 518:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1291              		.loc 1 518 0
 1292 0008 00BF     		nop
 1293              	.L52:
 1294              		.loc 1 518 0 is_stmt 0 discriminator 1
 1295 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 1296 000e 0346     		mov	r3, r0
 1297 0010 002B     		cmp	r3, #0
 1298 0012 FAD0     		beq	.L52
 519:main.c        ****     s[63]='\0';
 1299              		.loc 1 519 0 is_stmt 1
 1300 0014 7B68     		ldr	r3, [r7, #4]
 1301 0016 3F33     		adds	r3, r3, #63
 1302 0018 0022     		movs	r2, #0
 1303 001a 1A70     		strb	r2, [r3]
 520:main.c        ****     s[62]='!';
 1304              		.loc 1 520 0
 1305 001c 7B68     		ldr	r3, [r7, #4]
 1306 001e 3E33     		adds	r3, r3, #62
 1307 0020 2122     		movs	r2, #33
 1308 0022 1A70     		strb	r2, [r3]
 521:main.c        ****     USBUART_PutData((uint8*)s,strlen(s));
 1309              		.loc 1 521 0
 1310 0024 7868     		ldr	r0, [r7, #4]
 1311 0026 FFF7FEFF 		bl	strlen
 1312 002a 0346     		mov	r3, r0
 1313 002c 9BB2     		uxth	r3, r3
 1314 002e 1946     		mov	r1, r3
 1315 0030 7868     		ldr	r0, [r7, #4]
 1316 0032 FFF7FEFF 		bl	USBUART_PutData
 522:main.c        **** #endif
 523:main.c        **** }
 1317              		.loc 1 523 0
 1318 0036 00BF     		nop
 1319 0038 0837     		adds	r7, r7, #8
 1320              		.cfi_def_cfa_offset 8
 1321 003a BD46     		mov	sp, r7
 1322              		.cfi_def_cfa_register 13
 1323              		@ sp needed
 1324 003c 80BD     		pop	{r7, pc}
 1325              		.cfi_endproc
 1326              	.LFE80:
 1327              		.size	usbPutString, .-usbPutString
 1328 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 1329              		.align	2
 1330              		.global	usbPutChar
 1331              		.thumb
 1332              		.thumb_func
 1333              		.type	usbPutChar, %function
 1334              	usbPutChar:
 1335              	.LFB81:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 34


 524:main.c        **** //* ========================================
 525:main.c        **** void usbPutChar(char c)
 526:main.c        **** {
 1336              		.loc 1 526 0
 1337              		.cfi_startproc
 1338              		@ args = 0, pretend = 0, frame = 8
 1339              		@ frame_needed = 1, uses_anonymous_args = 0
 1340 0000 80B5     		push	{r7, lr}
 1341              		.cfi_def_cfa_offset 8
 1342              		.cfi_offset 7, -8
 1343              		.cfi_offset 14, -4
 1344 0002 82B0     		sub	sp, sp, #8
 1345              		.cfi_def_cfa_offset 16
 1346 0004 00AF     		add	r7, sp, #0
 1347              		.cfi_def_cfa_register 7
 1348 0006 0346     		mov	r3, r0
 1349 0008 FB71     		strb	r3, [r7, #7]
 527:main.c        **** #ifdef USE_USB     
 528:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1350              		.loc 1 528 0
 1351 000a 00BF     		nop
 1352              	.L54:
 1353              		.loc 1 528 0 is_stmt 0 discriminator 1
 1354 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 1355 0010 0346     		mov	r3, r0
 1356 0012 002B     		cmp	r3, #0
 1357 0014 FAD0     		beq	.L54
 529:main.c        ****     USBUART_PutChar(c);
 1358              		.loc 1 529 0 is_stmt 1
 1359 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1360 0018 1846     		mov	r0, r3
 1361 001a FFF7FEFF 		bl	USBUART_PutChar
 530:main.c        **** #endif    
 531:main.c        **** }
 1362              		.loc 1 531 0
 1363 001e 00BF     		nop
 1364 0020 0837     		adds	r7, r7, #8
 1365              		.cfi_def_cfa_offset 8
 1366 0022 BD46     		mov	sp, r7
 1367              		.cfi_def_cfa_register 13
 1368              		@ sp needed
 1369 0024 80BD     		pop	{r7, pc}
 1370              		.cfi_endproc
 1371              	.LFE81:
 1372              		.size	usbPutChar, .-usbPutChar
 1373 0026 00BF     		.section	.text.handle_usb,"ax",%progbits
 1374              		.align	2
 1375              		.global	handle_usb
 1376              		.thumb
 1377              		.thumb_func
 1378              		.type	handle_usb, %function
 1379              	handle_usb:
 1380              	.LFB82:
 532:main.c        **** //* ========================================
 533:main.c        **** void handle_usb()
 534:main.c        **** {
 1381              		.loc 1 534 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 35


 1382              		.cfi_startproc
 1383              		@ args = 0, pretend = 0, frame = 8
 1384              		@ frame_needed = 1, uses_anonymous_args = 0
 1385 0000 80B5     		push	{r7, lr}
 1386              		.cfi_def_cfa_offset 8
 1387              		.cfi_offset 7, -8
 1388              		.cfi_offset 14, -4
 1389 0002 82B0     		sub	sp, sp, #8
 1390              		.cfi_def_cfa_offset 16
 1391 0004 00AF     		add	r7, sp, #0
 1392              		.cfi_def_cfa_register 7
 535:main.c        ****     // handles input at terminal, echos it back to the terminal
 536:main.c        ****     // turn echo OFF, key emulation: only CR
 537:main.c        ****     // entered string is made available in 'line' and 'flag_KB_string' is set
 538:main.c        ****     
 539:main.c        ****     static uint8 usbStarted = FALSE;
 540:main.c        ****     static uint16 usbBufCount = 0;
 541:main.c        ****     uint8 c = 0; 
 1393              		.loc 1 541 0
 1394 0006 0023     		movs	r3, #0
 1395 0008 FB71     		strb	r3, [r7, #7]
 542:main.c        ****     
 543:main.c        **** 
 544:main.c        ****     if (!usbStarted)
 1396              		.loc 1 544 0
 1397 000a 2B4B     		ldr	r3, .L65
 1398 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1399 000e 002B     		cmp	r3, #0
 1400 0010 0AD1     		bne	.L56
 545:main.c        ****     {
 546:main.c        ****         if (USBUART_GetConfiguration())
 1401              		.loc 1 546 0
 1402 0012 FFF7FEFF 		bl	USBUART_GetConfiguration
 1403 0016 0346     		mov	r3, r0
 1404 0018 002B     		cmp	r3, #0
 1405 001a 49D0     		beq	.L64
 547:main.c        ****         {
 548:main.c        ****             USBUART_CDC_Init();
 1406              		.loc 1 548 0
 1407 001c FFF7FEFF 		bl	USBUART_CDC_Init
 549:main.c        ****             usbStarted = TRUE;
 1408              		.loc 1 549 0
 1409 0020 254B     		ldr	r3, .L65
 1410 0022 0122     		movs	r2, #1
 1411 0024 1A70     		strb	r2, [r3]
 550:main.c        ****         }
 551:main.c        ****     }
 552:main.c        ****     else
 553:main.c        ****     {
 554:main.c        ****         if (USBUART_DataIsReady() != 0)
 555:main.c        ****         {  
 556:main.c        ****             c = USBUART_GetChar();
 557:main.c        **** 
 558:main.c        ****             if ((c == 13) || (c == 10))
 559:main.c        ****             {
 560:main.c        **** //                if (usbBufCount > 0)
 561:main.c        ****                 {
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 36


 562:main.c        ****                     entry[usbBufCount]= '\0';
 563:main.c        ****                     strcpy(line,entry);
 564:main.c        ****                     usbBufCount = 0;
 565:main.c        ****                     flag_KB_string = 1;
 566:main.c        ****                 }
 567:main.c        ****             }
 568:main.c        ****             else 
 569:main.c        ****             {
 570:main.c        ****                 if (((c == CHAR_BACKSP) || (c == CHAR_DEL) ) && (usbBufCount > 0) )
 571:main.c        ****                     usbBufCount--;
 572:main.c        ****                 else
 573:main.c        ****                 {
 574:main.c        ****                     if (usbBufCount > (BUF_SIZE-2) ) // one less else strtok triggers a crash
 575:main.c        ****                     {
 576:main.c        ****                        USBUART_PutChar('!');        
 577:main.c        ****                     }
 578:main.c        ****                     else
 579:main.c        ****                         entry[usbBufCount++] = c;  
 580:main.c        ****                 }  
 581:main.c        ****             }
 582:main.c        ****         }
 583:main.c        ****     }    
 584:main.c        **** }
 1412              		.loc 1 584 0
 1413 0026 43E0     		b	.L64
 1414              	.L56:
 554:main.c        ****         {  
 1415              		.loc 1 554 0
 1416 0028 FFF7FEFF 		bl	USBUART_DataIsReady
 1417 002c 0346     		mov	r3, r0
 1418 002e 002B     		cmp	r3, #0
 1419 0030 3ED0     		beq	.L64
 556:main.c        **** 
 1420              		.loc 1 556 0
 1421 0032 FFF7FEFF 		bl	USBUART_GetChar
 1422 0036 0346     		mov	r3, r0
 1423 0038 FB71     		strb	r3, [r7, #7]
 558:main.c        ****             {
 1424              		.loc 1 558 0
 1425 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1426 003c 0D2B     		cmp	r3, #13
 1427 003e 02D0     		beq	.L59
 558:main.c        ****             {
 1428              		.loc 1 558 0 is_stmt 0 discriminator 1
 1429 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1430 0042 0A2B     		cmp	r3, #10
 1431 0044 10D1     		bne	.L60
 1432              	.L59:
 562:main.c        ****                     strcpy(line,entry);
 1433              		.loc 1 562 0 is_stmt 1
 1434 0046 1D4B     		ldr	r3, .L65+4
 1435 0048 1B88     		ldrh	r3, [r3]
 1436 004a 1A46     		mov	r2, r3
 1437 004c 1C4B     		ldr	r3, .L65+8
 1438 004e 0021     		movs	r1, #0
 1439 0050 9954     		strb	r1, [r3, r2]
 563:main.c        ****                     usbBufCount = 0;
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 37


 1440              		.loc 1 563 0
 1441 0052 1B49     		ldr	r1, .L65+8
 1442 0054 1B48     		ldr	r0, .L65+12
 1443 0056 FFF7FEFF 		bl	strcpy
 564:main.c        ****                     flag_KB_string = 1;
 1444              		.loc 1 564 0
 1445 005a 184B     		ldr	r3, .L65+4
 1446 005c 0022     		movs	r2, #0
 1447 005e 1A80     		strh	r2, [r3]	@ movhi
 565:main.c        ****                 }
 1448              		.loc 1 565 0
 1449 0060 194B     		ldr	r3, .L65+16
 1450 0062 0122     		movs	r2, #1
 1451 0064 1A70     		strb	r2, [r3]
 1452 0066 23E0     		b	.L58
 1453              	.L60:
 570:main.c        ****                     usbBufCount--;
 1454              		.loc 1 570 0
 1455 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1456 006a 082B     		cmp	r3, #8
 1457 006c 02D0     		beq	.L61
 570:main.c        ****                     usbBufCount--;
 1458              		.loc 1 570 0 is_stmt 0 discriminator 2
 1459 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1460 0070 7F2B     		cmp	r3, #127
 1461 0072 0AD1     		bne	.L62
 1462              	.L61:
 570:main.c        ****                     usbBufCount--;
 1463              		.loc 1 570 0 discriminator 3
 1464 0074 114B     		ldr	r3, .L65+4
 1465 0076 1B88     		ldrh	r3, [r3]
 1466 0078 002B     		cmp	r3, #0
 1467 007a 06D0     		beq	.L62
 571:main.c        ****                 else
 1468              		.loc 1 571 0 is_stmt 1
 1469 007c 0F4B     		ldr	r3, .L65+4
 1470 007e 1B88     		ldrh	r3, [r3]
 1471 0080 013B     		subs	r3, r3, #1
 1472 0082 9AB2     		uxth	r2, r3
 1473 0084 0D4B     		ldr	r3, .L65+4
 1474 0086 1A80     		strh	r2, [r3]	@ movhi
 1475 0088 12E0     		b	.L58
 1476              	.L62:
 574:main.c        ****                     {
 1477              		.loc 1 574 0
 1478 008a 0C4B     		ldr	r3, .L65+4
 1479 008c 1B88     		ldrh	r3, [r3]
 1480 008e 3E2B     		cmp	r3, #62
 1481 0090 03D9     		bls	.L63
 576:main.c        ****                     }
 1482              		.loc 1 576 0
 1483 0092 2120     		movs	r0, #33
 1484 0094 FFF7FEFF 		bl	USBUART_PutChar
 1485              		.loc 1 584 0
 1486 0098 0AE0     		b	.L64
 1487              	.L63:
 579:main.c        ****                 }  
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 38


 1488              		.loc 1 579 0
 1489 009a 084B     		ldr	r3, .L65+4
 1490 009c 1B88     		ldrh	r3, [r3]
 1491 009e 5A1C     		adds	r2, r3, #1
 1492 00a0 91B2     		uxth	r1, r2
 1493 00a2 064A     		ldr	r2, .L65+4
 1494 00a4 1180     		strh	r1, [r2]	@ movhi
 1495 00a6 1946     		mov	r1, r3
 1496 00a8 054A     		ldr	r2, .L65+8
 1497 00aa FB79     		ldrb	r3, [r7, #7]
 1498 00ac 5354     		strb	r3, [r2, r1]
 1499              		.loc 1 584 0
 1500 00ae FFE7     		b	.L64
 1501              	.L58:
 1502              	.L64:
 1503 00b0 00BF     		nop
 1504 00b2 0837     		adds	r7, r7, #8
 1505              		.cfi_def_cfa_offset 8
 1506 00b4 BD46     		mov	sp, r7
 1507              		.cfi_def_cfa_register 13
 1508              		@ sp needed
 1509 00b6 80BD     		pop	{r7, pc}
 1510              	.L66:
 1511              		.align	2
 1512              	.L65:
 1513 00b8 51000000 		.word	usbStarted.8829
 1514 00bc 52000000 		.word	usbBufCount.8830
 1515 00c0 00000000 		.word	entry
 1516 00c4 00000000 		.word	line
 1517 00c8 00000000 		.word	flag_KB_string
 1518              		.cfi_endproc
 1519              	.LFE82:
 1520              		.size	handle_usb, .-handle_usb
 1521              		.bss
 1522              	usbStarted.8829:
 1523 0051 00       		.space	1
 1524              		.align	1
 1525              	usbBufCount.8830:
 1526 0052 0000     		.space	2
 1527              		.text
 1528              	.Letext0:
 1529              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1530              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1531              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1532              		.file 5 "vars.h"
 1533              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1534              		.section	.debug_info,"",%progbits
 1535              	.Ldebug_info0:
 1536 0000 33080000 		.4byte	0x833
 1537 0004 0400     		.2byte	0x4
 1538 0006 00000000 		.4byte	.Ldebug_abbrev0
 1539 000a 04       		.byte	0x4
 1540 000b 01       		.uleb128 0x1
 1541 000c 63000000 		.4byte	.LASF113
 1542 0010 0C       		.byte	0xc
 1543 0011 00000000 		.4byte	.LASF114
 1544 0015 E2020000 		.4byte	.LASF115
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 39


 1545 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1546 001d 00000000 		.4byte	0
 1547 0021 00000000 		.4byte	.Ldebug_line0
 1548 0025 02       		.uleb128 0x2
 1549 0026 01       		.byte	0x1
 1550 0027 06       		.byte	0x6
 1551 0028 CA050000 		.4byte	.LASF0
 1552 002c 02       		.uleb128 0x2
 1553 002d 01       		.byte	0x1
 1554 002e 08       		.byte	0x8
 1555 002f 80050000 		.4byte	.LASF1
 1556 0033 02       		.uleb128 0x2
 1557 0034 02       		.byte	0x2
 1558 0035 05       		.byte	0x5
 1559 0036 A8040000 		.4byte	.LASF2
 1560 003a 02       		.uleb128 0x2
 1561 003b 02       		.byte	0x2
 1562 003c 07       		.byte	0x7
 1563 003d D6050000 		.4byte	.LASF3
 1564 0041 03       		.uleb128 0x3
 1565 0042 46000000 		.4byte	.LASF12
 1566 0046 02       		.byte	0x2
 1567 0047 3F       		.byte	0x3f
 1568 0048 4C000000 		.4byte	0x4c
 1569 004c 02       		.uleb128 0x2
 1570 004d 04       		.byte	0x4
 1571 004e 05       		.byte	0x5
 1572 004f B2040000 		.4byte	.LASF4
 1573 0053 02       		.uleb128 0x2
 1574 0054 04       		.byte	0x4
 1575 0055 07       		.byte	0x7
 1576 0056 0A050000 		.4byte	.LASF5
 1577 005a 02       		.uleb128 0x2
 1578 005b 08       		.byte	0x8
 1579 005c 05       		.byte	0x5
 1580 005d F0030000 		.4byte	.LASF6
 1581 0061 02       		.uleb128 0x2
 1582 0062 08       		.byte	0x8
 1583 0063 07       		.byte	0x7
 1584 0064 AB010000 		.4byte	.LASF7
 1585 0068 04       		.uleb128 0x4
 1586 0069 04       		.byte	0x4
 1587 006a 05       		.byte	0x5
 1588 006b 696E7400 		.ascii	"int\000"
 1589 006f 02       		.uleb128 0x2
 1590 0070 04       		.byte	0x4
 1591 0071 07       		.byte	0x7
 1592 0072 39000000 		.4byte	.LASF8
 1593 0076 02       		.uleb128 0x2
 1594 0077 08       		.byte	0x8
 1595 0078 04       		.byte	0x4
 1596 0079 77040000 		.4byte	.LASF9
 1597 007d 02       		.uleb128 0x2
 1598 007e 04       		.byte	0x4
 1599 007f 07       		.byte	0x7
 1600 0080 01050000 		.4byte	.LASF10
 1601 0084 05       		.uleb128 0x5
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 40


 1602 0085 04       		.byte	0x4
 1603 0086 8A000000 		.4byte	0x8a
 1604 008a 02       		.uleb128 0x2
 1605 008b 01       		.byte	0x1
 1606 008c 08       		.byte	0x8
 1607 008d C9020000 		.4byte	.LASF11
 1608 0091 03       		.uleb128 0x3
 1609 0092 3E050000 		.4byte	.LASF13
 1610 0096 03       		.byte	0x3
 1611 0097 2C       		.byte	0x2c
 1612 0098 41000000 		.4byte	0x41
 1613 009c 02       		.uleb128 0x2
 1614 009d 08       		.byte	0x8
 1615 009e 04       		.byte	0x4
 1616 009f 26060000 		.4byte	.LASF14
 1617 00a3 02       		.uleb128 0x2
 1618 00a4 04       		.byte	0x4
 1619 00a5 04       		.byte	0x4
 1620 00a6 8F010000 		.4byte	.LASF15
 1621 00aa 06       		.uleb128 0x6
 1622 00ab 20060000 		.4byte	.LASF16
 1623 00af 04       		.byte	0x4
 1624 00b0 E401     		.2byte	0x1e4
 1625 00b2 2C000000 		.4byte	0x2c
 1626 00b6 06       		.uleb128 0x6
 1627 00b7 8E030000 		.4byte	.LASF17
 1628 00bb 04       		.byte	0x4
 1629 00bc E501     		.2byte	0x1e5
 1630 00be 3A000000 		.4byte	0x3a
 1631 00c2 06       		.uleb128 0x6
 1632 00c3 95030000 		.4byte	.LASF18
 1633 00c7 04       		.byte	0x4
 1634 00c8 E701     		.2byte	0x1e7
 1635 00ca 25000000 		.4byte	0x25
 1636 00ce 06       		.uleb128 0x6
 1637 00cf 50000000 		.4byte	.LASF19
 1638 00d3 04       		.byte	0x4
 1639 00d4 E801     		.2byte	0x1e8
 1640 00d6 33000000 		.4byte	0x33
 1641 00da 07       		.uleb128 0x7
 1642 00db 47040000 		.4byte	.LASF116
 1643 00df 20       		.byte	0x20
 1644 00e0 05       		.byte	0x5
 1645 00e1 29       		.byte	0x29
 1646 00e2 B3010000 		.4byte	0x1b3
 1647 00e6 08       		.uleb128 0x8
 1648 00e7 51040000 		.4byte	.LASF20
 1649 00eb 05       		.byte	0x5
 1650 00ec 2A       		.byte	0x2a
 1651 00ed C2000000 		.4byte	0xc2
 1652 00f1 00       		.byte	0
 1653 00f2 08       		.uleb128 0x8
 1654 00f3 A5010000 		.4byte	.LASF21
 1655 00f7 05       		.byte	0x5
 1656 00f8 2B       		.byte	0x2b
 1657 00f9 AA000000 		.4byte	0xaa
 1658 00fd 01       		.byte	0x1
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 41


 1659 00fe 08       		.uleb128 0x8
 1660 00ff 46050000 		.4byte	.LASF22
 1661 0103 05       		.byte	0x5
 1662 0104 2C       		.byte	0x2c
 1663 0105 CE000000 		.4byte	0xce
 1664 0109 02       		.byte	0x2
 1665 010a 08       		.uleb128 0x8
 1666 010b B3020000 		.4byte	.LASF23
 1667 010f 05       		.byte	0x5
 1668 0110 2D       		.byte	0x2d
 1669 0111 CE000000 		.4byte	0xce
 1670 0115 04       		.byte	0x4
 1671 0116 08       		.uleb128 0x8
 1672 0117 E9050000 		.4byte	.LASF24
 1673 011b 05       		.byte	0x5
 1674 011c 2E       		.byte	0x2e
 1675 011d CE000000 		.4byte	0xce
 1676 0121 06       		.byte	0x6
 1677 0122 08       		.uleb128 0x8
 1678 0123 2D060000 		.4byte	.LASF25
 1679 0127 05       		.byte	0x5
 1680 0128 2F       		.byte	0x2f
 1681 0129 CE000000 		.4byte	0xce
 1682 012d 08       		.byte	0x8
 1683 012e 08       		.uleb128 0x8
 1684 012f 2A040000 		.4byte	.LASF26
 1685 0133 05       		.byte	0x5
 1686 0134 30       		.byte	0x30
 1687 0135 CE000000 		.4byte	0xce
 1688 0139 0A       		.byte	0xa
 1689 013a 08       		.uleb128 0x8
 1690 013b CE020000 		.4byte	.LASF27
 1691 013f 05       		.byte	0x5
 1692 0140 31       		.byte	0x31
 1693 0141 CE000000 		.4byte	0xce
 1694 0145 0C       		.byte	0xc
 1695 0146 08       		.uleb128 0x8
 1696 0147 56040000 		.4byte	.LASF28
 1697 014b 05       		.byte	0x5
 1698 014c 32       		.byte	0x32
 1699 014d CE000000 		.4byte	0xce
 1700 0151 0E       		.byte	0xe
 1701 0152 08       		.uleb128 0x8
 1702 0153 FE030000 		.4byte	.LASF29
 1703 0157 05       		.byte	0x5
 1704 0158 33       		.byte	0x33
 1705 0159 CE000000 		.4byte	0xce
 1706 015d 10       		.byte	0x10
 1707 015e 08       		.uleb128 0x8
 1708 015f F9040000 		.4byte	.LASF30
 1709 0163 05       		.byte	0x5
 1710 0164 34       		.byte	0x34
 1711 0165 CE000000 		.4byte	0xce
 1712 0169 12       		.byte	0x12
 1713 016a 08       		.uleb128 0x8
 1714 016b 44060000 		.4byte	.LASF31
 1715 016f 05       		.byte	0x5
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 42


 1716 0170 35       		.byte	0x35
 1717 0171 CE000000 		.4byte	0xce
 1718 0175 14       		.byte	0x14
 1719 0176 08       		.uleb128 0x8
 1720 0177 9A030000 		.4byte	.LASF32
 1721 017b 05       		.byte	0x5
 1722 017c 36       		.byte	0x36
 1723 017d CE000000 		.4byte	0xce
 1724 0181 16       		.byte	0x16
 1725 0182 08       		.uleb128 0x8
 1726 0183 1B010000 		.4byte	.LASF33
 1727 0187 05       		.byte	0x5
 1728 0188 37       		.byte	0x37
 1729 0189 CE000000 		.4byte	0xce
 1730 018d 18       		.byte	0x18
 1731 018e 08       		.uleb128 0x8
 1732 018f D2040000 		.4byte	.LASF34
 1733 0193 05       		.byte	0x5
 1734 0194 38       		.byte	0x38
 1735 0195 CE000000 		.4byte	0xce
 1736 0199 1A       		.byte	0x1a
 1737 019a 08       		.uleb128 0x8
 1738 019b 21040000 		.4byte	.LASF35
 1739 019f 05       		.byte	0x5
 1740 01a0 39       		.byte	0x39
 1741 01a1 CE000000 		.4byte	0xce
 1742 01a5 1C       		.byte	0x1c
 1743 01a6 08       		.uleb128 0x8
 1744 01a7 73010000 		.4byte	.LASF36
 1745 01ab 05       		.byte	0x5
 1746 01ac 3A       		.byte	0x3a
 1747 01ad CE000000 		.4byte	0xce
 1748 01b1 1E       		.byte	0x1e
 1749 01b2 00       		.byte	0
 1750 01b3 09       		.uleb128 0x9
 1751 01b4 13020000 		.4byte	.LASF37
 1752 01b8 01       		.byte	0x1
 1753 01b9 34       		.byte	0x34
 1754 01ba 00000000 		.4byte	.LFB64
 1755 01be 14000000 		.4byte	.LFE64-.LFB64
 1756 01c2 01       		.uleb128 0x1
 1757 01c3 9C       		.byte	0x9c
 1758 01c4 0A       		.uleb128 0xa
 1759 01c5 05020000 		.4byte	.LASF40
 1760 01c9 01       		.byte	0x1
 1761 01ca 3A       		.byte	0x3a
 1762 01cb 00000000 		.4byte	.LFB65
 1763 01cf 2E000000 		.4byte	.LFE65-.LFB65
 1764 01d3 01       		.uleb128 0x1
 1765 01d4 9C       		.byte	0x9c
 1766 01d5 E6010000 		.4byte	0x1e6
 1767 01d9 0B       		.uleb128 0xb
 1768 01da 7800     		.ascii	"x\000"
 1769 01dc 01       		.byte	0x1
 1770 01dd 3A       		.byte	0x3a
 1771 01de 68000000 		.4byte	0x68
 1772 01e2 02       		.uleb128 0x2
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 43


 1773 01e3 91       		.byte	0x91
 1774 01e4 74       		.sleb128 -12
 1775 01e5 00       		.byte	0
 1776 01e6 09       		.uleb128 0x9
 1777 01e7 69050000 		.4byte	.LASF38
 1778 01eb 01       		.byte	0x1
 1779 01ec 42       		.byte	0x42
 1780 01ed 00000000 		.4byte	.LFB66
 1781 01f1 14000000 		.4byte	.LFE66-.LFB66
 1782 01f5 01       		.uleb128 0x1
 1783 01f6 9C       		.byte	0x9c
 1784 01f7 09       		.uleb128 0x9
 1785 01f8 07000000 		.4byte	.LASF39
 1786 01fc 01       		.byte	0x1
 1787 01fd 48       		.byte	0x48
 1788 01fe 00000000 		.4byte	.LFB67
 1789 0202 14000000 		.4byte	.LFE67-.LFB67
 1790 0206 01       		.uleb128 0x1
 1791 0207 9C       		.byte	0x9c
 1792 0208 0A       		.uleb128 0xa
 1793 0209 65010000 		.4byte	.LASF41
 1794 020d 01       		.byte	0x1
 1795 020e 4D       		.byte	0x4d
 1796 020f 00000000 		.4byte	.LFB68
 1797 0213 20000000 		.4byte	.LFE68-.LFB68
 1798 0217 01       		.uleb128 0x1
 1799 0218 9C       		.byte	0x9c
 1800 0219 2A020000 		.4byte	0x22a
 1801 021d 0B       		.uleb128 0xb
 1802 021e 7800     		.ascii	"x\000"
 1803 0220 01       		.byte	0x1
 1804 0221 4D       		.byte	0x4d
 1805 0222 AA000000 		.4byte	0xaa
 1806 0226 02       		.uleb128 0x2
 1807 0227 91       		.byte	0x91
 1808 0228 77       		.sleb128 -9
 1809 0229 00       		.byte	0
 1810 022a 0A       		.uleb128 0xa
 1811 022b E6010000 		.4byte	.LASF42
 1812 022f 01       		.byte	0x1
 1813 0230 58       		.byte	0x58
 1814 0231 00000000 		.4byte	.LFB69
 1815 0235 20000000 		.4byte	.LFE69-.LFB69
 1816 0239 01       		.uleb128 0x1
 1817 023a 9C       		.byte	0x9c
 1818 023b 4C020000 		.4byte	0x24c
 1819 023f 0B       		.uleb128 0xb
 1820 0240 7800     		.ascii	"x\000"
 1821 0242 01       		.byte	0x1
 1822 0243 58       		.byte	0x58
 1823 0244 68000000 		.4byte	0x68
 1824 0248 02       		.uleb128 0x2
 1825 0249 91       		.byte	0x91
 1826 024a 74       		.sleb128 -12
 1827 024b 00       		.byte	0
 1828 024c 0A       		.uleb128 0xa
 1829 024d 3B040000 		.4byte	.LASF43
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 44


 1830 0251 01       		.byte	0x1
 1831 0252 61       		.byte	0x61
 1832 0253 00000000 		.4byte	.LFB70
 1833 0257 2A000000 		.4byte	.LFE70-.LFB70
 1834 025b 01       		.uleb128 0x1
 1835 025c 9C       		.byte	0x9c
 1836 025d 6E020000 		.4byte	0x26e
 1837 0261 0B       		.uleb128 0xb
 1838 0262 7800     		.ascii	"x\000"
 1839 0264 01       		.byte	0x1
 1840 0265 61       		.byte	0x61
 1841 0266 AA000000 		.4byte	0xaa
 1842 026a 02       		.uleb128 0x2
 1843 026b 91       		.byte	0x91
 1844 026c 77       		.sleb128 -9
 1845 026d 00       		.byte	0
 1846 026e 0C       		.uleb128 0xc
 1847 026f 4D060000 		.4byte	.LASF44
 1848 0273 01       		.byte	0x1
 1849 0274 7D       		.byte	0x7d
 1850 0275 00000000 		.4byte	.LFB71
 1851 0279 98000000 		.4byte	.LFE71-.LFB71
 1852 027d 01       		.uleb128 0x1
 1853 027e 9C       		.byte	0x9c
 1854 027f E3020000 		.4byte	0x2e3
 1855 0283 0B       		.uleb128 0xb
 1856 0284 713300   		.ascii	"q3\000"
 1857 0287 01       		.byte	0x1
 1858 0288 7D       		.byte	0x7d
 1859 0289 68000000 		.4byte	0x68
 1860 028d 02       		.uleb128 0x2
 1861 028e 91       		.byte	0x91
 1862 028f 64       		.sleb128 -28
 1863 0290 0B       		.uleb128 0xb
 1864 0291 713400   		.ascii	"q4\000"
 1865 0294 01       		.byte	0x1
 1866 0295 7D       		.byte	0x7d
 1867 0296 68000000 		.4byte	0x68
 1868 029a 02       		.uleb128 0x2
 1869 029b 91       		.byte	0x91
 1870 029c 60       		.sleb128 -32
 1871 029d 0B       		.uleb128 0xb
 1872 029e 713500   		.ascii	"q5\000"
 1873 02a1 01       		.byte	0x1
 1874 02a2 7D       		.byte	0x7d
 1875 02a3 68000000 		.4byte	0x68
 1876 02a7 02       		.uleb128 0x2
 1877 02a8 91       		.byte	0x91
 1878 02a9 5C       		.sleb128 -36
 1879 02aa 0D       		.uleb128 0xd
 1880 02ab 1B000000 		.4byte	.LASF45
 1881 02af 01       		.byte	0x1
 1882 02b0 7E       		.byte	0x7e
 1883 02b1 68000000 		.4byte	0x68
 1884 02b5 02       		.uleb128 0x2
 1885 02b6 91       		.byte	0x91
 1886 02b7 74       		.sleb128 -12
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 45


 1887 02b8 0D       		.uleb128 0xd
 1888 02b9 25000000 		.4byte	.LASF46
 1889 02bd 01       		.byte	0x1
 1890 02be 7E       		.byte	0x7e
 1891 02bf 68000000 		.4byte	0x68
 1892 02c3 02       		.uleb128 0x2
 1893 02c4 91       		.byte	0x91
 1894 02c5 70       		.sleb128 -16
 1895 02c6 0D       		.uleb128 0xd
 1896 02c7 2F000000 		.4byte	.LASF47
 1897 02cb 01       		.byte	0x1
 1898 02cc 7E       		.byte	0x7e
 1899 02cd 68000000 		.4byte	0x68
 1900 02d1 02       		.uleb128 0x2
 1901 02d2 91       		.byte	0x91
 1902 02d3 6C       		.sleb128 -20
 1903 02d4 0D       		.uleb128 0xd
 1904 02d5 93050000 		.4byte	.LASF48
 1905 02d9 01       		.byte	0x1
 1906 02da 7F       		.byte	0x7f
 1907 02db 68000000 		.4byte	0x68
 1908 02df 02       		.uleb128 0x2
 1909 02e0 91       		.byte	0x91
 1910 02e1 68       		.sleb128 -24
 1911 02e2 00       		.byte	0
 1912 02e3 0A       		.uleb128 0xa
 1913 02e4 27050000 		.4byte	.LASF49
 1914 02e8 01       		.byte	0x1
 1915 02e9 9D       		.byte	0x9d
 1916 02ea 00000000 		.4byte	.LFB72
 1917 02ee D0000000 		.4byte	.LFE72-.LFB72
 1918 02f2 01       		.uleb128 0x1
 1919 02f3 9C       		.byte	0x9c
 1920 02f4 4D030000 		.4byte	0x34d
 1921 02f8 0D       		.uleb128 0xd
 1922 02f9 DE010000 		.4byte	.LASF50
 1923 02fd 01       		.byte	0x1
 1924 02fe A5       		.byte	0xa5
 1925 02ff CE000000 		.4byte	0xce
 1926 0303 02       		.uleb128 0x2
 1927 0304 91       		.byte	0x91
 1928 0305 76       		.sleb128 -10
 1929 0306 0D       		.uleb128 0xd
 1930 0307 DA040000 		.4byte	.LASF51
 1931 030b 01       		.byte	0x1
 1932 030c A6       		.byte	0xa6
 1933 030d CE000000 		.4byte	0xce
 1934 0311 02       		.uleb128 0x2
 1935 0312 91       		.byte	0x91
 1936 0313 74       		.sleb128 -12
 1937 0314 0D       		.uleb128 0xd
 1938 0315 F5010000 		.4byte	.LASF52
 1939 0319 01       		.byte	0x1
 1940 031a A7       		.byte	0xa7
 1941 031b CE000000 		.4byte	0xce
 1942 031f 02       		.uleb128 0x2
 1943 0320 91       		.byte	0x91
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 46


 1944 0321 72       		.sleb128 -14
 1945 0322 0D       		.uleb128 0xd
 1946 0323 CE010000 		.4byte	.LASF53
 1947 0327 01       		.byte	0x1
 1948 0328 A9       		.byte	0xa9
 1949 0329 CE000000 		.4byte	0xce
 1950 032d 02       		.uleb128 0x2
 1951 032e 91       		.byte	0x91
 1952 032f 70       		.sleb128 -16
 1953 0330 0D       		.uleb128 0xd
 1954 0331 D6010000 		.4byte	.LASF54
 1955 0335 01       		.byte	0x1
 1956 0336 AA       		.byte	0xaa
 1957 0337 CE000000 		.4byte	0xce
 1958 033b 02       		.uleb128 0x2
 1959 033c 91       		.byte	0x91
 1960 033d 6E       		.sleb128 -18
 1961 033e 0D       		.uleb128 0xd
 1962 033f FD010000 		.4byte	.LASF55
 1963 0343 01       		.byte	0x1
 1964 0344 AB       		.byte	0xab
 1965 0345 CE000000 		.4byte	0xce
 1966 0349 02       		.uleb128 0x2
 1967 034a 91       		.byte	0x91
 1968 034b 6C       		.sleb128 -20
 1969 034c 00       		.byte	0
 1970 034d 0E       		.uleb128 0xe
 1971 034e 8C020000 		.4byte	.LASF63
 1972 0352 01       		.byte	0x1
 1973 0353 DC       		.byte	0xdc
 1974 0354 00000000 		.4byte	.LFB73
 1975 0358 0C000000 		.4byte	.LFE73-.LFB73
 1976 035c 01       		.uleb128 0x1
 1977 035d 9C       		.byte	0x9c
 1978 035e 0F       		.uleb128 0xf
 1979 035f D7020000 		.4byte	.LASF75
 1980 0363 01       		.byte	0x1
 1981 0364 EF       		.byte	0xef
 1982 0365 00000000 		.4byte	.LFB74
 1983 0369 C0000000 		.4byte	.LFE74-.LFB74
 1984 036d 01       		.uleb128 0x1
 1985 036e 9C       		.byte	0x9c
 1986 036f CC030000 		.4byte	0x3cc
 1987 0373 0D       		.uleb128 0xd
 1988 0374 F1000000 		.4byte	.LASF56
 1989 0378 01       		.byte	0x1
 1990 0379 F0       		.byte	0xf0
 1991 037a CE000000 		.4byte	0xce
 1992 037e 02       		.uleb128 0x2
 1993 037f 91       		.byte	0x91
 1994 0380 76       		.sleb128 -10
 1995 0381 0D       		.uleb128 0xd
 1996 0382 06010000 		.4byte	.LASF57
 1997 0386 01       		.byte	0x1
 1998 0387 F1       		.byte	0xf1
 1999 0388 CE000000 		.4byte	0xce
 2000 038c 02       		.uleb128 0x2
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 47


 2001 038d 91       		.byte	0x91
 2002 038e 74       		.sleb128 -12
 2003 038f 0D       		.uleb128 0xd
 2004 0390 47020000 		.4byte	.LASF58
 2005 0394 01       		.byte	0x1
 2006 0395 F2       		.byte	0xf2
 2007 0396 CE000000 		.4byte	0xce
 2008 039a 02       		.uleb128 0x2
 2009 039b 91       		.byte	0x91
 2010 039c 72       		.sleb128 -14
 2011 039d 0D       		.uleb128 0xd
 2012 039e 38020000 		.4byte	.LASF59
 2013 03a2 01       		.byte	0x1
 2014 03a3 F3       		.byte	0xf3
 2015 03a4 CE000000 		.4byte	0xce
 2016 03a8 02       		.uleb128 0x2
 2017 03a9 91       		.byte	0x91
 2018 03aa 70       		.sleb128 -16
 2019 03ab 0D       		.uleb128 0xd
 2020 03ac 5C050000 		.4byte	.LASF60
 2021 03b0 01       		.byte	0x1
 2022 03b1 F4       		.byte	0xf4
 2023 03b2 CC030000 		.4byte	0x3cc
 2024 03b6 04       		.uleb128 0x4
 2025 03b7 91       		.byte	0x91
 2026 03b8 E0B17F   		.sleb128 -10016
 2027 03bb 0D       		.uleb128 0xd
 2028 03bc A6020000 		.4byte	.LASF61
 2029 03c0 01       		.byte	0x1
 2030 03c1 F6       		.byte	0xf6
 2031 03c2 CC030000 		.4byte	0x3cc
 2032 03c6 04       		.uleb128 0x4
 2033 03c7 91       		.byte	0x91
 2034 03c8 D0E37E   		.sleb128 -20016
 2035 03cb 00       		.byte	0
 2036 03cc 10       		.uleb128 0x10
 2037 03cd 8A000000 		.4byte	0x8a
 2038 03d1 DD030000 		.4byte	0x3dd
 2039 03d5 11       		.uleb128 0x11
 2040 03d6 7D000000 		.4byte	0x7d
 2041 03da 0F27     		.2byte	0x270f
 2042 03dc 00       		.byte	0
 2043 03dd 0A       		.uleb128 0xa
 2044 03de 0D040000 		.4byte	.LASF62
 2045 03e2 01       		.byte	0x1
 2046 03e3 FE       		.byte	0xfe
 2047 03e4 00000000 		.4byte	.LFB75
 2048 03e8 1A000000 		.4byte	.LFE75-.LFB75
 2049 03ec 01       		.uleb128 0x1
 2050 03ed 9C       		.byte	0x9c
 2051 03ee FF030000 		.4byte	0x3ff
 2052 03f2 0B       		.uleb128 0xb
 2053 03f3 7800     		.ascii	"x\000"
 2054 03f5 01       		.byte	0x1
 2055 03f6 FE       		.byte	0xfe
 2056 03f7 68000000 		.4byte	0x68
 2057 03fb 02       		.uleb128 0x2
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 48


 2058 03fc 91       		.byte	0x91
 2059 03fd 74       		.sleb128 -12
 2060 03fe 00       		.byte	0
 2061 03ff 12       		.uleb128 0x12
 2062 0400 08060000 		.4byte	.LASF64
 2063 0404 01       		.byte	0x1
 2064 0405 1601     		.2byte	0x116
 2065 0407 00000000 		.4byte	.LFB76
 2066 040b 0C000000 		.4byte	.LFE76-.LFB76
 2067 040f 01       		.uleb128 0x1
 2068 0410 9C       		.byte	0x9c
 2069 0411 13       		.uleb128 0x13
 2070 0412 FB050000 		.4byte	.LASF65
 2071 0416 01       		.byte	0x1
 2072 0417 2301     		.2byte	0x123
 2073 0419 68000000 		.4byte	0x68
 2074 041d 00000000 		.4byte	.LFB77
 2075 0421 58010000 		.4byte	.LFE77-.LFB77
 2076 0425 01       		.uleb128 0x1
 2077 0426 9C       		.byte	0x9c
 2078 0427 63040000 		.4byte	0x463
 2079 042b 14       		.uleb128 0x14
 2080 042c E2040000 		.4byte	.LASF66
 2081 0430 01       		.byte	0x1
 2082 0431 4601     		.2byte	0x146
 2083 0433 68000000 		.4byte	0x68
 2084 0437 02       		.uleb128 0x2
 2085 0438 91       		.byte	0x91
 2086 0439 74       		.sleb128 -12
 2087 043a 15       		.uleb128 0x15
 2088 043b 54000000 		.4byte	.LBB2
 2089 043f E6000000 		.4byte	.LBE2-.LBB2
 2090 0443 14       		.uleb128 0x14
 2091 0444 11000000 		.4byte	.LASF67
 2092 0448 01       		.byte	0x1
 2093 0449 8901     		.2byte	0x189
 2094 044b 68000000 		.4byte	0x68
 2095 044f 02       		.uleb128 0x2
 2096 0450 91       		.byte	0x91
 2097 0451 70       		.sleb128 -16
 2098 0452 14       		.uleb128 0x14
 2099 0453 00060000 		.4byte	.LASF68
 2100 0457 01       		.byte	0x1
 2101 0458 8A01     		.2byte	0x18a
 2102 045a 68000000 		.4byte	0x68
 2103 045e 02       		.uleb128 0x2
 2104 045f 91       		.byte	0x91
 2105 0460 6C       		.sleb128 -20
 2106 0461 00       		.byte	0
 2107 0462 00       		.byte	0
 2108 0463 16       		.uleb128 0x16
 2109 0464 7A020000 		.4byte	.LASF69
 2110 0468 01       		.byte	0x1
 2111 0469 E501     		.2byte	0x1e5
 2112 046b 68000000 		.4byte	0x68
 2113 046f 00000000 		.4byte	.LFB78
 2114 0473 50000000 		.4byte	.LFE78-.LFB78
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 49


 2115 0477 01       		.uleb128 0x1
 2116 0478 9C       		.byte	0x9c
 2117 0479 B7040000 		.4byte	0x4b7
 2118 047d 14       		.uleb128 0x14
 2119 047e 06040000 		.4byte	.LASF70
 2120 0482 01       		.byte	0x1
 2121 0483 E701     		.2byte	0x1e7
 2122 0485 68000000 		.4byte	0x68
 2123 0489 02       		.uleb128 0x2
 2124 048a 91       		.byte	0x91
 2125 048b 74       		.sleb128 -12
 2126 048c 17       		.uleb128 0x17
 2127 048d 513100   		.ascii	"Q1\000"
 2128 0490 01       		.byte	0x1
 2129 0491 E801     		.2byte	0x1e8
 2130 0493 68000000 		.4byte	0x68
 2131 0497 02       		.uleb128 0x2
 2132 0498 91       		.byte	0x91
 2133 0499 70       		.sleb128 -16
 2134 049a 17       		.uleb128 0x17
 2135 049b 513200   		.ascii	"Q2\000"
 2136 049e 01       		.byte	0x1
 2137 049f E901     		.2byte	0x1e9
 2138 04a1 68000000 		.4byte	0x68
 2139 04a5 02       		.uleb128 0x2
 2140 04a6 91       		.byte	0x91
 2141 04a7 6C       		.sleb128 -20
 2142 04a8 17       		.uleb128 0x17
 2143 04a9 513600   		.ascii	"Q6\000"
 2144 04ac 01       		.byte	0x1
 2145 04ad EA01     		.2byte	0x1ea
 2146 04af 68000000 		.4byte	0x68
 2147 04b3 02       		.uleb128 0x2
 2148 04b4 91       		.byte	0x91
 2149 04b5 68       		.sleb128 -24
 2150 04b6 00       		.byte	0
 2151 04b7 16       		.uleb128 0x16
 2152 04b8 63040000 		.4byte	.LASF71
 2153 04bc 01       		.byte	0x1
 2154 04bd F301     		.2byte	0x1f3
 2155 04bf 68000000 		.4byte	0x68
 2156 04c3 00000000 		.4byte	.LFB79
 2157 04c7 50000000 		.4byte	.LFE79-.LFB79
 2158 04cb 01       		.uleb128 0x1
 2159 04cc 9C       		.byte	0x9c
 2160 04cd 0B050000 		.4byte	0x50b
 2161 04d1 14       		.uleb128 0x14
 2162 04d2 23020000 		.4byte	.LASF72
 2163 04d6 01       		.byte	0x1
 2164 04d7 F501     		.2byte	0x1f5
 2165 04d9 68000000 		.4byte	0x68
 2166 04dd 02       		.uleb128 0x2
 2167 04de 91       		.byte	0x91
 2168 04df 74       		.sleb128 -12
 2169 04e0 17       		.uleb128 0x17
 2170 04e1 513300   		.ascii	"Q3\000"
 2171 04e4 01       		.byte	0x1
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 50


 2172 04e5 F601     		.2byte	0x1f6
 2173 04e7 68000000 		.4byte	0x68
 2174 04eb 02       		.uleb128 0x2
 2175 04ec 91       		.byte	0x91
 2176 04ed 70       		.sleb128 -16
 2177 04ee 17       		.uleb128 0x17
 2178 04ef 513400   		.ascii	"Q4\000"
 2179 04f2 01       		.byte	0x1
 2180 04f3 F701     		.2byte	0x1f7
 2181 04f5 68000000 		.4byte	0x68
 2182 04f9 02       		.uleb128 0x2
 2183 04fa 91       		.byte	0x91
 2184 04fb 6C       		.sleb128 -20
 2185 04fc 17       		.uleb128 0x17
 2186 04fd 513500   		.ascii	"Q5\000"
 2187 0500 01       		.byte	0x1
 2188 0501 F801     		.2byte	0x1f8
 2189 0503 68000000 		.4byte	0x68
 2190 0507 02       		.uleb128 0x2
 2191 0508 91       		.byte	0x91
 2192 0509 68       		.sleb128 -24
 2193 050a 00       		.byte	0
 2194 050b 18       		.uleb128 0x18
 2195 050c EC040000 		.4byte	.LASF73
 2196 0510 01       		.byte	0x1
 2197 0511 FF01     		.2byte	0x1ff
 2198 0513 00000000 		.4byte	.LFB80
 2199 0517 3E000000 		.4byte	.LFE80-.LFB80
 2200 051b 01       		.uleb128 0x1
 2201 051c 9C       		.byte	0x9c
 2202 051d 2F050000 		.4byte	0x52f
 2203 0521 19       		.uleb128 0x19
 2204 0522 7300     		.ascii	"s\000"
 2205 0524 01       		.byte	0x1
 2206 0525 FF01     		.2byte	0x1ff
 2207 0527 84000000 		.4byte	0x84
 2208 052b 02       		.uleb128 0x2
 2209 052c 91       		.byte	0x91
 2210 052d 74       		.sleb128 -12
 2211 052e 00       		.byte	0
 2212 052f 18       		.uleb128 0x18
 2213 0530 BF050000 		.4byte	.LASF74
 2214 0534 01       		.byte	0x1
 2215 0535 0D02     		.2byte	0x20d
 2216 0537 00000000 		.4byte	.LFB81
 2217 053b 26000000 		.4byte	.LFE81-.LFB81
 2218 053f 01       		.uleb128 0x1
 2219 0540 9C       		.byte	0x9c
 2220 0541 53050000 		.4byte	0x553
 2221 0545 19       		.uleb128 0x19
 2222 0546 6300     		.ascii	"c\000"
 2223 0548 01       		.byte	0x1
 2224 0549 0D02     		.2byte	0x20d
 2225 054b 8A000000 		.4byte	0x8a
 2226 054f 02       		.uleb128 0x2
 2227 0550 91       		.byte	0x91
 2228 0551 77       		.sleb128 -9
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 51


 2229 0552 00       		.byte	0
 2230 0553 1A       		.uleb128 0x1a
 2231 0554 16040000 		.4byte	.LASF76
 2232 0558 01       		.byte	0x1
 2233 0559 1502     		.2byte	0x215
 2234 055b 00000000 		.4byte	.LFB82
 2235 055f CC000000 		.4byte	.LFE82-.LFB82
 2236 0563 01       		.uleb128 0x1
 2237 0564 9C       		.byte	0x9c
 2238 0565 9B050000 		.4byte	0x59b
 2239 0569 14       		.uleb128 0x14
 2240 056a 51050000 		.4byte	.LASF77
 2241 056e 01       		.byte	0x1
 2242 056f 1B02     		.2byte	0x21b
 2243 0571 AA000000 		.4byte	0xaa
 2244 0575 05       		.uleb128 0x5
 2245 0576 03       		.byte	0x3
 2246 0577 51000000 		.4byte	usbStarted.8829
 2247 057b 14       		.uleb128 0x14
 2248 057c 62020000 		.4byte	.LASF78
 2249 0580 01       		.byte	0x1
 2250 0581 1C02     		.2byte	0x21c
 2251 0583 B6000000 		.4byte	0xb6
 2252 0587 05       		.uleb128 0x5
 2253 0588 03       		.byte	0x3
 2254 0589 52000000 		.4byte	usbBufCount.8830
 2255 058d 17       		.uleb128 0x17
 2256 058e 6300     		.ascii	"c\000"
 2257 0590 01       		.byte	0x1
 2258 0591 1D02     		.2byte	0x21d
 2259 0593 AA000000 		.4byte	0xaa
 2260 0597 02       		.uleb128 0x2
 2261 0598 91       		.byte	0x91
 2262 0599 77       		.sleb128 -9
 2263 059a 00       		.byte	0
 2264 059b 0D       		.uleb128 0xd
 2265 059c 9F010000 		.4byte	.LASF79
 2266 05a0 01       		.byte	0x1
 2267 05a1 DB       		.byte	0xdb
 2268 05a2 AC050000 		.4byte	0x5ac
 2269 05a6 05       		.uleb128 0x5
 2270 05a7 03       		.byte	0x3
 2271 05a8 50000000 		.4byte	count
 2272 05ac 1B       		.uleb128 0x1b
 2273 05ad C2000000 		.4byte	0xc2
 2274 05b1 1C       		.uleb128 0x1c
 2275 05b2 BB040000 		.4byte	.LASF80
 2276 05b6 06       		.byte	0x6
 2277 05b7 1207     		.2byte	0x712
 2278 05b9 BD050000 		.4byte	0x5bd
 2279 05bd 1B       		.uleb128 0x1b
 2280 05be 91000000 		.4byte	0x91
 2281 05c2 1D       		.uleb128 0x1d
 2282 05c3 747300   		.ascii	"ts\000"
 2283 05c6 05       		.byte	0x5
 2284 05c7 10       		.byte	0x10
 2285 05c8 AA000000 		.4byte	0xaa
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 52


 2286 05cc 05       		.uleb128 0x5
 2287 05cd 03       		.byte	0x3
 2288 05ce 00000000 		.4byte	ts
 2289 05d2 1E       		.uleb128 0x1e
 2290 05d3 9A050000 		.4byte	.LASF81
 2291 05d7 05       		.byte	0x5
 2292 05d8 11       		.byte	0x11
 2293 05d9 B6000000 		.4byte	0xb6
 2294 05dd 05       		.uleb128 0x5
 2295 05de 03       		.byte	0x3
 2296 05df 00000000 		.4byte	ts_enc
 2297 05e3 1E       		.uleb128 0x1e
 2298 05e4 C8040000 		.4byte	.LASF82
 2299 05e8 05       		.byte	0x5
 2300 05e9 12       		.byte	0x12
 2301 05ea B6000000 		.4byte	0xb6
 2302 05ee 05       		.uleb128 0x5
 2303 05ef 03       		.byte	0x3
 2304 05f0 00000000 		.4byte	ts_update
 2305 05f4 1E       		.uleb128 0x1e
 2306 05f5 32040000 		.4byte	.LASF83
 2307 05f9 05       		.byte	0x5
 2308 05fa 13       		.byte	0x13
 2309 05fb B6000000 		.4byte	0xb6
 2310 05ff 05       		.uleb128 0x5
 2311 0600 03       		.byte	0x3
 2312 0601 00000000 		.4byte	ts_speed
 2313 0605 1E       		.uleb128 0x1e
 2314 0606 BE020000 		.4byte	.LASF84
 2315 060a 05       		.byte	0x5
 2316 060b 14       		.byte	0x14
 2317 060c B6000000 		.4byte	0xb6
 2318 0610 05       		.uleb128 0x5
 2319 0611 03       		.byte	0x3
 2320 0612 00000000 		.4byte	ts_display
 2321 0616 1E       		.uleb128 0x1e
 2322 0617 56020000 		.4byte	.LASF85
 2323 061b 05       		.byte	0x5
 2324 061c 16       		.byte	0x16
 2325 061d AA000000 		.4byte	0xaa
 2326 0621 05       		.uleb128 0x5
 2327 0622 03       		.byte	0x3
 2328 0623 00000000 		.4byte	flag_ts_enc
 2329 0627 1E       		.uleb128 0x1e
 2330 0628 29020000 		.4byte	.LASF86
 2331 062c 05       		.byte	0x5
 2332 062d 17       		.byte	0x17
 2333 062e AA000000 		.4byte	0xaa
 2334 0632 05       		.uleb128 0x5
 2335 0633 03       		.byte	0x3
 2336 0634 00000000 		.4byte	flag_ts_update
 2337 0638 1E       		.uleb128 0x1e
 2338 0639 83040000 		.4byte	.LASF87
 2339 063d 05       		.byte	0x5
 2340 063e 18       		.byte	0x18
 2341 063f AA000000 		.4byte	0xaa
 2342 0643 05       		.uleb128 0x5
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 53


 2343 0644 03       		.byte	0x3
 2344 0645 00000000 		.4byte	flag_ts_speed
 2345 0649 1E       		.uleb128 0x1e
 2346 064a A1050000 		.4byte	.LASF88
 2347 064e 05       		.byte	0x5
 2348 064f 19       		.byte	0x19
 2349 0650 AA000000 		.4byte	0xaa
 2350 0654 05       		.uleb128 0x5
 2351 0655 03       		.byte	0x3
 2352 0656 00000000 		.4byte	flag_ts_display
 2353 065a 1E       		.uleb128 0x1e
 2354 065b A0040000 		.4byte	.LASF89
 2355 065f 05       		.byte	0x5
 2356 0660 1C       		.byte	0x1c
 2357 0661 AA000000 		.4byte	0xaa
 2358 0665 05       		.uleb128 0x5
 2359 0666 03       		.byte	0x3
 2360 0667 00000000 		.4byte	flag_rx
 2361 066b 1E       		.uleb128 0x1e
 2362 066c C2010000 		.4byte	.LASF90
 2363 0670 05       		.byte	0x5
 2364 0671 1D       		.byte	0x1d
 2365 0672 AA000000 		.4byte	0xaa
 2366 0676 05       		.uleb128 0x5
 2367 0677 03       		.byte	0x3
 2368 0678 00000000 		.4byte	flag_packet
 2369 067c 1E       		.uleb128 0x1e
 2370 067d 35060000 		.4byte	.LASF91
 2371 0681 05       		.byte	0x5
 2372 0682 1E       		.byte	0x1e
 2373 0683 AA000000 		.4byte	0xaa
 2374 0687 05       		.uleb128 0x5
 2375 0688 03       		.byte	0x3
 2376 0689 00000000 		.4byte	flag_KB_string
 2377 068d 1E       		.uleb128 0x1e
 2378 068e 91040000 		.4byte	.LASF92
 2379 0692 05       		.byte	0x5
 2380 0693 20       		.byte	0x20
 2381 0694 AA000000 		.4byte	0xaa
 2382 0698 05       		.uleb128 0x5
 2383 0699 03       		.byte	0x3
 2384 069a 00000000 		.4byte	dataready_flag
 2385 069e 1E       		.uleb128 0x1e
 2386 069f 49010000 		.4byte	.LASF93
 2387 06a3 05       		.byte	0x5
 2388 06a4 22       		.byte	0x22
 2389 06a5 AA000000 		.4byte	0xaa
 2390 06a9 05       		.uleb128 0x5
 2391 06aa 03       		.byte	0x3
 2392 06ab 00000000 		.4byte	flag_rf_transmission_active
 2393 06af 10       		.uleb128 0x10
 2394 06b0 8A000000 		.4byte	0x8a
 2395 06b4 BF060000 		.4byte	0x6bf
 2396 06b8 1F       		.uleb128 0x1f
 2397 06b9 7D000000 		.4byte	0x7d
 2398 06bd 3F       		.byte	0x3f
 2399 06be 00       		.byte	0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 54


 2400 06bf 1E       		.uleb128 0x1e
 2401 06c0 B1050000 		.4byte	.LASF94
 2402 06c4 05       		.byte	0x5
 2403 06c5 25       		.byte	0x25
 2404 06c6 AF060000 		.4byte	0x6af
 2405 06ca 05       		.uleb128 0x5
 2406 06cb 03       		.byte	0x3
 2407 06cc 00000000 		.4byte	displaystring
 2408 06d0 1E       		.uleb128 0x1e
 2409 06d1 8E050000 		.4byte	.LASF95
 2410 06d5 05       		.byte	0x5
 2411 06d6 26       		.byte	0x26
 2412 06d7 AF060000 		.4byte	0x6af
 2413 06db 05       		.uleb128 0x5
 2414 06dc 03       		.byte	0x3
 2415 06dd 00000000 		.4byte	line
 2416 06e1 1E       		.uleb128 0x1e
 2417 06e2 7A050000 		.4byte	.LASF96
 2418 06e6 05       		.byte	0x5
 2419 06e7 26       		.byte	0x26
 2420 06e8 AF060000 		.4byte	0x6af
 2421 06ec 05       		.uleb128 0x5
 2422 06ed 03       		.byte	0x3
 2423 06ee 00000000 		.4byte	entry
 2424 06f2 10       		.uleb128 0x10
 2425 06f3 AA000000 		.4byte	0xaa
 2426 06f7 02070000 		.4byte	0x702
 2427 06fb 1F       		.uleb128 0x1f
 2428 06fc 7D000000 		.4byte	0x7d
 2429 0700 3F       		.byte	0x3f
 2430 0701 00       		.byte	0
 2431 0702 1E       		.uleb128 0x1e
 2432 0703 95010000 		.4byte	.LASF97
 2433 0707 05       		.byte	0x5
 2434 0708 27       		.byte	0x27
 2435 0709 F2060000 		.4byte	0x6f2
 2436 070d 05       		.uleb128 0x5
 2437 070e 03       		.byte	0x3
 2438 070f 00000000 		.4byte	usbBuffer
 2439 0713 1E       		.uleb128 0x1e
 2440 0714 56000000 		.4byte	.LASF98
 2441 0718 05       		.byte	0x5
 2442 0719 3C       		.byte	0x3c
 2443 071a DA000000 		.4byte	0xda
 2444 071e 05       		.uleb128 0x5
 2445 071f 03       		.byte	0x3
 2446 0720 00000000 		.4byte	system_state
 2447 0724 1E       		.uleb128 0x1e
 2448 0725 6E020000 		.4byte	.LASF99
 2449 0729 01       		.byte	0x1
 2450 072a 6C       		.byte	0x6c
 2451 072b 68000000 		.4byte	0x68
 2452 072f 05       		.uleb128 0x5
 2453 0730 03       		.byte	0x3
 2454 0731 00000000 		.4byte	changeMotor
 2455 0735 1E       		.uleb128 0x1e
 2456 0736 3E010000 		.4byte	.LASF100
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 55


 2457 073a 01       		.byte	0x1
 2458 073b 6D       		.byte	0x6d
 2459 073c 68000000 		.4byte	0x68
 2460 0740 05       		.uleb128 0x5
 2461 0741 03       		.byte	0x3
 2462 0742 00000000 		.4byte	checkLight
 2463 0746 1E       		.uleb128 0x1e
 2464 0747 1C050000 		.4byte	.LASF101
 2465 074b 01       		.byte	0x1
 2466 074c 6E       		.byte	0x6e
 2467 074d 68000000 		.4byte	0x68
 2468 0751 05       		.uleb128 0x5
 2469 0752 03       		.byte	0x3
 2470 0753 00000000 		.4byte	lightState
 2471 0757 10       		.uleb128 0x10
 2472 0758 67070000 		.4byte	0x767
 2473 075c 67070000 		.4byte	0x767
 2474 0760 1F       		.uleb128 0x1f
 2475 0761 7D000000 		.4byte	0x7d
 2476 0765 02       		.byte	0x2
 2477 0766 00       		.byte	0
 2478 0767 1B       		.uleb128 0x1b
 2479 0768 68000000 		.4byte	0x68
 2480 076c 1E       		.uleb128 0x1e
 2481 076d 7B030000 		.4byte	.LASF102
 2482 0771 01       		.byte	0x1
 2483 0772 6F       		.byte	0x6f
 2484 0773 7D070000 		.4byte	0x77d
 2485 0777 05       		.uleb128 0x5
 2486 0778 03       		.byte	0x3
 2487 0779 00000000 		.4byte	lightDetectedFront
 2488 077d 1B       		.uleb128 0x1b
 2489 077e 57070000 		.4byte	0x757
 2490 0782 1E       		.uleb128 0x1e
 2491 0783 23010000 		.4byte	.LASF103
 2492 0787 01       		.byte	0x1
 2493 0788 70       		.byte	0x70
 2494 0789 93070000 		.4byte	0x793
 2495 078d 05       		.uleb128 0x5
 2496 078e 03       		.byte	0x3
 2497 078f 00000000 		.4byte	lightDetectedBack
 2498 0793 1B       		.uleb128 0x1b
 2499 0794 57070000 		.4byte	0x757
 2500 0798 1E       		.uleb128 0x1e
 2501 0799 35010000 		.4byte	.LASF104
 2502 079d 01       		.byte	0x1
 2503 079e 71       		.byte	0x71
 2504 079f 67070000 		.4byte	0x767
 2505 07a3 05       		.uleb128 0x5
 2506 07a4 03       		.byte	0x3
 2507 07a5 00000000 		.4byte	counteoc
 2508 07a9 1E       		.uleb128 0x1e
 2509 07aa 80010000 		.4byte	.LASF105
 2510 07ae 01       		.byte	0x1
 2511 07af 72       		.byte	0x72
 2512 07b0 67070000 		.4byte	0x767
 2513 07b4 05       		.uleb128 0x5
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 56


 2514 07b5 03       		.byte	0x3
 2515 07b6 00000000 		.4byte	processSensors
 2516 07ba 1E       		.uleb128 0x1e
 2517 07bb A7030000 		.4byte	.LASF106
 2518 07bf 01       		.byte	0x1
 2519 07c0 73       		.byte	0x73
 2520 07c1 67070000 		.4byte	0x767
 2521 07c5 05       		.uleb128 0x5
 2522 07c6 03       		.byte	0x3
 2523 07c7 00000000 		.4byte	middle
 2524 07cb 1E       		.uleb128 0x1e
 2525 07cc C4030000 		.4byte	.LASF107
 2526 07d0 01       		.byte	0x1
 2527 07d1 74       		.byte	0x74
 2528 07d2 DC070000 		.4byte	0x7dc
 2529 07d6 05       		.uleb128 0x5
 2530 07d7 03       		.byte	0x3
 2531 07d8 00000000 		.4byte	sumvalueQ3
 2532 07dc 1B       		.uleb128 0x1b
 2533 07dd CE000000 		.4byte	0xce
 2534 07e1 1E       		.uleb128 0x1e
 2535 07e2 CF030000 		.4byte	.LASF108
 2536 07e6 01       		.byte	0x1
 2537 07e7 75       		.byte	0x75
 2538 07e8 DC070000 		.4byte	0x7dc
 2539 07ec 05       		.uleb128 0x5
 2540 07ed 03       		.byte	0x3
 2541 07ee 00000000 		.4byte	sumvalueQ4
 2542 07f2 1E       		.uleb128 0x1e
 2543 07f3 DA030000 		.4byte	.LASF109
 2544 07f7 01       		.byte	0x1
 2545 07f8 76       		.byte	0x76
 2546 07f9 DC070000 		.4byte	0x7dc
 2547 07fd 05       		.uleb128 0x5
 2548 07fe 03       		.byte	0x3
 2549 07ff 00000000 		.4byte	sumvalueQ5
 2550 0803 1E       		.uleb128 0x1e
 2551 0804 AE030000 		.4byte	.LASF110
 2552 0808 01       		.byte	0x1
 2553 0809 78       		.byte	0x78
 2554 080a DC070000 		.4byte	0x7dc
 2555 080e 05       		.uleb128 0x5
 2556 080f 03       		.byte	0x3
 2557 0810 00000000 		.4byte	sumvalueQ1
 2558 0814 1E       		.uleb128 0x1e
 2559 0815 B9030000 		.4byte	.LASF111
 2560 0819 01       		.byte	0x1
 2561 081a 79       		.byte	0x79
 2562 081b DC070000 		.4byte	0x7dc
 2563 081f 05       		.uleb128 0x5
 2564 0820 03       		.byte	0x3
 2565 0821 00000000 		.4byte	sumvalueQ2
 2566 0825 1E       		.uleb128 0x1e
 2567 0826 E5030000 		.4byte	.LASF112
 2568 082a 01       		.byte	0x1
 2569 082b 7A       		.byte	0x7a
 2570 082c DC070000 		.4byte	0x7dc
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 57


 2571 0830 05       		.uleb128 0x5
 2572 0831 03       		.byte	0x3
 2573 0832 00000000 		.4byte	sumvalueQ6
 2574 0836 00       		.byte	0
 2575              		.section	.debug_abbrev,"",%progbits
 2576              	.Ldebug_abbrev0:
 2577 0000 01       		.uleb128 0x1
 2578 0001 11       		.uleb128 0x11
 2579 0002 01       		.byte	0x1
 2580 0003 25       		.uleb128 0x25
 2581 0004 0E       		.uleb128 0xe
 2582 0005 13       		.uleb128 0x13
 2583 0006 0B       		.uleb128 0xb
 2584 0007 03       		.uleb128 0x3
 2585 0008 0E       		.uleb128 0xe
 2586 0009 1B       		.uleb128 0x1b
 2587 000a 0E       		.uleb128 0xe
 2588 000b 55       		.uleb128 0x55
 2589 000c 17       		.uleb128 0x17
 2590 000d 11       		.uleb128 0x11
 2591 000e 01       		.uleb128 0x1
 2592 000f 10       		.uleb128 0x10
 2593 0010 17       		.uleb128 0x17
 2594 0011 00       		.byte	0
 2595 0012 00       		.byte	0
 2596 0013 02       		.uleb128 0x2
 2597 0014 24       		.uleb128 0x24
 2598 0015 00       		.byte	0
 2599 0016 0B       		.uleb128 0xb
 2600 0017 0B       		.uleb128 0xb
 2601 0018 3E       		.uleb128 0x3e
 2602 0019 0B       		.uleb128 0xb
 2603 001a 03       		.uleb128 0x3
 2604 001b 0E       		.uleb128 0xe
 2605 001c 00       		.byte	0
 2606 001d 00       		.byte	0
 2607 001e 03       		.uleb128 0x3
 2608 001f 16       		.uleb128 0x16
 2609 0020 00       		.byte	0
 2610 0021 03       		.uleb128 0x3
 2611 0022 0E       		.uleb128 0xe
 2612 0023 3A       		.uleb128 0x3a
 2613 0024 0B       		.uleb128 0xb
 2614 0025 3B       		.uleb128 0x3b
 2615 0026 0B       		.uleb128 0xb
 2616 0027 49       		.uleb128 0x49
 2617 0028 13       		.uleb128 0x13
 2618 0029 00       		.byte	0
 2619 002a 00       		.byte	0
 2620 002b 04       		.uleb128 0x4
 2621 002c 24       		.uleb128 0x24
 2622 002d 00       		.byte	0
 2623 002e 0B       		.uleb128 0xb
 2624 002f 0B       		.uleb128 0xb
 2625 0030 3E       		.uleb128 0x3e
 2626 0031 0B       		.uleb128 0xb
 2627 0032 03       		.uleb128 0x3
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 58


 2628 0033 08       		.uleb128 0x8
 2629 0034 00       		.byte	0
 2630 0035 00       		.byte	0
 2631 0036 05       		.uleb128 0x5
 2632 0037 0F       		.uleb128 0xf
 2633 0038 00       		.byte	0
 2634 0039 0B       		.uleb128 0xb
 2635 003a 0B       		.uleb128 0xb
 2636 003b 49       		.uleb128 0x49
 2637 003c 13       		.uleb128 0x13
 2638 003d 00       		.byte	0
 2639 003e 00       		.byte	0
 2640 003f 06       		.uleb128 0x6
 2641 0040 16       		.uleb128 0x16
 2642 0041 00       		.byte	0
 2643 0042 03       		.uleb128 0x3
 2644 0043 0E       		.uleb128 0xe
 2645 0044 3A       		.uleb128 0x3a
 2646 0045 0B       		.uleb128 0xb
 2647 0046 3B       		.uleb128 0x3b
 2648 0047 05       		.uleb128 0x5
 2649 0048 49       		.uleb128 0x49
 2650 0049 13       		.uleb128 0x13
 2651 004a 00       		.byte	0
 2652 004b 00       		.byte	0
 2653 004c 07       		.uleb128 0x7
 2654 004d 13       		.uleb128 0x13
 2655 004e 01       		.byte	0x1
 2656 004f 03       		.uleb128 0x3
 2657 0050 0E       		.uleb128 0xe
 2658 0051 0B       		.uleb128 0xb
 2659 0052 0B       		.uleb128 0xb
 2660 0053 3A       		.uleb128 0x3a
 2661 0054 0B       		.uleb128 0xb
 2662 0055 3B       		.uleb128 0x3b
 2663 0056 0B       		.uleb128 0xb
 2664 0057 01       		.uleb128 0x1
 2665 0058 13       		.uleb128 0x13
 2666 0059 00       		.byte	0
 2667 005a 00       		.byte	0
 2668 005b 08       		.uleb128 0x8
 2669 005c 0D       		.uleb128 0xd
 2670 005d 00       		.byte	0
 2671 005e 03       		.uleb128 0x3
 2672 005f 0E       		.uleb128 0xe
 2673 0060 3A       		.uleb128 0x3a
 2674 0061 0B       		.uleb128 0xb
 2675 0062 3B       		.uleb128 0x3b
 2676 0063 0B       		.uleb128 0xb
 2677 0064 49       		.uleb128 0x49
 2678 0065 13       		.uleb128 0x13
 2679 0066 38       		.uleb128 0x38
 2680 0067 0B       		.uleb128 0xb
 2681 0068 00       		.byte	0
 2682 0069 00       		.byte	0
 2683 006a 09       		.uleb128 0x9
 2684 006b 2E       		.uleb128 0x2e
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 59


 2685 006c 00       		.byte	0
 2686 006d 3F       		.uleb128 0x3f
 2687 006e 19       		.uleb128 0x19
 2688 006f 03       		.uleb128 0x3
 2689 0070 0E       		.uleb128 0xe
 2690 0071 3A       		.uleb128 0x3a
 2691 0072 0B       		.uleb128 0xb
 2692 0073 3B       		.uleb128 0x3b
 2693 0074 0B       		.uleb128 0xb
 2694 0075 11       		.uleb128 0x11
 2695 0076 01       		.uleb128 0x1
 2696 0077 12       		.uleb128 0x12
 2697 0078 06       		.uleb128 0x6
 2698 0079 40       		.uleb128 0x40
 2699 007a 18       		.uleb128 0x18
 2700 007b 9642     		.uleb128 0x2116
 2701 007d 19       		.uleb128 0x19
 2702 007e 00       		.byte	0
 2703 007f 00       		.byte	0
 2704 0080 0A       		.uleb128 0xa
 2705 0081 2E       		.uleb128 0x2e
 2706 0082 01       		.byte	0x1
 2707 0083 3F       		.uleb128 0x3f
 2708 0084 19       		.uleb128 0x19
 2709 0085 03       		.uleb128 0x3
 2710 0086 0E       		.uleb128 0xe
 2711 0087 3A       		.uleb128 0x3a
 2712 0088 0B       		.uleb128 0xb
 2713 0089 3B       		.uleb128 0x3b
 2714 008a 0B       		.uleb128 0xb
 2715 008b 27       		.uleb128 0x27
 2716 008c 19       		.uleb128 0x19
 2717 008d 11       		.uleb128 0x11
 2718 008e 01       		.uleb128 0x1
 2719 008f 12       		.uleb128 0x12
 2720 0090 06       		.uleb128 0x6
 2721 0091 40       		.uleb128 0x40
 2722 0092 18       		.uleb128 0x18
 2723 0093 9642     		.uleb128 0x2116
 2724 0095 19       		.uleb128 0x19
 2725 0096 01       		.uleb128 0x1
 2726 0097 13       		.uleb128 0x13
 2727 0098 00       		.byte	0
 2728 0099 00       		.byte	0
 2729 009a 0B       		.uleb128 0xb
 2730 009b 05       		.uleb128 0x5
 2731 009c 00       		.byte	0
 2732 009d 03       		.uleb128 0x3
 2733 009e 08       		.uleb128 0x8
 2734 009f 3A       		.uleb128 0x3a
 2735 00a0 0B       		.uleb128 0xb
 2736 00a1 3B       		.uleb128 0x3b
 2737 00a2 0B       		.uleb128 0xb
 2738 00a3 49       		.uleb128 0x49
 2739 00a4 13       		.uleb128 0x13
 2740 00a5 02       		.uleb128 0x2
 2741 00a6 18       		.uleb128 0x18
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 60


 2742 00a7 00       		.byte	0
 2743 00a8 00       		.byte	0
 2744 00a9 0C       		.uleb128 0xc
 2745 00aa 2E       		.uleb128 0x2e
 2746 00ab 01       		.byte	0x1
 2747 00ac 3F       		.uleb128 0x3f
 2748 00ad 19       		.uleb128 0x19
 2749 00ae 03       		.uleb128 0x3
 2750 00af 0E       		.uleb128 0xe
 2751 00b0 3A       		.uleb128 0x3a
 2752 00b1 0B       		.uleb128 0xb
 2753 00b2 3B       		.uleb128 0x3b
 2754 00b3 0B       		.uleb128 0xb
 2755 00b4 27       		.uleb128 0x27
 2756 00b5 19       		.uleb128 0x19
 2757 00b6 11       		.uleb128 0x11
 2758 00b7 01       		.uleb128 0x1
 2759 00b8 12       		.uleb128 0x12
 2760 00b9 06       		.uleb128 0x6
 2761 00ba 40       		.uleb128 0x40
 2762 00bb 18       		.uleb128 0x18
 2763 00bc 9742     		.uleb128 0x2117
 2764 00be 19       		.uleb128 0x19
 2765 00bf 01       		.uleb128 0x1
 2766 00c0 13       		.uleb128 0x13
 2767 00c1 00       		.byte	0
 2768 00c2 00       		.byte	0
 2769 00c3 0D       		.uleb128 0xd
 2770 00c4 34       		.uleb128 0x34
 2771 00c5 00       		.byte	0
 2772 00c6 03       		.uleb128 0x3
 2773 00c7 0E       		.uleb128 0xe
 2774 00c8 3A       		.uleb128 0x3a
 2775 00c9 0B       		.uleb128 0xb
 2776 00ca 3B       		.uleb128 0x3b
 2777 00cb 0B       		.uleb128 0xb
 2778 00cc 49       		.uleb128 0x49
 2779 00cd 13       		.uleb128 0x13
 2780 00ce 02       		.uleb128 0x2
 2781 00cf 18       		.uleb128 0x18
 2782 00d0 00       		.byte	0
 2783 00d1 00       		.byte	0
 2784 00d2 0E       		.uleb128 0xe
 2785 00d3 2E       		.uleb128 0x2e
 2786 00d4 00       		.byte	0
 2787 00d5 3F       		.uleb128 0x3f
 2788 00d6 19       		.uleb128 0x19
 2789 00d7 03       		.uleb128 0x3
 2790 00d8 0E       		.uleb128 0xe
 2791 00d9 3A       		.uleb128 0x3a
 2792 00da 0B       		.uleb128 0xb
 2793 00db 3B       		.uleb128 0x3b
 2794 00dc 0B       		.uleb128 0xb
 2795 00dd 27       		.uleb128 0x27
 2796 00de 19       		.uleb128 0x19
 2797 00df 11       		.uleb128 0x11
 2798 00e0 01       		.uleb128 0x1
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 61


 2799 00e1 12       		.uleb128 0x12
 2800 00e2 06       		.uleb128 0x6
 2801 00e3 40       		.uleb128 0x40
 2802 00e4 18       		.uleb128 0x18
 2803 00e5 9742     		.uleb128 0x2117
 2804 00e7 19       		.uleb128 0x19
 2805 00e8 00       		.byte	0
 2806 00e9 00       		.byte	0
 2807 00ea 0F       		.uleb128 0xf
 2808 00eb 2E       		.uleb128 0x2e
 2809 00ec 01       		.byte	0x1
 2810 00ed 3F       		.uleb128 0x3f
 2811 00ee 19       		.uleb128 0x19
 2812 00ef 03       		.uleb128 0x3
 2813 00f0 0E       		.uleb128 0xe
 2814 00f1 3A       		.uleb128 0x3a
 2815 00f2 0B       		.uleb128 0xb
 2816 00f3 3B       		.uleb128 0x3b
 2817 00f4 0B       		.uleb128 0xb
 2818 00f5 11       		.uleb128 0x11
 2819 00f6 01       		.uleb128 0x1
 2820 00f7 12       		.uleb128 0x12
 2821 00f8 06       		.uleb128 0x6
 2822 00f9 40       		.uleb128 0x40
 2823 00fa 18       		.uleb128 0x18
 2824 00fb 9642     		.uleb128 0x2116
 2825 00fd 19       		.uleb128 0x19
 2826 00fe 01       		.uleb128 0x1
 2827 00ff 13       		.uleb128 0x13
 2828 0100 00       		.byte	0
 2829 0101 00       		.byte	0
 2830 0102 10       		.uleb128 0x10
 2831 0103 01       		.uleb128 0x1
 2832 0104 01       		.byte	0x1
 2833 0105 49       		.uleb128 0x49
 2834 0106 13       		.uleb128 0x13
 2835 0107 01       		.uleb128 0x1
 2836 0108 13       		.uleb128 0x13
 2837 0109 00       		.byte	0
 2838 010a 00       		.byte	0
 2839 010b 11       		.uleb128 0x11
 2840 010c 21       		.uleb128 0x21
 2841 010d 00       		.byte	0
 2842 010e 49       		.uleb128 0x49
 2843 010f 13       		.uleb128 0x13
 2844 0110 2F       		.uleb128 0x2f
 2845 0111 05       		.uleb128 0x5
 2846 0112 00       		.byte	0
 2847 0113 00       		.byte	0
 2848 0114 12       		.uleb128 0x12
 2849 0115 2E       		.uleb128 0x2e
 2850 0116 00       		.byte	0
 2851 0117 3F       		.uleb128 0x3f
 2852 0118 19       		.uleb128 0x19
 2853 0119 03       		.uleb128 0x3
 2854 011a 0E       		.uleb128 0xe
 2855 011b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 62


 2856 011c 0B       		.uleb128 0xb
 2857 011d 3B       		.uleb128 0x3b
 2858 011e 05       		.uleb128 0x5
 2859 011f 27       		.uleb128 0x27
 2860 0120 19       		.uleb128 0x19
 2861 0121 11       		.uleb128 0x11
 2862 0122 01       		.uleb128 0x1
 2863 0123 12       		.uleb128 0x12
 2864 0124 06       		.uleb128 0x6
 2865 0125 40       		.uleb128 0x40
 2866 0126 18       		.uleb128 0x18
 2867 0127 9642     		.uleb128 0x2116
 2868 0129 19       		.uleb128 0x19
 2869 012a 00       		.byte	0
 2870 012b 00       		.byte	0
 2871 012c 13       		.uleb128 0x13
 2872 012d 2E       		.uleb128 0x2e
 2873 012e 01       		.byte	0x1
 2874 012f 3F       		.uleb128 0x3f
 2875 0130 19       		.uleb128 0x19
 2876 0131 03       		.uleb128 0x3
 2877 0132 0E       		.uleb128 0xe
 2878 0133 3A       		.uleb128 0x3a
 2879 0134 0B       		.uleb128 0xb
 2880 0135 3B       		.uleb128 0x3b
 2881 0136 05       		.uleb128 0x5
 2882 0137 49       		.uleb128 0x49
 2883 0138 13       		.uleb128 0x13
 2884 0139 11       		.uleb128 0x11
 2885 013a 01       		.uleb128 0x1
 2886 013b 12       		.uleb128 0x12
 2887 013c 06       		.uleb128 0x6
 2888 013d 40       		.uleb128 0x40
 2889 013e 18       		.uleb128 0x18
 2890 013f 9642     		.uleb128 0x2116
 2891 0141 19       		.uleb128 0x19
 2892 0142 01       		.uleb128 0x1
 2893 0143 13       		.uleb128 0x13
 2894 0144 00       		.byte	0
 2895 0145 00       		.byte	0
 2896 0146 14       		.uleb128 0x14
 2897 0147 34       		.uleb128 0x34
 2898 0148 00       		.byte	0
 2899 0149 03       		.uleb128 0x3
 2900 014a 0E       		.uleb128 0xe
 2901 014b 3A       		.uleb128 0x3a
 2902 014c 0B       		.uleb128 0xb
 2903 014d 3B       		.uleb128 0x3b
 2904 014e 05       		.uleb128 0x5
 2905 014f 49       		.uleb128 0x49
 2906 0150 13       		.uleb128 0x13
 2907 0151 02       		.uleb128 0x2
 2908 0152 18       		.uleb128 0x18
 2909 0153 00       		.byte	0
 2910 0154 00       		.byte	0
 2911 0155 15       		.uleb128 0x15
 2912 0156 0B       		.uleb128 0xb
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 63


 2913 0157 01       		.byte	0x1
 2914 0158 11       		.uleb128 0x11
 2915 0159 01       		.uleb128 0x1
 2916 015a 12       		.uleb128 0x12
 2917 015b 06       		.uleb128 0x6
 2918 015c 00       		.byte	0
 2919 015d 00       		.byte	0
 2920 015e 16       		.uleb128 0x16
 2921 015f 2E       		.uleb128 0x2e
 2922 0160 01       		.byte	0x1
 2923 0161 3F       		.uleb128 0x3f
 2924 0162 19       		.uleb128 0x19
 2925 0163 03       		.uleb128 0x3
 2926 0164 0E       		.uleb128 0xe
 2927 0165 3A       		.uleb128 0x3a
 2928 0166 0B       		.uleb128 0xb
 2929 0167 3B       		.uleb128 0x3b
 2930 0168 05       		.uleb128 0x5
 2931 0169 49       		.uleb128 0x49
 2932 016a 13       		.uleb128 0x13
 2933 016b 11       		.uleb128 0x11
 2934 016c 01       		.uleb128 0x1
 2935 016d 12       		.uleb128 0x12
 2936 016e 06       		.uleb128 0x6
 2937 016f 40       		.uleb128 0x40
 2938 0170 18       		.uleb128 0x18
 2939 0171 9742     		.uleb128 0x2117
 2940 0173 19       		.uleb128 0x19
 2941 0174 01       		.uleb128 0x1
 2942 0175 13       		.uleb128 0x13
 2943 0176 00       		.byte	0
 2944 0177 00       		.byte	0
 2945 0178 17       		.uleb128 0x17
 2946 0179 34       		.uleb128 0x34
 2947 017a 00       		.byte	0
 2948 017b 03       		.uleb128 0x3
 2949 017c 08       		.uleb128 0x8
 2950 017d 3A       		.uleb128 0x3a
 2951 017e 0B       		.uleb128 0xb
 2952 017f 3B       		.uleb128 0x3b
 2953 0180 05       		.uleb128 0x5
 2954 0181 49       		.uleb128 0x49
 2955 0182 13       		.uleb128 0x13
 2956 0183 02       		.uleb128 0x2
 2957 0184 18       		.uleb128 0x18
 2958 0185 00       		.byte	0
 2959 0186 00       		.byte	0
 2960 0187 18       		.uleb128 0x18
 2961 0188 2E       		.uleb128 0x2e
 2962 0189 01       		.byte	0x1
 2963 018a 3F       		.uleb128 0x3f
 2964 018b 19       		.uleb128 0x19
 2965 018c 03       		.uleb128 0x3
 2966 018d 0E       		.uleb128 0xe
 2967 018e 3A       		.uleb128 0x3a
 2968 018f 0B       		.uleb128 0xb
 2969 0190 3B       		.uleb128 0x3b
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 64


 2970 0191 05       		.uleb128 0x5
 2971 0192 27       		.uleb128 0x27
 2972 0193 19       		.uleb128 0x19
 2973 0194 11       		.uleb128 0x11
 2974 0195 01       		.uleb128 0x1
 2975 0196 12       		.uleb128 0x12
 2976 0197 06       		.uleb128 0x6
 2977 0198 40       		.uleb128 0x40
 2978 0199 18       		.uleb128 0x18
 2979 019a 9642     		.uleb128 0x2116
 2980 019c 19       		.uleb128 0x19
 2981 019d 01       		.uleb128 0x1
 2982 019e 13       		.uleb128 0x13
 2983 019f 00       		.byte	0
 2984 01a0 00       		.byte	0
 2985 01a1 19       		.uleb128 0x19
 2986 01a2 05       		.uleb128 0x5
 2987 01a3 00       		.byte	0
 2988 01a4 03       		.uleb128 0x3
 2989 01a5 08       		.uleb128 0x8
 2990 01a6 3A       		.uleb128 0x3a
 2991 01a7 0B       		.uleb128 0xb
 2992 01a8 3B       		.uleb128 0x3b
 2993 01a9 05       		.uleb128 0x5
 2994 01aa 49       		.uleb128 0x49
 2995 01ab 13       		.uleb128 0x13
 2996 01ac 02       		.uleb128 0x2
 2997 01ad 18       		.uleb128 0x18
 2998 01ae 00       		.byte	0
 2999 01af 00       		.byte	0
 3000 01b0 1A       		.uleb128 0x1a
 3001 01b1 2E       		.uleb128 0x2e
 3002 01b2 01       		.byte	0x1
 3003 01b3 3F       		.uleb128 0x3f
 3004 01b4 19       		.uleb128 0x19
 3005 01b5 03       		.uleb128 0x3
 3006 01b6 0E       		.uleb128 0xe
 3007 01b7 3A       		.uleb128 0x3a
 3008 01b8 0B       		.uleb128 0xb
 3009 01b9 3B       		.uleb128 0x3b
 3010 01ba 05       		.uleb128 0x5
 3011 01bb 11       		.uleb128 0x11
 3012 01bc 01       		.uleb128 0x1
 3013 01bd 12       		.uleb128 0x12
 3014 01be 06       		.uleb128 0x6
 3015 01bf 40       		.uleb128 0x40
 3016 01c0 18       		.uleb128 0x18
 3017 01c1 9642     		.uleb128 0x2116
 3018 01c3 19       		.uleb128 0x19
 3019 01c4 01       		.uleb128 0x1
 3020 01c5 13       		.uleb128 0x13
 3021 01c6 00       		.byte	0
 3022 01c7 00       		.byte	0
 3023 01c8 1B       		.uleb128 0x1b
 3024 01c9 35       		.uleb128 0x35
 3025 01ca 00       		.byte	0
 3026 01cb 49       		.uleb128 0x49
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 65


 3027 01cc 13       		.uleb128 0x13
 3028 01cd 00       		.byte	0
 3029 01ce 00       		.byte	0
 3030 01cf 1C       		.uleb128 0x1c
 3031 01d0 34       		.uleb128 0x34
 3032 01d1 00       		.byte	0
 3033 01d2 03       		.uleb128 0x3
 3034 01d3 0E       		.uleb128 0xe
 3035 01d4 3A       		.uleb128 0x3a
 3036 01d5 0B       		.uleb128 0xb
 3037 01d6 3B       		.uleb128 0x3b
 3038 01d7 05       		.uleb128 0x5
 3039 01d8 49       		.uleb128 0x49
 3040 01d9 13       		.uleb128 0x13
 3041 01da 3F       		.uleb128 0x3f
 3042 01db 19       		.uleb128 0x19
 3043 01dc 3C       		.uleb128 0x3c
 3044 01dd 19       		.uleb128 0x19
 3045 01de 00       		.byte	0
 3046 01df 00       		.byte	0
 3047 01e0 1D       		.uleb128 0x1d
 3048 01e1 34       		.uleb128 0x34
 3049 01e2 00       		.byte	0
 3050 01e3 03       		.uleb128 0x3
 3051 01e4 08       		.uleb128 0x8
 3052 01e5 3A       		.uleb128 0x3a
 3053 01e6 0B       		.uleb128 0xb
 3054 01e7 3B       		.uleb128 0x3b
 3055 01e8 0B       		.uleb128 0xb
 3056 01e9 49       		.uleb128 0x49
 3057 01ea 13       		.uleb128 0x13
 3058 01eb 3F       		.uleb128 0x3f
 3059 01ec 19       		.uleb128 0x19
 3060 01ed 02       		.uleb128 0x2
 3061 01ee 18       		.uleb128 0x18
 3062 01ef 00       		.byte	0
 3063 01f0 00       		.byte	0
 3064 01f1 1E       		.uleb128 0x1e
 3065 01f2 34       		.uleb128 0x34
 3066 01f3 00       		.byte	0
 3067 01f4 03       		.uleb128 0x3
 3068 01f5 0E       		.uleb128 0xe
 3069 01f6 3A       		.uleb128 0x3a
 3070 01f7 0B       		.uleb128 0xb
 3071 01f8 3B       		.uleb128 0x3b
 3072 01f9 0B       		.uleb128 0xb
 3073 01fa 49       		.uleb128 0x49
 3074 01fb 13       		.uleb128 0x13
 3075 01fc 3F       		.uleb128 0x3f
 3076 01fd 19       		.uleb128 0x19
 3077 01fe 02       		.uleb128 0x2
 3078 01ff 18       		.uleb128 0x18
 3079 0200 00       		.byte	0
 3080 0201 00       		.byte	0
 3081 0202 1F       		.uleb128 0x1f
 3082 0203 21       		.uleb128 0x21
 3083 0204 00       		.byte	0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 66


 3084 0205 49       		.uleb128 0x49
 3085 0206 13       		.uleb128 0x13
 3086 0207 2F       		.uleb128 0x2f
 3087 0208 0B       		.uleb128 0xb
 3088 0209 00       		.byte	0
 3089 020a 00       		.byte	0
 3090 020b 00       		.byte	0
 3091              		.section	.debug_aranges,"",%progbits
 3092 0000 AC000000 		.4byte	0xac
 3093 0004 0200     		.2byte	0x2
 3094 0006 00000000 		.4byte	.Ldebug_info0
 3095 000a 04       		.byte	0x4
 3096 000b 00       		.byte	0
 3097 000c 0000     		.2byte	0
 3098 000e 0000     		.2byte	0
 3099 0010 00000000 		.4byte	.LFB64
 3100 0014 14000000 		.4byte	.LFE64-.LFB64
 3101 0018 00000000 		.4byte	.LFB65
 3102 001c 2E000000 		.4byte	.LFE65-.LFB65
 3103 0020 00000000 		.4byte	.LFB66
 3104 0024 14000000 		.4byte	.LFE66-.LFB66
 3105 0028 00000000 		.4byte	.LFB67
 3106 002c 14000000 		.4byte	.LFE67-.LFB67
 3107 0030 00000000 		.4byte	.LFB68
 3108 0034 20000000 		.4byte	.LFE68-.LFB68
 3109 0038 00000000 		.4byte	.LFB69
 3110 003c 20000000 		.4byte	.LFE69-.LFB69
 3111 0040 00000000 		.4byte	.LFB70
 3112 0044 2A000000 		.4byte	.LFE70-.LFB70
 3113 0048 00000000 		.4byte	.LFB71
 3114 004c 98000000 		.4byte	.LFE71-.LFB71
 3115 0050 00000000 		.4byte	.LFB72
 3116 0054 D0000000 		.4byte	.LFE72-.LFB72
 3117 0058 00000000 		.4byte	.LFB73
 3118 005c 0C000000 		.4byte	.LFE73-.LFB73
 3119 0060 00000000 		.4byte	.LFB74
 3120 0064 C0000000 		.4byte	.LFE74-.LFB74
 3121 0068 00000000 		.4byte	.LFB75
 3122 006c 1A000000 		.4byte	.LFE75-.LFB75
 3123 0070 00000000 		.4byte	.LFB76
 3124 0074 0C000000 		.4byte	.LFE76-.LFB76
 3125 0078 00000000 		.4byte	.LFB77
 3126 007c 58010000 		.4byte	.LFE77-.LFB77
 3127 0080 00000000 		.4byte	.LFB78
 3128 0084 50000000 		.4byte	.LFE78-.LFB78
 3129 0088 00000000 		.4byte	.LFB79
 3130 008c 50000000 		.4byte	.LFE79-.LFB79
 3131 0090 00000000 		.4byte	.LFB80
 3132 0094 3E000000 		.4byte	.LFE80-.LFB80
 3133 0098 00000000 		.4byte	.LFB81
 3134 009c 26000000 		.4byte	.LFE81-.LFB81
 3135 00a0 00000000 		.4byte	.LFB82
 3136 00a4 CC000000 		.4byte	.LFE82-.LFB82
 3137 00a8 00000000 		.4byte	0
 3138 00ac 00000000 		.4byte	0
 3139              		.section	.debug_ranges,"",%progbits
 3140              	.Ldebug_ranges0:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 67


 3141 0000 00000000 		.4byte	.LFB64
 3142 0004 14000000 		.4byte	.LFE64
 3143 0008 00000000 		.4byte	.LFB65
 3144 000c 2E000000 		.4byte	.LFE65
 3145 0010 00000000 		.4byte	.LFB66
 3146 0014 14000000 		.4byte	.LFE66
 3147 0018 00000000 		.4byte	.LFB67
 3148 001c 14000000 		.4byte	.LFE67
 3149 0020 00000000 		.4byte	.LFB68
 3150 0024 20000000 		.4byte	.LFE68
 3151 0028 00000000 		.4byte	.LFB69
 3152 002c 20000000 		.4byte	.LFE69
 3153 0030 00000000 		.4byte	.LFB70
 3154 0034 2A000000 		.4byte	.LFE70
 3155 0038 00000000 		.4byte	.LFB71
 3156 003c 98000000 		.4byte	.LFE71
 3157 0040 00000000 		.4byte	.LFB72
 3158 0044 D0000000 		.4byte	.LFE72
 3159 0048 00000000 		.4byte	.LFB73
 3160 004c 0C000000 		.4byte	.LFE73
 3161 0050 00000000 		.4byte	.LFB74
 3162 0054 C0000000 		.4byte	.LFE74
 3163 0058 00000000 		.4byte	.LFB75
 3164 005c 1A000000 		.4byte	.LFE75
 3165 0060 00000000 		.4byte	.LFB76
 3166 0064 0C000000 		.4byte	.LFE76
 3167 0068 00000000 		.4byte	.LFB77
 3168 006c 58010000 		.4byte	.LFE77
 3169 0070 00000000 		.4byte	.LFB78
 3170 0074 50000000 		.4byte	.LFE78
 3171 0078 00000000 		.4byte	.LFB79
 3172 007c 50000000 		.4byte	.LFE79
 3173 0080 00000000 		.4byte	.LFB80
 3174 0084 3E000000 		.4byte	.LFE80
 3175 0088 00000000 		.4byte	.LFB81
 3176 008c 26000000 		.4byte	.LFE81
 3177 0090 00000000 		.4byte	.LFB82
 3178 0094 CC000000 		.4byte	.LFE82
 3179 0098 00000000 		.4byte	0
 3180 009c 00000000 		.4byte	0
 3181              		.section	.debug_line,"",%progbits
 3182              	.Ldebug_line0:
 3183 0000 6B030000 		.section	.debug_str,"MS",%progbits,1
 3183      02005601 
 3183      00000201 
 3183      FB0E0D00 
 3183      01010101 
 3184              	.LASF114:
 3185 0000 6D61696E 		.ascii	"main.c\000"
 3185      2E6300
 3186              	.LASF39:
 3187 0007 6D6F746F 		.ascii	"motorStop\000"
 3187      7253746F 
 3187      7000
 3188              	.LASF67:
 3189 0011 6F706572 		.ascii	"operation\000"
 3189      6174696F 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 68


 3189      6E00
 3190              	.LASF45:
 3191 001b 61766572 		.ascii	"averageQ3\000"
 3191      61676551 
 3191      3300
 3192              	.LASF46:
 3193 0025 61766572 		.ascii	"averageQ4\000"
 3193      61676551 
 3193      3400
 3194              	.LASF47:
 3195 002f 61766572 		.ascii	"averageQ5\000"
 3195      61676551 
 3195      3500
 3196              	.LASF8:
 3197 0039 756E7369 		.ascii	"unsigned int\000"
 3197      676E6564 
 3197      20696E74 
 3197      00
 3198              	.LASF12:
 3199 0046 5F5F696E 		.ascii	"__int32_t\000"
 3199      7433325F 
 3199      7400
 3200              	.LASF19:
 3201 0050 696E7431 		.ascii	"int16\000"
 3201      3600
 3202              	.LASF98:
 3203 0056 73797374 		.ascii	"system_state\000"
 3203      656D5F73 
 3203      74617465 
 3203      00
 3204              	.LASF113:
 3205 0063 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3205      43313120 
 3205      352E342E 
 3205      31203230 
 3205      31363036 
 3206 0096 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3206      20726576 
 3206      6973696F 
 3206      6E203233 
 3206      37373135 
 3207 00c9 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3207      66756E63 
 3207      74696F6E 
 3207      2D736563 
 3207      74696F6E 
 3208              	.LASF56:
 3209 00f1 62656769 		.ascii	"beginningCountMotor1\000"
 3209      6E6E696E 
 3209      67436F75 
 3209      6E744D6F 
 3209      746F7231 
 3210              	.LASF57:
 3211 0106 62656769 		.ascii	"beginningCountMotor2\000"
 3211      6E6E696E 
 3211      67436F75 
 3211      6E744D6F 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 69


 3211      746F7232 
 3212              	.LASF33:
 3213 011b 67325F78 		.ascii	"g2_xpos\000"
 3213      706F7300 
 3214              	.LASF103:
 3215 0123 6C696768 		.ascii	"lightDetectedBack\000"
 3215      74446574 
 3215      65637465 
 3215      64426163 
 3215      6B00
 3216              	.LASF104:
 3217 0135 636F756E 		.ascii	"counteoc\000"
 3217      74656F63 
 3217      00
 3218              	.LASF100:
 3219 013e 63686563 		.ascii	"checkLight\000"
 3219      6B4C6967 
 3219      687400
 3220              	.LASF93:
 3221 0149 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3221      5F72665F 
 3221      7472616E 
 3221      736D6973 
 3221      73696F6E 
 3222              	.LASF41:
 3223 0165 6D6F746F 		.ascii	"motorTurnLeft\000"
 3223      72547572 
 3223      6E4C6566 
 3223      7400
 3224              	.LASF36:
 3225 0173 67325F64 		.ascii	"g2_direction\000"
 3225      69726563 
 3225      74696F6E 
 3225      00
 3226              	.LASF105:
 3227 0180 70726F63 		.ascii	"processSensors\000"
 3227      65737353 
 3227      656E736F 
 3227      727300
 3228              	.LASF15:
 3229 018f 666C6F61 		.ascii	"float\000"
 3229      7400
 3230              	.LASF97:
 3231 0195 75736242 		.ascii	"usbBuffer\000"
 3231      75666665 
 3231      7200
 3232              	.LASF79:
 3233 019f 636F756E 		.ascii	"count\000"
 3233      7400
 3234              	.LASF21:
 3235 01a5 696E6465 		.ascii	"index\000"
 3235      7800
 3236              	.LASF7:
 3237 01ab 6C6F6E67 		.ascii	"long long unsigned int\000"
 3237      206C6F6E 
 3237      6720756E 
 3237      7369676E 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 70


 3237      65642069 
 3238              	.LASF90:
 3239 01c2 666C6167 		.ascii	"flag_packet\000"
 3239      5F706163 
 3239      6B657400 
 3240              	.LASF53:
 3241 01ce 76616C75 		.ascii	"valueQ1\000"
 3241      65513100 
 3242              	.LASF54:
 3243 01d6 76616C75 		.ascii	"valueQ2\000"
 3243      65513200 
 3244              	.LASF50:
 3245 01de 76616C75 		.ascii	"valueQ3\000"
 3245      65513300 
 3246              	.LASF42:
 3247 01e6 6D6F746F 		.ascii	"motorTurnRight\000"
 3247      72547572 
 3247      6E526967 
 3247      687400
 3248              	.LASF52:
 3249 01f5 76616C75 		.ascii	"valueQ5\000"
 3249      65513500 
 3250              	.LASF55:
 3251 01fd 76616C75 		.ascii	"valueQ6\000"
 3251      65513600 
 3252              	.LASF40:
 3253 0205 6D6F746F 		.ascii	"motorSetSpeed\000"
 3253      72536574 
 3253      53706565 
 3253      6400
 3254              	.LASF37:
 3255 0213 6D6F746F 		.ascii	"motorGoStraight\000"
 3255      72476F53 
 3255      74726169 
 3255      67687400 
 3256              	.LASF72:
 3257 0223 76616C75 		.ascii	"value\000"
 3257      6500
 3258              	.LASF86:
 3259 0229 666C6167 		.ascii	"flag_ts_update\000"
 3259      5F74735F 
 3259      75706461 
 3259      746500
 3260              	.LASF59:
 3261 0238 656E6443 		.ascii	"endCountMotor1\000"
 3261      6F756E74 
 3261      4D6F746F 
 3261      723100
 3262              	.LASF58:
 3263 0247 656E6443 		.ascii	"endCountMotor2\000"
 3263      6F756E74 
 3263      4D6F746F 
 3263      723200
 3264              	.LASF85:
 3265 0256 666C6167 		.ascii	"flag_ts_enc\000"
 3265      5F74735F 
 3265      656E6300 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 71


 3266              	.LASF78:
 3267 0262 75736242 		.ascii	"usbBufCount\000"
 3267      7566436F 
 3267      756E7400 
 3268              	.LASF99:
 3269 026e 6368616E 		.ascii	"changeMotor\000"
 3269      67654D6F 
 3269      746F7200 
 3270              	.LASF69:
 3271 027a 636F6E76 		.ascii	"convertBackBinary\000"
 3271      65727442 
 3271      61636B42 
 3271      696E6172 
 3271      7900
 3272              	.LASF63:
 3273 028c 6973725F 		.ascii	"isr_motor_interrupt_speed\000"
 3273      6D6F746F 
 3273      725F696E 
 3273      74657272 
 3273      7570745F 
 3274              	.LASF61:
 3275 02a6 6D6F746F 		.ascii	"motor2String\000"
 3275      72325374 
 3275      72696E67 
 3275      00
 3276              	.LASF23:
 3277 02b3 726F626F 		.ascii	"robot_ypos\000"
 3277      745F7970 
 3277      6F7300
 3278              	.LASF84:
 3279 02be 74735F64 		.ascii	"ts_display\000"
 3279      6973706C 
 3279      617900
 3280              	.LASF11:
 3281 02c9 63686172 		.ascii	"char\000"
 3281      00
 3282              	.LASF27:
 3283 02ce 67305F73 		.ascii	"g0_speed\000"
 3283      70656564 
 3283      00
 3284              	.LASF75:
 3285 02d7 6D6F746F 		.ascii	"motorCount\000"
 3285      72436F75 
 3285      6E7400
 3286              	.LASF115:
 3287 02e2 5C5C6669 		.ascii	"\\\\files.auckland.ac.nz\\myhome\\Documents\\GitHub"
 3287      6C65732E 
 3287      6175636B 
 3287      6C616E64 
 3287      2E61632E 
 3288 0310 5C70726F 		.ascii	"\\project-project_group_11\\COMPSYS 301\\psoc stude"
 3288      6A656374 
 3288      2D70726F 
 3288      6A656374 
 3288      5F67726F 
 3289 0340 6E742070 		.ascii	"nt pack\\psoc student pack\\psoc_code_base\\CS301_C"
 3289      61636B5C 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 72


 3289      70736F63 
 3289      20737475 
 3289      64656E74 
 3290 0370 6C617373 		.ascii	"lass.cydsn\000"
 3290      2E637964 
 3290      736E00
 3291              	.LASF102:
 3292 037b 6C696768 		.ascii	"lightDetectedFront\000"
 3292      74446574 
 3292      65637465 
 3292      6446726F 
 3292      6E7400
 3293              	.LASF17:
 3294 038e 75696E74 		.ascii	"uint16\000"
 3294      313600
 3295              	.LASF18:
 3296 0395 696E7438 		.ascii	"int8\000"
 3296      00
 3297              	.LASF32:
 3298 039a 67315F64 		.ascii	"g1_direction\000"
 3298      69726563 
 3298      74696F6E 
 3298      00
 3299              	.LASF106:
 3300 03a7 6D696464 		.ascii	"middle\000"
 3300      6C6500
 3301              	.LASF110:
 3302 03ae 73756D76 		.ascii	"sumvalueQ1\000"
 3302      616C7565 
 3302      513100
 3303              	.LASF111:
 3304 03b9 73756D76 		.ascii	"sumvalueQ2\000"
 3304      616C7565 
 3304      513200
 3305              	.LASF107:
 3306 03c4 73756D76 		.ascii	"sumvalueQ3\000"
 3306      616C7565 
 3306      513300
 3307              	.LASF108:
 3308 03cf 73756D76 		.ascii	"sumvalueQ4\000"
 3308      616C7565 
 3308      513400
 3309              	.LASF109:
 3310 03da 73756D76 		.ascii	"sumvalueQ5\000"
 3310      616C7565 
 3310      513500
 3311              	.LASF112:
 3312 03e5 73756D76 		.ascii	"sumvalueQ6\000"
 3312      616C7565 
 3312      513600
 3313              	.LASF6:
 3314 03f0 6C6F6E67 		.ascii	"long long int\000"
 3314      206C6F6E 
 3314      6720696E 
 3314      7400
 3315              	.LASF29:
 3316 03fe 67315F78 		.ascii	"g1_xpos\000"
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 73


 3316      706F7300 
 3317              	.LASF70:
 3318 0406 76616C75 		.ascii	"value1\000"
 3318      653100
 3319              	.LASF62:
 3320 040d 6D6F746F 		.ascii	"motorRun\000"
 3320      7252756E 
 3320      00
 3321              	.LASF76:
 3322 0416 68616E64 		.ascii	"handle_usb\000"
 3322      6C655F75 
 3322      736200
 3323              	.LASF35:
 3324 0421 67325F73 		.ascii	"g2_speed\000"
 3324      70656564 
 3324      00
 3325              	.LASF26:
 3326 042a 67305F79 		.ascii	"g0_ypos\000"
 3326      706F7300 
 3327              	.LASF83:
 3328 0432 74735F73 		.ascii	"ts_speed\000"
 3328      70656564 
 3328      00
 3329              	.LASF43:
 3330 043b 6D6F746F 		.ascii	"motorCircle\000"
 3330      72436972 
 3330      636C6500 
 3331              	.LASF116:
 3332 0447 64617461 		.ascii	"data_main\000"
 3332      5F6D6169 
 3332      6E00
 3333              	.LASF20:
 3334 0451 72737369 		.ascii	"rssi\000"
 3334      00
 3335              	.LASF28:
 3336 0456 67305F64 		.ascii	"g0_direction\000"
 3336      69726563 
 3336      74696F6E 
 3336      00
 3337              	.LASF71:
 3338 0463 636F6E76 		.ascii	"convertSensorBinary\000"
 3338      65727453 
 3338      656E736F 
 3338      7242696E 
 3338      61727900 
 3339              	.LASF9:
 3340 0477 6C6F6E67 		.ascii	"long double\000"
 3340      20646F75 
 3340      626C6500 
 3341              	.LASF87:
 3342 0483 666C6167 		.ascii	"flag_ts_speed\000"
 3342      5F74735F 
 3342      73706565 
 3342      6400
 3343              	.LASF92:
 3344 0491 64617461 		.ascii	"dataready_flag\000"
 3344      72656164 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 74


 3344      795F666C 
 3344      616700
 3345              	.LASF89:
 3346 04a0 666C6167 		.ascii	"flag_rx\000"
 3346      5F727800 
 3347              	.LASF2:
 3348 04a8 73686F72 		.ascii	"short int\000"
 3348      7420696E 
 3348      7400
 3349              	.LASF4:
 3350 04b2 6C6F6E67 		.ascii	"long int\000"
 3350      20696E74 
 3350      00
 3351              	.LASF80:
 3352 04bb 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3352      52784275 
 3352      66666572 
 3352      00
 3353              	.LASF82:
 3354 04c8 74735F75 		.ascii	"ts_update\000"
 3354      70646174 
 3354      6500
 3355              	.LASF34:
 3356 04d2 67325F79 		.ascii	"g2_ypos\000"
 3356      706F7300 
 3357              	.LASF51:
 3358 04da 76616C75 		.ascii	"valueQ4\000"
 3358      65513400 
 3359              	.LASF66:
 3360 04e2 6C617374 		.ascii	"lastState\000"
 3360      53746174 
 3360      6500
 3361              	.LASF73:
 3362 04ec 75736250 		.ascii	"usbPutString\000"
 3362      75745374 
 3362      72696E67 
 3362      00
 3363              	.LASF30:
 3364 04f9 67315F79 		.ascii	"g1_ypos\000"
 3364      706F7300 
 3365              	.LASF10:
 3366 0501 73697A65 		.ascii	"sizetype\000"
 3366      74797065 
 3366      00
 3367              	.LASF5:
 3368 050a 6C6F6E67 		.ascii	"long unsigned int\000"
 3368      20756E73 
 3368      69676E65 
 3368      6420696E 
 3368      7400
 3369              	.LASF101:
 3370 051c 6C696768 		.ascii	"lightState\000"
 3370      74537461 
 3370      746500
 3371              	.LASF49:
 3372 0527 6973725F 		.ascii	"isr_eoc_Interrupt_test\000"
 3372      656F635F 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 75


 3372      496E7465 
 3372      72727570 
 3372      745F7465 
 3373              	.LASF13:
 3374 053e 696E7433 		.ascii	"int32_t\000"
 3374      325F7400 
 3375              	.LASF22:
 3376 0546 726F626F 		.ascii	"robot_xpos\000"
 3376      745F7870 
 3376      6F7300
 3377              	.LASF77:
 3378 0551 75736253 		.ascii	"usbStarted\000"
 3378      74617274 
 3378      656400
 3379              	.LASF60:
 3380 055c 6D6F746F 		.ascii	"motor1String\000"
 3380      72315374 
 3380      72696E67 
 3380      00
 3381              	.LASF38:
 3382 0569 6D6F746F 		.ascii	"motorGoBackwards\000"
 3382      72476F42 
 3382      61636B77 
 3382      61726473 
 3382      00
 3383              	.LASF96:
 3384 057a 656E7472 		.ascii	"entry\000"
 3384      7900
 3385              	.LASF1:
 3386 0580 756E7369 		.ascii	"unsigned char\000"
 3386      676E6564 
 3386      20636861 
 3386      7200
 3387              	.LASF95:
 3388 058e 6C696E65 		.ascii	"line\000"
 3388      00
 3389              	.LASF48:
 3390 0593 64697669 		.ascii	"divide\000"
 3390      646500
 3391              	.LASF81:
 3392 059a 74735F65 		.ascii	"ts_enc\000"
 3392      6E6300
 3393              	.LASF88:
 3394 05a1 666C6167 		.ascii	"flag_ts_display\000"
 3394      5F74735F 
 3394      64697370 
 3394      6C617900 
 3395              	.LASF94:
 3396 05b1 64697370 		.ascii	"displaystring\000"
 3396      6C617973 
 3396      7472696E 
 3396      6700
 3397              	.LASF74:
 3398 05bf 75736250 		.ascii	"usbPutChar\000"
 3398      75744368 
 3398      617200
 3399              	.LASF0:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccnM9kAn.s 			page 76


 3400 05ca 7369676E 		.ascii	"signed char\000"
 3400      65642063 
 3400      68617200 
 3401              	.LASF3:
 3402 05d6 73686F72 		.ascii	"short unsigned int\000"
 3402      7420756E 
 3402      7369676E 
 3402      65642069 
 3402      6E7400
 3403              	.LASF24:
 3404 05e9 726F626F 		.ascii	"robot_orientation\000"
 3404      745F6F72 
 3404      69656E74 
 3404      6174696F 
 3404      6E00
 3405              	.LASF65:
 3406 05fb 6D61696E 		.ascii	"main\000"
 3406      00
 3407              	.LASF68:
 3408 0600 6261636B 		.ascii	"backOps\000"
 3408      4F707300 
 3409              	.LASF64:
 3410 0608 6973725F 		.ascii	"isr_TS_Interrupt_sample\000"
 3410      54535F49 
 3410      6E746572 
 3410      72757074 
 3410      5F73616D 
 3411              	.LASF16:
 3412 0620 75696E74 		.ascii	"uint8\000"
 3412      3800
 3413              	.LASF14:
 3414 0626 646F7562 		.ascii	"double\000"
 3414      6C6500
 3415              	.LASF25:
 3416 062d 67305F78 		.ascii	"g0_xpos\000"
 3416      706F7300 
 3417              	.LASF91:
 3418 0635 666C6167 		.ascii	"flag_KB_string\000"
 3418      5F4B425F 
 3418      73747269 
 3418      6E6700
 3419              	.LASF31:
 3420 0644 67315F73 		.ascii	"g1_speed\000"
 3420      70656564 
 3420      00
 3421              	.LASF44:
 3422 064d 63616C63 		.ascii	"calculateLight\000"
 3422      756C6174 
 3422      654C6967 
 3422      687400
 3423              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
