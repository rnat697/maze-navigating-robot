ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.section	.text.motorGoStraight,"ax",%progbits
 107              		.align	2
 108              		.global	motorGoStraight
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 3


 109              		.thumb
 110              		.thumb_func
 111              		.type	motorGoStraight, %function
 112              	motorGoStraight:
 113              	.LFB64:
 114              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <stdbool.h>
  19:main.c        **** #include <string.h>
  20:main.c        **** #include <stdlib.h>
  21:main.c        **** #include <project.h>
  22:main.c        **** //* ========================================
  23:main.c        **** #include "defines.h"
  24:main.c        **** #include "vars.h"
  25:main.c        **** #include "isr_eoc.h"
  26:main.c        **** //* ========================================
  27:main.c        **** void usbPutString(char *s);
  28:main.c        **** void usbPutChar(char c);
  29:main.c        **** void handle_usb();
  30:main.c        **** //* ========================================
  31:main.c        **** 
  32:main.c        **** 
  33:main.c        **** #define rota180 500 //turns
  34:main.c        **** #define rota90Left 250
  35:main.c        **** 
  36:main.c        **** #define moveSlow 50
  37:main.c        **** #define travelDist 326 // how
  38:main.c        **** #define Q1CHANNEL 3
  39:main.c        **** #define Q2CHANNEL 5 
  40:main.c        **** #define Q3CHANNEL 0
  41:main.c        **** #define Q4CHANNEL 1
  42:main.c        **** #define Q5CHANNEL 2
  43:main.c        **** #define Q6CHANNEL 4
  44:main.c        **** 
  45:main.c        **** CY_ISR_PROTO(isr_eoc_Interrupt_test);
  46:main.c        **** CY_ISR_PROTO(isr_motor_interrupt_speed);
  47:main.c        **** CY_ISR_PROTO(isr_TS_interrupt_sample);
  48:main.c        **** int convertSensorBinary();
  49:main.c        **** 
  50:main.c        **** void motorGoStraight(){
 115              		.loc 1 50 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 4


 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119 0000 80B5     		push	{r7, lr}
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 7, -8
 122              		.cfi_offset 14, -4
 123 0002 00AF     		add	r7, sp, #0
 124              		.cfi_def_cfa_register 7
  51:main.c        ****     ////PWM_1_WriteCompare(150); // left wheel near power switch is stronker than right wheel //150
  52:main.c        ****     //M1_IN2_Write(0);
  53:main.c        ****     PWM_1_WriteCompare(200);//200
 125              		.loc 1 53 0
 126 0004 C820     		movs	r0, #200
 127 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  54:main.c        ****     PWM_2_WriteCompare(50); //50
 128              		.loc 1 54 0
 129 000a 3220     		movs	r0, #50
 130 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  55:main.c        **** }
 131              		.loc 1 55 0
 132 0010 00BF     		nop
 133 0012 80BD     		pop	{r7, pc}
 134              		.cfi_endproc
 135              	.LFE64:
 136              		.size	motorGoStraight, .-motorGoStraight
 137              		.section	.text.motorGoBackwards,"ax",%progbits
 138              		.align	2
 139              		.global	motorGoBackwards
 140              		.thumb
 141              		.thumb_func
 142              		.type	motorGoBackwards, %function
 143              	motorGoBackwards:
 144              	.LFB65:
  56:main.c        **** void motorGoBackwards(){
 145              		.loc 1 56 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 1, uses_anonymous_args = 0
 149 0000 80B5     		push	{r7, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 00AF     		add	r7, sp, #0
 154              		.cfi_def_cfa_register 7
  57:main.c        ****     
  58:main.c        ****     //M1_IN2_Write(0);
  59:main.c        ****     PWM_1_WriteCompare(55); //55
 155              		.loc 1 59 0
 156 0004 3720     		movs	r0, #55
 157 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  60:main.c        ****     PWM_2_WriteCompare(201); //201
 158              		.loc 1 60 0
 159 000a C920     		movs	r0, #201
 160 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  61:main.c        **** }
 161              		.loc 1 61 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 5


 162 0010 00BF     		nop
 163 0012 80BD     		pop	{r7, pc}
 164              		.cfi_endproc
 165              	.LFE65:
 166              		.size	motorGoBackwards, .-motorGoBackwards
 167              		.section	.text.motorStop,"ax",%progbits
 168              		.align	2
 169              		.global	motorStop
 170              		.thumb
 171              		.thumb_func
 172              		.type	motorStop, %function
 173              	motorStop:
 174              	.LFB66:
  62:main.c        **** void motorStop(){
 175              		.loc 1 62 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 1, uses_anonymous_args = 0
 179 0000 80B5     		push	{r7, lr}
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 7, -8
 182              		.cfi_offset 14, -4
 183 0002 00AF     		add	r7, sp, #0
 184              		.cfi_def_cfa_register 7
  63:main.c        ****     PWM_1_WriteCompare(127); // left wheel near power switch is stronker than right wheel
 185              		.loc 1 63 0
 186 0004 7F20     		movs	r0, #127
 187 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  64:main.c        ****     PWM_2_WriteCompare(127);
 188              		.loc 1 64 0
 189 000a 7F20     		movs	r0, #127
 190 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  65:main.c        **** }
 191              		.loc 1 65 0
 192 0010 00BF     		nop
 193 0012 80BD     		pop	{r7, pc}
 194              		.cfi_endproc
 195              	.LFE66:
 196              		.size	motorStop, .-motorStop
 197              		.section	.text.motorTurnLeft,"ax",%progbits
 198              		.align	2
 199              		.global	motorTurnLeft
 200              		.thumb
 201              		.thumb_func
 202              		.type	motorTurnLeft, %function
 203              	motorTurnLeft:
 204              	.LFB67:
  66:main.c        **** 
  67:main.c        **** void motorTurnLeft(int x){
 205              		.loc 1 67 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 8
 208              		@ frame_needed = 1, uses_anonymous_args = 0
 209 0000 80B5     		push	{r7, lr}
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 7, -8
 212              		.cfi_offset 14, -4
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 6


 213 0002 82B0     		sub	sp, sp, #8
 214              		.cfi_def_cfa_offset 16
 215 0004 00AF     		add	r7, sp, #0
 216              		.cfi_def_cfa_register 7
 217 0006 7860     		str	r0, [r7, #4]
  68:main.c        ****     // TO DO
  69:main.c        ****     
  70:main.c        ****     PWM_1_WriteCompare(x); //55
 218              		.loc 1 70 0
 219 0008 7B68     		ldr	r3, [r7, #4]
 220 000a DBB2     		uxtb	r3, r3
 221 000c 1846     		mov	r0, r3
 222 000e FFF7FEFF 		bl	PWM_1_WriteCompare
  71:main.c        ****     PWM_2_WriteCompare(125); //201
 223              		.loc 1 71 0
 224 0012 7D20     		movs	r0, #125
 225 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
  72:main.c        ****     
  73:main.c        ****     
  74:main.c        ****     
  75:main.c        ****     //255
  76:main.c        **** }
 226              		.loc 1 76 0
 227 0018 00BF     		nop
 228 001a 0837     		adds	r7, r7, #8
 229              		.cfi_def_cfa_offset 8
 230 001c BD46     		mov	sp, r7
 231              		.cfi_def_cfa_register 13
 232              		@ sp needed
 233 001e 80BD     		pop	{r7, pc}
 234              		.cfi_endproc
 235              	.LFE67:
 236              		.size	motorTurnLeft, .-motorTurnLeft
 237              		.section	.text.motorTurnRight,"ax",%progbits
 238              		.align	2
 239              		.global	motorTurnRight
 240              		.thumb
 241              		.thumb_func
 242              		.type	motorTurnRight, %function
 243              	motorTurnRight:
 244              	.LFB68:
  77:main.c        **** 
  78:main.c        **** void motorTurnRight(int x){
 245              		.loc 1 78 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 8
 248              		@ frame_needed = 1, uses_anonymous_args = 0
 249 0000 80B5     		push	{r7, lr}
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 7, -8
 252              		.cfi_offset 14, -4
 253 0002 82B0     		sub	sp, sp, #8
 254              		.cfi_def_cfa_offset 16
 255 0004 00AF     		add	r7, sp, #0
 256              		.cfi_def_cfa_register 7
 257 0006 7860     		str	r0, [r7, #4]
  79:main.c        ****     // TO DO
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 7


  80:main.c        ****     
  81:main.c        ****     PWM_1_WriteCompare(127);//200
 258              		.loc 1 81 0
 259 0008 7F20     		movs	r0, #127
 260 000a FFF7FEFF 		bl	PWM_1_WriteCompare
  82:main.c        ****     PWM_2_WriteCompare(x); //50
 261              		.loc 1 82 0
 262 000e 7B68     		ldr	r3, [r7, #4]
 263 0010 DBB2     		uxtb	r3, r3
 264 0012 1846     		mov	r0, r3
 265 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
  83:main.c        ****    CyDelay(rota90Left);
 266              		.loc 1 83 0
 267 0018 FA20     		movs	r0, #250
 268 001a FFF7FEFF 		bl	CyDelay
  84:main.c        **** }
 269              		.loc 1 84 0
 270 001e 00BF     		nop
 271 0020 0837     		adds	r7, r7, #8
 272              		.cfi_def_cfa_offset 8
 273 0022 BD46     		mov	sp, r7
 274              		.cfi_def_cfa_register 13
 275              		@ sp needed
 276 0024 80BD     		pop	{r7, pc}
 277              		.cfi_endproc
 278              	.LFE68:
 279              		.size	motorTurnRight, .-motorTurnRight
 280              		.global	changeMotor
 281 0026 00BF     		.bss
 282 0012 0000     		.align	2
 283              		.type	changeMotor, %object
 284              		.size	changeMotor, 4
 285              	changeMotor:
 286 0014 00000000 		.space	4
 287              		.global	checkLight
 288              		.align	2
 289              		.type	checkLight, %object
 290              		.size	checkLight, 4
 291              	checkLight:
 292 0018 00000000 		.space	4
 293              		.global	lightState
 294              		.align	2
 295              		.type	lightState, %object
 296              		.size	lightState, 4
 297              	lightState:
 298 001c 00000000 		.space	4
 299              		.global	lightDetectedFront
 300              		.align	2
 301              		.type	lightDetectedFront, %object
 302              		.size	lightDetectedFront, 12
 303              	lightDetectedFront:
 304 0020 00000000 		.space	12
 304      00000000 
 304      00000000 
 305              		.global	counteoc
 306              		.align	2
 307              		.type	counteoc, %object
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 8


 308              		.size	counteoc, 4
 309              	counteoc:
 310 002c 00000000 		.space	4
 311              		.global	processSensors
 312              		.align	2
 313              		.type	processSensors, %object
 314              		.size	processSensors, 4
 315              	processSensors:
 316 0030 00000000 		.space	4
 317              		.section	.text.isr_eoc_Interrupt_test,"ax",%progbits
 318              		.align	2
 319              		.global	isr_eoc_Interrupt_test
 320              		.thumb
 321              		.thumb_func
 322              		.type	isr_eoc_Interrupt_test, %function
 323              	isr_eoc_Interrupt_test:
 324              	.LFB69:
  85:main.c        **** int changeMotor=0;
  86:main.c        **** int checkLight =0;
  87:main.c        **** int lightState=0;
  88:main.c        **** volatile int lightDetectedFront[3] = {0,0,0};
  89:main.c        **** volatile int counteoc = 0;
  90:main.c        **** volatile int processSensors = 0;
  91:main.c        **** CY_ISR(isr_eoc_Interrupt_test)
  92:main.c        **** {
 325              		.loc 1 92 0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 8
 328              		@ frame_needed = 1, uses_anonymous_args = 0
 329 0000 80B5     		push	{r7, lr}
 330              		.cfi_def_cfa_offset 8
 331              		.cfi_offset 7, -8
 332              		.cfi_offset 14, -4
 333 0002 82B0     		sub	sp, sp, #8
 334              		.cfi_def_cfa_offset 16
 335 0004 00AF     		add	r7, sp, #0
 336              		.cfi_def_cfa_register 7
  93:main.c        ****     #ifdef isr_test_INTERRUPT_INTERRUPT_CALLBACK
  94:main.c        ****         isr_TS_Interrupt_InterruptCallback();
  95:main.c        ****     #endif /* isr_eoc_INTERRUPT_INTERRUPT_CALLBACK */ 
  96:main.c        **** 
  97:main.c        ****     /*  Place your Interrupt code here. */
  98:main.c        ****     /* `#START isr_eoc_Interrupt` */
  99:main.c        ****     int16 valueQ3 =  ADC_GetResult16(Q3CHANNEL);
 337              		.loc 1 99 0
 338 0006 0020     		movs	r0, #0
 339 0008 FFF7FEFF 		bl	ADC_GetResult16
 340 000c 0346     		mov	r3, r0
 341 000e FB80     		strh	r3, [r7, #6]	@ movhi
 100:main.c        ****     int16 valueQ4 =  ADC_GetResult16(Q4CHANNEL);
 342              		.loc 1 100 0
 343 0010 0120     		movs	r0, #1
 344 0012 FFF7FEFF 		bl	ADC_GetResult16
 345 0016 0346     		mov	r3, r0
 346 0018 BB80     		strh	r3, [r7, #4]	@ movhi
 101:main.c        ****     int16 valueQ5 =  ADC_GetResult16(Q5CHANNEL);
 347              		.loc 1 101 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 9


 348 001a 0220     		movs	r0, #2
 349 001c FFF7FEFF 		bl	ADC_GetResult16
 350 0020 0346     		mov	r3, r0
 351 0022 7B80     		strh	r3, [r7, #2]	@ movhi
 102:main.c        ****     // get value from ADC then convert to DAC to send to external LEDs
 103:main.c        ****     if (counteoc < 10) {
 352              		.loc 1 103 0
 353 0024 174B     		ldr	r3, .L13
 354 0026 1B68     		ldr	r3, [r3]
 355 0028 092B     		cmp	r3, #9
 356 002a 20DC     		bgt	.L7
 104:main.c        ****         //2211
 105:main.c        ****         if (valueQ3 >= 2211) {
 357              		.loc 1 105 0
 358 002c B7F90630 		ldrsh	r3, [r7, #6]
 359 0030 40F6A202 		movw	r2, #2210
 360 0034 9342     		cmp	r3, r2
 361 0036 02DD     		ble	.L8
 106:main.c        ****         //set flag for white light detected
 107:main.c        ****         lightDetectedFront[0] = 1;
 362              		.loc 1 107 0
 363 0038 134B     		ldr	r3, .L13+4
 364 003a 0122     		movs	r2, #1
 365 003c 1A60     		str	r2, [r3]
 366              	.L8:
 108:main.c        ****         }
 109:main.c        ****         if (valueQ4 >= 2211) {
 367              		.loc 1 109 0
 368 003e B7F90430 		ldrsh	r3, [r7, #4]
 369 0042 40F6A202 		movw	r2, #2210
 370 0046 9342     		cmp	r3, r2
 371 0048 02DD     		ble	.L9
 110:main.c        ****         //set flag for white light detected
 111:main.c        ****         lightDetectedFront[1] = 1;
 372              		.loc 1 111 0
 373 004a 0F4B     		ldr	r3, .L13+4
 374 004c 0122     		movs	r2, #1
 375 004e 5A60     		str	r2, [r3, #4]
 376              	.L9:
 112:main.c        ****         }
 113:main.c        ****     
 114:main.c        ****         if (valueQ5 >= 2211) {
 377              		.loc 1 114 0
 378 0050 B7F90230 		ldrsh	r3, [r7, #2]
 379 0054 40F6A202 		movw	r2, #2210
 380 0058 9342     		cmp	r3, r2
 381 005a 02DD     		ble	.L10
 115:main.c        ****         //set flag for white light detected
 116:main.c        ****         lightDetectedFront[2] = 1;
 382              		.loc 1 116 0
 383 005c 0A4B     		ldr	r3, .L13+4
 384 005e 0122     		movs	r2, #1
 385 0060 9A60     		str	r2, [r3, #8]
 386              	.L10:
 117:main.c        ****         }
 118:main.c        ****         
 119:main.c        ****         counteoc++;
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 10


 387              		.loc 1 119 0
 388 0062 084B     		ldr	r3, .L13
 389 0064 1B68     		ldr	r3, [r3]
 390 0066 0133     		adds	r3, r3, #1
 391 0068 064A     		ldr	r2, .L13
 392 006a 1360     		str	r3, [r2]
 120:main.c        ****     } else {
 121:main.c        ****         processSensors = 1;   
 122:main.c        ****         counteoc = 0;
 123:main.c        ****     }
 124:main.c        ****     /* `#END` */
 125:main.c        **** }
 393              		.loc 1 125 0
 394 006c 05E0     		b	.L12
 395              	.L7:
 121:main.c        ****         counteoc = 0;
 396              		.loc 1 121 0
 397 006e 074B     		ldr	r3, .L13+8
 398 0070 0122     		movs	r2, #1
 399 0072 1A60     		str	r2, [r3]
 122:main.c        ****     }
 400              		.loc 1 122 0
 401 0074 034B     		ldr	r3, .L13
 402 0076 0022     		movs	r2, #0
 403 0078 1A60     		str	r2, [r3]
 404              	.L12:
 405              		.loc 1 125 0
 406 007a 00BF     		nop
 407 007c 0837     		adds	r7, r7, #8
 408              		.cfi_def_cfa_offset 8
 409 007e BD46     		mov	sp, r7
 410              		.cfi_def_cfa_register 13
 411              		@ sp needed
 412 0080 80BD     		pop	{r7, pc}
 413              	.L14:
 414 0082 00BF     		.align	2
 415              	.L13:
 416 0084 00000000 		.word	counteoc
 417 0088 00000000 		.word	lightDetectedFront
 418 008c 00000000 		.word	processSensors
 419              		.cfi_endproc
 420              	.LFE69:
 421              		.size	isr_eoc_Interrupt_test, .-isr_eoc_Interrupt_test
 422              		.bss
 423              	count:
 424 0034 00       		.space	1
 425              		.section	.text.isr_motor_interrupt_speed,"ax",%progbits
 426              		.align	2
 427              		.global	isr_motor_interrupt_speed
 428              		.thumb
 429              		.thumb_func
 430              		.type	isr_motor_interrupt_speed, %function
 431              	isr_motor_interrupt_speed:
 432              	.LFB70:
 126:main.c        **** // NEED TO INCREASE/DECREASE SPEED TOO
 127:main.c        **** // AND IMPLEMENT LIGHT SENSOR THINGS
 128:main.c        **** volatile static int8 count;
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 11


 129:main.c        **** CY_ISR(isr_motor_interrupt_speed)
 130:main.c        **** {
 433              		.loc 1 130 0
 434              		.cfi_startproc
 435              		@ args = 0, pretend = 0, frame = 0
 436              		@ frame_needed = 1, uses_anonymous_args = 0
 437              		@ link register save eliminated.
 438 0000 80B4     		push	{r7}
 439              		.cfi_def_cfa_offset 4
 440              		.cfi_offset 7, -4
 441 0002 00AF     		add	r7, sp, #0
 442              		.cfi_def_cfa_register 7
 131:main.c        ****     #ifdef isr_motor_INTERRUPT_INTERRUPT_CALLBACK
 132:main.c        ****         isr_motor_Interrupt_InterruptCallback();
 133:main.c        ****     #endif /* isr_motor_INTERRUPT_INTERRUPT_CALLBACK */ 
 134:main.c        **** 
 135:main.c        ****     /*  Place your Interrupt code here. */
 136:main.c        ****     /* `#START isr_motor_Interrupt` */
 137:main.c        ****       /*int16 currCountMotor2 = QuadDec_M2_GetCounter();
 138:main.c        ****       int16 currCountMotor1 = QuadDec_M1_GetCounter();  
 139:main.c        ****       
 140:main.c        ****      speedMotor1 = (currCountMotor1 - prevcountMotor1) / 0.2;
 141:main.c        ****      speedMotor2 = (currCountMotor2 - prevcountMotor2) / 0.2;
 142:main.c        ****     
 143:main.c        ****       prevcountMotor1 = currCountMotor1;
 144:main.c        ****       prevcountMotor2 = currCountMotor2;*/
 145:main.c        ****     
 146:main.c        ****     /* `#END` */
 147:main.c        **** }
 443              		.loc 1 147 0
 444 0004 00BF     		nop
 445 0006 BD46     		mov	sp, r7
 446              		.cfi_def_cfa_register 13
 447              		@ sp needed
 448 0008 80BC     		pop	{r7}
 449              		.cfi_restore 7
 450              		.cfi_def_cfa_offset 0
 451 000a 7047     		bx	lr
 452              		.cfi_endproc
 453              	.LFE70:
 454              		.size	isr_motor_interrupt_speed, .-isr_motor_interrupt_speed
 455              		.section	.rodata
 456              		.align	2
 457              	.LC0:
 458 0000 4D6F746F 		.ascii	"Motor 1 - start count: %d, end count: %d \012\000"
 458      72203120 
 458      2D207374 
 458      61727420 
 458      636F756E 
 459 002b 00       		.align	2
 460              	.LC1:
 461 002c 4D6F746F 		.ascii	"Motor 2 - start count: %d, end count: %d \012\000"
 461      72203220 
 461      2D207374 
 461      61727420 
 461      636F756E 
 462              		.section	.text.motorCount,"ax",%progbits
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 12


 463              		.align	2
 464              		.global	motorCount
 465              		.thumb
 466              		.thumb_func
 467              		.type	motorCount, %function
 468              	motorCount:
 469              	.LFB71:
 148:main.c        **** void motorCount(){
 470              		.loc 1 148 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 20008
 473              		@ frame_needed = 1, uses_anonymous_args = 0
 474 0000 80B5     		push	{r7, lr}
 475              		.cfi_def_cfa_offset 8
 476              		.cfi_offset 7, -8
 477              		.cfi_offset 14, -4
 478 0002 ADF59C4D 		sub	sp, sp, #19968
 479              		.cfi_def_cfa_offset 19976
 480 0006 8AB0     		sub	sp, sp, #40
 481              		.cfi_def_cfa_offset 20016
 482 0008 00AF     		add	r7, sp, #0
 483              		.cfi_def_cfa_register 7
 149:main.c        ****     int16 beginningCountMotor1 = 0;
 484              		.loc 1 149 0
 485 000a 0023     		movs	r3, #0
 486 000c 07F59C42 		add	r2, r7, #19968
 487 0010 02F12602 		add	r2, r2, #38
 488 0014 1380     		strh	r3, [r2]	@ movhi
 150:main.c        ****     int16 beginningCountMotor2 = 0;
 489              		.loc 1 150 0
 490 0016 0023     		movs	r3, #0
 491 0018 07F59C42 		add	r2, r7, #19968
 492 001c 02F12402 		add	r2, r2, #36
 493 0020 1380     		strh	r3, [r2]	@ movhi
 151:main.c        ****     int16 endCountMotor2 = QuadDec_M2_GetCounter();
 494              		.loc 1 151 0
 495 0022 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 496 0026 0346     		mov	r3, r0
 497 0028 07F59C42 		add	r2, r7, #19968
 498 002c 02F12202 		add	r2, r2, #34
 499 0030 1380     		strh	r3, [r2]	@ movhi
 152:main.c        ****     int16 endCountMotor1 = QuadDec_M1_GetCounter();
 500              		.loc 1 152 0
 501 0032 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 502 0036 0346     		mov	r3, r0
 503 0038 07F59C42 		add	r2, r7, #19968
 504 003c 02F12002 		add	r2, r2, #32
 505 0040 1380     		strh	r3, [r2]	@ movhi
 153:main.c        ****     char motor1String[10000]; 
 154:main.c        ****     sprintf(motor1String,"Motor 1 - start count: %d, end count: %d \n", beginningCountMotor1, endCo
 506              		.loc 1 154 0
 507 0042 07F59C43 		add	r3, r7, #19968
 508 0046 03F12603 		add	r3, r3, #38
 509 004a B3F90020 		ldrsh	r2, [r3]
 510 004e 07F59C43 		add	r3, r7, #19968
 511 0052 03F12003 		add	r3, r3, #32
 512 0056 B3F90030 		ldrsh	r3, [r3]
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 13


 513 005a 07F51C50 		add	r0, r7, #9984
 514 005e 00F12800 		add	r0, r0, #40
 515 0062 1838     		subs	r0, r0, #24
 516 0064 1449     		ldr	r1, .L17
 517 0066 FFF7FEFF 		bl	sprintf
 155:main.c        ****     char motor2String[10000];
 156:main.c        ****     sprintf(motor2String,"Motor 2 - start count: %d, end count: %d \n", beginningCountMotor2 , endC
 518              		.loc 1 156 0
 519 006a 07F59C43 		add	r3, r7, #19968
 520 006e 03F12403 		add	r3, r3, #36
 521 0072 B3F90020 		ldrsh	r2, [r3]
 522 0076 07F59C43 		add	r3, r7, #19968
 523 007a 03F12203 		add	r3, r3, #34
 524 007e B3F90030 		ldrsh	r3, [r3]
 525 0082 07F12800 		add	r0, r7, #40
 526 0086 2838     		subs	r0, r0, #40
 527 0088 0C49     		ldr	r1, .L17+4
 528 008a FFF7FEFF 		bl	sprintf
 157:main.c        ****     
 158:main.c        ****     usbPutString(motor1String);
 529              		.loc 1 158 0
 530 008e 07F51C53 		add	r3, r7, #9984
 531 0092 03F12803 		add	r3, r3, #40
 532 0096 183B     		subs	r3, r3, #24
 533 0098 1846     		mov	r0, r3
 534 009a FFF7FEFF 		bl	usbPutString
 159:main.c        ****     usbPutString(motor2String);
 535              		.loc 1 159 0
 536 009e 07F12803 		add	r3, r7, #40
 537 00a2 283B     		subs	r3, r3, #40
 538 00a4 1846     		mov	r0, r3
 539 00a6 FFF7FEFF 		bl	usbPutString
 160:main.c        **** 
 161:main.c        **** }
 540              		.loc 1 161 0
 541 00aa 00BF     		nop
 542 00ac 07F59C47 		add	r7, r7, #19968
 543 00b0 2837     		adds	r7, r7, #40
 544              		.cfi_def_cfa_offset 8
 545 00b2 BD46     		mov	sp, r7
 546              		.cfi_def_cfa_register 13
 547              		@ sp needed
 548 00b4 80BD     		pop	{r7, pc}
 549              	.L18:
 550 00b6 00BF     		.align	2
 551              	.L17:
 552 00b8 00000000 		.word	.LC0
 553 00bc 2C000000 		.word	.LC1
 554              		.cfi_endproc
 555              	.LFE71:
 556              		.size	motorCount, .-motorCount
 557              		.section	.text.motorRun,"ax",%progbits
 558              		.align	2
 559              		.global	motorRun
 560              		.thumb
 561              		.thumb_func
 562              		.type	motorRun, %function
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 14


 563              	motorRun:
 564              	.LFB72:
 162:main.c        **** 
 163:main.c        **** void motorRun(){
 565              		.loc 1 163 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 1, uses_anonymous_args = 0
 569 0000 80B5     		push	{r7, lr}
 570              		.cfi_def_cfa_offset 8
 571              		.cfi_offset 7, -8
 572              		.cfi_offset 14, -4
 573 0002 00AF     		add	r7, sp, #0
 574              		.cfi_def_cfa_register 7
 164:main.c        ****     
 165:main.c        ****     
 166:main.c        ****     
 167:main.c        ****     PWM_1_Start();
 575              		.loc 1 167 0
 576 0004 FFF7FEFF 		bl	PWM_1_Start
 168:main.c        ****     PWM_2_Start();
 577              		.loc 1 168 0
 578 0008 FFF7FEFF 		bl	PWM_2_Start
 169:main.c        **** 
 170:main.c        **** 
 171:main.c        ****     motorStop();
 579              		.loc 1 171 0
 580 000c FFF7FEFF 		bl	motorStop
 172:main.c        ****     CyDelay(2000); // so we have time to set the robot up
 581              		.loc 1 172 0
 582 0010 4FF4FA60 		mov	r0, #2000
 583 0014 FFF7FEFF 		bl	CyDelay
 173:main.c        ****     motorGoStraight();
 584              		.loc 1 173 0
 585 0018 FFF7FEFF 		bl	motorGoStraight
 174:main.c        ****     CyDelay(2000);
 586              		.loc 1 174 0
 587 001c 4FF4FA60 		mov	r0, #2000
 588 0020 FFF7FEFF 		bl	CyDelay
 175:main.c        ****     motorStop();
 589              		.loc 1 175 0
 590 0024 FFF7FEFF 		bl	motorStop
 176:main.c        ****     
 177:main.c        ****     //motorGoBackwards();
 178:main.c        **** 
 179:main.c        ****     
 180:main.c        ****     //CyDelay(2000);
 181:main.c        ****  
 182:main.c        ****     //motorStop();
 183:main.c        ****     //motorCount();//checks count per second.
 184:main.c        **** 
 185:main.c        **** }
 591              		.loc 1 185 0
 592 0028 00BF     		nop
 593 002a 80BD     		pop	{r7, pc}
 594              		.cfi_endproc
 595              	.LFE72:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 15


 596              		.size	motorRun, .-motorRun
 597              		.section	.text.isr_TS_Interrupt_sample,"ax",%progbits
 598              		.align	2
 599              		.global	isr_TS_Interrupt_sample
 600              		.thumb
 601              		.thumb_func
 602              		.type	isr_TS_Interrupt_sample, %function
 603              	isr_TS_Interrupt_sample:
 604              	.LFB73:
 186:main.c        **** CY_ISR(isr_TS_Interrupt_sample)
 187:main.c        **** {
 605              		.loc 1 187 0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 0
 608              		@ frame_needed = 1, uses_anonymous_args = 0
 609 0000 80B5     		push	{r7, lr}
 610              		.cfi_def_cfa_offset 8
 611              		.cfi_offset 7, -8
 612              		.cfi_offset 14, -4
 613 0002 00AF     		add	r7, sp, #0
 614              		.cfi_def_cfa_register 7
 188:main.c        ****     #ifdef isr_TS_INTERRUPT_INTERRUPT_CALLBACK
 189:main.c        ****         isr_TS_Interrupt_InterruptCallback();
 190:main.c        ****     #endif /* isr_TS_INTERRUPT_INTERRUPT_CALLBACK */ 
 191:main.c        ****         ADC_StartConvert();
 615              		.loc 1 191 0
 616 0004 FFF7FEFF 		bl	ADC_StartConvert
 192:main.c        ****     /*  Place your Interrupt code here. */
 193:main.c        ****     /* `#START isr_TS_Interrupt` */
 194:main.c        **** 
 195:main.c        ****     /* `#END` */
 196:main.c        **** }
 617              		.loc 1 196 0
 618 0008 00BF     		nop
 619 000a 80BD     		pop	{r7, pc}
 620              		.cfi_endproc
 621              	.LFE73:
 622              		.size	isr_TS_Interrupt_sample, .-isr_TS_Interrupt_sample
 623              		.section	.text.main,"ax",%progbits
 624              		.align	2
 625              		.global	main
 626              		.thumb
 627              		.thumb_func
 628              		.type	main, %function
 629              	main:
 630              	.LFB74:
 197:main.c        **** 
 198:main.c        **** 
 199:main.c        **** int main()
 200:main.c        **** {
 631              		.loc 1 200 0
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 8
 634              		@ frame_needed = 1, uses_anonymous_args = 0
 635 0000 80B5     		push	{r7, lr}
 636              		.cfi_def_cfa_offset 8
 637              		.cfi_offset 7, -8
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 16


 638              		.cfi_offset 14, -4
 639 0002 82B0     		sub	sp, sp, #8
 640              		.cfi_def_cfa_offset 16
 641 0004 00AF     		add	r7, sp, #0
 642              		.cfi_def_cfa_register 7
 201:main.c        ****     
 202:main.c        **** 
 203:main.c        **** // --------------------------------    
 204:main.c        **** // ----- INITIALIZATIONS ----------
 205:main.c        ****     CYGlobalIntEnable;
 643              		.loc 1 205 0
 644              		.syntax unified
 645              	@ 205 "main.c" 1
 646 0006 62B6     		CPSIE   i
 647              	@ 0 "" 2
 206:main.c        ****     count  = 0;
 648              		.loc 1 206 0
 649              		.thumb
 650              		.syntax unified
 651 0008 3E4B     		ldr	r3, .L35
 652 000a 0022     		movs	r2, #0
 653 000c 1A70     		strb	r2, [r3]
 207:main.c        ****     
 208:main.c        ****    
 209:main.c        ****     Timer_TS_Start();
 654              		.loc 1 209 0
 655 000e FFF7FEFF 		bl	Timer_TS_Start
 210:main.c        ****     Timer_Motor_Start();
 656              		.loc 1 210 0
 657 0012 FFF7FEFF 		bl	Timer_Motor_Start
 211:main.c        ****     QuadDec_M1_Start();
 658              		.loc 1 211 0
 659 0016 FFF7FEFF 		bl	QuadDec_M1_Start
 212:main.c        ****     QuadDec_M2_Start(); //init the quadencoder,
 660              		.loc 1 212 0
 661 001a FFF7FEFF 		bl	QuadDec_M2_Start
 213:main.c        ****     //isr_motor_StartEx(isr_motor_interrupt_speed);
 214:main.c        ****     isr_TS_StartEx(isr_TS_Interrupt_sample);
 662              		.loc 1 214 0
 663 001e 3A48     		ldr	r0, .L35+4
 664 0020 FFF7FEFF 		bl	isr_TS_StartEx
 215:main.c        ****     isr_eoc_StartEx(isr_eoc_Interrupt_test);
 665              		.loc 1 215 0
 666 0024 3948     		ldr	r0, .L35+8
 667 0026 FFF7FEFF 		bl	isr_eoc_StartEx
 216:main.c        ****     
 217:main.c        ****     ADC_Start();
 668              		.loc 1 217 0
 669 002a FFF7FEFF 		bl	ADC_Start
 218:main.c        ****     //ADC_StartConvert();
 219:main.c        ****     
 220:main.c        ****     PWM_1_Start();
 670              		.loc 1 220 0
 671 002e FFF7FEFF 		bl	PWM_1_Start
 221:main.c        ****     PWM_2_Start();
 672              		.loc 1 221 0
 673 0032 FFF7FEFF 		bl	PWM_2_Start
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 17


 222:main.c        ****     
 223:main.c        ****     LED_Write(0);
 674              		.loc 1 223 0
 675 0036 0020     		movs	r0, #0
 676 0038 FFF7FEFF 		bl	LED_Write
 224:main.c        ****     ///////IF NOT USINNG MOTOR RUN DO PWM START STUFF
 225:main.c        ****     // SO write compare is a measure of speed
 226:main.c        ****     // And Cy delay delays the running of the motor and duration that it travels
 227:main.c        ****     //look at motor RUn config above for more info.
 228:main.c        ****     motorStop();
 677              		.loc 1 228 0
 678 003c FFF7FEFF 		bl	motorStop
 229:main.c        ****     CyDelay(2000); // to prep
 679              		.loc 1 229 0
 680 0040 4FF4FA60 		mov	r0, #2000
 681 0044 FFF7FEFF 		bl	CyDelay
 682              	.L34:
 230:main.c        ****    /* while(QuadDec_M1_GetCounter()<travelDist){
 231:main.c        ****     //where counter is value we want it to stop at.
 232:main.c        ****         motorGoStraight();
 233:main.c        ****     
 234:main.c        ****     
 235:main.c        ****     }*/
 236:main.c        **** 
 237:main.c        ****     
 238:main.c        ****     //motorStop();
 239:main.c        ****    // CyDelay(2000); // so we have time to set the robot up
 240:main.c        ****     //motorTurnLeft();
 241:main.c        ****     //motorStop();
 242:main.c        ****     //motorCount();//checks count per second.
 243:main.c        ****      
 244:main.c        ****     
 245:main.c        ****     
 246:main.c        **** 
 247:main.c        ****     
 248:main.c        **** 
 249:main.c        ****     
 250:main.c        **** // ------USB SETUP ----------------    
 251:main.c        **** //#ifdef USE_USB    
 252:main.c        **** //    USBUART_Start(0,USBUART_5V_OPERATION);
 253:main.c        **** //#endif        
 254:main.c        **** //        
 255:main.c        **** //    RF_BT_SELECT_Write(0);
 256:main.c        **** //    motorCount();//checks count per second.
 257:main.c        **** 
 258:main.c        ****     //usbPutString(displaystring);
 259:main.c        ****     while(1)
 260:main.c        ****     {
 261:main.c        ****         /* Place your application code here. */
 262:main.c        ****         
 263:main.c        ****         //if Q3 SENSES BLACK LIGHT BUT Q4 DOES NOT SENSE THE BLACK LIGHT MOVE TOWARDS THE RIGHT TO 
 264:main.c        ****     // IF Q3 AND Q4 SENSES TURN 90 DEGREES LEFT - intersection
 265:main.c        ****     // IF Q5 BUT NOT Q4 SENSES BLACK LIGHT MOVE TOWARDS THE LEFT TO REALIGN CENTER
 266:main.c        ****     // IF Q5 AND Q4 TURN 90 DEGREES RIGHT - intersection
 267:main.c        ****        
 268:main.c        ****         if (processSensors == 1) {
 683              		.loc 1 268 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 18


 684 0048 314B     		ldr	r3, .L35+12
 685 004a 1B68     		ldr	r3, [r3]
 686 004c 012B     		cmp	r3, #1
 687 004e FBD1     		bne	.L34
 688              	.LBB2:
 269:main.c        ****             
 270:main.c        ****             //make decision
 271:main.c        ****             
 272:main.c        ****             //checks intersection
 273:main.c        ****             //int leftIntersection= (lightDetectedFront[0] == 1 && lightDetectedFront[1]==1);
 274:main.c        ****             //int rightIntersection=  (lightDetectedFront[2] == 1 && lightDetectedFront[1]==1);
 275:main.c        ****             
 276:main.c        ****            //check intersectin
 277:main.c        ****             ///mazeIntersection(leftIntersection,rightIntersection);
 278:main.c        ****         
 279:main.c        ****             int operation = convertSensorBinary();
 689              		.loc 1 279 0
 690 0050 FFF7FEFF 		bl	convertSensorBinary
 691 0054 7860     		str	r0, [r7, #4]
 280:main.c        ****             
 281:main.c        ****             switch(operation){
 692              		.loc 1 281 0
 693 0056 7B68     		ldr	r3, [r7, #4]
 694 0058 072B     		cmp	r3, #7
 695 005a 43D8     		bhi	.L23
 696 005c 01A2     		adr	r2, .L25
 697 005e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 698 0062 00BF     		.p2align 2
 699              	.L25:
 700 0064 85000000 		.word	.L24+1
 701 0068 91000000 		.word	.L26+1
 702 006c 9D000000 		.word	.L27+1
 703 0070 A9000000 		.word	.L28+1
 704 0074 B5000000 		.word	.L29+1
 705 0078 C1000000 		.word	.L30+1
 706 007c CD000000 		.word	.L31+1
 707 0080 D9000000 		.word	.L32+1
 708              		.p2align 1
 709              	.L24:
 282:main.c        ****             
 283:main.c        ****                 case 0: // all sensors are in black
 284:main.c        ****                     motorGoStraight();
 710              		.loc 1 284 0
 711 0084 FFF7FEFF 		bl	motorGoStraight
 285:main.c        ****                     LED_Write(1);
 712              		.loc 1 285 0
 713 0088 0120     		movs	r0, #1
 714 008a FFF7FEFF 		bl	LED_Write
 286:main.c        ****                     break;
 715              		.loc 1 286 0
 716 008e 2BE0     		b	.L33
 717              	.L26:
 287:main.c        ****                 
 288:main.c        ****                 case 1:
 289:main.c        ****                     motorStop();
 718              		.loc 1 289 0
 719 0090 FFF7FEFF 		bl	motorStop
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 19


 290:main.c        ****                     LED_Write(0);
 720              		.loc 1 290 0
 721 0094 0020     		movs	r0, #0
 722 0096 FFF7FEFF 		bl	LED_Write
 291:main.c        ****                     break;
 723              		.loc 1 291 0
 724 009a 25E0     		b	.L33
 725              	.L27:
 292:main.c        ****                 
 293:main.c        ****                 
 294:main.c        ****                 case 2:
 295:main.c        ****                     motorStop();
 726              		.loc 1 295 0
 727 009c FFF7FEFF 		bl	motorStop
 296:main.c        ****                     LED_Write(0);
 728              		.loc 1 296 0
 729 00a0 0020     		movs	r0, #0
 730 00a2 FFF7FEFF 		bl	LED_Write
 297:main.c        ****                     break;
 731              		.loc 1 297 0
 732 00a6 1FE0     		b	.L33
 733              	.L28:
 298:main.c        ****                 
 299:main.c        ****                 case 3:
 300:main.c        ****                     motorStop();
 734              		.loc 1 300 0
 735 00a8 FFF7FEFF 		bl	motorStop
 301:main.c        ****                     LED_Write(0);
 736              		.loc 1 301 0
 737 00ac 0020     		movs	r0, #0
 738 00ae FFF7FEFF 		bl	LED_Write
 302:main.c        ****                     break;
 739              		.loc 1 302 0
 740 00b2 19E0     		b	.L33
 741              	.L29:
 303:main.c        ****                 
 304:main.c        ****                 case 4:
 305:main.c        ****                     motorStop();
 742              		.loc 1 305 0
 743 00b4 FFF7FEFF 		bl	motorStop
 306:main.c        ****                     motorTurnRight(100);
 744              		.loc 1 306 0
 745 00b8 6420     		movs	r0, #100
 746 00ba FFF7FEFF 		bl	motorTurnRight
 307:main.c        ****                     break;
 747              		.loc 1 307 0
 748 00be 13E0     		b	.L33
 749              	.L30:
 308:main.c        ****                     
 309:main.c        ****                 case 5:
 310:main.c        ****                     LED_Write(1);
 750              		.loc 1 310 0
 751 00c0 0120     		movs	r0, #1
 752 00c2 FFF7FEFF 		bl	LED_Write
 311:main.c        ****                     motorGoStraight();
 753              		.loc 1 311 0
 754 00c6 FFF7FEFF 		bl	motorGoStraight
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 20


 312:main.c        ****                     break;
 755              		.loc 1 312 0
 756 00ca 0DE0     		b	.L33
 757              	.L31:
 313:main.c        **** 
 314:main.c        ****                 case 6:
 315:main.c        ****                     motorStop();
 758              		.loc 1 315 0
 759 00cc FFF7FEFF 		bl	motorStop
 316:main.c        ****                     LED_Write(0);
 760              		.loc 1 316 0
 761 00d0 0020     		movs	r0, #0
 762 00d2 FFF7FEFF 		bl	LED_Write
 317:main.c        ****                     break;
 763              		.loc 1 317 0
 764 00d6 07E0     		b	.L33
 765              	.L32:
 318:main.c        ****                     
 319:main.c        ****                 case 7:
 320:main.c        ****             
 321:main.c        ****                     motorStop();
 766              		.loc 1 321 0
 767 00d8 FFF7FEFF 		bl	motorStop
 322:main.c        ****                     LED_Write(0);
 768              		.loc 1 322 0
 769 00dc 0020     		movs	r0, #0
 770 00de FFF7FEFF 		bl	LED_Write
 323:main.c        ****                     break;
 771              		.loc 1 323 0
 772 00e2 01E0     		b	.L33
 773              	.L23:
 324:main.c        ****             
 325:main.c        ****                 default:
 326:main.c        ****                     motorStop();
 774              		.loc 1 326 0
 775 00e4 FFF7FEFF 		bl	motorStop
 776              	.L33:
 327:main.c        ****             
 328:main.c        ****                 
 329:main.c        ****             
 330:main.c        ****             }
 331:main.c        **** //            if(leftIntersection){
 332:main.c        **** //                motorTurnLeft(55);
 333:main.c        **** //            
 334:main.c        **** //            
 335:main.c        **** //                CyDelay(250);
 336:main.c        **** //            }
 337:main.c        **** //            
 338:main.c        **** //            if(rightIntersection){
 339:main.c        **** //                motorTurnRight(55);
 340:main.c        **** //                
 341:main.c        **** //                CyDelay(250);//small rotation need small time
 342:main.c        **** //            
 343:main.c        **** //            }
 344:main.c        ****             
 345:main.c        **** //            //Slight turns
 346:main.c        **** //            if(lightDetectedFront[0] == 1 && lightDetectedFront[1]==0){
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 21


 347:main.c        **** //                motorTurnRight(140);
 348:main.c        **** //                CyDelay(20);//small rotation need small time
 349:main.c        **** //            }
 350:main.c        **** //            
 351:main.c        **** //            if(lightDetectedFront[2] == 0 && lightDetectedFront[1]==1){
 352:main.c        **** //                motorTurnLeft(140);
 353:main.c        **** //                CyDelay(20);//small rotation need small time
 354:main.c        **** //            }
 355:main.c        **** 
 356:main.c        ****            
 357:main.c        ****             //reset variable.
 358:main.c        ****             processSensors = 0;
 777              		.loc 1 358 0
 778 00e8 094B     		ldr	r3, .L35+12
 779 00ea 0022     		movs	r2, #0
 780 00ec 1A60     		str	r2, [r3]
 359:main.c        ****             //reset counter
 360:main.c        ****             //reset flags for lightsensors because it checks every 10 iterations, adds delay/
 361:main.c        ****             lightDetectedFront[0] = 0;
 781              		.loc 1 361 0
 782 00ee 094B     		ldr	r3, .L35+16
 783 00f0 0022     		movs	r2, #0
 784 00f2 1A60     		str	r2, [r3]
 362:main.c        ****             lightDetectedFront[1] = 0;
 785              		.loc 1 362 0
 786 00f4 074B     		ldr	r3, .L35+16
 787 00f6 0022     		movs	r2, #0
 788 00f8 5A60     		str	r2, [r3, #4]
 363:main.c        ****             lightDetectedFront[2] = 0;
 789              		.loc 1 363 0
 790 00fa 064B     		ldr	r3, .L35+16
 791 00fc 0022     		movs	r2, #0
 792 00fe 9A60     		str	r2, [r3, #8]
 793              	.LBE2:
 364:main.c        ****           
 365:main.c        ****         }
 366:main.c        ****         
 367:main.c        ****     }   
 794              		.loc 1 367 0
 795 0100 A2E7     		b	.L34
 796              	.L36:
 797 0102 00BF     		.align	2
 798              	.L35:
 799 0104 34000000 		.word	count
 800 0108 00000000 		.word	isr_TS_Interrupt_sample
 801 010c 00000000 		.word	isr_eoc_Interrupt_test
 802 0110 00000000 		.word	processSensors
 803 0114 00000000 		.word	lightDetectedFront
 804              		.cfi_endproc
 805              	.LFE74:
 806              		.size	main, .-main
 807              		.section	.text.convertSensorBinary,"ax",%progbits
 808              		.align	2
 809              		.global	convertSensorBinary
 810              		.thumb
 811              		.thumb_func
 812              		.type	convertSensorBinary, %function
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 22


 813              	convertSensorBinary:
 814              	.LFB75:
 368:main.c        **** }
 369:main.c        **** 
 370:main.c        ****   
 371:main.c        **** 
 372:main.c        **** 
 373:main.c        **** 
 374:main.c        **** int convertSensorBinary()
 375:main.c        **** {
 815              		.loc 1 375 0
 816              		.cfi_startproc
 817              		@ args = 0, pretend = 0, frame = 16
 818              		@ frame_needed = 1, uses_anonymous_args = 0
 819              		@ link register save eliminated.
 820 0000 80B4     		push	{r7}
 821              		.cfi_def_cfa_offset 4
 822              		.cfi_offset 7, -4
 823 0002 85B0     		sub	sp, sp, #20
 824              		.cfi_def_cfa_offset 24
 825 0004 00AF     		add	r7, sp, #0
 826              		.cfi_def_cfa_register 7
 376:main.c        ****    int value=0;
 827              		.loc 1 376 0
 828 0006 0023     		movs	r3, #0
 829 0008 FB60     		str	r3, [r7, #12]
 377:main.c        ****    int binaryIndex = 0; // index from 0 to 2 to calculate from LSB to MSB
 830              		.loc 1 377 0
 831 000a 0023     		movs	r3, #0
 832 000c BB60     		str	r3, [r7, #8]
 833              	.LBB3:
 378:main.c        ****    for (int i=2;i>=0;i--){
 834              		.loc 1 378 0
 835 000e 0223     		movs	r3, #2
 836 0010 7B60     		str	r3, [r7, #4]
 837 0012 16E0     		b	.L38
 838              	.L39:
 839              	.LBB4:
 379:main.c        ****     int x=lightDetectedFront[i];
 840              		.loc 1 379 0 discriminator 3
 841 0014 0F4A     		ldr	r2, .L41
 842 0016 7B68     		ldr	r3, [r7, #4]
 843 0018 52F82330 		ldr	r3, [r2, r3, lsl #2]
 844 001c 3B60     		str	r3, [r7]
 380:main.c        ****     value = value + ((2^binaryIndex) * lightDetectedFront[i]); // eg first value, Q2 is in whitelig
 845              		.loc 1 380 0 discriminator 3
 846 001e BB68     		ldr	r3, [r7, #8]
 847 0020 83F00203 		eor	r3, r3, #2
 848 0024 0B49     		ldr	r1, .L41
 849 0026 7A68     		ldr	r2, [r7, #4]
 850 0028 51F82220 		ldr	r2, [r1, r2, lsl #2]
 851 002c 02FB03F3 		mul	r3, r2, r3
 852 0030 FA68     		ldr	r2, [r7, #12]
 853 0032 1344     		add	r3, r3, r2
 854 0034 FB60     		str	r3, [r7, #12]
 381:main.c        ****     binaryIndex++;
 855              		.loc 1 381 0 discriminator 3
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 23


 856 0036 BB68     		ldr	r3, [r7, #8]
 857 0038 0133     		adds	r3, r3, #1
 858 003a BB60     		str	r3, [r7, #8]
 859              	.LBE4:
 378:main.c        ****     int x=lightDetectedFront[i];
 860              		.loc 1 378 0 discriminator 3
 861 003c 7B68     		ldr	r3, [r7, #4]
 862 003e 013B     		subs	r3, r3, #1
 863 0040 7B60     		str	r3, [r7, #4]
 864              	.L38:
 378:main.c        ****     int x=lightDetectedFront[i];
 865              		.loc 1 378 0 is_stmt 0 discriminator 1
 866 0042 7B68     		ldr	r3, [r7, #4]
 867 0044 002B     		cmp	r3, #0
 868 0046 E5DA     		bge	.L39
 869              	.LBE3:
 382:main.c        ****     }
 383:main.c        **** 
 384:main.c        ****     return value;
 870              		.loc 1 384 0 is_stmt 1
 871 0048 FB68     		ldr	r3, [r7, #12]
 385:main.c        **** }
 872              		.loc 1 385 0
 873 004a 1846     		mov	r0, r3
 874 004c 1437     		adds	r7, r7, #20
 875              		.cfi_def_cfa_offset 4
 876 004e BD46     		mov	sp, r7
 877              		.cfi_def_cfa_register 13
 878              		@ sp needed
 879 0050 80BC     		pop	{r7}
 880              		.cfi_restore 7
 881              		.cfi_def_cfa_offset 0
 882 0052 7047     		bx	lr
 883              	.L42:
 884              		.align	2
 885              	.L41:
 886 0054 00000000 		.word	lightDetectedFront
 887              		.cfi_endproc
 888              	.LFE75:
 889              		.size	convertSensorBinary, .-convertSensorBinary
 890              		.section	.text.usbPutString,"ax",%progbits
 891              		.align	2
 892              		.global	usbPutString
 893              		.thumb
 894              		.thumb_func
 895              		.type	usbPutString, %function
 896              	usbPutString:
 897              	.LFB76:
 386:main.c        **** //* ========================================
 387:main.c        **** void usbPutString(char *s)
 388:main.c        **** {
 898              		.loc 1 388 0
 899              		.cfi_startproc
 900              		@ args = 0, pretend = 0, frame = 8
 901              		@ frame_needed = 1, uses_anonymous_args = 0
 902 0000 80B5     		push	{r7, lr}
 903              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 24


 904              		.cfi_offset 7, -8
 905              		.cfi_offset 14, -4
 906 0002 82B0     		sub	sp, sp, #8
 907              		.cfi_def_cfa_offset 16
 908 0004 00AF     		add	r7, sp, #0
 909              		.cfi_def_cfa_register 7
 910 0006 7860     		str	r0, [r7, #4]
 389:main.c        **** // !! Assumes that *s is a string with allocated space >=64 chars     
 390:main.c        **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 391:main.c        **** //  length to 62 char (63rd char is a '!')
 392:main.c        **** 
 393:main.c        **** #ifdef USE_USB     
 394:main.c        ****     while (USBUART_CDCIsReady() == 0);
 911              		.loc 1 394 0
 912 0008 00BF     		nop
 913              	.L44:
 914              		.loc 1 394 0 is_stmt 0 discriminator 1
 915 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 916 000e 0346     		mov	r3, r0
 917 0010 002B     		cmp	r3, #0
 918 0012 FAD0     		beq	.L44
 395:main.c        ****     s[63]='\0';
 919              		.loc 1 395 0 is_stmt 1
 920 0014 7B68     		ldr	r3, [r7, #4]
 921 0016 3F33     		adds	r3, r3, #63
 922 0018 0022     		movs	r2, #0
 923 001a 1A70     		strb	r2, [r3]
 396:main.c        ****     s[62]='!';
 924              		.loc 1 396 0
 925 001c 7B68     		ldr	r3, [r7, #4]
 926 001e 3E33     		adds	r3, r3, #62
 927 0020 2122     		movs	r2, #33
 928 0022 1A70     		strb	r2, [r3]
 397:main.c        ****     USBUART_PutData((uint8*)s,strlen(s));
 929              		.loc 1 397 0
 930 0024 7868     		ldr	r0, [r7, #4]
 931 0026 FFF7FEFF 		bl	strlen
 932 002a 0346     		mov	r3, r0
 933 002c 9BB2     		uxth	r3, r3
 934 002e 1946     		mov	r1, r3
 935 0030 7868     		ldr	r0, [r7, #4]
 936 0032 FFF7FEFF 		bl	USBUART_PutData
 398:main.c        **** #endif
 399:main.c        **** }
 937              		.loc 1 399 0
 938 0036 00BF     		nop
 939 0038 0837     		adds	r7, r7, #8
 940              		.cfi_def_cfa_offset 8
 941 003a BD46     		mov	sp, r7
 942              		.cfi_def_cfa_register 13
 943              		@ sp needed
 944 003c 80BD     		pop	{r7, pc}
 945              		.cfi_endproc
 946              	.LFE76:
 947              		.size	usbPutString, .-usbPutString
 948 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 949              		.align	2
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 25


 950              		.global	usbPutChar
 951              		.thumb
 952              		.thumb_func
 953              		.type	usbPutChar, %function
 954              	usbPutChar:
 955              	.LFB77:
 400:main.c        **** //* ========================================
 401:main.c        **** void usbPutChar(char c)
 402:main.c        **** {
 956              		.loc 1 402 0
 957              		.cfi_startproc
 958              		@ args = 0, pretend = 0, frame = 8
 959              		@ frame_needed = 1, uses_anonymous_args = 0
 960 0000 80B5     		push	{r7, lr}
 961              		.cfi_def_cfa_offset 8
 962              		.cfi_offset 7, -8
 963              		.cfi_offset 14, -4
 964 0002 82B0     		sub	sp, sp, #8
 965              		.cfi_def_cfa_offset 16
 966 0004 00AF     		add	r7, sp, #0
 967              		.cfi_def_cfa_register 7
 968 0006 0346     		mov	r3, r0
 969 0008 FB71     		strb	r3, [r7, #7]
 403:main.c        **** #ifdef USE_USB     
 404:main.c        ****     while (USBUART_CDCIsReady() == 0);
 970              		.loc 1 404 0
 971 000a 00BF     		nop
 972              	.L46:
 973              		.loc 1 404 0 is_stmt 0 discriminator 1
 974 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 975 0010 0346     		mov	r3, r0
 976 0012 002B     		cmp	r3, #0
 977 0014 FAD0     		beq	.L46
 405:main.c        ****     USBUART_PutChar(c);
 978              		.loc 1 405 0 is_stmt 1
 979 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 980 0018 1846     		mov	r0, r3
 981 001a FFF7FEFF 		bl	USBUART_PutChar
 406:main.c        **** #endif    
 407:main.c        **** }
 982              		.loc 1 407 0
 983 001e 00BF     		nop
 984 0020 0837     		adds	r7, r7, #8
 985              		.cfi_def_cfa_offset 8
 986 0022 BD46     		mov	sp, r7
 987              		.cfi_def_cfa_register 13
 988              		@ sp needed
 989 0024 80BD     		pop	{r7, pc}
 990              		.cfi_endproc
 991              	.LFE77:
 992              		.size	usbPutChar, .-usbPutChar
 993 0026 00BF     		.section	.text.handle_usb,"ax",%progbits
 994              		.align	2
 995              		.global	handle_usb
 996              		.thumb
 997              		.thumb_func
 998              		.type	handle_usb, %function
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 26


 999              	handle_usb:
 1000              	.LFB78:
 408:main.c        **** //* ========================================
 409:main.c        **** void handle_usb()
 410:main.c        **** {
 1001              		.loc 1 410 0
 1002              		.cfi_startproc
 1003              		@ args = 0, pretend = 0, frame = 8
 1004              		@ frame_needed = 1, uses_anonymous_args = 0
 1005 0000 80B5     		push	{r7, lr}
 1006              		.cfi_def_cfa_offset 8
 1007              		.cfi_offset 7, -8
 1008              		.cfi_offset 14, -4
 1009 0002 82B0     		sub	sp, sp, #8
 1010              		.cfi_def_cfa_offset 16
 1011 0004 00AF     		add	r7, sp, #0
 1012              		.cfi_def_cfa_register 7
 411:main.c        ****     // handles input at terminal, echos it back to the terminal
 412:main.c        ****     // turn echo OFF, key emulation: only CR
 413:main.c        ****     // entered string is made available in 'line' and 'flag_KB_string' is set
 414:main.c        ****     
 415:main.c        ****     static uint8 usbStarted = FALSE;
 416:main.c        ****     static uint16 usbBufCount = 0;
 417:main.c        ****     uint8 c; 
 418:main.c        ****     
 419:main.c        **** 
 420:main.c        ****     if (!usbStarted)
 1013              		.loc 1 420 0
 1014 0006 2B4B     		ldr	r3, .L57
 1015 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1016 000a 002B     		cmp	r3, #0
 1017 000c 0AD1     		bne	.L48
 421:main.c        ****     {
 422:main.c        ****         if (USBUART_GetConfiguration())
 1018              		.loc 1 422 0
 1019 000e FFF7FEFF 		bl	USBUART_GetConfiguration
 1020 0012 0346     		mov	r3, r0
 1021 0014 002B     		cmp	r3, #0
 1022 0016 49D0     		beq	.L56
 423:main.c        ****         {
 424:main.c        ****             USBUART_CDC_Init();
 1023              		.loc 1 424 0
 1024 0018 FFF7FEFF 		bl	USBUART_CDC_Init
 425:main.c        ****             usbStarted = TRUE;
 1025              		.loc 1 425 0
 1026 001c 254B     		ldr	r3, .L57
 1027 001e 0122     		movs	r2, #1
 1028 0020 1A70     		strb	r2, [r3]
 426:main.c        ****         }
 427:main.c        ****     }
 428:main.c        ****     else
 429:main.c        ****     {
 430:main.c        ****         if (USBUART_DataIsReady() != 0)
 431:main.c        ****         {  
 432:main.c        ****             c = USBUART_GetChar();
 433:main.c        **** 
 434:main.c        ****             if ((c == 13) || (c == 10))
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 27


 435:main.c        ****             {
 436:main.c        **** //                if (usbBufCount > 0)
 437:main.c        ****                 {
 438:main.c        ****                     entry[usbBufCount]= '\0';
 439:main.c        ****                     strcpy(line,entry);
 440:main.c        ****                     usbBufCount = 0;
 441:main.c        ****                     flag_KB_string = 1;
 442:main.c        ****                 }
 443:main.c        ****             }
 444:main.c        ****             else 
 445:main.c        ****             {
 446:main.c        ****                 if (((c == CHAR_BACKSP) || (c == CHAR_DEL) ) && (usbBufCount > 0) )
 447:main.c        ****                     usbBufCount--;
 448:main.c        ****                 else
 449:main.c        ****                 {
 450:main.c        ****                     if (usbBufCount > (BUF_SIZE-2) ) // one less else strtok triggers a crash
 451:main.c        ****                     {
 452:main.c        ****                        USBUART_PutChar('!');        
 453:main.c        ****                     }
 454:main.c        ****                     else
 455:main.c        ****                         entry[usbBufCount++] = c;  
 456:main.c        ****                 }  
 457:main.c        ****             }
 458:main.c        ****         }
 459:main.c        ****     }    
 460:main.c        **** }
 1029              		.loc 1 460 0
 1030 0022 43E0     		b	.L56
 1031              	.L48:
 430:main.c        ****         {  
 1032              		.loc 1 430 0
 1033 0024 FFF7FEFF 		bl	USBUART_DataIsReady
 1034 0028 0346     		mov	r3, r0
 1035 002a 002B     		cmp	r3, #0
 1036 002c 3ED0     		beq	.L56
 432:main.c        **** 
 1037              		.loc 1 432 0
 1038 002e FFF7FEFF 		bl	USBUART_GetChar
 1039 0032 0346     		mov	r3, r0
 1040 0034 FB71     		strb	r3, [r7, #7]
 434:main.c        ****             {
 1041              		.loc 1 434 0
 1042 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1043 0038 0D2B     		cmp	r3, #13
 1044 003a 02D0     		beq	.L51
 434:main.c        ****             {
 1045              		.loc 1 434 0 is_stmt 0 discriminator 1
 1046 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1047 003e 0A2B     		cmp	r3, #10
 1048 0040 10D1     		bne	.L52
 1049              	.L51:
 438:main.c        ****                     strcpy(line,entry);
 1050              		.loc 1 438 0 is_stmt 1
 1051 0042 1D4B     		ldr	r3, .L57+4
 1052 0044 1B88     		ldrh	r3, [r3]
 1053 0046 1A46     		mov	r2, r3
 1054 0048 1C4B     		ldr	r3, .L57+8
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 28


 1055 004a 0021     		movs	r1, #0
 1056 004c 9954     		strb	r1, [r3, r2]
 439:main.c        ****                     usbBufCount = 0;
 1057              		.loc 1 439 0
 1058 004e 1B49     		ldr	r1, .L57+8
 1059 0050 1B48     		ldr	r0, .L57+12
 1060 0052 FFF7FEFF 		bl	strcpy
 440:main.c        ****                     flag_KB_string = 1;
 1061              		.loc 1 440 0
 1062 0056 184B     		ldr	r3, .L57+4
 1063 0058 0022     		movs	r2, #0
 1064 005a 1A80     		strh	r2, [r3]	@ movhi
 441:main.c        ****                 }
 1065              		.loc 1 441 0
 1066 005c 194B     		ldr	r3, .L57+16
 1067 005e 0122     		movs	r2, #1
 1068 0060 1A70     		strb	r2, [r3]
 1069 0062 23E0     		b	.L50
 1070              	.L52:
 446:main.c        ****                     usbBufCount--;
 1071              		.loc 1 446 0
 1072 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1073 0066 082B     		cmp	r3, #8
 1074 0068 02D0     		beq	.L53
 446:main.c        ****                     usbBufCount--;
 1075              		.loc 1 446 0 is_stmt 0 discriminator 2
 1076 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1077 006c 7F2B     		cmp	r3, #127
 1078 006e 0AD1     		bne	.L54
 1079              	.L53:
 446:main.c        ****                     usbBufCount--;
 1080              		.loc 1 446 0 discriminator 3
 1081 0070 114B     		ldr	r3, .L57+4
 1082 0072 1B88     		ldrh	r3, [r3]
 1083 0074 002B     		cmp	r3, #0
 1084 0076 06D0     		beq	.L54
 447:main.c        ****                 else
 1085              		.loc 1 447 0 is_stmt 1
 1086 0078 0F4B     		ldr	r3, .L57+4
 1087 007a 1B88     		ldrh	r3, [r3]
 1088 007c 013B     		subs	r3, r3, #1
 1089 007e 9AB2     		uxth	r2, r3
 1090 0080 0D4B     		ldr	r3, .L57+4
 1091 0082 1A80     		strh	r2, [r3]	@ movhi
 1092 0084 12E0     		b	.L50
 1093              	.L54:
 450:main.c        ****                     {
 1094              		.loc 1 450 0
 1095 0086 0C4B     		ldr	r3, .L57+4
 1096 0088 1B88     		ldrh	r3, [r3]
 1097 008a 3E2B     		cmp	r3, #62
 1098 008c 03D9     		bls	.L55
 452:main.c        ****                     }
 1099              		.loc 1 452 0
 1100 008e 2120     		movs	r0, #33
 1101 0090 FFF7FEFF 		bl	USBUART_PutChar
 1102              		.loc 1 460 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 29


 1103 0094 0AE0     		b	.L56
 1104              	.L55:
 455:main.c        ****                 }  
 1105              		.loc 1 455 0
 1106 0096 084B     		ldr	r3, .L57+4
 1107 0098 1B88     		ldrh	r3, [r3]
 1108 009a 5A1C     		adds	r2, r3, #1
 1109 009c 91B2     		uxth	r1, r2
 1110 009e 064A     		ldr	r2, .L57+4
 1111 00a0 1180     		strh	r1, [r2]	@ movhi
 1112 00a2 1946     		mov	r1, r3
 1113 00a4 054A     		ldr	r2, .L57+8
 1114 00a6 FB79     		ldrb	r3, [r7, #7]
 1115 00a8 5354     		strb	r3, [r2, r1]
 1116              		.loc 1 460 0
 1117 00aa FFE7     		b	.L56
 1118              	.L50:
 1119              	.L56:
 1120 00ac 00BF     		nop
 1121 00ae 0837     		adds	r7, r7, #8
 1122              		.cfi_def_cfa_offset 8
 1123 00b0 BD46     		mov	sp, r7
 1124              		.cfi_def_cfa_register 13
 1125              		@ sp needed
 1126 00b2 80BD     		pop	{r7, pc}
 1127              	.L58:
 1128              		.align	2
 1129              	.L57:
 1130 00b4 35000000 		.word	usbStarted.8284
 1131 00b8 36000000 		.word	usbBufCount.8285
 1132 00bc 00000000 		.word	entry
 1133 00c0 00000000 		.word	line
 1134 00c4 00000000 		.word	flag_KB_string
 1135              		.cfi_endproc
 1136              	.LFE78:
 1137              		.size	handle_usb, .-handle_usb
 1138              		.bss
 1139              	usbStarted.8284:
 1140 0035 00       		.space	1
 1141              		.align	1
 1142              	usbBufCount.8285:
 1143 0036 0000     		.space	2
 1144              		.text
 1145              	.Letext0:
 1146              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1147              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1148              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1149              		.file 5 "vars.h"
 1150              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1151              		.section	.debug_info,"",%progbits
 1152              	.Ldebug_info0:
 1153 0000 4C060000 		.4byte	0x64c
 1154 0004 0400     		.2byte	0x4
 1155 0006 00000000 		.4byte	.Ldebug_abbrev0
 1156 000a 04       		.byte	0x4
 1157 000b 01       		.uleb128 0x1
 1158 000c B5000000 		.4byte	.LASF92
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 30


 1159 0010 0C       		.byte	0xc
 1160 0011 68040000 		.4byte	.LASF93
 1161 0015 8D010000 		.4byte	.LASF94
 1162 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1163 001d 00000000 		.4byte	0
 1164 0021 00000000 		.4byte	.Ldebug_line0
 1165 0025 02       		.uleb128 0x2
 1166 0026 01       		.byte	0x1
 1167 0027 06       		.byte	0x6
 1168 0028 73030000 		.4byte	.LASF0
 1169 002c 02       		.uleb128 0x2
 1170 002d 01       		.byte	0x1
 1171 002e 08       		.byte	0x8
 1172 002f 3A030000 		.4byte	.LASF1
 1173 0033 02       		.uleb128 0x2
 1174 0034 02       		.byte	0x2
 1175 0035 05       		.byte	0x5
 1176 0036 8B000000 		.4byte	.LASF2
 1177 003a 02       		.uleb128 0x2
 1178 003b 02       		.byte	0x2
 1179 003c 07       		.byte	0x7
 1180 003d 1C040000 		.4byte	.LASF3
 1181 0041 03       		.uleb128 0x3
 1182 0042 A7040000 		.4byte	.LASF12
 1183 0046 02       		.byte	0x2
 1184 0047 3F       		.byte	0x3f
 1185 0048 4C000000 		.4byte	0x4c
 1186 004c 02       		.uleb128 0x2
 1187 004d 04       		.byte	0x4
 1188 004e 05       		.byte	0x5
 1189 004f A3020000 		.4byte	.LASF4
 1190 0053 02       		.uleb128 0x2
 1191 0054 04       		.byte	0x4
 1192 0055 07       		.byte	0x7
 1193 0056 6F040000 		.4byte	.LASF5
 1194 005a 02       		.uleb128 0x2
 1195 005b 08       		.byte	0x8
 1196 005c 05       		.byte	0x5
 1197 005d 57020000 		.4byte	.LASF6
 1198 0061 02       		.uleb128 0x2
 1199 0062 08       		.byte	0x8
 1200 0063 07       		.byte	0x7
 1201 0064 7F030000 		.4byte	.LASF7
 1202 0068 04       		.uleb128 0x4
 1203 0069 04       		.byte	0x4
 1204 006a 05       		.byte	0x5
 1205 006b 696E7400 		.ascii	"int\000"
 1206 006f 02       		.uleb128 0x2
 1207 0070 04       		.byte	0x4
 1208 0071 07       		.byte	0x7
 1209 0072 96030000 		.4byte	.LASF8
 1210 0076 02       		.uleb128 0x2
 1211 0077 08       		.byte	0x8
 1212 0078 04       		.byte	0x4
 1213 0079 28030000 		.4byte	.LASF9
 1214 007d 02       		.uleb128 0x2
 1215 007e 04       		.byte	0x4
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 31


 1216 007f 07       		.byte	0x7
 1217 0080 A2000000 		.4byte	.LASF10
 1218 0084 05       		.uleb128 0x5
 1219 0085 04       		.byte	0x4
 1220 0086 8A000000 		.4byte	0x8a
 1221 008a 02       		.uleb128 0x2
 1222 008b 01       		.byte	0x1
 1223 008c 08       		.byte	0x8
 1224 008d EF030000 		.4byte	.LASF11
 1225 0091 03       		.uleb128 0x3
 1226 0092 FF030000 		.4byte	.LASF13
 1227 0096 03       		.byte	0x3
 1228 0097 2C       		.byte	0x2c
 1229 0098 41000000 		.4byte	0x41
 1230 009c 06       		.uleb128 0x6
 1231 009d 87010000 		.4byte	.LASF14
 1232 00a1 04       		.byte	0x4
 1233 00a2 E401     		.2byte	0x1e4
 1234 00a4 2C000000 		.4byte	0x2c
 1235 00a8 06       		.uleb128 0x6
 1236 00a9 74010000 		.4byte	.LASF15
 1237 00ad 04       		.byte	0x4
 1238 00ae E501     		.2byte	0x1e5
 1239 00b0 3A000000 		.4byte	0x3a
 1240 00b4 06       		.uleb128 0x6
 1241 00b5 72020000 		.4byte	.LASF16
 1242 00b9 04       		.byte	0x4
 1243 00ba E701     		.2byte	0x1e7
 1244 00bc 25000000 		.4byte	0x25
 1245 00c0 06       		.uleb128 0x6
 1246 00c1 81010000 		.4byte	.LASF17
 1247 00c5 04       		.byte	0x4
 1248 00c6 E801     		.2byte	0x1e8
 1249 00c8 33000000 		.4byte	0x33
 1250 00cc 02       		.uleb128 0x2
 1251 00cd 04       		.byte	0x4
 1252 00ce 04       		.byte	0x4
 1253 00cf 37020000 		.4byte	.LASF18
 1254 00d3 02       		.uleb128 0x2
 1255 00d4 08       		.byte	0x8
 1256 00d5 04       		.byte	0x4
 1257 00d6 29000000 		.4byte	.LASF19
 1258 00da 07       		.uleb128 0x7
 1259 00db D9030000 		.4byte	.LASF95
 1260 00df 20       		.byte	0x20
 1261 00e0 05       		.byte	0x5
 1262 00e1 29       		.byte	0x29
 1263 00e2 B3010000 		.4byte	0x1b3
 1264 00e6 08       		.uleb128 0x8
 1265 00e7 65050000 		.4byte	.LASF20
 1266 00eb 05       		.byte	0x5
 1267 00ec 2A       		.byte	0x2a
 1268 00ed B4000000 		.4byte	0xb4
 1269 00f1 00       		.byte	0
 1270 00f2 08       		.uleb128 0x8
 1271 00f3 7B010000 		.4byte	.LASF21
 1272 00f7 05       		.byte	0x5
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 32


 1273 00f8 2B       		.byte	0x2b
 1274 00f9 9C000000 		.4byte	0x9c
 1275 00fd 01       		.byte	0x1
 1276 00fe 08       		.uleb128 0x8
 1277 00ff F4030000 		.4byte	.LASF22
 1278 0103 05       		.byte	0x5
 1279 0104 2C       		.byte	0x2c
 1280 0105 C0000000 		.4byte	0xc0
 1281 0109 02       		.byte	0x2
 1282 010a 08       		.uleb128 0x8
 1283 010b 1E050000 		.4byte	.LASF23
 1284 010f 05       		.byte	0x5
 1285 0110 2D       		.byte	0x2d
 1286 0111 C0000000 		.4byte	0xc0
 1287 0115 04       		.byte	0x4
 1288 0116 08       		.uleb128 0x8
 1289 0117 6A050000 		.4byte	.LASF24
 1290 011b 05       		.byte	0x5
 1291 011c 2E       		.byte	0x2e
 1292 011d C0000000 		.4byte	0xc0
 1293 0121 06       		.byte	0x6
 1294 0122 08       		.uleb128 0x8
 1295 0123 9B020000 		.4byte	.LASF25
 1296 0127 05       		.byte	0x5
 1297 0128 2F       		.byte	0x2f
 1298 0129 C0000000 		.4byte	0xc0
 1299 012d 08       		.byte	0x8
 1300 012e 08       		.uleb128 0x8
 1301 012f DA040000 		.4byte	.LASF26
 1302 0133 05       		.byte	0x5
 1303 0134 30       		.byte	0x30
 1304 0135 C0000000 		.4byte	0xc0
 1305 0139 0A       		.byte	0xa
 1306 013a 08       		.uleb128 0x8
 1307 013b 5B030000 		.4byte	.LASF27
 1308 013f 05       		.byte	0x5
 1309 0140 31       		.byte	0x31
 1310 0141 C0000000 		.4byte	0xc0
 1311 0145 0C       		.byte	0xc
 1312 0146 08       		.uleb128 0x8
 1313 0147 8E020000 		.4byte	.LASF28
 1314 014b 05       		.byte	0x5
 1315 014c 32       		.byte	0x32
 1316 014d C0000000 		.4byte	0xc0
 1317 0151 0E       		.byte	0xe
 1318 0152 08       		.uleb128 0x8
 1319 0153 C7030000 		.4byte	.LASF29
 1320 0157 05       		.byte	0x5
 1321 0158 33       		.byte	0x33
 1322 0159 C0000000 		.4byte	0xc0
 1323 015d 10       		.byte	0x10
 1324 015e 08       		.uleb128 0x8
 1325 015f 07040000 		.4byte	.LASF30
 1326 0163 05       		.byte	0x5
 1327 0164 34       		.byte	0x34
 1328 0165 C0000000 		.4byte	0xc0
 1329 0169 12       		.byte	0x12
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 33


 1330 016a 08       		.uleb128 0x8
 1331 016b 2F040000 		.4byte	.LASF31
 1332 016f 05       		.byte	0x5
 1333 0170 35       		.byte	0x35
 1334 0171 C0000000 		.4byte	0xc0
 1335 0175 14       		.byte	0x14
 1336 0176 08       		.uleb128 0x8
 1337 0177 49050000 		.4byte	.LASF32
 1338 017b 05       		.byte	0x5
 1339 017c 36       		.byte	0x36
 1340 017d C0000000 		.4byte	0xc0
 1341 0181 16       		.byte	0x16
 1342 0182 08       		.uleb128 0x8
 1343 0183 83000000 		.4byte	.LASF33
 1344 0187 05       		.byte	0x5
 1345 0188 37       		.byte	0x37
 1346 0189 C0000000 		.4byte	0xc0
 1347 018d 18       		.byte	0x18
 1348 018e 08       		.uleb128 0x8
 1349 018f 86020000 		.4byte	.LASF34
 1350 0193 05       		.byte	0x5
 1351 0194 38       		.byte	0x38
 1352 0195 C0000000 		.4byte	0xc0
 1353 0199 1A       		.byte	0x1a
 1354 019a 08       		.uleb128 0x8
 1355 019b BE030000 		.4byte	.LASF35
 1356 019f 05       		.byte	0x5
 1357 01a0 39       		.byte	0x39
 1358 01a1 C0000000 		.4byte	0xc0
 1359 01a5 1C       		.byte	0x1c
 1360 01a6 08       		.uleb128 0x8
 1361 01a7 0F040000 		.4byte	.LASF36
 1362 01ab 05       		.byte	0x5
 1363 01ac 3A       		.byte	0x3a
 1364 01ad C0000000 		.4byte	0xc0
 1365 01b1 1E       		.byte	0x1e
 1366 01b2 00       		.byte	0
 1367 01b3 09       		.uleb128 0x9
 1368 01b4 BF040000 		.4byte	.LASF37
 1369 01b8 01       		.byte	0x1
 1370 01b9 32       		.byte	0x32
 1371 01ba 00000000 		.4byte	.LFB64
 1372 01be 14000000 		.4byte	.LFE64-.LFB64
 1373 01c2 01       		.uleb128 0x1
 1374 01c3 9C       		.byte	0x9c
 1375 01c4 09       		.uleb128 0x9
 1376 01c5 67000000 		.4byte	.LASF38
 1377 01c9 01       		.byte	0x1
 1378 01ca 38       		.byte	0x38
 1379 01cb 00000000 		.4byte	.LFB65
 1380 01cf 14000000 		.4byte	.LFE65-.LFB65
 1381 01d3 01       		.uleb128 0x1
 1382 01d4 9C       		.byte	0x9c
 1383 01d5 09       		.uleb128 0x9
 1384 01d6 00000000 		.4byte	.LASF39
 1385 01da 01       		.byte	0x1
 1386 01db 3E       		.byte	0x3e
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 34


 1387 01dc 00000000 		.4byte	.LFB66
 1388 01e0 14000000 		.4byte	.LFE66-.LFB66
 1389 01e4 01       		.uleb128 0x1
 1390 01e5 9C       		.byte	0x9c
 1391 01e6 0A       		.uleb128 0xa
 1392 01e7 B1040000 		.4byte	.LASF40
 1393 01eb 01       		.byte	0x1
 1394 01ec 43       		.byte	0x43
 1395 01ed 00000000 		.4byte	.LFB67
 1396 01f1 20000000 		.4byte	.LFE67-.LFB67
 1397 01f5 01       		.uleb128 0x1
 1398 01f6 9C       		.byte	0x9c
 1399 01f7 08020000 		.4byte	0x208
 1400 01fb 0B       		.uleb128 0xb
 1401 01fc 7800     		.ascii	"x\000"
 1402 01fe 01       		.byte	0x1
 1403 01ff 43       		.byte	0x43
 1404 0200 68000000 		.4byte	0x68
 1405 0204 02       		.uleb128 0x2
 1406 0205 91       		.byte	0x91
 1407 0206 74       		.sleb128 -12
 1408 0207 00       		.byte	0
 1409 0208 0A       		.uleb128 0xa
 1410 0209 56050000 		.4byte	.LASF41
 1411 020d 01       		.byte	0x1
 1412 020e 4E       		.byte	0x4e
 1413 020f 00000000 		.4byte	.LFB68
 1414 0213 26000000 		.4byte	.LFE68-.LFB68
 1415 0217 01       		.uleb128 0x1
 1416 0218 9C       		.byte	0x9c
 1417 0219 2A020000 		.4byte	0x22a
 1418 021d 0B       		.uleb128 0xb
 1419 021e 7800     		.ascii	"x\000"
 1420 0220 01       		.byte	0x1
 1421 0221 4E       		.byte	0x4e
 1422 0222 68000000 		.4byte	0x68
 1423 0226 02       		.uleb128 0x2
 1424 0227 91       		.byte	0x91
 1425 0228 74       		.sleb128 -12
 1426 0229 00       		.byte	0
 1427 022a 0A       		.uleb128 0xa
 1428 022b 50000000 		.4byte	.LASF42
 1429 022f 01       		.byte	0x1
 1430 0230 5B       		.byte	0x5b
 1431 0231 00000000 		.4byte	.LFB69
 1432 0235 90000000 		.4byte	.LFE69-.LFB69
 1433 0239 01       		.uleb128 0x1
 1434 023a 9C       		.byte	0x9c
 1435 023b 6A020000 		.4byte	0x26a
 1436 023f 0C       		.uleb128 0xc
 1437 0240 48010000 		.4byte	.LASF43
 1438 0244 01       		.byte	0x1
 1439 0245 63       		.byte	0x63
 1440 0246 C0000000 		.4byte	0xc0
 1441 024a 02       		.uleb128 0x2
 1442 024b 91       		.byte	0x91
 1443 024c 76       		.sleb128 -10
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 35


 1444 024d 0C       		.uleb128 0xc
 1445 024e 50010000 		.4byte	.LASF44
 1446 0252 01       		.byte	0x1
 1447 0253 64       		.byte	0x64
 1448 0254 C0000000 		.4byte	0xc0
 1449 0258 02       		.uleb128 0x2
 1450 0259 91       		.byte	0x91
 1451 025a 74       		.sleb128 -12
 1452 025b 0C       		.uleb128 0xc
 1453 025c 58010000 		.4byte	.LASF45
 1454 0260 01       		.byte	0x1
 1455 0261 65       		.byte	0x65
 1456 0262 C0000000 		.4byte	0xc0
 1457 0266 02       		.uleb128 0x2
 1458 0267 91       		.byte	0x91
 1459 0268 72       		.sleb128 -14
 1460 0269 00       		.byte	0
 1461 026a 0D       		.uleb128 0xd
 1462 026b 3D020000 		.4byte	.LASF53
 1463 026f 01       		.byte	0x1
 1464 0270 81       		.byte	0x81
 1465 0271 00000000 		.4byte	.LFB70
 1466 0275 0C000000 		.4byte	.LFE70-.LFB70
 1467 0279 01       		.uleb128 0x1
 1468 027a 9C       		.byte	0x9c
 1469 027b 0E       		.uleb128 0xe
 1470 027c CF040000 		.4byte	.LASF62
 1471 0280 01       		.byte	0x1
 1472 0281 94       		.byte	0x94
 1473 0282 00000000 		.4byte	.LFB71
 1474 0286 C0000000 		.4byte	.LFE71-.LFB71
 1475 028a 01       		.uleb128 0x1
 1476 028b 9C       		.byte	0x9c
 1477 028c E9020000 		.4byte	0x2e9
 1478 0290 0C       		.uleb128 0xc
 1479 0291 AC020000 		.4byte	.LASF46
 1480 0295 01       		.byte	0x1
 1481 0296 95       		.byte	0x95
 1482 0297 C0000000 		.4byte	0xc0
 1483 029b 02       		.uleb128 0x2
 1484 029c 91       		.byte	0x91
 1485 029d 76       		.sleb128 -10
 1486 029e 0C       		.uleb128 0xc
 1487 029f C1020000 		.4byte	.LASF47
 1488 02a3 01       		.byte	0x1
 1489 02a4 96       		.byte	0x96
 1490 02a5 C0000000 		.4byte	0xc0
 1491 02a9 02       		.uleb128 0x2
 1492 02aa 91       		.byte	0x91
 1493 02ab 74       		.sleb128 -12
 1494 02ac 0C       		.uleb128 0xc
 1495 02ad 19030000 		.4byte	.LASF48
 1496 02b1 01       		.byte	0x1
 1497 02b2 97       		.byte	0x97
 1498 02b3 C0000000 		.4byte	0xc0
 1499 02b7 02       		.uleb128 0x2
 1500 02b8 91       		.byte	0x91
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 36


 1501 02b9 72       		.sleb128 -14
 1502 02ba 0C       		.uleb128 0xc
 1503 02bb 0A030000 		.4byte	.LASF49
 1504 02bf 01       		.byte	0x1
 1505 02c0 98       		.byte	0x98
 1506 02c1 C0000000 		.4byte	0xc0
 1507 02c5 02       		.uleb128 0x2
 1508 02c6 91       		.byte	0x91
 1509 02c7 70       		.sleb128 -16
 1510 02c8 0C       		.uleb128 0xc
 1511 02c9 D6020000 		.4byte	.LASF50
 1512 02cd 01       		.byte	0x1
 1513 02ce 99       		.byte	0x99
 1514 02cf E9020000 		.4byte	0x2e9
 1515 02d3 04       		.uleb128 0x4
 1516 02d4 91       		.byte	0x91
 1517 02d5 E0B17F   		.sleb128 -10016
 1518 02d8 0C       		.uleb128 0xc
 1519 02d9 3C050000 		.4byte	.LASF51
 1520 02dd 01       		.byte	0x1
 1521 02de 9B       		.byte	0x9b
 1522 02df E9020000 		.4byte	0x2e9
 1523 02e3 04       		.uleb128 0x4
 1524 02e4 91       		.byte	0x91
 1525 02e5 D0E37E   		.sleb128 -20016
 1526 02e8 00       		.byte	0
 1527 02e9 0F       		.uleb128 0xf
 1528 02ea 8A000000 		.4byte	0x8a
 1529 02ee FA020000 		.4byte	0x2fa
 1530 02f2 10       		.uleb128 0x10
 1531 02f3 7D000000 		.4byte	0x7d
 1532 02f7 0F27     		.2byte	0x270f
 1533 02f9 00       		.byte	0
 1534 02fa 09       		.uleb128 0x9
 1535 02fb 60010000 		.4byte	.LASF52
 1536 02ff 01       		.byte	0x1
 1537 0300 A3       		.byte	0xa3
 1538 0301 00000000 		.4byte	.LFB72
 1539 0305 2C000000 		.4byte	.LFE72-.LFB72
 1540 0309 01       		.uleb128 0x1
 1541 030a 9C       		.byte	0x9c
 1542 030b 11       		.uleb128 0x11
 1543 030c 0A000000 		.4byte	.LASF54
 1544 0310 01       		.byte	0x1
 1545 0311 BA       		.byte	0xba
 1546 0312 00000000 		.4byte	.LFB73
 1547 0316 0C000000 		.4byte	.LFE73-.LFB73
 1548 031a 01       		.uleb128 0x1
 1549 031b 9C       		.byte	0x9c
 1550 031c 12       		.uleb128 0x12
 1551 031d 43010000 		.4byte	.LASF55
 1552 0321 01       		.byte	0x1
 1553 0322 C7       		.byte	0xc7
 1554 0323 68000000 		.4byte	0x68
 1555 0327 00000000 		.4byte	.LFB74
 1556 032b 18010000 		.4byte	.LFE74-.LFB74
 1557 032f 01       		.uleb128 0x1
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 37


 1558 0330 9C       		.byte	0x9c
 1559 0331 4F030000 		.4byte	0x34f
 1560 0335 13       		.uleb128 0x13
 1561 0336 50000000 		.4byte	.LBB2
 1562 033a B0000000 		.4byte	.LBE2-.LBB2
 1563 033e 14       		.uleb128 0x14
 1564 033f CF030000 		.4byte	.LASF56
 1565 0343 01       		.byte	0x1
 1566 0344 1701     		.2byte	0x117
 1567 0346 68000000 		.4byte	0x68
 1568 034a 02       		.uleb128 0x2
 1569 034b 91       		.byte	0x91
 1570 034c 74       		.sleb128 -12
 1571 034d 00       		.byte	0
 1572 034e 00       		.byte	0
 1573 034f 15       		.uleb128 0x15
 1574 0350 54040000 		.4byte	.LASF57
 1575 0354 01       		.byte	0x1
 1576 0355 7601     		.2byte	0x176
 1577 0357 68000000 		.4byte	0x68
 1578 035b 00000000 		.4byte	.LFB75
 1579 035f 58000000 		.4byte	.LFE75-.LFB75
 1580 0363 01       		.uleb128 0x1
 1581 0364 9C       		.byte	0x9c
 1582 0365 B6030000 		.4byte	0x3b6
 1583 0369 14       		.uleb128 0x14
 1584 036a 36050000 		.4byte	.LASF58
 1585 036e 01       		.byte	0x1
 1586 036f 7801     		.2byte	0x178
 1587 0371 68000000 		.4byte	0x68
 1588 0375 02       		.uleb128 0x2
 1589 0376 91       		.byte	0x91
 1590 0377 74       		.sleb128 -12
 1591 0378 14       		.uleb128 0x14
 1592 0379 E3030000 		.4byte	.LASF59
 1593 037d 01       		.byte	0x1
 1594 037e 7901     		.2byte	0x179
 1595 0380 68000000 		.4byte	0x68
 1596 0384 02       		.uleb128 0x2
 1597 0385 91       		.byte	0x91
 1598 0386 70       		.sleb128 -16
 1599 0387 13       		.uleb128 0x13
 1600 0388 0E000000 		.4byte	.LBB3
 1601 038c 3A000000 		.4byte	.LBE3-.LBB3
 1602 0390 16       		.uleb128 0x16
 1603 0391 6900     		.ascii	"i\000"
 1604 0393 01       		.byte	0x1
 1605 0394 7A01     		.2byte	0x17a
 1606 0396 68000000 		.4byte	0x68
 1607 039a 02       		.uleb128 0x2
 1608 039b 91       		.byte	0x91
 1609 039c 6C       		.sleb128 -20
 1610 039d 13       		.uleb128 0x13
 1611 039e 14000000 		.4byte	.LBB4
 1612 03a2 28000000 		.4byte	.LBE4-.LBB4
 1613 03a6 16       		.uleb128 0x16
 1614 03a7 7800     		.ascii	"x\000"
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 38


 1615 03a9 01       		.byte	0x1
 1616 03aa 7B01     		.2byte	0x17b
 1617 03ac 68000000 		.4byte	0x68
 1618 03b0 02       		.uleb128 0x2
 1619 03b1 91       		.byte	0x91
 1620 03b2 68       		.sleb128 -24
 1621 03b3 00       		.byte	0
 1622 03b4 00       		.byte	0
 1623 03b5 00       		.byte	0
 1624 03b6 17       		.uleb128 0x17
 1625 03b7 65020000 		.4byte	.LASF60
 1626 03bb 01       		.byte	0x1
 1627 03bc 8301     		.2byte	0x183
 1628 03be 00000000 		.4byte	.LFB76
 1629 03c2 3E000000 		.4byte	.LFE76-.LFB76
 1630 03c6 01       		.uleb128 0x1
 1631 03c7 9C       		.byte	0x9c
 1632 03c8 DA030000 		.4byte	0x3da
 1633 03cc 18       		.uleb128 0x18
 1634 03cd 7300     		.ascii	"s\000"
 1635 03cf 01       		.byte	0x1
 1636 03d0 8301     		.2byte	0x183
 1637 03d2 84000000 		.4byte	0x84
 1638 03d6 02       		.uleb128 0x2
 1639 03d7 91       		.byte	0x91
 1640 03d8 74       		.sleb128 -12
 1641 03d9 00       		.byte	0
 1642 03da 17       		.uleb128 0x17
 1643 03db 3C000000 		.4byte	.LASF61
 1644 03df 01       		.byte	0x1
 1645 03e0 9101     		.2byte	0x191
 1646 03e2 00000000 		.4byte	.LFB77
 1647 03e6 26000000 		.4byte	.LFE77-.LFB77
 1648 03ea 01       		.uleb128 0x1
 1649 03eb 9C       		.byte	0x9c
 1650 03ec FE030000 		.4byte	0x3fe
 1651 03f0 18       		.uleb128 0x18
 1652 03f1 6300     		.ascii	"c\000"
 1653 03f3 01       		.byte	0x1
 1654 03f4 9101     		.2byte	0x191
 1655 03f6 8A000000 		.4byte	0x8a
 1656 03fa 02       		.uleb128 0x2
 1657 03fb 91       		.byte	0x91
 1658 03fc 77       		.sleb128 -9
 1659 03fd 00       		.byte	0
 1660 03fe 19       		.uleb128 0x19
 1661 03ff F7040000 		.4byte	.LASF63
 1662 0403 01       		.byte	0x1
 1663 0404 9901     		.2byte	0x199
 1664 0406 00000000 		.4byte	.LFB78
 1665 040a C8000000 		.4byte	.LFE78-.LFB78
 1666 040e 01       		.uleb128 0x1
 1667 040f 9C       		.byte	0x9c
 1668 0410 46040000 		.4byte	0x446
 1669 0414 14       		.uleb128 0x14
 1670 0415 81040000 		.4byte	.LASF64
 1671 0419 01       		.byte	0x1
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 39


 1672 041a 9F01     		.2byte	0x19f
 1673 041c 9C000000 		.4byte	0x9c
 1674 0420 05       		.uleb128 0x5
 1675 0421 03       		.byte	0x3
 1676 0422 35000000 		.4byte	usbStarted.8284
 1677 0426 14       		.uleb128 0x14
 1678 0427 B2030000 		.4byte	.LASF65
 1679 042b 01       		.byte	0x1
 1680 042c A001     		.2byte	0x1a0
 1681 042e A8000000 		.4byte	0xa8
 1682 0432 05       		.uleb128 0x5
 1683 0433 03       		.byte	0x3
 1684 0434 36000000 		.4byte	usbBufCount.8285
 1685 0438 16       		.uleb128 0x16
 1686 0439 6300     		.ascii	"c\000"
 1687 043b 01       		.byte	0x1
 1688 043c A101     		.2byte	0x1a1
 1689 043e 9C000000 		.4byte	0x9c
 1690 0442 02       		.uleb128 0x2
 1691 0443 91       		.byte	0x91
 1692 0444 77       		.sleb128 -9
 1693 0445 00       		.byte	0
 1694 0446 0C       		.uleb128 0xc
 1695 0447 95040000 		.4byte	.LASF66
 1696 044b 01       		.byte	0x1
 1697 044c 80       		.byte	0x80
 1698 044d 57040000 		.4byte	0x457
 1699 0451 05       		.uleb128 0x5
 1700 0452 03       		.byte	0x3
 1701 0453 34000000 		.4byte	count
 1702 0457 1A       		.uleb128 0x1a
 1703 0458 B4000000 		.4byte	0xb4
 1704 045c 1B       		.uleb128 0x1b
 1705 045d 29050000 		.4byte	.LASF67
 1706 0461 06       		.byte	0x6
 1707 0462 1207     		.2byte	0x712
 1708 0464 68040000 		.4byte	0x468
 1709 0468 1A       		.uleb128 0x1a
 1710 0469 91000000 		.4byte	0x91
 1711 046d 1C       		.uleb128 0x1c
 1712 046e 747300   		.ascii	"ts\000"
 1713 0471 05       		.byte	0x5
 1714 0472 10       		.byte	0x10
 1715 0473 9C000000 		.4byte	0x9c
 1716 0477 05       		.uleb128 0x5
 1717 0478 03       		.byte	0x3
 1718 0479 00000000 		.4byte	ts
 1719 047d 1D       		.uleb128 0x1d
 1720 047e 22000000 		.4byte	.LASF68
 1721 0482 05       		.byte	0x5
 1722 0483 11       		.byte	0x11
 1723 0484 A8000000 		.4byte	0xa8
 1724 0488 05       		.uleb128 0x5
 1725 0489 03       		.byte	0x3
 1726 048a 00000000 		.4byte	ts_enc
 1727 048e 1D       		.uleb128 0x1d
 1728 048f ED040000 		.4byte	.LASF69
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 40


 1729 0493 05       		.byte	0x5
 1730 0494 12       		.byte	0x12
 1731 0495 A8000000 		.4byte	0xa8
 1732 0499 05       		.uleb128 0x5
 1733 049a 03       		.byte	0x3
 1734 049b 00000000 		.4byte	ts_update
 1735 049f 1D       		.uleb128 0x1d
 1736 04a0 8C040000 		.4byte	.LASF70
 1737 04a4 05       		.byte	0x5
 1738 04a5 13       		.byte	0x13
 1739 04a6 A8000000 		.4byte	0xa8
 1740 04aa 05       		.uleb128 0x5
 1741 04ab 03       		.byte	0x3
 1742 04ac 00000000 		.4byte	ts_speed
 1743 04b0 1D       		.uleb128 0x1d
 1744 04b1 E2040000 		.4byte	.LASF71
 1745 04b5 05       		.byte	0x5
 1746 04b6 14       		.byte	0x14
 1747 04b7 A8000000 		.4byte	0xa8
 1748 04bb 05       		.uleb128 0x5
 1749 04bc 03       		.byte	0x3
 1750 04bd 00000000 		.4byte	ts_display
 1751 04c1 1D       		.uleb128 0x1d
 1752 04c2 9B040000 		.4byte	.LASF72
 1753 04c6 05       		.byte	0x5
 1754 04c7 16       		.byte	0x16
 1755 04c8 9C000000 		.4byte	0x9c
 1756 04cc 05       		.uleb128 0x5
 1757 04cd 03       		.byte	0x3
 1758 04ce 00000000 		.4byte	flag_ts_enc
 1759 04d2 1D       		.uleb128 0x1d
 1760 04d3 77020000 		.4byte	.LASF73
 1761 04d7 05       		.byte	0x5
 1762 04d8 17       		.byte	0x17
 1763 04d9 9C000000 		.4byte	0x9c
 1764 04dd 05       		.uleb128 0x5
 1765 04de 03       		.byte	0x3
 1766 04df 00000000 		.4byte	flag_ts_update
 1767 04e3 1D       		.uleb128 0x1d
 1768 04e4 46040000 		.4byte	.LASF74
 1769 04e8 05       		.byte	0x5
 1770 04e9 18       		.byte	0x18
 1771 04ea 9C000000 		.4byte	0x9c
 1772 04ee 05       		.uleb128 0x5
 1773 04ef 03       		.byte	0x3
 1774 04f0 00000000 		.4byte	flag_ts_speed
 1775 04f4 1D       		.uleb128 0x1d
 1776 04f5 F2020000 		.4byte	.LASF75
 1777 04f9 05       		.byte	0x5
 1778 04fa 19       		.byte	0x19
 1779 04fb 9C000000 		.4byte	0x9c
 1780 04ff 05       		.uleb128 0x5
 1781 0500 03       		.byte	0x3
 1782 0501 00000000 		.4byte	flag_ts_display
 1783 0505 1D       		.uleb128 0x1d
 1784 0506 02030000 		.4byte	.LASF76
 1785 050a 05       		.byte	0x5
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 41


 1786 050b 1C       		.byte	0x1c
 1787 050c 9C000000 		.4byte	0x9c
 1788 0510 05       		.uleb128 0x5
 1789 0511 03       		.byte	0x3
 1790 0512 00000000 		.4byte	flag_rx
 1791 0516 1D       		.uleb128 0x1d
 1792 0517 30000000 		.4byte	.LASF77
 1793 051b 05       		.byte	0x5
 1794 051c 1D       		.byte	0x1d
 1795 051d 9C000000 		.4byte	0x9c
 1796 0521 05       		.uleb128 0x5
 1797 0522 03       		.byte	0x3
 1798 0523 00000000 		.4byte	flag_packet
 1799 0527 1D       		.uleb128 0x1d
 1800 0528 A3030000 		.4byte	.LASF78
 1801 052c 05       		.byte	0x5
 1802 052d 1E       		.byte	0x1e
 1803 052e 9C000000 		.4byte	0x9c
 1804 0532 05       		.uleb128 0x5
 1805 0533 03       		.byte	0x3
 1806 0534 00000000 		.4byte	flag_KB_string
 1807 0538 1D       		.uleb128 0x1d
 1808 0539 64030000 		.4byte	.LASF79
 1809 053d 05       		.byte	0x5
 1810 053e 20       		.byte	0x20
 1811 053f 9C000000 		.4byte	0x9c
 1812 0543 05       		.uleb128 0x5
 1813 0544 03       		.byte	0x3
 1814 0545 00000000 		.4byte	dataready_flag
 1815 0549 1D       		.uleb128 0x1d
 1816 054a 02050000 		.4byte	.LASF80
 1817 054e 05       		.byte	0x5
 1818 054f 22       		.byte	0x22
 1819 0550 9C000000 		.4byte	0x9c
 1820 0554 05       		.uleb128 0x5
 1821 0555 03       		.byte	0x3
 1822 0556 00000000 		.4byte	flag_rf_transmission_active
 1823 055a 0F       		.uleb128 0xf
 1824 055b 8A000000 		.4byte	0x8a
 1825 055f 6A050000 		.4byte	0x56a
 1826 0563 1E       		.uleb128 0x1e
 1827 0564 7D000000 		.4byte	0x7d
 1828 0568 3F       		.byte	0x3f
 1829 0569 00       		.byte	0
 1830 056a 1D       		.uleb128 0x1d
 1831 056b 38040000 		.4byte	.LASF81
 1832 056f 05       		.byte	0x5
 1833 0570 25       		.byte	0x25
 1834 0571 5A050000 		.4byte	0x55a
 1835 0575 05       		.uleb128 0x5
 1836 0576 03       		.byte	0x3
 1837 0577 00000000 		.4byte	displaystring
 1838 057b 1D       		.uleb128 0x1d
 1839 057c 32020000 		.4byte	.LASF82
 1840 0580 05       		.byte	0x5
 1841 0581 26       		.byte	0x26
 1842 0582 5A050000 		.4byte	0x55a
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 42


 1843 0586 05       		.uleb128 0x5
 1844 0587 03       		.byte	0x3
 1845 0588 00000000 		.4byte	line
 1846 058c 1D       		.uleb128 0x1d
 1847 058d 34030000 		.4byte	.LASF83
 1848 0591 05       		.byte	0x5
 1849 0592 26       		.byte	0x26
 1850 0593 5A050000 		.4byte	0x55a
 1851 0597 05       		.uleb128 0x5
 1852 0598 03       		.byte	0x3
 1853 0599 00000000 		.4byte	entry
 1854 059d 0F       		.uleb128 0xf
 1855 059e 9C000000 		.4byte	0x9c
 1856 05a2 AD050000 		.4byte	0x5ad
 1857 05a6 1E       		.uleb128 0x1e
 1858 05a7 7D000000 		.4byte	0x7d
 1859 05ab 3F       		.byte	0x3f
 1860 05ac 00       		.byte	0
 1861 05ad 1D       		.uleb128 0x1d
 1862 05ae AB000000 		.4byte	.LASF84
 1863 05b2 05       		.byte	0x5
 1864 05b3 27       		.byte	0x27
 1865 05b4 9D050000 		.4byte	0x59d
 1866 05b8 05       		.uleb128 0x5
 1867 05b9 03       		.byte	0x3
 1868 05ba 00000000 		.4byte	usbBuffer
 1869 05be 1D       		.uleb128 0x1d
 1870 05bf 95000000 		.4byte	.LASF85
 1871 05c3 05       		.byte	0x5
 1872 05c4 3C       		.byte	0x3c
 1873 05c5 DA000000 		.4byte	0xda
 1874 05c9 05       		.uleb128 0x5
 1875 05ca 03       		.byte	0x3
 1876 05cb 00000000 		.4byte	system_state
 1877 05cf 1D       		.uleb128 0x1d
 1878 05d0 26020000 		.4byte	.LASF86
 1879 05d4 01       		.byte	0x1
 1880 05d5 55       		.byte	0x55
 1881 05d6 68000000 		.4byte	0x68
 1882 05da 05       		.uleb128 0x5
 1883 05db 03       		.byte	0x3
 1884 05dc 00000000 		.4byte	changeMotor
 1885 05e0 1D       		.uleb128 0x1d
 1886 05e1 78000000 		.4byte	.LASF87
 1887 05e5 01       		.byte	0x1
 1888 05e6 56       		.byte	0x56
 1889 05e7 68000000 		.4byte	0x68
 1890 05eb 05       		.uleb128 0x5
 1891 05ec 03       		.byte	0x3
 1892 05ed 00000000 		.4byte	checkLight
 1893 05f1 1D       		.uleb128 0x1d
 1894 05f2 69010000 		.4byte	.LASF88
 1895 05f6 01       		.byte	0x1
 1896 05f7 57       		.byte	0x57
 1897 05f8 68000000 		.4byte	0x68
 1898 05fc 05       		.uleb128 0x5
 1899 05fd 03       		.byte	0x3
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 43


 1900 05fe 00000000 		.4byte	lightState
 1901 0602 0F       		.uleb128 0xf
 1902 0603 12060000 		.4byte	0x612
 1903 0607 12060000 		.4byte	0x612
 1904 060b 1E       		.uleb128 0x1e
 1905 060c 7D000000 		.4byte	0x7d
 1906 0610 02       		.byte	0x2
 1907 0611 00       		.byte	0
 1908 0612 1A       		.uleb128 0x1a
 1909 0613 68000000 		.4byte	0x68
 1910 0617 1D       		.uleb128 0x1d
 1911 0618 48030000 		.4byte	.LASF89
 1912 061c 01       		.byte	0x1
 1913 061d 58       		.byte	0x58
 1914 061e 28060000 		.4byte	0x628
 1915 0622 05       		.uleb128 0x5
 1916 0623 03       		.byte	0x3
 1917 0624 00000000 		.4byte	lightDetectedFront
 1918 0628 1A       		.uleb128 0x1a
 1919 0629 02060000 		.4byte	0x602
 1920 062d 1D       		.uleb128 0x1d
 1921 062e 47000000 		.4byte	.LASF90
 1922 0632 01       		.byte	0x1
 1923 0633 59       		.byte	0x59
 1924 0634 12060000 		.4byte	0x612
 1925 0638 05       		.uleb128 0x5
 1926 0639 03       		.byte	0x3
 1927 063a 00000000 		.4byte	counteoc
 1928 063e 1D       		.uleb128 0x1d
 1929 063f E3020000 		.4byte	.LASF91
 1930 0643 01       		.byte	0x1
 1931 0644 5A       		.byte	0x5a
 1932 0645 12060000 		.4byte	0x612
 1933 0649 05       		.uleb128 0x5
 1934 064a 03       		.byte	0x3
 1935 064b 00000000 		.4byte	processSensors
 1936 064f 00       		.byte	0
 1937              		.section	.debug_abbrev,"",%progbits
 1938              	.Ldebug_abbrev0:
 1939 0000 01       		.uleb128 0x1
 1940 0001 11       		.uleb128 0x11
 1941 0002 01       		.byte	0x1
 1942 0003 25       		.uleb128 0x25
 1943 0004 0E       		.uleb128 0xe
 1944 0005 13       		.uleb128 0x13
 1945 0006 0B       		.uleb128 0xb
 1946 0007 03       		.uleb128 0x3
 1947 0008 0E       		.uleb128 0xe
 1948 0009 1B       		.uleb128 0x1b
 1949 000a 0E       		.uleb128 0xe
 1950 000b 55       		.uleb128 0x55
 1951 000c 17       		.uleb128 0x17
 1952 000d 11       		.uleb128 0x11
 1953 000e 01       		.uleb128 0x1
 1954 000f 10       		.uleb128 0x10
 1955 0010 17       		.uleb128 0x17
 1956 0011 00       		.byte	0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 44


 1957 0012 00       		.byte	0
 1958 0013 02       		.uleb128 0x2
 1959 0014 24       		.uleb128 0x24
 1960 0015 00       		.byte	0
 1961 0016 0B       		.uleb128 0xb
 1962 0017 0B       		.uleb128 0xb
 1963 0018 3E       		.uleb128 0x3e
 1964 0019 0B       		.uleb128 0xb
 1965 001a 03       		.uleb128 0x3
 1966 001b 0E       		.uleb128 0xe
 1967 001c 00       		.byte	0
 1968 001d 00       		.byte	0
 1969 001e 03       		.uleb128 0x3
 1970 001f 16       		.uleb128 0x16
 1971 0020 00       		.byte	0
 1972 0021 03       		.uleb128 0x3
 1973 0022 0E       		.uleb128 0xe
 1974 0023 3A       		.uleb128 0x3a
 1975 0024 0B       		.uleb128 0xb
 1976 0025 3B       		.uleb128 0x3b
 1977 0026 0B       		.uleb128 0xb
 1978 0027 49       		.uleb128 0x49
 1979 0028 13       		.uleb128 0x13
 1980 0029 00       		.byte	0
 1981 002a 00       		.byte	0
 1982 002b 04       		.uleb128 0x4
 1983 002c 24       		.uleb128 0x24
 1984 002d 00       		.byte	0
 1985 002e 0B       		.uleb128 0xb
 1986 002f 0B       		.uleb128 0xb
 1987 0030 3E       		.uleb128 0x3e
 1988 0031 0B       		.uleb128 0xb
 1989 0032 03       		.uleb128 0x3
 1990 0033 08       		.uleb128 0x8
 1991 0034 00       		.byte	0
 1992 0035 00       		.byte	0
 1993 0036 05       		.uleb128 0x5
 1994 0037 0F       		.uleb128 0xf
 1995 0038 00       		.byte	0
 1996 0039 0B       		.uleb128 0xb
 1997 003a 0B       		.uleb128 0xb
 1998 003b 49       		.uleb128 0x49
 1999 003c 13       		.uleb128 0x13
 2000 003d 00       		.byte	0
 2001 003e 00       		.byte	0
 2002 003f 06       		.uleb128 0x6
 2003 0040 16       		.uleb128 0x16
 2004 0041 00       		.byte	0
 2005 0042 03       		.uleb128 0x3
 2006 0043 0E       		.uleb128 0xe
 2007 0044 3A       		.uleb128 0x3a
 2008 0045 0B       		.uleb128 0xb
 2009 0046 3B       		.uleb128 0x3b
 2010 0047 05       		.uleb128 0x5
 2011 0048 49       		.uleb128 0x49
 2012 0049 13       		.uleb128 0x13
 2013 004a 00       		.byte	0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 45


 2014 004b 00       		.byte	0
 2015 004c 07       		.uleb128 0x7
 2016 004d 13       		.uleb128 0x13
 2017 004e 01       		.byte	0x1
 2018 004f 03       		.uleb128 0x3
 2019 0050 0E       		.uleb128 0xe
 2020 0051 0B       		.uleb128 0xb
 2021 0052 0B       		.uleb128 0xb
 2022 0053 3A       		.uleb128 0x3a
 2023 0054 0B       		.uleb128 0xb
 2024 0055 3B       		.uleb128 0x3b
 2025 0056 0B       		.uleb128 0xb
 2026 0057 01       		.uleb128 0x1
 2027 0058 13       		.uleb128 0x13
 2028 0059 00       		.byte	0
 2029 005a 00       		.byte	0
 2030 005b 08       		.uleb128 0x8
 2031 005c 0D       		.uleb128 0xd
 2032 005d 00       		.byte	0
 2033 005e 03       		.uleb128 0x3
 2034 005f 0E       		.uleb128 0xe
 2035 0060 3A       		.uleb128 0x3a
 2036 0061 0B       		.uleb128 0xb
 2037 0062 3B       		.uleb128 0x3b
 2038 0063 0B       		.uleb128 0xb
 2039 0064 49       		.uleb128 0x49
 2040 0065 13       		.uleb128 0x13
 2041 0066 38       		.uleb128 0x38
 2042 0067 0B       		.uleb128 0xb
 2043 0068 00       		.byte	0
 2044 0069 00       		.byte	0
 2045 006a 09       		.uleb128 0x9
 2046 006b 2E       		.uleb128 0x2e
 2047 006c 00       		.byte	0
 2048 006d 3F       		.uleb128 0x3f
 2049 006e 19       		.uleb128 0x19
 2050 006f 03       		.uleb128 0x3
 2051 0070 0E       		.uleb128 0xe
 2052 0071 3A       		.uleb128 0x3a
 2053 0072 0B       		.uleb128 0xb
 2054 0073 3B       		.uleb128 0x3b
 2055 0074 0B       		.uleb128 0xb
 2056 0075 11       		.uleb128 0x11
 2057 0076 01       		.uleb128 0x1
 2058 0077 12       		.uleb128 0x12
 2059 0078 06       		.uleb128 0x6
 2060 0079 40       		.uleb128 0x40
 2061 007a 18       		.uleb128 0x18
 2062 007b 9642     		.uleb128 0x2116
 2063 007d 19       		.uleb128 0x19
 2064 007e 00       		.byte	0
 2065 007f 00       		.byte	0
 2066 0080 0A       		.uleb128 0xa
 2067 0081 2E       		.uleb128 0x2e
 2068 0082 01       		.byte	0x1
 2069 0083 3F       		.uleb128 0x3f
 2070 0084 19       		.uleb128 0x19
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 46


 2071 0085 03       		.uleb128 0x3
 2072 0086 0E       		.uleb128 0xe
 2073 0087 3A       		.uleb128 0x3a
 2074 0088 0B       		.uleb128 0xb
 2075 0089 3B       		.uleb128 0x3b
 2076 008a 0B       		.uleb128 0xb
 2077 008b 27       		.uleb128 0x27
 2078 008c 19       		.uleb128 0x19
 2079 008d 11       		.uleb128 0x11
 2080 008e 01       		.uleb128 0x1
 2081 008f 12       		.uleb128 0x12
 2082 0090 06       		.uleb128 0x6
 2083 0091 40       		.uleb128 0x40
 2084 0092 18       		.uleb128 0x18
 2085 0093 9642     		.uleb128 0x2116
 2086 0095 19       		.uleb128 0x19
 2087 0096 01       		.uleb128 0x1
 2088 0097 13       		.uleb128 0x13
 2089 0098 00       		.byte	0
 2090 0099 00       		.byte	0
 2091 009a 0B       		.uleb128 0xb
 2092 009b 05       		.uleb128 0x5
 2093 009c 00       		.byte	0
 2094 009d 03       		.uleb128 0x3
 2095 009e 08       		.uleb128 0x8
 2096 009f 3A       		.uleb128 0x3a
 2097 00a0 0B       		.uleb128 0xb
 2098 00a1 3B       		.uleb128 0x3b
 2099 00a2 0B       		.uleb128 0xb
 2100 00a3 49       		.uleb128 0x49
 2101 00a4 13       		.uleb128 0x13
 2102 00a5 02       		.uleb128 0x2
 2103 00a6 18       		.uleb128 0x18
 2104 00a7 00       		.byte	0
 2105 00a8 00       		.byte	0
 2106 00a9 0C       		.uleb128 0xc
 2107 00aa 34       		.uleb128 0x34
 2108 00ab 00       		.byte	0
 2109 00ac 03       		.uleb128 0x3
 2110 00ad 0E       		.uleb128 0xe
 2111 00ae 3A       		.uleb128 0x3a
 2112 00af 0B       		.uleb128 0xb
 2113 00b0 3B       		.uleb128 0x3b
 2114 00b1 0B       		.uleb128 0xb
 2115 00b2 49       		.uleb128 0x49
 2116 00b3 13       		.uleb128 0x13
 2117 00b4 02       		.uleb128 0x2
 2118 00b5 18       		.uleb128 0x18
 2119 00b6 00       		.byte	0
 2120 00b7 00       		.byte	0
 2121 00b8 0D       		.uleb128 0xd
 2122 00b9 2E       		.uleb128 0x2e
 2123 00ba 00       		.byte	0
 2124 00bb 3F       		.uleb128 0x3f
 2125 00bc 19       		.uleb128 0x19
 2126 00bd 03       		.uleb128 0x3
 2127 00be 0E       		.uleb128 0xe
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 47


 2128 00bf 3A       		.uleb128 0x3a
 2129 00c0 0B       		.uleb128 0xb
 2130 00c1 3B       		.uleb128 0x3b
 2131 00c2 0B       		.uleb128 0xb
 2132 00c3 27       		.uleb128 0x27
 2133 00c4 19       		.uleb128 0x19
 2134 00c5 11       		.uleb128 0x11
 2135 00c6 01       		.uleb128 0x1
 2136 00c7 12       		.uleb128 0x12
 2137 00c8 06       		.uleb128 0x6
 2138 00c9 40       		.uleb128 0x40
 2139 00ca 18       		.uleb128 0x18
 2140 00cb 9742     		.uleb128 0x2117
 2141 00cd 19       		.uleb128 0x19
 2142 00ce 00       		.byte	0
 2143 00cf 00       		.byte	0
 2144 00d0 0E       		.uleb128 0xe
 2145 00d1 2E       		.uleb128 0x2e
 2146 00d2 01       		.byte	0x1
 2147 00d3 3F       		.uleb128 0x3f
 2148 00d4 19       		.uleb128 0x19
 2149 00d5 03       		.uleb128 0x3
 2150 00d6 0E       		.uleb128 0xe
 2151 00d7 3A       		.uleb128 0x3a
 2152 00d8 0B       		.uleb128 0xb
 2153 00d9 3B       		.uleb128 0x3b
 2154 00da 0B       		.uleb128 0xb
 2155 00db 11       		.uleb128 0x11
 2156 00dc 01       		.uleb128 0x1
 2157 00dd 12       		.uleb128 0x12
 2158 00de 06       		.uleb128 0x6
 2159 00df 40       		.uleb128 0x40
 2160 00e0 18       		.uleb128 0x18
 2161 00e1 9642     		.uleb128 0x2116
 2162 00e3 19       		.uleb128 0x19
 2163 00e4 01       		.uleb128 0x1
 2164 00e5 13       		.uleb128 0x13
 2165 00e6 00       		.byte	0
 2166 00e7 00       		.byte	0
 2167 00e8 0F       		.uleb128 0xf
 2168 00e9 01       		.uleb128 0x1
 2169 00ea 01       		.byte	0x1
 2170 00eb 49       		.uleb128 0x49
 2171 00ec 13       		.uleb128 0x13
 2172 00ed 01       		.uleb128 0x1
 2173 00ee 13       		.uleb128 0x13
 2174 00ef 00       		.byte	0
 2175 00f0 00       		.byte	0
 2176 00f1 10       		.uleb128 0x10
 2177 00f2 21       		.uleb128 0x21
 2178 00f3 00       		.byte	0
 2179 00f4 49       		.uleb128 0x49
 2180 00f5 13       		.uleb128 0x13
 2181 00f6 2F       		.uleb128 0x2f
 2182 00f7 05       		.uleb128 0x5
 2183 00f8 00       		.byte	0
 2184 00f9 00       		.byte	0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 48


 2185 00fa 11       		.uleb128 0x11
 2186 00fb 2E       		.uleb128 0x2e
 2187 00fc 00       		.byte	0
 2188 00fd 3F       		.uleb128 0x3f
 2189 00fe 19       		.uleb128 0x19
 2190 00ff 03       		.uleb128 0x3
 2191 0100 0E       		.uleb128 0xe
 2192 0101 3A       		.uleb128 0x3a
 2193 0102 0B       		.uleb128 0xb
 2194 0103 3B       		.uleb128 0x3b
 2195 0104 0B       		.uleb128 0xb
 2196 0105 27       		.uleb128 0x27
 2197 0106 19       		.uleb128 0x19
 2198 0107 11       		.uleb128 0x11
 2199 0108 01       		.uleb128 0x1
 2200 0109 12       		.uleb128 0x12
 2201 010a 06       		.uleb128 0x6
 2202 010b 40       		.uleb128 0x40
 2203 010c 18       		.uleb128 0x18
 2204 010d 9642     		.uleb128 0x2116
 2205 010f 19       		.uleb128 0x19
 2206 0110 00       		.byte	0
 2207 0111 00       		.byte	0
 2208 0112 12       		.uleb128 0x12
 2209 0113 2E       		.uleb128 0x2e
 2210 0114 01       		.byte	0x1
 2211 0115 3F       		.uleb128 0x3f
 2212 0116 19       		.uleb128 0x19
 2213 0117 03       		.uleb128 0x3
 2214 0118 0E       		.uleb128 0xe
 2215 0119 3A       		.uleb128 0x3a
 2216 011a 0B       		.uleb128 0xb
 2217 011b 3B       		.uleb128 0x3b
 2218 011c 0B       		.uleb128 0xb
 2219 011d 49       		.uleb128 0x49
 2220 011e 13       		.uleb128 0x13
 2221 011f 11       		.uleb128 0x11
 2222 0120 01       		.uleb128 0x1
 2223 0121 12       		.uleb128 0x12
 2224 0122 06       		.uleb128 0x6
 2225 0123 40       		.uleb128 0x40
 2226 0124 18       		.uleb128 0x18
 2227 0125 9642     		.uleb128 0x2116
 2228 0127 19       		.uleb128 0x19
 2229 0128 01       		.uleb128 0x1
 2230 0129 13       		.uleb128 0x13
 2231 012a 00       		.byte	0
 2232 012b 00       		.byte	0
 2233 012c 13       		.uleb128 0x13
 2234 012d 0B       		.uleb128 0xb
 2235 012e 01       		.byte	0x1
 2236 012f 11       		.uleb128 0x11
 2237 0130 01       		.uleb128 0x1
 2238 0131 12       		.uleb128 0x12
 2239 0132 06       		.uleb128 0x6
 2240 0133 00       		.byte	0
 2241 0134 00       		.byte	0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 49


 2242 0135 14       		.uleb128 0x14
 2243 0136 34       		.uleb128 0x34
 2244 0137 00       		.byte	0
 2245 0138 03       		.uleb128 0x3
 2246 0139 0E       		.uleb128 0xe
 2247 013a 3A       		.uleb128 0x3a
 2248 013b 0B       		.uleb128 0xb
 2249 013c 3B       		.uleb128 0x3b
 2250 013d 05       		.uleb128 0x5
 2251 013e 49       		.uleb128 0x49
 2252 013f 13       		.uleb128 0x13
 2253 0140 02       		.uleb128 0x2
 2254 0141 18       		.uleb128 0x18
 2255 0142 00       		.byte	0
 2256 0143 00       		.byte	0
 2257 0144 15       		.uleb128 0x15
 2258 0145 2E       		.uleb128 0x2e
 2259 0146 01       		.byte	0x1
 2260 0147 3F       		.uleb128 0x3f
 2261 0148 19       		.uleb128 0x19
 2262 0149 03       		.uleb128 0x3
 2263 014a 0E       		.uleb128 0xe
 2264 014b 3A       		.uleb128 0x3a
 2265 014c 0B       		.uleb128 0xb
 2266 014d 3B       		.uleb128 0x3b
 2267 014e 05       		.uleb128 0x5
 2268 014f 49       		.uleb128 0x49
 2269 0150 13       		.uleb128 0x13
 2270 0151 11       		.uleb128 0x11
 2271 0152 01       		.uleb128 0x1
 2272 0153 12       		.uleb128 0x12
 2273 0154 06       		.uleb128 0x6
 2274 0155 40       		.uleb128 0x40
 2275 0156 18       		.uleb128 0x18
 2276 0157 9742     		.uleb128 0x2117
 2277 0159 19       		.uleb128 0x19
 2278 015a 01       		.uleb128 0x1
 2279 015b 13       		.uleb128 0x13
 2280 015c 00       		.byte	0
 2281 015d 00       		.byte	0
 2282 015e 16       		.uleb128 0x16
 2283 015f 34       		.uleb128 0x34
 2284 0160 00       		.byte	0
 2285 0161 03       		.uleb128 0x3
 2286 0162 08       		.uleb128 0x8
 2287 0163 3A       		.uleb128 0x3a
 2288 0164 0B       		.uleb128 0xb
 2289 0165 3B       		.uleb128 0x3b
 2290 0166 05       		.uleb128 0x5
 2291 0167 49       		.uleb128 0x49
 2292 0168 13       		.uleb128 0x13
 2293 0169 02       		.uleb128 0x2
 2294 016a 18       		.uleb128 0x18
 2295 016b 00       		.byte	0
 2296 016c 00       		.byte	0
 2297 016d 17       		.uleb128 0x17
 2298 016e 2E       		.uleb128 0x2e
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 50


 2299 016f 01       		.byte	0x1
 2300 0170 3F       		.uleb128 0x3f
 2301 0171 19       		.uleb128 0x19
 2302 0172 03       		.uleb128 0x3
 2303 0173 0E       		.uleb128 0xe
 2304 0174 3A       		.uleb128 0x3a
 2305 0175 0B       		.uleb128 0xb
 2306 0176 3B       		.uleb128 0x3b
 2307 0177 05       		.uleb128 0x5
 2308 0178 27       		.uleb128 0x27
 2309 0179 19       		.uleb128 0x19
 2310 017a 11       		.uleb128 0x11
 2311 017b 01       		.uleb128 0x1
 2312 017c 12       		.uleb128 0x12
 2313 017d 06       		.uleb128 0x6
 2314 017e 40       		.uleb128 0x40
 2315 017f 18       		.uleb128 0x18
 2316 0180 9642     		.uleb128 0x2116
 2317 0182 19       		.uleb128 0x19
 2318 0183 01       		.uleb128 0x1
 2319 0184 13       		.uleb128 0x13
 2320 0185 00       		.byte	0
 2321 0186 00       		.byte	0
 2322 0187 18       		.uleb128 0x18
 2323 0188 05       		.uleb128 0x5
 2324 0189 00       		.byte	0
 2325 018a 03       		.uleb128 0x3
 2326 018b 08       		.uleb128 0x8
 2327 018c 3A       		.uleb128 0x3a
 2328 018d 0B       		.uleb128 0xb
 2329 018e 3B       		.uleb128 0x3b
 2330 018f 05       		.uleb128 0x5
 2331 0190 49       		.uleb128 0x49
 2332 0191 13       		.uleb128 0x13
 2333 0192 02       		.uleb128 0x2
 2334 0193 18       		.uleb128 0x18
 2335 0194 00       		.byte	0
 2336 0195 00       		.byte	0
 2337 0196 19       		.uleb128 0x19
 2338 0197 2E       		.uleb128 0x2e
 2339 0198 01       		.byte	0x1
 2340 0199 3F       		.uleb128 0x3f
 2341 019a 19       		.uleb128 0x19
 2342 019b 03       		.uleb128 0x3
 2343 019c 0E       		.uleb128 0xe
 2344 019d 3A       		.uleb128 0x3a
 2345 019e 0B       		.uleb128 0xb
 2346 019f 3B       		.uleb128 0x3b
 2347 01a0 05       		.uleb128 0x5
 2348 01a1 11       		.uleb128 0x11
 2349 01a2 01       		.uleb128 0x1
 2350 01a3 12       		.uleb128 0x12
 2351 01a4 06       		.uleb128 0x6
 2352 01a5 40       		.uleb128 0x40
 2353 01a6 18       		.uleb128 0x18
 2354 01a7 9642     		.uleb128 0x2116
 2355 01a9 19       		.uleb128 0x19
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 51


 2356 01aa 01       		.uleb128 0x1
 2357 01ab 13       		.uleb128 0x13
 2358 01ac 00       		.byte	0
 2359 01ad 00       		.byte	0
 2360 01ae 1A       		.uleb128 0x1a
 2361 01af 35       		.uleb128 0x35
 2362 01b0 00       		.byte	0
 2363 01b1 49       		.uleb128 0x49
 2364 01b2 13       		.uleb128 0x13
 2365 01b3 00       		.byte	0
 2366 01b4 00       		.byte	0
 2367 01b5 1B       		.uleb128 0x1b
 2368 01b6 34       		.uleb128 0x34
 2369 01b7 00       		.byte	0
 2370 01b8 03       		.uleb128 0x3
 2371 01b9 0E       		.uleb128 0xe
 2372 01ba 3A       		.uleb128 0x3a
 2373 01bb 0B       		.uleb128 0xb
 2374 01bc 3B       		.uleb128 0x3b
 2375 01bd 05       		.uleb128 0x5
 2376 01be 49       		.uleb128 0x49
 2377 01bf 13       		.uleb128 0x13
 2378 01c0 3F       		.uleb128 0x3f
 2379 01c1 19       		.uleb128 0x19
 2380 01c2 3C       		.uleb128 0x3c
 2381 01c3 19       		.uleb128 0x19
 2382 01c4 00       		.byte	0
 2383 01c5 00       		.byte	0
 2384 01c6 1C       		.uleb128 0x1c
 2385 01c7 34       		.uleb128 0x34
 2386 01c8 00       		.byte	0
 2387 01c9 03       		.uleb128 0x3
 2388 01ca 08       		.uleb128 0x8
 2389 01cb 3A       		.uleb128 0x3a
 2390 01cc 0B       		.uleb128 0xb
 2391 01cd 3B       		.uleb128 0x3b
 2392 01ce 0B       		.uleb128 0xb
 2393 01cf 49       		.uleb128 0x49
 2394 01d0 13       		.uleb128 0x13
 2395 01d1 3F       		.uleb128 0x3f
 2396 01d2 19       		.uleb128 0x19
 2397 01d3 02       		.uleb128 0x2
 2398 01d4 18       		.uleb128 0x18
 2399 01d5 00       		.byte	0
 2400 01d6 00       		.byte	0
 2401 01d7 1D       		.uleb128 0x1d
 2402 01d8 34       		.uleb128 0x34
 2403 01d9 00       		.byte	0
 2404 01da 03       		.uleb128 0x3
 2405 01db 0E       		.uleb128 0xe
 2406 01dc 3A       		.uleb128 0x3a
 2407 01dd 0B       		.uleb128 0xb
 2408 01de 3B       		.uleb128 0x3b
 2409 01df 0B       		.uleb128 0xb
 2410 01e0 49       		.uleb128 0x49
 2411 01e1 13       		.uleb128 0x13
 2412 01e2 3F       		.uleb128 0x3f
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 52


 2413 01e3 19       		.uleb128 0x19
 2414 01e4 02       		.uleb128 0x2
 2415 01e5 18       		.uleb128 0x18
 2416 01e6 00       		.byte	0
 2417 01e7 00       		.byte	0
 2418 01e8 1E       		.uleb128 0x1e
 2419 01e9 21       		.uleb128 0x21
 2420 01ea 00       		.byte	0
 2421 01eb 49       		.uleb128 0x49
 2422 01ec 13       		.uleb128 0x13
 2423 01ed 2F       		.uleb128 0x2f
 2424 01ee 0B       		.uleb128 0xb
 2425 01ef 00       		.byte	0
 2426 01f0 00       		.byte	0
 2427 01f1 00       		.byte	0
 2428              		.section	.debug_aranges,"",%progbits
 2429 0000 8C000000 		.4byte	0x8c
 2430 0004 0200     		.2byte	0x2
 2431 0006 00000000 		.4byte	.Ldebug_info0
 2432 000a 04       		.byte	0x4
 2433 000b 00       		.byte	0
 2434 000c 0000     		.2byte	0
 2435 000e 0000     		.2byte	0
 2436 0010 00000000 		.4byte	.LFB64
 2437 0014 14000000 		.4byte	.LFE64-.LFB64
 2438 0018 00000000 		.4byte	.LFB65
 2439 001c 14000000 		.4byte	.LFE65-.LFB65
 2440 0020 00000000 		.4byte	.LFB66
 2441 0024 14000000 		.4byte	.LFE66-.LFB66
 2442 0028 00000000 		.4byte	.LFB67
 2443 002c 20000000 		.4byte	.LFE67-.LFB67
 2444 0030 00000000 		.4byte	.LFB68
 2445 0034 26000000 		.4byte	.LFE68-.LFB68
 2446 0038 00000000 		.4byte	.LFB69
 2447 003c 90000000 		.4byte	.LFE69-.LFB69
 2448 0040 00000000 		.4byte	.LFB70
 2449 0044 0C000000 		.4byte	.LFE70-.LFB70
 2450 0048 00000000 		.4byte	.LFB71
 2451 004c C0000000 		.4byte	.LFE71-.LFB71
 2452 0050 00000000 		.4byte	.LFB72
 2453 0054 2C000000 		.4byte	.LFE72-.LFB72
 2454 0058 00000000 		.4byte	.LFB73
 2455 005c 0C000000 		.4byte	.LFE73-.LFB73
 2456 0060 00000000 		.4byte	.LFB74
 2457 0064 18010000 		.4byte	.LFE74-.LFB74
 2458 0068 00000000 		.4byte	.LFB75
 2459 006c 58000000 		.4byte	.LFE75-.LFB75
 2460 0070 00000000 		.4byte	.LFB76
 2461 0074 3E000000 		.4byte	.LFE76-.LFB76
 2462 0078 00000000 		.4byte	.LFB77
 2463 007c 26000000 		.4byte	.LFE77-.LFB77
 2464 0080 00000000 		.4byte	.LFB78
 2465 0084 C8000000 		.4byte	.LFE78-.LFB78
 2466 0088 00000000 		.4byte	0
 2467 008c 00000000 		.4byte	0
 2468              		.section	.debug_ranges,"",%progbits
 2469              	.Ldebug_ranges0:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 53


 2470 0000 00000000 		.4byte	.LFB64
 2471 0004 14000000 		.4byte	.LFE64
 2472 0008 00000000 		.4byte	.LFB65
 2473 000c 14000000 		.4byte	.LFE65
 2474 0010 00000000 		.4byte	.LFB66
 2475 0014 14000000 		.4byte	.LFE66
 2476 0018 00000000 		.4byte	.LFB67
 2477 001c 20000000 		.4byte	.LFE67
 2478 0020 00000000 		.4byte	.LFB68
 2479 0024 26000000 		.4byte	.LFE68
 2480 0028 00000000 		.4byte	.LFB69
 2481 002c 90000000 		.4byte	.LFE69
 2482 0030 00000000 		.4byte	.LFB70
 2483 0034 0C000000 		.4byte	.LFE70
 2484 0038 00000000 		.4byte	.LFB71
 2485 003c C0000000 		.4byte	.LFE71
 2486 0040 00000000 		.4byte	.LFB72
 2487 0044 2C000000 		.4byte	.LFE72
 2488 0048 00000000 		.4byte	.LFB73
 2489 004c 0C000000 		.4byte	.LFE73
 2490 0050 00000000 		.4byte	.LFB74
 2491 0054 18010000 		.4byte	.LFE74
 2492 0058 00000000 		.4byte	.LFB75
 2493 005c 58000000 		.4byte	.LFE75
 2494 0060 00000000 		.4byte	.LFB76
 2495 0064 3E000000 		.4byte	.LFE76
 2496 0068 00000000 		.4byte	.LFB77
 2497 006c 26000000 		.4byte	.LFE77
 2498 0070 00000000 		.4byte	.LFB78
 2499 0074 C8000000 		.4byte	.LFE78
 2500 0078 00000000 		.4byte	0
 2501 007c 00000000 		.4byte	0
 2502              		.section	.debug_line,"",%progbits
 2503              	.Ldebug_line0:
 2504 0000 1A030000 		.section	.debug_str,"MS",%progbits,1
 2504      02005601 
 2504      00000201 
 2504      FB0E0D00 
 2504      01010101 
 2505              	.LASF39:
 2506 0000 6D6F746F 		.ascii	"motorStop\000"
 2506      7253746F 
 2506      7000
 2507              	.LASF54:
 2508 000a 6973725F 		.ascii	"isr_TS_Interrupt_sample\000"
 2508      54535F49 
 2508      6E746572 
 2508      72757074 
 2508      5F73616D 
 2509              	.LASF68:
 2510 0022 74735F65 		.ascii	"ts_enc\000"
 2510      6E6300
 2511              	.LASF19:
 2512 0029 646F7562 		.ascii	"double\000"
 2512      6C6500
 2513              	.LASF77:
 2514 0030 666C6167 		.ascii	"flag_packet\000"
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 54


 2514      5F706163 
 2514      6B657400 
 2515              	.LASF61:
 2516 003c 75736250 		.ascii	"usbPutChar\000"
 2516      75744368 
 2516      617200
 2517              	.LASF90:
 2518 0047 636F756E 		.ascii	"counteoc\000"
 2518      74656F63 
 2518      00
 2519              	.LASF42:
 2520 0050 6973725F 		.ascii	"isr_eoc_Interrupt_test\000"
 2520      656F635F 
 2520      496E7465 
 2520      72727570 
 2520      745F7465 
 2521              	.LASF38:
 2522 0067 6D6F746F 		.ascii	"motorGoBackwards\000"
 2522      72476F42 
 2522      61636B77 
 2522      61726473 
 2522      00
 2523              	.LASF87:
 2524 0078 63686563 		.ascii	"checkLight\000"
 2524      6B4C6967 
 2524      687400
 2525              	.LASF33:
 2526 0083 67325F78 		.ascii	"g2_xpos\000"
 2526      706F7300 
 2527              	.LASF2:
 2528 008b 73686F72 		.ascii	"short int\000"
 2528      7420696E 
 2528      7400
 2529              	.LASF85:
 2530 0095 73797374 		.ascii	"system_state\000"
 2530      656D5F73 
 2530      74617465 
 2530      00
 2531              	.LASF10:
 2532 00a2 73697A65 		.ascii	"sizetype\000"
 2532      74797065 
 2532      00
 2533              	.LASF84:
 2534 00ab 75736242 		.ascii	"usbBuffer\000"
 2534      75666665 
 2534      7200
 2535              	.LASF92:
 2536 00b5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2536      43313120 
 2536      352E342E 
 2536      31203230 
 2536      31363036 
 2537 00e8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2537      20726576 
 2537      6973696F 
 2537      6E203233 
 2537      37373135 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 55


 2538 011b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2538      66756E63 
 2538      74696F6E 
 2538      2D736563 
 2538      74696F6E 
 2539              	.LASF55:
 2540 0143 6D61696E 		.ascii	"main\000"
 2540      00
 2541              	.LASF43:
 2542 0148 76616C75 		.ascii	"valueQ3\000"
 2542      65513300 
 2543              	.LASF44:
 2544 0150 76616C75 		.ascii	"valueQ4\000"
 2544      65513400 
 2545              	.LASF45:
 2546 0158 76616C75 		.ascii	"valueQ5\000"
 2546      65513500 
 2547              	.LASF52:
 2548 0160 6D6F746F 		.ascii	"motorRun\000"
 2548      7252756E 
 2548      00
 2549              	.LASF88:
 2550 0169 6C696768 		.ascii	"lightState\000"
 2550      74537461 
 2550      746500
 2551              	.LASF15:
 2552 0174 75696E74 		.ascii	"uint16\000"
 2552      313600
 2553              	.LASF21:
 2554 017b 696E6465 		.ascii	"index\000"
 2554      7800
 2555              	.LASF17:
 2556 0181 696E7431 		.ascii	"int16\000"
 2556      3600
 2557              	.LASF14:
 2558 0187 75696E74 		.ascii	"uint8\000"
 2558      3800
 2559              	.LASF94:
 2560 018d 5C5C6669 		.ascii	"\\\\files.auckland.ac.nz\\myhome\\Documents\\GitHub"
 2560      6C65732E 
 2560      6175636B 
 2560      6C616E64 
 2560      2E61632E 
 2561 01bb 5C70726F 		.ascii	"\\project-project_group_11\\COMPSYS 301\\psoc stude"
 2561      6A656374 
 2561      2D70726F 
 2561      6A656374 
 2561      5F67726F 
 2562 01eb 6E742070 		.ascii	"nt pack\\psoc student pack\\psoc_code_base\\CS301_C"
 2562      61636B5C 
 2562      70736F63 
 2562      20737475 
 2562      64656E74 
 2563 021b 6C617373 		.ascii	"lass.cydsn\000"
 2563      2E637964 
 2563      736E00
 2564              	.LASF86:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 56


 2565 0226 6368616E 		.ascii	"changeMotor\000"
 2565      67654D6F 
 2565      746F7200 
 2566              	.LASF82:
 2567 0232 6C696E65 		.ascii	"line\000"
 2567      00
 2568              	.LASF18:
 2569 0237 666C6F61 		.ascii	"float\000"
 2569      7400
 2570              	.LASF53:
 2571 023d 6973725F 		.ascii	"isr_motor_interrupt_speed\000"
 2571      6D6F746F 
 2571      725F696E 
 2571      74657272 
 2571      7570745F 
 2572              	.LASF6:
 2573 0257 6C6F6E67 		.ascii	"long long int\000"
 2573      206C6F6E 
 2573      6720696E 
 2573      7400
 2574              	.LASF60:
 2575 0265 75736250 		.ascii	"usbPutString\000"
 2575      75745374 
 2575      72696E67 
 2575      00
 2576              	.LASF16:
 2577 0272 696E7438 		.ascii	"int8\000"
 2577      00
 2578              	.LASF73:
 2579 0277 666C6167 		.ascii	"flag_ts_update\000"
 2579      5F74735F 
 2579      75706461 
 2579      746500
 2580              	.LASF34:
 2581 0286 67325F79 		.ascii	"g2_ypos\000"
 2581      706F7300 
 2582              	.LASF28:
 2583 028e 67305F64 		.ascii	"g0_direction\000"
 2583      69726563 
 2583      74696F6E 
 2583      00
 2584              	.LASF25:
 2585 029b 67305F78 		.ascii	"g0_xpos\000"
 2585      706F7300 
 2586              	.LASF4:
 2587 02a3 6C6F6E67 		.ascii	"long int\000"
 2587      20696E74 
 2587      00
 2588              	.LASF46:
 2589 02ac 62656769 		.ascii	"beginningCountMotor1\000"
 2589      6E6E696E 
 2589      67436F75 
 2589      6E744D6F 
 2589      746F7231 
 2590              	.LASF47:
 2591 02c1 62656769 		.ascii	"beginningCountMotor2\000"
 2591      6E6E696E 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 57


 2591      67436F75 
 2591      6E744D6F 
 2591      746F7232 
 2592              	.LASF50:
 2593 02d6 6D6F746F 		.ascii	"motor1String\000"
 2593      72315374 
 2593      72696E67 
 2593      00
 2594              	.LASF91:
 2595 02e3 70726F63 		.ascii	"processSensors\000"
 2595      65737353 
 2595      656E736F 
 2595      727300
 2596              	.LASF75:
 2597 02f2 666C6167 		.ascii	"flag_ts_display\000"
 2597      5F74735F 
 2597      64697370 
 2597      6C617900 
 2598              	.LASF76:
 2599 0302 666C6167 		.ascii	"flag_rx\000"
 2599      5F727800 
 2600              	.LASF49:
 2601 030a 656E6443 		.ascii	"endCountMotor1\000"
 2601      6F756E74 
 2601      4D6F746F 
 2601      723100
 2602              	.LASF48:
 2603 0319 656E6443 		.ascii	"endCountMotor2\000"
 2603      6F756E74 
 2603      4D6F746F 
 2603      723200
 2604              	.LASF9:
 2605 0328 6C6F6E67 		.ascii	"long double\000"
 2605      20646F75 
 2605      626C6500 
 2606              	.LASF83:
 2607 0334 656E7472 		.ascii	"entry\000"
 2607      7900
 2608              	.LASF1:
 2609 033a 756E7369 		.ascii	"unsigned char\000"
 2609      676E6564 
 2609      20636861 
 2609      7200
 2610              	.LASF89:
 2611 0348 6C696768 		.ascii	"lightDetectedFront\000"
 2611      74446574 
 2611      65637465 
 2611      6446726F 
 2611      6E7400
 2612              	.LASF27:
 2613 035b 67305F73 		.ascii	"g0_speed\000"
 2613      70656564 
 2613      00
 2614              	.LASF79:
 2615 0364 64617461 		.ascii	"dataready_flag\000"
 2615      72656164 
 2615      795F666C 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 58


 2615      616700
 2616              	.LASF0:
 2617 0373 7369676E 		.ascii	"signed char\000"
 2617      65642063 
 2617      68617200 
 2618              	.LASF7:
 2619 037f 6C6F6E67 		.ascii	"long long unsigned int\000"
 2619      206C6F6E 
 2619      6720756E 
 2619      7369676E 
 2619      65642069 
 2620              	.LASF8:
 2621 0396 756E7369 		.ascii	"unsigned int\000"
 2621      676E6564 
 2621      20696E74 
 2621      00
 2622              	.LASF78:
 2623 03a3 666C6167 		.ascii	"flag_KB_string\000"
 2623      5F4B425F 
 2623      73747269 
 2623      6E6700
 2624              	.LASF65:
 2625 03b2 75736242 		.ascii	"usbBufCount\000"
 2625      7566436F 
 2625      756E7400 
 2626              	.LASF35:
 2627 03be 67325F73 		.ascii	"g2_speed\000"
 2627      70656564 
 2627      00
 2628              	.LASF29:
 2629 03c7 67315F78 		.ascii	"g1_xpos\000"
 2629      706F7300 
 2630              	.LASF56:
 2631 03cf 6F706572 		.ascii	"operation\000"
 2631      6174696F 
 2631      6E00
 2632              	.LASF95:
 2633 03d9 64617461 		.ascii	"data_main\000"
 2633      5F6D6169 
 2633      6E00
 2634              	.LASF59:
 2635 03e3 62696E61 		.ascii	"binaryIndex\000"
 2635      7279496E 
 2635      64657800 
 2636              	.LASF11:
 2637 03ef 63686172 		.ascii	"char\000"
 2637      00
 2638              	.LASF22:
 2639 03f4 726F626F 		.ascii	"robot_xpos\000"
 2639      745F7870 
 2639      6F7300
 2640              	.LASF13:
 2641 03ff 696E7433 		.ascii	"int32_t\000"
 2641      325F7400 
 2642              	.LASF30:
 2643 0407 67315F79 		.ascii	"g1_ypos\000"
 2643      706F7300 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 59


 2644              	.LASF36:
 2645 040f 67325F64 		.ascii	"g2_direction\000"
 2645      69726563 
 2645      74696F6E 
 2645      00
 2646              	.LASF3:
 2647 041c 73686F72 		.ascii	"short unsigned int\000"
 2647      7420756E 
 2647      7369676E 
 2647      65642069 
 2647      6E7400
 2648              	.LASF31:
 2649 042f 67315F73 		.ascii	"g1_speed\000"
 2649      70656564 
 2649      00
 2650              	.LASF81:
 2651 0438 64697370 		.ascii	"displaystring\000"
 2651      6C617973 
 2651      7472696E 
 2651      6700
 2652              	.LASF74:
 2653 0446 666C6167 		.ascii	"flag_ts_speed\000"
 2653      5F74735F 
 2653      73706565 
 2653      6400
 2654              	.LASF57:
 2655 0454 636F6E76 		.ascii	"convertSensorBinary\000"
 2655      65727453 
 2655      656E736F 
 2655      7242696E 
 2655      61727900 
 2656              	.LASF93:
 2657 0468 6D61696E 		.ascii	"main.c\000"
 2657      2E6300
 2658              	.LASF5:
 2659 046f 6C6F6E67 		.ascii	"long unsigned int\000"
 2659      20756E73 
 2659      69676E65 
 2659      6420696E 
 2659      7400
 2660              	.LASF64:
 2661 0481 75736253 		.ascii	"usbStarted\000"
 2661      74617274 
 2661      656400
 2662              	.LASF70:
 2663 048c 74735F73 		.ascii	"ts_speed\000"
 2663      70656564 
 2663      00
 2664              	.LASF66:
 2665 0495 636F756E 		.ascii	"count\000"
 2665      7400
 2666              	.LASF72:
 2667 049b 666C6167 		.ascii	"flag_ts_enc\000"
 2667      5F74735F 
 2667      656E6300 
 2668              	.LASF12:
 2669 04a7 5F5F696E 		.ascii	"__int32_t\000"
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 60


 2669      7433325F 
 2669      7400
 2670              	.LASF40:
 2671 04b1 6D6F746F 		.ascii	"motorTurnLeft\000"
 2671      72547572 
 2671      6E4C6566 
 2671      7400
 2672              	.LASF37:
 2673 04bf 6D6F746F 		.ascii	"motorGoStraight\000"
 2673      72476F53 
 2673      74726169 
 2673      67687400 
 2674              	.LASF62:
 2675 04cf 6D6F746F 		.ascii	"motorCount\000"
 2675      72436F75 
 2675      6E7400
 2676              	.LASF26:
 2677 04da 67305F79 		.ascii	"g0_ypos\000"
 2677      706F7300 
 2678              	.LASF71:
 2679 04e2 74735F64 		.ascii	"ts_display\000"
 2679      6973706C 
 2679      617900
 2680              	.LASF69:
 2681 04ed 74735F75 		.ascii	"ts_update\000"
 2681      70646174 
 2681      6500
 2682              	.LASF63:
 2683 04f7 68616E64 		.ascii	"handle_usb\000"
 2683      6C655F75 
 2683      736200
 2684              	.LASF80:
 2685 0502 666C6167 		.ascii	"flag_rf_transmission_active\000"
 2685      5F72665F 
 2685      7472616E 
 2685      736D6973 
 2685      73696F6E 
 2686              	.LASF23:
 2687 051e 726F626F 		.ascii	"robot_ypos\000"
 2687      745F7970 
 2687      6F7300
 2688              	.LASF67:
 2689 0529 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2689      52784275 
 2689      66666572 
 2689      00
 2690              	.LASF58:
 2691 0536 76616C75 		.ascii	"value\000"
 2691      6500
 2692              	.LASF51:
 2693 053c 6D6F746F 		.ascii	"motor2String\000"
 2693      72325374 
 2693      72696E67 
 2693      00
 2694              	.LASF32:
 2695 0549 67315F64 		.ascii	"g1_direction\000"
 2695      69726563 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cck6daN8.s 			page 61


 2695      74696F6E 
 2695      00
 2696              	.LASF41:
 2697 0556 6D6F746F 		.ascii	"motorTurnRight\000"
 2697      72547572 
 2697      6E526967 
 2697      687400
 2698              	.LASF20:
 2699 0565 72737369 		.ascii	"rssi\000"
 2699      00
 2700              	.LASF24:
 2701 056a 726F626F 		.ascii	"robot_orientation\000"
 2701      745F6F72 
 2701      69656E74 
 2701      6174696F 
 2701      6E00
 2702              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
