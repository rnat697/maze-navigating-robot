ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.section	.text.motorGoStraight,"ax",%progbits
 107              		.align	2
 108              		.global	motorGoStraight
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 3


 109              		.thumb
 110              		.thumb_func
 111              		.type	motorGoStraight, %function
 112              	motorGoStraight:
 113              	.LFB64:
 114              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <stdbool.h>
  19:main.c        **** #include <string.h>
  20:main.c        **** #include <stdlib.h>
  21:main.c        **** #include <math.h>
  22:main.c        **** #include <project.h>
  23:main.c        **** //* ========================================
  24:main.c        **** #include "defines.h"
  25:main.c        **** #include "vars.h"
  26:main.c        **** #include "isr_eoc.h"
  27:main.c        **** //* ========================================
  28:main.c        **** void usbPutString(char *s);
  29:main.c        **** void usbPutChar(char c);
  30:main.c        **** void handle_usb();
  31:main.c        **** //* ========================================
  32:main.c        **** 
  33:main.c        **** 
  34:main.c        **** #define rota180 500 //turns
  35:main.c        **** #define rota90Left 250
  36:main.c        **** 
  37:main.c        **** #define moveSlow 50
  38:main.c        **** #define travelDist 326 // how
  39:main.c        **** #define Q1CHANNEL 3
  40:main.c        **** #define Q2CHANNEL 5 
  41:main.c        **** #define Q3CHANNEL 0
  42:main.c        **** #define Q4CHANNEL 1
  43:main.c        **** #define Q5CHANNEL 2
  44:main.c        **** #define Q6CHANNEL 4
  45:main.c        **** 
  46:main.c        **** CY_ISR_PROTO(isr_eoc_Interrupt_test);
  47:main.c        **** CY_ISR_PROTO(isr_motor_interrupt_speed);
  48:main.c        **** CY_ISR_PROTO(isr_TS_interrupt_sample);
  49:main.c        **** int convertSensorBinary();
  50:main.c        **** int convertBackBinary();
  51:main.c        **** 
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 4


  52:main.c        **** void motorGoStraight(){
 115              		.loc 1 52 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119 0000 80B5     		push	{r7, lr}
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 7, -8
 122              		.cfi_offset 14, -4
 123 0002 00AF     		add	r7, sp, #0
 124              		.cfi_def_cfa_register 7
  53:main.c        ****     ////PWM_1_WriteCompare(150); // left wheel near power switch is stronker than right wheel //150
  54:main.c        ****     //M1_IN2_Write(0);
  55:main.c        ****     PWM_1_WriteCompare(160);//200 //180 //160
 125              		.loc 1 55 0
 126 0004 A020     		movs	r0, #160
 127 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  56:main.c        ****     PWM_2_WriteCompare(93); //52 //72 //93
 128              		.loc 1 56 0
 129 000a 5D20     		movs	r0, #93
 130 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  57:main.c        **** }
 131              		.loc 1 57 0
 132 0010 00BF     		nop
 133 0012 80BD     		pop	{r7, pc}
 134              		.cfi_endproc
 135              	.LFE64:
 136              		.size	motorGoStraight, .-motorGoStraight
 137              		.section	.text.motorSetSpeed,"ax",%progbits
 138              		.align	2
 139              		.global	motorSetSpeed
 140              		.thumb
 141              		.thumb_func
 142              		.type	motorSetSpeed, %function
 143              	motorSetSpeed:
 144              	.LFB65:
  58:main.c        **** void motorSetSpeed(int x){
 145              		.loc 1 58 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 8
 148              		@ frame_needed = 1, uses_anonymous_args = 0
 149 0000 80B5     		push	{r7, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 82B0     		sub	sp, sp, #8
 154              		.cfi_def_cfa_offset 16
 155 0004 00AF     		add	r7, sp, #0
 156              		.cfi_def_cfa_register 7
 157 0006 7860     		str	r0, [r7, #4]
  59:main.c        ****     ////PWM_1_WriteCompare(150); // left wheel near power switch is stronker than right wheel //150
  60:main.c        ****     //M1_IN2_Write(0);
  61:main.c        ****     
  62:main.c        ****     //fastest speed
  63:main.c        ****     PWM_1_WriteCompare(200+x);//200 //180 //160
 158              		.loc 1 63 0
 159 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 5


 160 000a DBB2     		uxtb	r3, r3
 161 000c 383B     		subs	r3, r3, #56
 162 000e DBB2     		uxtb	r3, r3
 163 0010 1846     		mov	r0, r3
 164 0012 FFF7FEFF 		bl	PWM_1_WriteCompare
  64:main.c        ****     PWM_2_WriteCompare(52-x); //52 //72 //93
 165              		.loc 1 64 0
 166 0016 7B68     		ldr	r3, [r7, #4]
 167 0018 DBB2     		uxtb	r3, r3
 168 001a C3F13403 		rsb	r3, r3, #52
 169 001e DBB2     		uxtb	r3, r3
 170 0020 1846     		mov	r0, r3
 171 0022 FFF7FEFF 		bl	PWM_2_WriteCompare
  65:main.c        **** }
 172              		.loc 1 65 0
 173 0026 00BF     		nop
 174 0028 0837     		adds	r7, r7, #8
 175              		.cfi_def_cfa_offset 8
 176 002a BD46     		mov	sp, r7
 177              		.cfi_def_cfa_register 13
 178              		@ sp needed
 179 002c 80BD     		pop	{r7, pc}
 180              		.cfi_endproc
 181              	.LFE65:
 182              		.size	motorSetSpeed, .-motorSetSpeed
 183 002e 00BF     		.section	.text.motorGoBackwards,"ax",%progbits
 184              		.align	2
 185              		.global	motorGoBackwards
 186              		.thumb
 187              		.thumb_func
 188              		.type	motorGoBackwards, %function
 189              	motorGoBackwards:
 190              	.LFB66:
  66:main.c        **** void motorGoBackwards(){
 191              		.loc 1 66 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 1, uses_anonymous_args = 0
 195 0000 80B5     		push	{r7, lr}
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 7, -8
 198              		.cfi_offset 14, -4
 199 0002 00AF     		add	r7, sp, #0
 200              		.cfi_def_cfa_register 7
  67:main.c        ****     
  68:main.c        ****     //M1_IN2_Write(0);
  69:main.c        ****     PWM_1_WriteCompare(93); //55
 201              		.loc 1 69 0
 202 0004 5D20     		movs	r0, #93
 203 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  70:main.c        ****     PWM_2_WriteCompare(160); //201
 204              		.loc 1 70 0
 205 000a A020     		movs	r0, #160
 206 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  71:main.c        **** }
 207              		.loc 1 71 0
 208 0010 00BF     		nop
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 6


 209 0012 80BD     		pop	{r7, pc}
 210              		.cfi_endproc
 211              	.LFE66:
 212              		.size	motorGoBackwards, .-motorGoBackwards
 213              		.section	.text.motorStop,"ax",%progbits
 214              		.align	2
 215              		.global	motorStop
 216              		.thumb
 217              		.thumb_func
 218              		.type	motorStop, %function
 219              	motorStop:
 220              	.LFB67:
  72:main.c        **** void motorStop(){
 221              		.loc 1 72 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 1, uses_anonymous_args = 0
 225 0000 80B5     		push	{r7, lr}
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 7, -8
 228              		.cfi_offset 14, -4
 229 0002 00AF     		add	r7, sp, #0
 230              		.cfi_def_cfa_register 7
  73:main.c        ****     PWM_1_WriteCompare(127); 
 231              		.loc 1 73 0
 232 0004 7F20     		movs	r0, #127
 233 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  74:main.c        ****     PWM_2_WriteCompare(127);
 234              		.loc 1 74 0
 235 000a 7F20     		movs	r0, #127
 236 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  75:main.c        **** }
 237              		.loc 1 75 0
 238 0010 00BF     		nop
 239 0012 80BD     		pop	{r7, pc}
 240              		.cfi_endproc
 241              	.LFE67:
 242              		.size	motorStop, .-motorStop
 243              		.section	.text.motorBeyblade,"ax",%progbits
 244              		.align	2
 245              		.global	motorBeyblade
 246              		.thumb
 247              		.thumb_func
 248              		.type	motorBeyblade, %function
 249              	motorBeyblade:
 250              	.LFB68:
  76:main.c        **** 
  77:main.c        **** void motorBeyblade(uint8 x){
 251              		.loc 1 77 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 8
 254              		@ frame_needed = 1, uses_anonymous_args = 0
 255 0000 80B5     		push	{r7, lr}
 256              		.cfi_def_cfa_offset 8
 257              		.cfi_offset 7, -8
 258              		.cfi_offset 14, -4
 259 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 7


 260              		.cfi_def_cfa_offset 16
 261 0004 00AF     		add	r7, sp, #0
 262              		.cfi_def_cfa_register 7
 263 0006 0346     		mov	r3, r0
 264 0008 FB71     		strb	r3, [r7, #7]
  78:main.c        ****     // TO DO
  79:main.c        ****     
  80:main.c        ****     PWM_1_WriteCompare(x); //55
 265              		.loc 1 80 0
 266 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 267 000c 1846     		mov	r0, r3
 268 000e FFF7FEFF 		bl	PWM_1_WriteCompare
  81:main.c        ****     PWM_2_WriteCompare(x); //201
 269              		.loc 1 81 0
 270 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 271 0014 1846     		mov	r0, r3
 272 0016 FFF7FEFF 		bl	PWM_2_WriteCompare
  82:main.c        ****     
  83:main.c        **** }
 273              		.loc 1 83 0
 274 001a 00BF     		nop
 275 001c 0837     		adds	r7, r7, #8
 276              		.cfi_def_cfa_offset 8
 277 001e BD46     		mov	sp, r7
 278              		.cfi_def_cfa_register 13
 279              		@ sp needed
 280 0020 80BD     		pop	{r7, pc}
 281              		.cfi_endproc
 282              	.LFE68:
 283              		.size	motorBeyblade, .-motorBeyblade
 284 0022 00BF     		.section	.text.motorTurnLeft,"ax",%progbits
 285              		.align	2
 286              		.global	motorTurnLeft
 287              		.thumb
 288              		.thumb_func
 289              		.type	motorTurnLeft, %function
 290              	motorTurnLeft:
 291              	.LFB69:
  84:main.c        **** void motorTurnLeft(uint8 x){
 292              		.loc 1 84 0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 8
 295              		@ frame_needed = 1, uses_anonymous_args = 0
 296 0000 80B5     		push	{r7, lr}
 297              		.cfi_def_cfa_offset 8
 298              		.cfi_offset 7, -8
 299              		.cfi_offset 14, -4
 300 0002 82B0     		sub	sp, sp, #8
 301              		.cfi_def_cfa_offset 16
 302 0004 00AF     		add	r7, sp, #0
 303              		.cfi_def_cfa_register 7
 304 0006 0346     		mov	r3, r0
 305 0008 FB71     		strb	r3, [r7, #7]
  85:main.c        ****     // TO DO
  86:main.c        ****     
  87:main.c        ****     PWM_1_WriteCompare(127); //55
 306              		.loc 1 87 0
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 8


 307 000a 7F20     		movs	r0, #127
 308 000c FFF7FEFF 		bl	PWM_1_WriteCompare
  88:main.c        ****     PWM_2_WriteCompare(x); //201
 309              		.loc 1 88 0
 310 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 311 0012 1846     		mov	r0, r3
 312 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
  89:main.c        ****     
  90:main.c        ****     
  91:main.c        ****     
  92:main.c        ****     //255
  93:main.c        **** }
 313              		.loc 1 93 0
 314 0018 00BF     		nop
 315 001a 0837     		adds	r7, r7, #8
 316              		.cfi_def_cfa_offset 8
 317 001c BD46     		mov	sp, r7
 318              		.cfi_def_cfa_register 13
 319              		@ sp needed
 320 001e 80BD     		pop	{r7, pc}
 321              		.cfi_endproc
 322              	.LFE69:
 323              		.size	motorTurnLeft, .-motorTurnLeft
 324              		.section	.text.motorTurnRight,"ax",%progbits
 325              		.align	2
 326              		.global	motorTurnRight
 327              		.thumb
 328              		.thumb_func
 329              		.type	motorTurnRight, %function
 330              	motorTurnRight:
 331              	.LFB70:
  94:main.c        **** 
  95:main.c        **** void motorTurnRight(int x){
 332              		.loc 1 95 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 8
 335              		@ frame_needed = 1, uses_anonymous_args = 0
 336 0000 80B5     		push	{r7, lr}
 337              		.cfi_def_cfa_offset 8
 338              		.cfi_offset 7, -8
 339              		.cfi_offset 14, -4
 340 0002 82B0     		sub	sp, sp, #8
 341              		.cfi_def_cfa_offset 16
 342 0004 00AF     		add	r7, sp, #0
 343              		.cfi_def_cfa_register 7
 344 0006 7860     		str	r0, [r7, #4]
  96:main.c        ****     // TO DO
  97:main.c        ****     
  98:main.c        ****     PWM_1_WriteCompare(x);//200
 345              		.loc 1 98 0
 346 0008 7B68     		ldr	r3, [r7, #4]
 347 000a DBB2     		uxtb	r3, r3
 348 000c 1846     		mov	r0, r3
 349 000e FFF7FEFF 		bl	PWM_1_WriteCompare
  99:main.c        ****     PWM_2_WriteCompare(127); //50
 350              		.loc 1 99 0
 351 0012 7F20     		movs	r0, #127
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 9


 352 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
 100:main.c        **** 
 101:main.c        **** }
 353              		.loc 1 101 0
 354 0018 00BF     		nop
 355 001a 0837     		adds	r7, r7, #8
 356              		.cfi_def_cfa_offset 8
 357 001c BD46     		mov	sp, r7
 358              		.cfi_def_cfa_register 13
 359              		@ sp needed
 360 001e 80BD     		pop	{r7, pc}
 361              		.cfi_endproc
 362              	.LFE70:
 363              		.size	motorTurnRight, .-motorTurnRight
 364              		.section	.text.motorCircle,"ax",%progbits
 365              		.align	2
 366              		.global	motorCircle
 367              		.thumb
 368              		.thumb_func
 369              		.type	motorCircle, %function
 370              	motorCircle:
 371              	.LFB71:
 102:main.c        **** 
 103:main.c        **** 
 104:main.c        **** void motorCircle(uint8 x){
 372              		.loc 1 104 0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 8
 375              		@ frame_needed = 1, uses_anonymous_args = 0
 376 0000 80B5     		push	{r7, lr}
 377              		.cfi_def_cfa_offset 8
 378              		.cfi_offset 7, -8
 379              		.cfi_offset 14, -4
 380 0002 82B0     		sub	sp, sp, #8
 381              		.cfi_def_cfa_offset 16
 382 0004 00AF     		add	r7, sp, #0
 383              		.cfi_def_cfa_register 7
 384 0006 0346     		mov	r3, r0
 385 0008 FB71     		strb	r3, [r7, #7]
 105:main.c        ****     // TO DO
 106:main.c        ****     //positive value turns left
 107:main.c        ****     //negative value turns right
 108:main.c        ****     PWM_1_WriteCompare(127+x); //147
 386              		.loc 1 108 0
 387 000a FB79     		ldrb	r3, [r7, #7]
 388 000c 7F33     		adds	r3, r3, #127
 389 000e DBB2     		uxtb	r3, r3
 390 0010 1846     		mov	r0, r3
 391 0012 FFF7FEFF 		bl	PWM_1_WriteCompare
 109:main.c        ****     PWM_2_WriteCompare(127+x); //
 392              		.loc 1 109 0
 393 0016 FB79     		ldrb	r3, [r7, #7]
 394 0018 7F33     		adds	r3, r3, #127
 395 001a DBB2     		uxtb	r3, r3
 396 001c 1846     		mov	r0, r3
 397 001e FFF7FEFF 		bl	PWM_2_WriteCompare
 110:main.c        ****     
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 10


 111:main.c        ****     
 112:main.c        ****     
 113:main.c        ****     //255
 114:main.c        **** }
 398              		.loc 1 114 0
 399 0022 00BF     		nop
 400 0024 0837     		adds	r7, r7, #8
 401              		.cfi_def_cfa_offset 8
 402 0026 BD46     		mov	sp, r7
 403              		.cfi_def_cfa_register 13
 404              		@ sp needed
 405 0028 80BD     		pop	{r7, pc}
 406              		.cfi_endproc
 407              	.LFE71:
 408              		.size	motorCircle, .-motorCircle
 409              		.global	changeMotor
 410 002a 00BF     		.bss
 411 0012 0000     		.align	2
 412              		.type	changeMotor, %object
 413              		.size	changeMotor, 4
 414              	changeMotor:
 415 0014 00000000 		.space	4
 416              		.global	checkLight
 417              		.align	2
 418              		.type	checkLight, %object
 419              		.size	checkLight, 4
 420              	checkLight:
 421 0018 00000000 		.space	4
 422              		.global	lightState
 423              		.align	2
 424              		.type	lightState, %object
 425              		.size	lightState, 4
 426              	lightState:
 427 001c 00000000 		.space	4
 428              		.global	lightDetectedFront
 429              		.align	2
 430              		.type	lightDetectedFront, %object
 431              		.size	lightDetectedFront, 12
 432              	lightDetectedFront:
 433 0020 00000000 		.space	12
 433      00000000 
 433      00000000 
 434              		.global	lightDetectedBack
 435              		.align	2
 436              		.type	lightDetectedBack, %object
 437              		.size	lightDetectedBack, 12
 438              	lightDetectedBack:
 439 002c 00000000 		.space	12
 439      00000000 
 439      00000000 
 440              		.global	counteoc
 441              		.align	2
 442              		.type	counteoc, %object
 443              		.size	counteoc, 4
 444              	counteoc:
 445 0038 00000000 		.space	4
 446              		.global	processSensors
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 11


 447              		.align	2
 448              		.type	processSensors, %object
 449              		.size	processSensors, 4
 450              	processSensors:
 451 003c 00000000 		.space	4
 452              		.global	middle
 453              		.align	2
 454              		.type	middle, %object
 455              		.size	middle, 4
 456              	middle:
 457 0040 00000000 		.space	4
 458              		.section	.text.isr_eoc_Interrupt_test,"ax",%progbits
 459              		.align	2
 460              		.global	isr_eoc_Interrupt_test
 461              		.thumb
 462              		.thumb_func
 463              		.type	isr_eoc_Interrupt_test, %function
 464              	isr_eoc_Interrupt_test:
 465              	.LFB72:
 115:main.c        **** int changeMotor=0;
 116:main.c        **** int checkLight =0;
 117:main.c        **** int lightState=0;
 118:main.c        **** volatile int lightDetectedFront[3] = {0,0,0};
 119:main.c        **** volatile int lightDetectedBack[3] = {0,0,0};
 120:main.c        **** volatile int counteoc = 0;
 121:main.c        **** volatile int processSensors = 0;
 122:main.c        **** volatile int middle =0;
 123:main.c        **** CY_ISR(isr_eoc_Interrupt_test)
 124:main.c        **** {
 466              		.loc 1 124 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 16
 469              		@ frame_needed = 1, uses_anonymous_args = 0
 470 0000 80B5     		push	{r7, lr}
 471              		.cfi_def_cfa_offset 8
 472              		.cfi_offset 7, -8
 473              		.cfi_offset 14, -4
 474 0002 84B0     		sub	sp, sp, #16
 475              		.cfi_def_cfa_offset 24
 476 0004 00AF     		add	r7, sp, #0
 477              		.cfi_def_cfa_register 7
 125:main.c        ****     #ifdef isr_test_INTERRUPT_INTERRUPT_CALLBACK
 126:main.c        ****         isr_TS_Interrupt_InterruptCallback();
 127:main.c        ****     #endif /* isr_eoc_INTERRUPT_INTERRUPT_CALLBACK */ 
 128:main.c        **** 
 129:main.c        ****     /*  Place your Interrupt code here. */
 130:main.c        ****     /* `#START isr_eoc_Interrupt` */
 131:main.c        ****     
 132:main.c        ****     
 133:main.c        ****     // get value from ADC then convert to DAC to send to external LEDs
 134:main.c        ****     if (counteoc < 13){//10
 478              		.loc 1 134 0
 479 0006 324B     		ldr	r3, .L19
 480 0008 1B68     		ldr	r3, [r3]
 481 000a 0C2B     		cmp	r3, #12
 482 000c 59DC     		bgt	.L10
 483              	.LBB2:
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 12


 135:main.c        ****         
 136:main.c        ****         int16 valueQ3 =  ADC_GetResult16(Q3CHANNEL);
 484              		.loc 1 136 0
 485 000e 0020     		movs	r0, #0
 486 0010 FFF7FEFF 		bl	ADC_GetResult16
 487 0014 0346     		mov	r3, r0
 488 0016 FB81     		strh	r3, [r7, #14]	@ movhi
 137:main.c        ****         int16 valueQ4 =  ADC_GetResult16(Q4CHANNEL);
 489              		.loc 1 137 0
 490 0018 0120     		movs	r0, #1
 491 001a FFF7FEFF 		bl	ADC_GetResult16
 492 001e 0346     		mov	r3, r0
 493 0020 BB81     		strh	r3, [r7, #12]	@ movhi
 138:main.c        ****         int16 valueQ5 =  ADC_GetResult16(Q5CHANNEL);
 494              		.loc 1 138 0
 495 0022 0220     		movs	r0, #2
 496 0024 FFF7FEFF 		bl	ADC_GetResult16
 497 0028 0346     		mov	r3, r0
 498 002a 7B81     		strh	r3, [r7, #10]	@ movhi
 139:main.c        ****     
 140:main.c        ****         int16 valueQ1 =  ADC_GetResult16(Q1CHANNEL);
 499              		.loc 1 140 0
 500 002c 0320     		movs	r0, #3
 501 002e FFF7FEFF 		bl	ADC_GetResult16
 502 0032 0346     		mov	r3, r0
 503 0034 3B81     		strh	r3, [r7, #8]	@ movhi
 141:main.c        ****         int16 valueQ2 =  ADC_GetResult16(Q2CHANNEL);
 504              		.loc 1 141 0
 505 0036 0520     		movs	r0, #5
 506 0038 FFF7FEFF 		bl	ADC_GetResult16
 507 003c 0346     		mov	r3, r0
 508 003e FB80     		strh	r3, [r7, #6]	@ movhi
 142:main.c        ****         int16 valueQ6 =  ADC_GetResult16(Q6CHANNEL);
 509              		.loc 1 142 0
 510 0040 0420     		movs	r0, #4
 511 0042 FFF7FEFF 		bl	ADC_GetResult16
 512 0046 0346     		mov	r3, r0
 513 0048 BB80     		strh	r3, [r7, #4]	@ movhi
 143:main.c        ****         
 144:main.c        ****         
 145:main.c        ****         //2211
 146:main.c        ****         if (valueQ3 >= 2211) {
 514              		.loc 1 146 0
 515 004a B7F90E30 		ldrsh	r3, [r7, #14]
 516 004e 40F6A202 		movw	r2, #2210
 517 0052 9342     		cmp	r3, r2
 518 0054 02DD     		ble	.L11
 147:main.c        ****         //set flag for white light detected
 148:main.c        ****         lightDetectedFront[0] = 1;
 519              		.loc 1 148 0
 520 0056 1F4B     		ldr	r3, .L19+4
 521 0058 0122     		movs	r2, #1
 522 005a 1A60     		str	r2, [r3]
 523              	.L11:
 149:main.c        ****         }
 150:main.c        ****         if (valueQ4 >= 2211) {
 524              		.loc 1 150 0
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 13


 525 005c B7F90C30 		ldrsh	r3, [r7, #12]
 526 0060 40F6A202 		movw	r2, #2210
 527 0064 9342     		cmp	r3, r2
 528 0066 02DD     		ble	.L12
 151:main.c        ****         //set flag for white light detected
 152:main.c        ****         lightDetectedFront[1] = 1;
 529              		.loc 1 152 0
 530 0068 1A4B     		ldr	r3, .L19+4
 531 006a 0122     		movs	r2, #1
 532 006c 5A60     		str	r2, [r3, #4]
 533              	.L12:
 153:main.c        ****         }
 154:main.c        ****     
 155:main.c        ****         if (valueQ5 >= 2211) {
 534              		.loc 1 155 0
 535 006e B7F90A30 		ldrsh	r3, [r7, #10]
 536 0072 40F6A202 		movw	r2, #2210
 537 0076 9342     		cmp	r3, r2
 538 0078 02DD     		ble	.L13
 156:main.c        ****         //set flag for white light detected
 157:main.c        ****         lightDetectedFront[2] = 1;
 539              		.loc 1 157 0
 540 007a 164B     		ldr	r3, .L19+4
 541 007c 0122     		movs	r2, #1
 542 007e 9A60     		str	r2, [r3, #8]
 543              	.L13:
 158:main.c        ****         }
 159:main.c        ****         
 160:main.c        ****         if (valueQ1 >= 2211) {
 544              		.loc 1 160 0
 545 0080 B7F90830 		ldrsh	r3, [r7, #8]
 546 0084 40F6A202 		movw	r2, #2210
 547 0088 9342     		cmp	r3, r2
 548 008a 02DD     		ble	.L14
 161:main.c        ****         //set flag for white light detected
 162:main.c        ****             lightDetectedBack[1] = 1;
 549              		.loc 1 162 0
 550 008c 124B     		ldr	r3, .L19+8
 551 008e 0122     		movs	r2, #1
 552 0090 5A60     		str	r2, [r3, #4]
 553              	.L14:
 163:main.c        ****         }
 164:main.c        ****         
 165:main.c        ****         if (valueQ2 >= 2211) {
 554              		.loc 1 165 0
 555 0092 B7F90630 		ldrsh	r3, [r7, #6]
 556 0096 40F6A202 		movw	r2, #2210
 557 009a 9342     		cmp	r3, r2
 558 009c 02DD     		ble	.L15
 166:main.c        ****         //set flag for white light detected
 167:main.c        ****             lightDetectedBack[2] = 1;
 559              		.loc 1 167 0
 560 009e 0E4B     		ldr	r3, .L19+8
 561 00a0 0122     		movs	r2, #1
 562 00a2 9A60     		str	r2, [r3, #8]
 563              	.L15:
 168:main.c        ****         }
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 14


 169:main.c        ****                 
 170:main.c        ****                 
 171:main.c        ****         if (valueQ6 >= 2211) {
 564              		.loc 1 171 0
 565 00a4 B7F90430 		ldrsh	r3, [r7, #4]
 566 00a8 40F6A202 		movw	r2, #2210
 567 00ac 9342     		cmp	r3, r2
 568 00ae 02DD     		ble	.L16
 172:main.c        ****         //set flag for white light detected
 173:main.c        ****             lightDetectedBack[0] = 1;
 569              		.loc 1 173 0
 570 00b0 094B     		ldr	r3, .L19+8
 571 00b2 0122     		movs	r2, #1
 572 00b4 1A60     		str	r2, [r3]
 573              	.L16:
 174:main.c        ****         }
 175:main.c        ****         
 176:main.c        ****         counteoc++;
 574              		.loc 1 176 0
 575 00b6 064B     		ldr	r3, .L19
 576 00b8 1B68     		ldr	r3, [r3]
 577 00ba 0133     		adds	r3, r3, #1
 578 00bc 044A     		ldr	r2, .L19
 579 00be 1360     		str	r3, [r2]
 580              	.LBE2:
 177:main.c        ****     } else {
 178:main.c        ****         processSensors = 1;   
 179:main.c        ****        
 180:main.c        ****     }
 181:main.c        ****     /* `#END` */
 182:main.c        **** }
 581              		.loc 1 182 0
 582 00c0 02E0     		b	.L18
 583              	.L10:
 178:main.c        ****        
 584              		.loc 1 178 0
 585 00c2 064B     		ldr	r3, .L19+12
 586 00c4 0122     		movs	r2, #1
 587 00c6 1A60     		str	r2, [r3]
 588              	.L18:
 589              		.loc 1 182 0
 590 00c8 00BF     		nop
 591 00ca 1037     		adds	r7, r7, #16
 592              		.cfi_def_cfa_offset 8
 593 00cc BD46     		mov	sp, r7
 594              		.cfi_def_cfa_register 13
 595              		@ sp needed
 596 00ce 80BD     		pop	{r7, pc}
 597              	.L20:
 598              		.align	2
 599              	.L19:
 600 00d0 00000000 		.word	counteoc
 601 00d4 00000000 		.word	lightDetectedFront
 602 00d8 00000000 		.word	lightDetectedBack
 603 00dc 00000000 		.word	processSensors
 604              		.cfi_endproc
 605              	.LFE72:
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 15


 606              		.size	isr_eoc_Interrupt_test, .-isr_eoc_Interrupt_test
 607              		.bss
 608              	count:
 609 0044 00       		.space	1
 610              		.section	.text.isr_motor_interrupt_speed,"ax",%progbits
 611              		.align	2
 612              		.global	isr_motor_interrupt_speed
 613              		.thumb
 614              		.thumb_func
 615              		.type	isr_motor_interrupt_speed, %function
 616              	isr_motor_interrupt_speed:
 617              	.LFB73:
 183:main.c        **** // NEED TO INCREASE/DECREASE SPEED TOO
 184:main.c        **** // AND IMPLEMENT LIGHT SENSOR THINGS
 185:main.c        **** volatile static int8 count;
 186:main.c        **** CY_ISR(isr_motor_interrupt_speed)
 187:main.c        **** {
 618              		.loc 1 187 0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 0
 621              		@ frame_needed = 1, uses_anonymous_args = 0
 622              		@ link register save eliminated.
 623 0000 80B4     		push	{r7}
 624              		.cfi_def_cfa_offset 4
 625              		.cfi_offset 7, -4
 626 0002 00AF     		add	r7, sp, #0
 627              		.cfi_def_cfa_register 7
 188:main.c        ****     #ifdef isr_motor_INTERRUPT_INTERRUPT_CALLBACK
 189:main.c        ****         isr_motor_Interrupt_InterruptCallback();
 190:main.c        ****     #endif /* isr_motor_INTERRUPT_INTERRUPT_CALLBACK */ 
 191:main.c        **** 
 192:main.c        ****     /*  Place your Interrupt code here. */
 193:main.c        ****     /* `#START isr_motor_Interrupt` */
 194:main.c        ****       /*int16 currCountMotor2 = QuadDec_M2_GetCounter();
 195:main.c        ****       int16 currCountMotor1 = QuadDec_M1_GetCounter();  
 196:main.c        ****       
 197:main.c        ****      speedMotor1 = (currCountMotor1 - prevcountMotor1) / 0.2;
 198:main.c        ****      speedMotor2 = (currCountMotor2 - prevcountMotor2) / 0.2;
 199:main.c        ****     
 200:main.c        ****       prevcountMotor1 = currCountMotor1;
 201:main.c        ****       prevcountMotor2 = currCountMotor2;*/
 202:main.c        ****     
 203:main.c        ****     /* `#END` */
 204:main.c        **** }
 628              		.loc 1 204 0
 629 0004 00BF     		nop
 630 0006 BD46     		mov	sp, r7
 631              		.cfi_def_cfa_register 13
 632              		@ sp needed
 633 0008 80BC     		pop	{r7}
 634              		.cfi_restore 7
 635              		.cfi_def_cfa_offset 0
 636 000a 7047     		bx	lr
 637              		.cfi_endproc
 638              	.LFE73:
 639              		.size	isr_motor_interrupt_speed, .-isr_motor_interrupt_speed
 640              		.section	.rodata
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 16


 641              		.align	2
 642              	.LC0:
 643 0000 4D6F746F 		.ascii	"Motor 1 - start count: %d, end count: %d \012\000"
 643      72203120 
 643      2D207374 
 643      61727420 
 643      636F756E 
 644 002b 00       		.align	2
 645              	.LC1:
 646 002c 4D6F746F 		.ascii	"Motor 2 - start count: %d, end count: %d \012\000"
 646      72203220 
 646      2D207374 
 646      61727420 
 646      636F756E 
 647              		.section	.text.motorCount,"ax",%progbits
 648              		.align	2
 649              		.global	motorCount
 650              		.thumb
 651              		.thumb_func
 652              		.type	motorCount, %function
 653              	motorCount:
 654              	.LFB74:
 205:main.c        **** void motorCount(){
 655              		.loc 1 205 0
 656              		.cfi_startproc
 657              		@ args = 0, pretend = 0, frame = 20008
 658              		@ frame_needed = 1, uses_anonymous_args = 0
 659 0000 80B5     		push	{r7, lr}
 660              		.cfi_def_cfa_offset 8
 661              		.cfi_offset 7, -8
 662              		.cfi_offset 14, -4
 663 0002 ADF59C4D 		sub	sp, sp, #19968
 664              		.cfi_def_cfa_offset 19976
 665 0006 8AB0     		sub	sp, sp, #40
 666              		.cfi_def_cfa_offset 20016
 667 0008 00AF     		add	r7, sp, #0
 668              		.cfi_def_cfa_register 7
 206:main.c        ****     int16 beginningCountMotor1 = 0;
 669              		.loc 1 206 0
 670 000a 0023     		movs	r3, #0
 671 000c 07F59C42 		add	r2, r7, #19968
 672 0010 02F12602 		add	r2, r2, #38
 673 0014 1380     		strh	r3, [r2]	@ movhi
 207:main.c        ****     int16 beginningCountMotor2 = 0;
 674              		.loc 1 207 0
 675 0016 0023     		movs	r3, #0
 676 0018 07F59C42 		add	r2, r7, #19968
 677 001c 02F12402 		add	r2, r2, #36
 678 0020 1380     		strh	r3, [r2]	@ movhi
 208:main.c        ****     int16 endCountMotor2 = QuadDec_M2_GetCounter();
 679              		.loc 1 208 0
 680 0022 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 681 0026 0346     		mov	r3, r0
 682 0028 07F59C42 		add	r2, r7, #19968
 683 002c 02F12202 		add	r2, r2, #34
 684 0030 1380     		strh	r3, [r2]	@ movhi
 209:main.c        ****     int16 endCountMotor1 = QuadDec_M1_GetCounter();
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 17


 685              		.loc 1 209 0
 686 0032 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 687 0036 0346     		mov	r3, r0
 688 0038 07F59C42 		add	r2, r7, #19968
 689 003c 02F12002 		add	r2, r2, #32
 690 0040 1380     		strh	r3, [r2]	@ movhi
 210:main.c        ****     char motor1String[10000]; 
 211:main.c        ****     sprintf(motor1String,"Motor 1 - start count: %d, end count: %d \n", beginningCountMotor1, endCo
 691              		.loc 1 211 0
 692 0042 07F59C43 		add	r3, r7, #19968
 693 0046 03F12603 		add	r3, r3, #38
 694 004a B3F90020 		ldrsh	r2, [r3]
 695 004e 07F59C43 		add	r3, r7, #19968
 696 0052 03F12003 		add	r3, r3, #32
 697 0056 B3F90030 		ldrsh	r3, [r3]
 698 005a 07F51C50 		add	r0, r7, #9984
 699 005e 00F12800 		add	r0, r0, #40
 700 0062 1838     		subs	r0, r0, #24
 701 0064 1449     		ldr	r1, .L23
 702 0066 FFF7FEFF 		bl	sprintf
 212:main.c        ****     char motor2String[10000];
 213:main.c        ****     sprintf(motor2String,"Motor 2 - start count: %d, end count: %d \n", beginningCountMotor2 , endC
 703              		.loc 1 213 0
 704 006a 07F59C43 		add	r3, r7, #19968
 705 006e 03F12403 		add	r3, r3, #36
 706 0072 B3F90020 		ldrsh	r2, [r3]
 707 0076 07F59C43 		add	r3, r7, #19968
 708 007a 03F12203 		add	r3, r3, #34
 709 007e B3F90030 		ldrsh	r3, [r3]
 710 0082 07F12800 		add	r0, r7, #40
 711 0086 2838     		subs	r0, r0, #40
 712 0088 0C49     		ldr	r1, .L23+4
 713 008a FFF7FEFF 		bl	sprintf
 214:main.c        ****     
 215:main.c        ****     usbPutString(motor1String);
 714              		.loc 1 215 0
 715 008e 07F51C53 		add	r3, r7, #9984
 716 0092 03F12803 		add	r3, r3, #40
 717 0096 183B     		subs	r3, r3, #24
 718 0098 1846     		mov	r0, r3
 719 009a FFF7FEFF 		bl	usbPutString
 216:main.c        ****     usbPutString(motor2String);
 720              		.loc 1 216 0
 721 009e 07F12803 		add	r3, r7, #40
 722 00a2 283B     		subs	r3, r3, #40
 723 00a4 1846     		mov	r0, r3
 724 00a6 FFF7FEFF 		bl	usbPutString
 217:main.c        **** 
 218:main.c        **** }
 725              		.loc 1 218 0
 726 00aa 00BF     		nop
 727 00ac 07F59C47 		add	r7, r7, #19968
 728 00b0 2837     		adds	r7, r7, #40
 729              		.cfi_def_cfa_offset 8
 730 00b2 BD46     		mov	sp, r7
 731              		.cfi_def_cfa_register 13
 732              		@ sp needed
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 18


 733 00b4 80BD     		pop	{r7, pc}
 734              	.L24:
 735 00b6 00BF     		.align	2
 736              	.L23:
 737 00b8 00000000 		.word	.LC0
 738 00bc 2C000000 		.word	.LC1
 739              		.cfi_endproc
 740              	.LFE74:
 741              		.size	motorCount, .-motorCount
 742              		.section	.text.motorRun,"ax",%progbits
 743              		.align	2
 744              		.global	motorRun
 745              		.thumb
 746              		.thumb_func
 747              		.type	motorRun, %function
 748              	motorRun:
 749              	.LFB75:
 219:main.c        **** 
 220:main.c        **** void motorRun(int x){
 750              		.loc 1 220 0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 8
 753              		@ frame_needed = 1, uses_anonymous_args = 0
 754 0000 80B5     		push	{r7, lr}
 755              		.cfi_def_cfa_offset 8
 756              		.cfi_offset 7, -8
 757              		.cfi_offset 14, -4
 758 0002 82B0     		sub	sp, sp, #8
 759              		.cfi_def_cfa_offset 16
 760 0004 00AF     		add	r7, sp, #0
 761              		.cfi_def_cfa_register 7
 762 0006 7860     		str	r0, [r7, #4]
 221:main.c        ****     
 222:main.c        ****     
 223:main.c        ****     
 224:main.c        ****     //PWM_1_Start();
 225:main.c        ****     //PWM_2_Start();
 226:main.c        **** 
 227:main.c        **** 
 228:main.c        ****     //motorStop();
 229:main.c        ****     //CyDelay(time); // so we have time to set the robot up
 230:main.c        ****     motorSetSpeed(x);
 763              		.loc 1 230 0
 764 0008 7868     		ldr	r0, [r7, #4]
 765 000a FFF7FEFF 		bl	motorSetSpeed
 231:main.c        ****     //CyDelay(time);
 232:main.c        ****     motorStop();
 766              		.loc 1 232 0
 767 000e FFF7FEFF 		bl	motorStop
 233:main.c        ****     
 234:main.c        ****     //motorGoBackwards();
 235:main.c        **** 
 236:main.c        ****     
 237:main.c        ****     //CyDelay(2000);
 238:main.c        ****  
 239:main.c        ****     //motorStop();
 240:main.c        ****     //motorCount();//checks count per second.
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 19


 241:main.c        **** 
 242:main.c        ****     
 243:main.c        **** }
 768              		.loc 1 243 0
 769 0012 00BF     		nop
 770 0014 0837     		adds	r7, r7, #8
 771              		.cfi_def_cfa_offset 8
 772 0016 BD46     		mov	sp, r7
 773              		.cfi_def_cfa_register 13
 774              		@ sp needed
 775 0018 80BD     		pop	{r7, pc}
 776              		.cfi_endproc
 777              	.LFE75:
 778              		.size	motorRun, .-motorRun
 779 001a 00BF     		.section	.text.isr_TS_Interrupt_sample,"ax",%progbits
 780              		.align	2
 781              		.global	isr_TS_Interrupt_sample
 782              		.thumb
 783              		.thumb_func
 784              		.type	isr_TS_Interrupt_sample, %function
 785              	isr_TS_Interrupt_sample:
 786              	.LFB76:
 244:main.c        **** CY_ISR(isr_TS_Interrupt_sample)
 245:main.c        **** {
 787              		.loc 1 245 0
 788              		.cfi_startproc
 789              		@ args = 0, pretend = 0, frame = 0
 790              		@ frame_needed = 1, uses_anonymous_args = 0
 791 0000 80B5     		push	{r7, lr}
 792              		.cfi_def_cfa_offset 8
 793              		.cfi_offset 7, -8
 794              		.cfi_offset 14, -4
 795 0002 00AF     		add	r7, sp, #0
 796              		.cfi_def_cfa_register 7
 246:main.c        ****     #ifdef isr_TS_INTERRUPT_INTERRUPT_CALLBACK
 247:main.c        ****         isr_TS_Interrupt_InterruptCallback();
 248:main.c        ****     #endif /* isr_TS_INTERRUPT_INTERRUPT_CALLBACK */ 
 249:main.c        ****         ADC_StartConvert();
 797              		.loc 1 249 0
 798 0004 FFF7FEFF 		bl	ADC_StartConvert
 250:main.c        ****     /*  Place your Interrupt code here. */
 251:main.c        ****     /* `#START isr_TS_Interrupt` */
 252:main.c        **** 
 253:main.c        ****     /* `#END` */
 254:main.c        **** }
 799              		.loc 1 254 0
 800 0008 00BF     		nop
 801 000a 80BD     		pop	{r7, pc}
 802              		.cfi_endproc
 803              	.LFE76:
 804              		.size	isr_TS_Interrupt_sample, .-isr_TS_Interrupt_sample
 805              		.section	.text.main,"ax",%progbits
 806              		.align	2
 807              		.global	main
 808              		.thumb
 809              		.thumb_func
 810              		.type	main, %function
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 20


 811              	main:
 812              	.LFB77:
 255:main.c        **** 
 256:main.c        **** 
 257:main.c        **** int main()
 258:main.c        **** {
 813              		.loc 1 258 0
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 4040
 816              		@ frame_needed = 1, uses_anonymous_args = 0
 817 0000 80B5     		push	{r7, lr}
 818              		.cfi_def_cfa_offset 8
 819              		.cfi_offset 7, -8
 820              		.cfi_offset 14, -4
 821 0002 ADF6C87D 		subw	sp, sp, #4040
 822              		.cfi_def_cfa_offset 4048
 823 0006 00AF     		add	r7, sp, #0
 824              		.cfi_def_cfa_register 7
 259:main.c        ****     
 260:main.c        **** 
 261:main.c        **** // --------------------------------    
 262:main.c        **** // ----- INITIALIZATIONS ----------
 263:main.c        ****     CYGlobalIntEnable;
 825              		.loc 1 263 0
 826              		.syntax unified
 827              	@ 263 "main.c" 1
 828 0008 62B6     		CPSIE   i
 829              	@ 0 "" 2
 264:main.c        ****     count  = 0;
 830              		.loc 1 264 0
 831              		.thumb
 832              		.syntax unified
 833 000a A24B     		ldr	r3, .L51
 834 000c 0022     		movs	r2, #0
 835 000e 1A70     		strb	r2, [r3]
 265:main.c        ****     
 266:main.c        ****     ADC_Start();
 836              		.loc 1 266 0
 837 0010 FFF7FEFF 		bl	ADC_Start
 267:main.c        ****     Timer_TS_Start();
 838              		.loc 1 267 0
 839 0014 FFF7FEFF 		bl	Timer_TS_Start
 268:main.c        ****     Timer_Motor_Start();
 840              		.loc 1 268 0
 841 0018 FFF7FEFF 		bl	Timer_Motor_Start
 269:main.c        ****     QuadDec_M1_Start();
 842              		.loc 1 269 0
 843 001c FFF7FEFF 		bl	QuadDec_M1_Start
 270:main.c        ****     QuadDec_M2_Start(); //init the quadencoder,
 844              		.loc 1 270 0
 845 0020 FFF7FEFF 		bl	QuadDec_M2_Start
 271:main.c        ****     //isr_motor_StartEx(isr_motor_interrupt_speed);
 272:main.c        ****     
 273:main.c        ****     isr_TS_StartEx(isr_TS_Interrupt_sample);
 846              		.loc 1 273 0
 847 0024 9C48     		ldr	r0, .L51+4
 848 0026 FFF7FEFF 		bl	isr_TS_StartEx
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 21


 274:main.c        ****     isr_eoc_StartEx(isr_eoc_Interrupt_test);
 849              		.loc 1 274 0
 850 002a 9C48     		ldr	r0, .L51+8
 851 002c FFF7FEFF 		bl	isr_eoc_StartEx
 275:main.c        ****     
 276:main.c        ****     
 277:main.c        ****     //ADC_StartConvert();
 278:main.c        ****     
 279:main.c        ****     PWM_1_Start();
 852              		.loc 1 279 0
 853 0030 FFF7FEFF 		bl	PWM_1_Start
 280:main.c        ****     PWM_2_Start();
 854              		.loc 1 280 0
 855 0034 FFF7FEFF 		bl	PWM_2_Start
 281:main.c        ****     LED_Write(0);
 856              		.loc 1 281 0
 857 0038 0020     		movs	r0, #0
 858 003a FFF7FEFF 		bl	LED_Write
 282:main.c        ****     motorStop();
 859              		.loc 1 282 0
 860 003e FFF7FEFF 		bl	motorStop
 283:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION)   ; 
 861              		.loc 1 283 0
 862 0042 0121     		movs	r1, #1
 863 0044 0020     		movs	r0, #0
 864 0046 FFF7FEFF 		bl	USBUART_Start
 284:main.c        ****     ////////////////////////////////
 285:main.c        ****     
 286:main.c        ****     // Speed//
 287:main.c        ****     //int speed = -33;
 288:main.c        ****     //int time = 2000;
 289:main.c        ****    // motorRun(speed,time);
 290:main.c        **** 
 291:main.c        ****     /////////////////////////////////////////////
 292:main.c        ****     int lastState=0;
 865              		.loc 1 292 0
 866 004a 0023     		movs	r3, #0
 867 004c C7F8B83F 		str	r3, [r7, #4024]
 293:main.c        ****     //usbPutString(displaystring);
 294:main.c        ****      //87cm motor 1 945, motor2 -958. 2seconds.
 295:main.c        ****     //10.8 counts per cm for distance.
 296:main.c        ****    //for speed,43.5cm/s 
 297:main.c        ****     
 298:main.c        **** //    
 299:main.c        **** // ----------      //distance ---------
 300:main.c        ****  int travelDis = 1740;//10.8 * travelDis
 868              		.loc 1 300 0
 869 0050 40F2CC63 		movw	r3, #1740
 870 0054 C7F8B43F 		str	r3, [r7, #4020]
 301:main.c        ****     /*
 302:main.c        ****   while(QuadDec_M1_GetCounter()<travelDis){
 303:main.c        ****         if (processSensors == 1) {
 304:main.c        ****     
 305:main.c        ****             int operation = convertSensorBinary();
 306:main.c        ****             
 307:main.c        ****     
 308:main.c        ****             switch(operation){
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 22


 309:main.c        ****                 case 3:// 0 1 1 // Q3 under black
 310:main.c        ****                     motorTurnLeft(50);//decrease go fast used to be 50 by 6
 311:main.c        ****                     LED_Write(1);
 312:main.c        ****                     break;    
 313:main.c        ****                     
 314:main.c        ****                 case 6:// 1 1 0 // Q5 under black  
 315:main.c        ****                     motorTurnRight(200);//increase 200 by 6
 316:main.c        ****                     LED_Write(1);
 317:main.c        ****                     break;
 318:main.c        ****                     
 319:main.c        ****                 case 5:// 101 // Q4 under black
 320:main.c        ****                     motorSetSpeed(-7); //-40 is original
 321:main.c        ****                     LED_Write(0);
 322:main.c        ****                     break;
 323:main.c        ****             }
 324:main.c        ****             
 325:main.c        ****              processSensors = 0;
 326:main.c        ****             //reset counter
 327:main.c        **** 
 328:main.c        ****             counteoc = 0;
 329:main.c        ****             //reset flags for lightsensors because it checks every 10 iterations, adds delay/
 330:main.c        ****             lightDetectedFront[0] = 0;
 331:main.c        ****             lightDetectedFront[1] = 0;
 332:main.c        ****             lightDetectedFront[2] = 0;
 333:main.c        ****             lightDetectedBack[0] = 0;
 334:main.c        ****             lightDetectedBack[1] = 0;
 335:main.c        ****             lightDetectedBack[2] = 0;
 336:main.c        ****           
 337:main.c        ****             
 338:main.c        ****     
 339:main.c        ****         }
 340:main.c        ****     }
 341:main.c        ****     motorStop();
 342:main.c        ****     motorCount();
 343:main.c        ****     
 344:main.c        ****     /// ---------End here----------
 345:main.c        ****     
 346:main.c        ****     
 347:main.c        ****         
 348:main.c        ****    
 349:main.c        ****     
 350:main.c        ****     */
 351:main.c        ****     int decisionflag =0;
 871              		.loc 1 351 0
 872 0058 0023     		movs	r3, #0
 873 005a C7F8C43F 		str	r3, [r7, #4036]
 352:main.c        ****     
 353:main.c        ****     /// 1 go straight
 354:main.c        ****     // 2 go right
 355:main.c        ****     // 0 go left
 356:main.c        ****     //3 is uturn
 357:main.c        ****     
 358:main.c        ****                      
 359:main.c        ****     //int queue[1000] = {2,2,0,0,2,3,0,0,2,2,3,1,0,2,2,3,0,2,0,0};
 360:main.c        ****     //int queue[1000] = {2,2,0,1,2,0,0,1,1,0,0,2,2,3,0,0,2,2,1,1,2,2,0,1,2,0,0,3,2,2,1,2,0,0,0,2,0,
 361:main.c        ****     int queue[1000] = {1,1,1,1,0,0,2,2,0,0,2,0,2,0,0,0,3,2,0,0,0,2,2,0,0};
 874              		.loc 1 361 0
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 23


 875 005e 3B1D     		adds	r3, r7, #4
 876 0060 1846     		mov	r0, r3
 877 0062 4FF47A63 		mov	r3, #4000
 878 0066 1A46     		mov	r2, r3
 879 0068 0021     		movs	r1, #0
 880 006a FFF7FEFF 		bl	memset
 881 006e 3B1D     		adds	r3, r7, #4
 882 0070 0122     		movs	r2, #1
 883 0072 1A60     		str	r2, [r3]
 884 0074 3B1D     		adds	r3, r7, #4
 885 0076 0122     		movs	r2, #1
 886 0078 5A60     		str	r2, [r3, #4]
 887 007a 3B1D     		adds	r3, r7, #4
 888 007c 0122     		movs	r2, #1
 889 007e 9A60     		str	r2, [r3, #8]
 890 0080 3B1D     		adds	r3, r7, #4
 891 0082 0122     		movs	r2, #1
 892 0084 DA60     		str	r2, [r3, #12]
 893 0086 3B1D     		adds	r3, r7, #4
 894 0088 0222     		movs	r2, #2
 895 008a 9A61     		str	r2, [r3, #24]
 896 008c 3B1D     		adds	r3, r7, #4
 897 008e 0222     		movs	r2, #2
 898 0090 DA61     		str	r2, [r3, #28]
 899 0092 3B1D     		adds	r3, r7, #4
 900 0094 0222     		movs	r2, #2
 901 0096 9A62     		str	r2, [r3, #40]
 902 0098 3B1D     		adds	r3, r7, #4
 903 009a 0222     		movs	r2, #2
 904 009c 1A63     		str	r2, [r3, #48]
 905 009e 3B1D     		adds	r3, r7, #4
 906 00a0 0322     		movs	r2, #3
 907 00a2 1A64     		str	r2, [r3, #64]
 908 00a4 3B1D     		adds	r3, r7, #4
 909 00a6 0222     		movs	r2, #2
 910 00a8 5A64     		str	r2, [r3, #68]
 911 00aa 3B1D     		adds	r3, r7, #4
 912 00ac 0222     		movs	r2, #2
 913 00ae 5A65     		str	r2, [r3, #84]
 914 00b0 3B1D     		adds	r3, r7, #4
 915 00b2 0222     		movs	r2, #2
 916 00b4 9A65     		str	r2, [r3, #88]
 362:main.c        ****     int indexPointer = 0;
 917              		.loc 1 362 0
 918 00b6 0023     		movs	r3, #0
 919 00b8 C7F8C03F 		str	r3, [r7, #4032]
 363:main.c        ****     //int queueSize = 19;
 364:main.c        ****     //int queueSize = 52;
 365:main.c        ****     int queueSize = 25;
 920              		.loc 1 365 0
 921 00bc 1923     		movs	r3, #25
 922 00be C7F8B03F 		str	r3, [r7, #4016]
 366:main.c        ****     int motoerFlagSTOP=0;
 923              		.loc 1 366 0
 924 00c2 0023     		movs	r3, #0
 925 00c4 C7F8BC3F 		str	r3, [r7, #4028]
 926              	.L49:
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 24


 367:main.c        ****     
 368:main.c        ****             
 369:main.c        ****     
 370:main.c        ****    ///////////////////////////////////////// LINE TRACKING////////
 371:main.c        ****     
 372:main.c        ****     while(1)
 373:main.c        ****     {
 374:main.c        ****         /* Place your application code here. */
 375:main.c        ****        
 376:main.c        ****         if (processSensors == 1) {
 927              		.loc 1 376 0
 928 00c8 754B     		ldr	r3, .L51+12
 929 00ca 1B68     		ldr	r3, [r3]
 930 00cc 012B     		cmp	r3, #1
 931 00ce FBD1     		bne	.L49
 932              	.LBB3:
 377:main.c        ****             CYGlobalIntDisable;
 933              		.loc 1 377 0
 934              		.syntax unified
 935              	@ 377 "main.c" 1
 936 00d0 72B6     		CPSID   i
 937              	@ 0 "" 2
 378:main.c        ****                    
 379:main.c        ****             int operation = convertSensorBinary();
 938              		.loc 1 379 0
 939              		.thumb
 940              		.syntax unified
 941 00d2 FFF7FEFF 		bl	convertSensorBinary
 942 00d6 C7F8AC0F 		str	r0, [r7, #4012]
 380:main.c        ****             int backOps = convertBackBinary();
 943              		.loc 1 380 0
 944 00da FFF7FEFF 		bl	convertBackBinary
 945 00de C7F8A80F 		str	r0, [r7, #4008]
 381:main.c        ****             int decision = queue[indexPointer];
 946              		.loc 1 381 0
 947 00e2 3B1D     		adds	r3, r7, #4
 948 00e4 D7F8C02F 		ldr	r2, [r7, #4032]
 949 00e8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 950 00ec C7F8A43F 		str	r3, [r7, #4004]
 382:main.c        **** 
 383:main.c        ****                 switch(operation){
 951              		.loc 1 383 0
 952 00f0 D7F8AC3F 		ldr	r3, [r7, #4012]
 953 00f4 072B     		cmp	r3, #7
 954 00f6 4FD8     		bhi	.L29
 955 00f8 01A2     		adr	r2, .L31
 956 00fa 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 957 00fe 00BF     		.p2align 2
 958              	.L31:
 959 0100 73010000 		.word	.L30+1
 960 0104 7F010000 		.word	.L32+1
 961 0108 99010000 		.word	.L29+1
 962 010c 4B010000 		.word	.L33+1
 963 0110 8B010000 		.word	.L34+1
 964 0114 67010000 		.word	.L35+1
 965 0118 59010000 		.word	.L36+1
 966 011c 21010000 		.word	.L37+1
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 25


 967              		.p2align 1
 968              	.L37:
 384:main.c        ****                 //where 1 is on white, 0 is on black.
 385:main.c        ****                     
 386:main.c        ****                     case 7: // 111 // all under white\\
 387:main.c        ****                         
 388:main.c        **** //                            if(backOps == 7 &&(decision == 3)){
 389:main.c        **** //                                decisionflag = 1;
 390:main.c        **** //                                break;
 391:main.c        **** //                            }
 392:main.c        **** //                  
 393:main.c        ****                            if(backOps == 7){
 969              		.loc 1 393 0
 970 0120 D7F8A83F 		ldr	r3, [r7, #4008]
 971 0124 072B     		cmp	r3, #7
 972 0126 09D1     		bne	.L38
 394:main.c        ****                                 
 395:main.c        ****                                 if (motoerFlagSTOP==1){
 973              		.loc 1 395 0
 974 0128 D7F8BC3F 		ldr	r3, [r7, #4028]
 975 012c 012B     		cmp	r3, #1
 976 012e 02D1     		bne	.L39
 396:main.c        ****                                     motorStop();
 977              		.loc 1 396 0
 978 0130 FFF7FEFF 		bl	motorStop
 979 0134 02E0     		b	.L38
 980              	.L39:
 397:main.c        ****                                 }
 398:main.c        ****                                 else{
 399:main.c        ****                                     //motorStop();
 400:main.c        ****                                     //motorGoBackwards();
 401:main.c        ****                                     //CyDelay(100);
 402:main.c        ****                                     motorCircle(40);
 981              		.loc 1 402 0
 982 0136 2820     		movs	r0, #40
 983 0138 FFF7FEFF 		bl	motorCircle
 984              	.L38:
 403:main.c        ****                                     //CyDelay(800);
 404:main.c        ****                                 }
 405:main.c        ****                             }
 406:main.c        ****                             
 407:main.c        ****                         
 408:main.c        ****                             if(backOps <=5){
 985              		.loc 1 408 0
 986 013c D7F8A83F 		ldr	r3, [r7, #4008]
 987 0140 052B     		cmp	r3, #5
 988 0142 28DC     		bgt	.L50
 409:main.c        ****                                 motorGoStraight();
 989              		.loc 1 409 0
 990 0144 FFF7FEFF 		bl	motorGoStraight
 410:main.c        ****                             } 
 411:main.c        ****                             break;
 991              		.loc 1 411 0
 992 0148 25E0     		b	.L50
 993              	.L33:
 412:main.c        ****                         
 413:main.c        ****                     case 3:// 0 1 1 // Q3 under black
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 26


 414:main.c        ****                         motorTurnLeft(70);//decrease go fast used to be 50 by 6
 994              		.loc 1 414 0
 995 014a 4620     		movs	r0, #70
 996 014c FFF7FEFF 		bl	motorTurnLeft
 415:main.c        ****                         LED_Write(1);
 997              		.loc 1 415 0
 998 0150 0120     		movs	r0, #1
 999 0152 FFF7FEFF 		bl	LED_Write
 416:main.c        ****                         break;    
 1000              		.loc 1 416 0
 1001 0156 1FE0     		b	.L29
 1002              	.L36:
 417:main.c        ****                         
 418:main.c        ****                     case 6:// 1 1 0 // Q5 under black  
 419:main.c        ****                         motorTurnRight(180);//increase 200 by 6``
 1003              		.loc 1 419 0
 1004 0158 B420     		movs	r0, #180
 1005 015a FFF7FEFF 		bl	motorTurnRight
 420:main.c        ****                         LED_Write(1);
 1006              		.loc 1 420 0
 1007 015e 0120     		movs	r0, #1
 1008 0160 FFF7FEFF 		bl	LED_Write
 421:main.c        ****                         break;
 1009              		.loc 1 421 0
 1010 0164 18E0     		b	.L29
 1011              	.L35:
 422:main.c        ****                         
 423:main.c        ****                     case 5:// 101 // Q4 under black
 424:main.c        ****                         motorGoStraight();
 1012              		.loc 1 424 0
 1013 0166 FFF7FEFF 		bl	motorGoStraight
 425:main.c        ****                         LED_Write(0);
 1014              		.loc 1 425 0
 1015 016a 0020     		movs	r0, #0
 1016 016c FFF7FEFF 		bl	LED_Write
 426:main.c        ****                         break;
 1017              		.loc 1 426 0
 1018 0170 12E0     		b	.L29
 1019              	.L30:
 427:main.c        ****                     
 428:main.c        ****                     case 0:  // 000 // ALL UNDER black
 429:main.c        ****                         motorStop();
 1020              		.loc 1 429 0
 1021 0172 FFF7FEFF 		bl	motorStop
 430:main.c        ****                         decisionflag = 1;
 1022              		.loc 1 430 0
 1023 0176 0123     		movs	r3, #1
 1024 0178 C7F8C43F 		str	r3, [r7, #4036]
 431:main.c        ****                         break;
 1025              		.loc 1 431 0
 1026 017c 0CE0     		b	.L29
 1027              	.L32:
 432:main.c        ****                     case 1: // 001 --> left intersection # 65 turn for 500s
 433:main.c        ****                         //lastState=1;
 434:main.c        ****                         motorStop();
 1028              		.loc 1 434 0
 1029 017e FFF7FEFF 		bl	motorStop
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 27


 435:main.c        ****                         decisionflag = 1;
 1030              		.loc 1 435 0
 1031 0182 0123     		movs	r3, #1
 1032 0184 C7F8C43F 		str	r3, [r7, #4036]
 436:main.c        ****                         break;
 1033              		.loc 1 436 0
 1034 0188 06E0     		b	.L29
 1035              	.L34:
 437:main.c        ****                     case 4: // 100 --> right intersection #180 turn for 500s
 438:main.c        ****                        // lastState=2;
 439:main.c        ****                         motorStop();
 1036              		.loc 1 439 0
 1037 018a FFF7FEFF 		bl	motorStop
 440:main.c        ****                         decisionflag = 1;
 1038              		.loc 1 440 0
 1039 018e 0123     		movs	r3, #1
 1040 0190 C7F8C43F 		str	r3, [r7, #4036]
 441:main.c        ****                         break;
 1041              		.loc 1 441 0
 1042 0194 00E0     		b	.L29
 1043              	.L50:
 411:main.c        ****                         
 1044              		.loc 1 411 0
 1045 0196 00BF     		nop
 1046              	.L29:
 442:main.c        ****                         
 443:main.c        ****                     
 444:main.c        ****                    
 445:main.c        ****                 
 446:main.c        ****                 }
 447:main.c        ****                 
 448:main.c        ****                 
 449:main.c        ****                 
 450:main.c        ****                 
 451:main.c        ****                 //make decision at intersection 
 452:main.c        ****                 if ((decisionflag == 1) && (motoerFlagSTOP == 0)){
 1047              		.loc 1 452 0
 1048 0198 D7F8C43F 		ldr	r3, [r7, #4036]
 1049 019c 012B     		cmp	r3, #1
 1050 019e 5ED1     		bne	.L41
 1051              		.loc 1 452 0 is_stmt 0 discriminator 1
 1052 01a0 D7F8BC3F 		ldr	r3, [r7, #4028]
 1053 01a4 002B     		cmp	r3, #0
 1054 01a6 5AD1     		bne	.L41
 453:main.c        ****                     //CYGlobalIntDisable;
 454:main.c        ****         
 455:main.c        ****                     
 456:main.c        ****                     //get overall size of array
 457:main.c        ****                     
 458:main.c        ****                     //0 - left, 1 -straight, 2 - right 
 459:main.c        ****                     
 460:main.c        ****                     
 461:main.c        ****                     switch(decision) {
 1055              		.loc 1 461 0 is_stmt 1
 1056 01a8 D7F8A43F 		ldr	r3, [r7, #4004]
 1057 01ac 032B     		cmp	r3, #3
 1058 01ae 42D8     		bhi	.L42
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 28


 1059 01b0 01A2     		adr	r2, .L44
 1060 01b2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1061 01b6 00BF     		.p2align 2
 1062              	.L44:
 1063 01b8 C9010000 		.word	.L43+1
 1064 01bc E5010000 		.word	.L45+1
 1065 01c0 FF010000 		.word	.L46+1
 1066 01c4 1B020000 		.word	.L47+1
 1067              		.p2align 1
 1068              	.L43:
 462:main.c        ****                       case 0:
 463:main.c        ****                         //turn left
 464:main.c        ****                         motorStop();
 1069              		.loc 1 464 0
 1070 01c8 FFF7FEFF 		bl	motorStop
 465:main.c        ****                         CyDelay(400);
 1071              		.loc 1 465 0
 1072 01cc 4FF4C870 		mov	r0, #400
 1073 01d0 FFF7FEFF 		bl	CyDelay
 466:main.c        ****                         motorTurnLeft(65);
 1074              		.loc 1 466 0
 1075 01d4 4120     		movs	r0, #65
 1076 01d6 FFF7FEFF 		bl	motorTurnLeft
 467:main.c        ****                         CyDelay(500);
 1077              		.loc 1 467 0
 1078 01da 4FF4FA70 		mov	r0, #500
 1079 01de FFF7FEFF 		bl	CyDelay
 468:main.c        ****                         
 469:main.c        ****                         break;
 1080              		.loc 1 469 0
 1081 01e2 28E0     		b	.L42
 1082              	.L45:
 470:main.c        ****                       case 1:
 471:main.c        ****                         //go straight
 472:main.c        ****                         motorStop();
 1083              		.loc 1 472 0
 1084 01e4 FFF7FEFF 		bl	motorStop
 473:main.c        ****                         CyDelay(400);
 1085              		.loc 1 473 0
 1086 01e8 4FF4C870 		mov	r0, #400
 1087 01ec FFF7FEFF 		bl	CyDelay
 474:main.c        ****                         motorGoStraight();
 1088              		.loc 1 474 0
 1089 01f0 FFF7FEFF 		bl	motorGoStraight
 475:main.c        ****                         CyDelay(400);
 1090              		.loc 1 475 0
 1091 01f4 4FF4C870 		mov	r0, #400
 1092 01f8 FFF7FEFF 		bl	CyDelay
 476:main.c        ****                         
 477:main.c        ****                         break;
 1093              		.loc 1 477 0
 1094 01fc 1BE0     		b	.L42
 1095              	.L46:
 478:main.c        ****                       case 2:
 479:main.c        ****                         //turn right
 480:main.c        ****                         motorStop();
 1096              		.loc 1 480 0
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 29


 1097 01fe FFF7FEFF 		bl	motorStop
 481:main.c        ****                         CyDelay(400);
 1098              		.loc 1 481 0
 1099 0202 4FF4C870 		mov	r0, #400
 1100 0206 FFF7FEFF 		bl	CyDelay
 482:main.c        ****                         motorTurnRight(180);
 1101              		.loc 1 482 0
 1102 020a B420     		movs	r0, #180
 1103 020c FFF7FEFF 		bl	motorTurnRight
 483:main.c        ****                         CyDelay(500);
 1104              		.loc 1 483 0
 1105 0210 4FF4FA70 		mov	r0, #500
 1106 0214 FFF7FEFF 		bl	CyDelay
 484:main.c        ****                         
 485:main.c        ****                         break;
 1107              		.loc 1 485 0
 1108 0218 0DE0     		b	.L42
 1109              	.L47:
 486:main.c        ****                         
 487:main.c        ****                     case 3:
 488:main.c        ****                         motorStop();
 1110              		.loc 1 488 0
 1111 021a FFF7FEFF 		bl	motorStop
 489:main.c        ****                         CyDelay(400);
 1112              		.loc 1 489 0
 1113 021e 4FF4C870 		mov	r0, #400
 1114 0222 FFF7FEFF 		bl	CyDelay
 490:main.c        ****                         motorBeyblade(170);
 1115              		.loc 1 490 0
 1116 0226 AA20     		movs	r0, #170
 1117 0228 FFF7FEFF 		bl	motorBeyblade
 491:main.c        ****                         CyDelay(800);
 1118              		.loc 1 491 0
 1119 022c 4FF44870 		mov	r0, #800
 1120 0230 FFF7FEFF 		bl	CyDelay
 492:main.c        ****                        // motorGoStraight();
 493:main.c        ****                         //CyDelay(400);
 494:main.c        ****                         break;
 1121              		.loc 1 494 0
 1122 0234 00BF     		nop
 1123              	.L42:
 495:main.c        ****                     }
 496:main.c        ****                     
 497:main.c        ****                     indexPointer++;
 1124              		.loc 1 497 0
 1125 0236 D7F8C03F 		ldr	r3, [r7, #4032]
 1126 023a 0133     		adds	r3, r3, #1
 1127 023c C7F8C03F 		str	r3, [r7, #4032]
 498:main.c        ****                     
 499:main.c        ****                     if (indexPointer+1 > queueSize ) {
 1128              		.loc 1 499 0
 1129 0240 D7F8C03F 		ldr	r3, [r7, #4032]
 1130 0244 5A1C     		adds	r2, r3, #1
 1131 0246 D7F8B03F 		ldr	r3, [r7, #4016]
 1132 024a 9A42     		cmp	r2, r3
 1133 024c 04DD     		ble	.L48
 500:main.c        ****                         motorStop();
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 30


 1134              		.loc 1 500 0
 1135 024e FFF7FEFF 		bl	motorStop
 501:main.c        ****                         motoerFlagSTOP = 1;
 1136              		.loc 1 501 0
 1137 0252 0123     		movs	r3, #1
 1138 0254 C7F8BC3F 		str	r3, [r7, #4028]
 1139              	.L48:
 502:main.c        ****                         //while(1){};   
 503:main.c        ****                     }
 504:main.c        ****                     
 505:main.c        ****                     //reset decision
 506:main.c        ****                     decisionflag = 0;
 1140              		.loc 1 506 0
 1141 0258 0023     		movs	r3, #0
 1142 025a C7F8C43F 		str	r3, [r7, #4036]
 1143              	.L41:
 507:main.c        ****         
 508:main.c        ****                 
 509:main.c        ****            //renable interrupt
 510:main.c        ****                 //CYGlobalIntEnable;
 511:main.c        ****             }
 512:main.c        ****             //reset variable.
 513:main.c        ****             processSensors = 0;
 1144              		.loc 1 513 0
 1145 025e 104B     		ldr	r3, .L51+12
 1146 0260 0022     		movs	r2, #0
 1147 0262 1A60     		str	r2, [r3]
 514:main.c        ****             //reset counter
 515:main.c        **** 
 516:main.c        ****              counteoc = 0;
 1148              		.loc 1 516 0
 1149 0264 0F4B     		ldr	r3, .L51+16
 1150 0266 0022     		movs	r2, #0
 1151 0268 1A60     		str	r2, [r3]
 517:main.c        ****             //reset flags for lightsensors because it checks every 10 iterations, adds delay/
 518:main.c        ****             lightDetectedFront[0] = 0;
 1152              		.loc 1 518 0
 1153 026a 0F4B     		ldr	r3, .L51+20
 1154 026c 0022     		movs	r2, #0
 1155 026e 1A60     		str	r2, [r3]
 519:main.c        ****             lightDetectedFront[1] = 0;
 1156              		.loc 1 519 0
 1157 0270 0D4B     		ldr	r3, .L51+20
 1158 0272 0022     		movs	r2, #0
 1159 0274 5A60     		str	r2, [r3, #4]
 520:main.c        ****             lightDetectedFront[2] = 0;
 1160              		.loc 1 520 0
 1161 0276 0C4B     		ldr	r3, .L51+20
 1162 0278 0022     		movs	r2, #0
 1163 027a 9A60     		str	r2, [r3, #8]
 521:main.c        ****             lightDetectedBack[0] = 0;
 1164              		.loc 1 521 0
 1165 027c 0B4B     		ldr	r3, .L51+24
 1166 027e 0022     		movs	r2, #0
 1167 0280 1A60     		str	r2, [r3]
 522:main.c        ****             lightDetectedBack[1] = 0;
 1168              		.loc 1 522 0
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 31


 1169 0282 0A4B     		ldr	r3, .L51+24
 1170 0284 0022     		movs	r2, #0
 1171 0286 5A60     		str	r2, [r3, #4]
 523:main.c        ****             lightDetectedBack[2] = 0;
 1172              		.loc 1 523 0
 1173 0288 084B     		ldr	r3, .L51+24
 1174 028a 0022     		movs	r2, #0
 1175 028c 9A60     		str	r2, [r3, #8]
 524:main.c        ****             
 525:main.c        ****             CYGlobalIntEnable;
 1176              		.loc 1 525 0
 1177              		.syntax unified
 1178              	@ 525 "main.c" 1
 1179 028e 62B6     		CPSIE   i
 1180              	@ 0 "" 2
 1181              		.thumb
 1182              		.syntax unified
 1183              	.LBE3:
 526:main.c        ****           
 527:main.c        ****         }
 528:main.c        ****         
 529:main.c        ****         
 530:main.c        ****     }   
 1184              		.loc 1 530 0
 1185 0290 1AE7     		b	.L49
 1186              	.L52:
 1187 0292 00BF     		.align	2
 1188              	.L51:
 1189 0294 44000000 		.word	count
 1190 0298 00000000 		.word	isr_TS_Interrupt_sample
 1191 029c 00000000 		.word	isr_eoc_Interrupt_test
 1192 02a0 00000000 		.word	processSensors
 1193 02a4 00000000 		.word	counteoc
 1194 02a8 00000000 		.word	lightDetectedFront
 1195 02ac 00000000 		.word	lightDetectedBack
 1196              		.cfi_endproc
 1197              	.LFE77:
 1198              		.size	main, .-main
 1199              		.section	.text.convertBackBinary,"ax",%progbits
 1200              		.align	2
 1201              		.global	convertBackBinary
 1202              		.thumb
 1203              		.thumb_func
 1204              		.type	convertBackBinary, %function
 1205              	convertBackBinary:
 1206              	.LFB78:
 531:main.c        ****     
 532:main.c        **** //////////////////////////////////////
 533:main.c        **** }
 534:main.c        **** 
 535:main.c        ****   
 536:main.c        **** 
 537:main.c        **** int convertBackBinary(){
 1207              		.loc 1 537 0
 1208              		.cfi_startproc
 1209              		@ args = 0, pretend = 0, frame = 16
 1210              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 32


 1211              		@ link register save eliminated.
 1212 0000 80B4     		push	{r7}
 1213              		.cfi_def_cfa_offset 4
 1214              		.cfi_offset 7, -4
 1215 0002 85B0     		sub	sp, sp, #20
 1216              		.cfi_def_cfa_offset 24
 1217 0004 00AF     		add	r7, sp, #0
 1218              		.cfi_def_cfa_register 7
 538:main.c        **** 
 539:main.c        ****     int value1=0;
 1219              		.loc 1 539 0
 1220 0006 0023     		movs	r3, #0
 1221 0008 FB60     		str	r3, [r7, #12]
 540:main.c        ****     int Q1 = lightDetectedBack[1] ;
 1222              		.loc 1 540 0
 1223 000a 104B     		ldr	r3, .L55
 1224 000c 5B68     		ldr	r3, [r3, #4]
 1225 000e BB60     		str	r3, [r7, #8]
 541:main.c        ****     int Q2 = lightDetectedBack[2];
 1226              		.loc 1 541 0
 1227 0010 0E4B     		ldr	r3, .L55
 1228 0012 9B68     		ldr	r3, [r3, #8]
 1229 0014 7B60     		str	r3, [r7, #4]
 542:main.c        ****     int Q6 =lightDetectedBack[0];
 1230              		.loc 1 542 0
 1231 0016 0D4B     		ldr	r3, .L55
 1232 0018 1B68     		ldr	r3, [r3]
 1233 001a 3B60     		str	r3, [r7]
 543:main.c        ****     value1 =  value1 + lightDetectedBack[1] *2;
 1234              		.loc 1 543 0
 1235 001c 0B4B     		ldr	r3, .L55
 1236 001e 5B68     		ldr	r3, [r3, #4]
 1237 0020 5B00     		lsls	r3, r3, #1
 1238 0022 FA68     		ldr	r2, [r7, #12]
 1239 0024 1344     		add	r3, r3, r2
 1240 0026 FB60     		str	r3, [r7, #12]
 544:main.c        ****     value1 = value1 +  lightDetectedBack[2] *4;
 1241              		.loc 1 544 0
 1242 0028 084B     		ldr	r3, .L55
 1243 002a 9B68     		ldr	r3, [r3, #8]
 1244 002c 9B00     		lsls	r3, r3, #2
 1245 002e FA68     		ldr	r2, [r7, #12]
 1246 0030 1344     		add	r3, r3, r2
 1247 0032 FB60     		str	r3, [r7, #12]
 545:main.c        ****     value1 = value1 + lightDetectedBack[0] *1;
 1248              		.loc 1 545 0
 1249 0034 054B     		ldr	r3, .L55
 1250 0036 1B68     		ldr	r3, [r3]
 1251 0038 FA68     		ldr	r2, [r7, #12]
 1252 003a 1344     		add	r3, r3, r2
 1253 003c FB60     		str	r3, [r7, #12]
 546:main.c        **** 
 547:main.c        ****     return value1;
 1254              		.loc 1 547 0
 1255 003e FB68     		ldr	r3, [r7, #12]
 548:main.c        **** 
 549:main.c        **** }
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 33


 1256              		.loc 1 549 0
 1257 0040 1846     		mov	r0, r3
 1258 0042 1437     		adds	r7, r7, #20
 1259              		.cfi_def_cfa_offset 4
 1260 0044 BD46     		mov	sp, r7
 1261              		.cfi_def_cfa_register 13
 1262              		@ sp needed
 1263 0046 80BC     		pop	{r7}
 1264              		.cfi_restore 7
 1265              		.cfi_def_cfa_offset 0
 1266 0048 7047     		bx	lr
 1267              	.L56:
 1268 004a 00BF     		.align	2
 1269              	.L55:
 1270 004c 00000000 		.word	lightDetectedBack
 1271              		.cfi_endproc
 1272              	.LFE78:
 1273              		.size	convertBackBinary, .-convertBackBinary
 1274              		.section	.text.convertSensorBinary,"ax",%progbits
 1275              		.align	2
 1276              		.global	convertSensorBinary
 1277              		.thumb
 1278              		.thumb_func
 1279              		.type	convertSensorBinary, %function
 1280              	convertSensorBinary:
 1281              	.LFB79:
 550:main.c        **** 
 551:main.c        **** int convertSensorBinary()
 552:main.c        **** {
 1282              		.loc 1 552 0
 1283              		.cfi_startproc
 1284              		@ args = 0, pretend = 0, frame = 16
 1285              		@ frame_needed = 1, uses_anonymous_args = 0
 1286              		@ link register save eliminated.
 1287 0000 80B4     		push	{r7}
 1288              		.cfi_def_cfa_offset 4
 1289              		.cfi_offset 7, -4
 1290 0002 85B0     		sub	sp, sp, #20
 1291              		.cfi_def_cfa_offset 24
 1292 0004 00AF     		add	r7, sp, #0
 1293              		.cfi_def_cfa_register 7
 553:main.c        ****    int value=0;
 1294              		.loc 1 553 0
 1295 0006 0023     		movs	r3, #0
 1296 0008 FB60     		str	r3, [r7, #12]
 554:main.c        ****   int Q3 = lightDetectedFront[0];
 1297              		.loc 1 554 0
 1298 000a 104B     		ldr	r3, .L59
 1299 000c 1B68     		ldr	r3, [r3]
 1300 000e BB60     		str	r3, [r7, #8]
 555:main.c        ****   int Q4 = lightDetectedFront[1];
 1301              		.loc 1 555 0
 1302 0010 0E4B     		ldr	r3, .L59
 1303 0012 5B68     		ldr	r3, [r3, #4]
 1304 0014 7B60     		str	r3, [r7, #4]
 556:main.c        ****    int Q5 = lightDetectedFront[2];
 1305              		.loc 1 556 0
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 34


 1306 0016 0D4B     		ldr	r3, .L59
 1307 0018 9B68     		ldr	r3, [r3, #8]
 1308 001a 3B60     		str	r3, [r7]
 557:main.c        ****   value=value + lightDetectedFront[0]*4;
 1309              		.loc 1 557 0
 1310 001c 0B4B     		ldr	r3, .L59
 1311 001e 1B68     		ldr	r3, [r3]
 1312 0020 9B00     		lsls	r3, r3, #2
 1313 0022 FA68     		ldr	r2, [r7, #12]
 1314 0024 1344     		add	r3, r3, r2
 1315 0026 FB60     		str	r3, [r7, #12]
 558:main.c        ****   value=value + lightDetectedFront[1]*2;
 1316              		.loc 1 558 0
 1317 0028 084B     		ldr	r3, .L59
 1318 002a 5B68     		ldr	r3, [r3, #4]
 1319 002c 5B00     		lsls	r3, r3, #1
 1320 002e FA68     		ldr	r2, [r7, #12]
 1321 0030 1344     		add	r3, r3, r2
 1322 0032 FB60     		str	r3, [r7, #12]
 559:main.c        ****   value=value + lightDetectedFront[2]*1;
 1323              		.loc 1 559 0
 1324 0034 054B     		ldr	r3, .L59
 1325 0036 9B68     		ldr	r3, [r3, #8]
 1326 0038 FA68     		ldr	r2, [r7, #12]
 1327 003a 1344     		add	r3, r3, r2
 1328 003c FB60     		str	r3, [r7, #12]
 560:main.c        ****     return value;
 1329              		.loc 1 560 0
 1330 003e FB68     		ldr	r3, [r7, #12]
 561:main.c        **** }
 1331              		.loc 1 561 0
 1332 0040 1846     		mov	r0, r3
 1333 0042 1437     		adds	r7, r7, #20
 1334              		.cfi_def_cfa_offset 4
 1335 0044 BD46     		mov	sp, r7
 1336              		.cfi_def_cfa_register 13
 1337              		@ sp needed
 1338 0046 80BC     		pop	{r7}
 1339              		.cfi_restore 7
 1340              		.cfi_def_cfa_offset 0
 1341 0048 7047     		bx	lr
 1342              	.L60:
 1343 004a 00BF     		.align	2
 1344              	.L59:
 1345 004c 00000000 		.word	lightDetectedFront
 1346              		.cfi_endproc
 1347              	.LFE79:
 1348              		.size	convertSensorBinary, .-convertSensorBinary
 1349              		.section	.text.usbPutString,"ax",%progbits
 1350              		.align	2
 1351              		.global	usbPutString
 1352              		.thumb
 1353              		.thumb_func
 1354              		.type	usbPutString, %function
 1355              	usbPutString:
 1356              	.LFB80:
 562:main.c        **** //* ========================================
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 35


 563:main.c        **** void usbPutString(char *s)
 564:main.c        **** {
 1357              		.loc 1 564 0
 1358              		.cfi_startproc
 1359              		@ args = 0, pretend = 0, frame = 8
 1360              		@ frame_needed = 1, uses_anonymous_args = 0
 1361 0000 80B5     		push	{r7, lr}
 1362              		.cfi_def_cfa_offset 8
 1363              		.cfi_offset 7, -8
 1364              		.cfi_offset 14, -4
 1365 0002 82B0     		sub	sp, sp, #8
 1366              		.cfi_def_cfa_offset 16
 1367 0004 00AF     		add	r7, sp, #0
 1368              		.cfi_def_cfa_register 7
 1369 0006 7860     		str	r0, [r7, #4]
 565:main.c        **** // !! Assumes that *s is a string with allocated space >=64 chars     
 566:main.c        **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 567:main.c        **** //  length to 62 char (63rd char is a '!')
 568:main.c        **** 
 569:main.c        **** #ifdef USE_USB     
 570:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1370              		.loc 1 570 0
 1371 0008 00BF     		nop
 1372              	.L62:
 1373              		.loc 1 570 0 is_stmt 0 discriminator 1
 1374 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 1375 000e 0346     		mov	r3, r0
 1376 0010 002B     		cmp	r3, #0
 1377 0012 FAD0     		beq	.L62
 571:main.c        ****     s[63]='\0';
 1378              		.loc 1 571 0 is_stmt 1
 1379 0014 7B68     		ldr	r3, [r7, #4]
 1380 0016 3F33     		adds	r3, r3, #63
 1381 0018 0022     		movs	r2, #0
 1382 001a 1A70     		strb	r2, [r3]
 572:main.c        ****     s[62]='!';
 1383              		.loc 1 572 0
 1384 001c 7B68     		ldr	r3, [r7, #4]
 1385 001e 3E33     		adds	r3, r3, #62
 1386 0020 2122     		movs	r2, #33
 1387 0022 1A70     		strb	r2, [r3]
 573:main.c        ****     USBUART_PutData((uint8*)s,strlen(s));
 1388              		.loc 1 573 0
 1389 0024 7868     		ldr	r0, [r7, #4]
 1390 0026 FFF7FEFF 		bl	strlen
 1391 002a 0346     		mov	r3, r0
 1392 002c 9BB2     		uxth	r3, r3
 1393 002e 1946     		mov	r1, r3
 1394 0030 7868     		ldr	r0, [r7, #4]
 1395 0032 FFF7FEFF 		bl	USBUART_PutData
 574:main.c        **** #endif
 575:main.c        **** }
 1396              		.loc 1 575 0
 1397 0036 00BF     		nop
 1398 0038 0837     		adds	r7, r7, #8
 1399              		.cfi_def_cfa_offset 8
 1400 003a BD46     		mov	sp, r7
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 36


 1401              		.cfi_def_cfa_register 13
 1402              		@ sp needed
 1403 003c 80BD     		pop	{r7, pc}
 1404              		.cfi_endproc
 1405              	.LFE80:
 1406              		.size	usbPutString, .-usbPutString
 1407 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 1408              		.align	2
 1409              		.global	usbPutChar
 1410              		.thumb
 1411              		.thumb_func
 1412              		.type	usbPutChar, %function
 1413              	usbPutChar:
 1414              	.LFB81:
 576:main.c        **** //* ========================================
 577:main.c        **** void usbPutChar(char c)
 578:main.c        **** {
 1415              		.loc 1 578 0
 1416              		.cfi_startproc
 1417              		@ args = 0, pretend = 0, frame = 8
 1418              		@ frame_needed = 1, uses_anonymous_args = 0
 1419 0000 80B5     		push	{r7, lr}
 1420              		.cfi_def_cfa_offset 8
 1421              		.cfi_offset 7, -8
 1422              		.cfi_offset 14, -4
 1423 0002 82B0     		sub	sp, sp, #8
 1424              		.cfi_def_cfa_offset 16
 1425 0004 00AF     		add	r7, sp, #0
 1426              		.cfi_def_cfa_register 7
 1427 0006 0346     		mov	r3, r0
 1428 0008 FB71     		strb	r3, [r7, #7]
 579:main.c        **** #ifdef USE_USB     
 580:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1429              		.loc 1 580 0
 1430 000a 00BF     		nop
 1431              	.L64:
 1432              		.loc 1 580 0 is_stmt 0 discriminator 1
 1433 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 1434 0010 0346     		mov	r3, r0
 1435 0012 002B     		cmp	r3, #0
 1436 0014 FAD0     		beq	.L64
 581:main.c        ****     USBUART_PutChar(c);
 1437              		.loc 1 581 0 is_stmt 1
 1438 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1439 0018 1846     		mov	r0, r3
 1440 001a FFF7FEFF 		bl	USBUART_PutChar
 582:main.c        **** #endif    
 583:main.c        **** }
 1441              		.loc 1 583 0
 1442 001e 00BF     		nop
 1443 0020 0837     		adds	r7, r7, #8
 1444              		.cfi_def_cfa_offset 8
 1445 0022 BD46     		mov	sp, r7
 1446              		.cfi_def_cfa_register 13
 1447              		@ sp needed
 1448 0024 80BD     		pop	{r7, pc}
 1449              		.cfi_endproc
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 37


 1450              	.LFE81:
 1451              		.size	usbPutChar, .-usbPutChar
 1452 0026 00BF     		.section	.text.handle_usb,"ax",%progbits
 1453              		.align	2
 1454              		.global	handle_usb
 1455              		.thumb
 1456              		.thumb_func
 1457              		.type	handle_usb, %function
 1458              	handle_usb:
 1459              	.LFB82:
 584:main.c        **** //* ========================================
 585:main.c        **** void handle_usb()
 586:main.c        **** {
 1460              		.loc 1 586 0
 1461              		.cfi_startproc
 1462              		@ args = 0, pretend = 0, frame = 8
 1463              		@ frame_needed = 1, uses_anonymous_args = 0
 1464 0000 80B5     		push	{r7, lr}
 1465              		.cfi_def_cfa_offset 8
 1466              		.cfi_offset 7, -8
 1467              		.cfi_offset 14, -4
 1468 0002 82B0     		sub	sp, sp, #8
 1469              		.cfi_def_cfa_offset 16
 1470 0004 00AF     		add	r7, sp, #0
 1471              		.cfi_def_cfa_register 7
 587:main.c        ****     // handles input at terminal, echos it back to the terminal
 588:main.c        ****     // turn echo OFF, key emulation: only CR
 589:main.c        ****     // entered string is made available in 'line' and 'flag_KB_string' is set
 590:main.c        ****     
 591:main.c        ****     static uint8 usbStarted = FALSE;
 592:main.c        ****     static uint16 usbBufCount = 0;
 593:main.c        ****     uint8 c = 0; 
 1472              		.loc 1 593 0
 1473 0006 0023     		movs	r3, #0
 1474 0008 FB71     		strb	r3, [r7, #7]
 594:main.c        ****     
 595:main.c        **** 
 596:main.c        ****     if (!usbStarted)
 1475              		.loc 1 596 0
 1476 000a 2B4B     		ldr	r3, .L75
 1477 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1478 000e 002B     		cmp	r3, #0
 1479 0010 0AD1     		bne	.L66
 597:main.c        ****     {
 598:main.c        ****         if (USBUART_GetConfiguration())
 1480              		.loc 1 598 0
 1481 0012 FFF7FEFF 		bl	USBUART_GetConfiguration
 1482 0016 0346     		mov	r3, r0
 1483 0018 002B     		cmp	r3, #0
 1484 001a 49D0     		beq	.L74
 599:main.c        ****         {
 600:main.c        ****             USBUART_CDC_Init();
 1485              		.loc 1 600 0
 1486 001c FFF7FEFF 		bl	USBUART_CDC_Init
 601:main.c        ****             usbStarted = TRUE;
 1487              		.loc 1 601 0
 1488 0020 254B     		ldr	r3, .L75
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 38


 1489 0022 0122     		movs	r2, #1
 1490 0024 1A70     		strb	r2, [r3]
 602:main.c        ****         }
 603:main.c        ****     }
 604:main.c        ****     else
 605:main.c        ****     {
 606:main.c        ****         if (USBUART_DataIsReady() != 0)
 607:main.c        ****         {  
 608:main.c        ****             c = USBUART_GetChar();
 609:main.c        **** 
 610:main.c        ****             if ((c == 13) || (c == 10))
 611:main.c        ****             {
 612:main.c        **** //                if (usbBufCount > 0)
 613:main.c        ****                 {
 614:main.c        ****                     entry[usbBufCount]= '\0';
 615:main.c        ****                     strcpy(line,entry);
 616:main.c        ****                     usbBufCount = 0;
 617:main.c        ****                     flag_KB_string = 1;
 618:main.c        ****                 }
 619:main.c        ****             }
 620:main.c        ****             else 
 621:main.c        ****             {
 622:main.c        ****                 if (((c == CHAR_BACKSP) || (c == CHAR_DEL) ) && (usbBufCount > 0) )
 623:main.c        ****                     usbBufCount--;
 624:main.c        ****                 else
 625:main.c        ****                 {
 626:main.c        ****                     if (usbBufCount > (BUF_SIZE-2) ) // one less else strtok triggers a crash
 627:main.c        ****                     {
 628:main.c        ****                        USBUART_PutChar('!');        
 629:main.c        ****                     }
 630:main.c        ****                     else
 631:main.c        ****                         entry[usbBufCount++] = c;  
 632:main.c        ****                 }  
 633:main.c        ****             }
 634:main.c        ****         }
 635:main.c        ****     }    
 636:main.c        **** }
 1491              		.loc 1 636 0
 1492 0026 43E0     		b	.L74
 1493              	.L66:
 606:main.c        ****         {  
 1494              		.loc 1 606 0
 1495 0028 FFF7FEFF 		bl	USBUART_DataIsReady
 1496 002c 0346     		mov	r3, r0
 1497 002e 002B     		cmp	r3, #0
 1498 0030 3ED0     		beq	.L74
 608:main.c        **** 
 1499              		.loc 1 608 0
 1500 0032 FFF7FEFF 		bl	USBUART_GetChar
 1501 0036 0346     		mov	r3, r0
 1502 0038 FB71     		strb	r3, [r7, #7]
 610:main.c        ****             {
 1503              		.loc 1 610 0
 1504 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1505 003c 0D2B     		cmp	r3, #13
 1506 003e 02D0     		beq	.L69
 610:main.c        ****             {
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 39


 1507              		.loc 1 610 0 is_stmt 0 discriminator 1
 1508 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1509 0042 0A2B     		cmp	r3, #10
 1510 0044 10D1     		bne	.L70
 1511              	.L69:
 614:main.c        ****                     strcpy(line,entry);
 1512              		.loc 1 614 0 is_stmt 1
 1513 0046 1D4B     		ldr	r3, .L75+4
 1514 0048 1B88     		ldrh	r3, [r3]
 1515 004a 1A46     		mov	r2, r3
 1516 004c 1C4B     		ldr	r3, .L75+8
 1517 004e 0021     		movs	r1, #0
 1518 0050 9954     		strb	r1, [r3, r2]
 615:main.c        ****                     usbBufCount = 0;
 1519              		.loc 1 615 0
 1520 0052 1B49     		ldr	r1, .L75+8
 1521 0054 1B48     		ldr	r0, .L75+12
 1522 0056 FFF7FEFF 		bl	strcpy
 616:main.c        ****                     flag_KB_string = 1;
 1523              		.loc 1 616 0
 1524 005a 184B     		ldr	r3, .L75+4
 1525 005c 0022     		movs	r2, #0
 1526 005e 1A80     		strh	r2, [r3]	@ movhi
 617:main.c        ****                 }
 1527              		.loc 1 617 0
 1528 0060 194B     		ldr	r3, .L75+16
 1529 0062 0122     		movs	r2, #1
 1530 0064 1A70     		strb	r2, [r3]
 1531 0066 23E0     		b	.L68
 1532              	.L70:
 622:main.c        ****                     usbBufCount--;
 1533              		.loc 1 622 0
 1534 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1535 006a 082B     		cmp	r3, #8
 1536 006c 02D0     		beq	.L71
 622:main.c        ****                     usbBufCount--;
 1537              		.loc 1 622 0 is_stmt 0 discriminator 2
 1538 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1539 0070 7F2B     		cmp	r3, #127
 1540 0072 0AD1     		bne	.L72
 1541              	.L71:
 622:main.c        ****                     usbBufCount--;
 1542              		.loc 1 622 0 discriminator 3
 1543 0074 114B     		ldr	r3, .L75+4
 1544 0076 1B88     		ldrh	r3, [r3]
 1545 0078 002B     		cmp	r3, #0
 1546 007a 06D0     		beq	.L72
 623:main.c        ****                 else
 1547              		.loc 1 623 0 is_stmt 1
 1548 007c 0F4B     		ldr	r3, .L75+4
 1549 007e 1B88     		ldrh	r3, [r3]
 1550 0080 013B     		subs	r3, r3, #1
 1551 0082 9AB2     		uxth	r2, r3
 1552 0084 0D4B     		ldr	r3, .L75+4
 1553 0086 1A80     		strh	r2, [r3]	@ movhi
 1554 0088 12E0     		b	.L68
 1555              	.L72:
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 40


 626:main.c        ****                     {
 1556              		.loc 1 626 0
 1557 008a 0C4B     		ldr	r3, .L75+4
 1558 008c 1B88     		ldrh	r3, [r3]
 1559 008e 3E2B     		cmp	r3, #62
 1560 0090 03D9     		bls	.L73
 628:main.c        ****                     }
 1561              		.loc 1 628 0
 1562 0092 2120     		movs	r0, #33
 1563 0094 FFF7FEFF 		bl	USBUART_PutChar
 1564              		.loc 1 636 0
 1565 0098 0AE0     		b	.L74
 1566              	.L73:
 631:main.c        ****                 }  
 1567              		.loc 1 631 0
 1568 009a 084B     		ldr	r3, .L75+4
 1569 009c 1B88     		ldrh	r3, [r3]
 1570 009e 5A1C     		adds	r2, r3, #1
 1571 00a0 91B2     		uxth	r1, r2
 1572 00a2 064A     		ldr	r2, .L75+4
 1573 00a4 1180     		strh	r1, [r2]	@ movhi
 1574 00a6 1946     		mov	r1, r3
 1575 00a8 054A     		ldr	r2, .L75+8
 1576 00aa FB79     		ldrb	r3, [r7, #7]
 1577 00ac 5354     		strb	r3, [r2, r1]
 1578              		.loc 1 636 0
 1579 00ae FFE7     		b	.L74
 1580              	.L68:
 1581              	.L74:
 1582 00b0 00BF     		nop
 1583 00b2 0837     		adds	r7, r7, #8
 1584              		.cfi_def_cfa_offset 8
 1585 00b4 BD46     		mov	sp, r7
 1586              		.cfi_def_cfa_register 13
 1587              		@ sp needed
 1588 00b6 80BD     		pop	{r7, pc}
 1589              	.L76:
 1590              		.align	2
 1591              	.L75:
 1592 00b8 45000000 		.word	usbStarted.8829
 1593 00bc 46000000 		.word	usbBufCount.8830
 1594 00c0 00000000 		.word	entry
 1595 00c4 00000000 		.word	line
 1596 00c8 00000000 		.word	flag_KB_string
 1597              		.cfi_endproc
 1598              	.LFE82:
 1599              		.size	handle_usb, .-handle_usb
 1600              		.bss
 1601              	usbStarted.8829:
 1602 0045 00       		.space	1
 1603              		.align	1
 1604              	usbBufCount.8830:
 1605 0046 0000     		.space	2
 1606              		.text
 1607              	.Letext0:
 1608              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1609              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 41


 1610              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1611              		.file 5 "vars.h"
 1612              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1613              		.section	.debug_info,"",%progbits
 1614              	.Ldebug_info0:
 1615 0000 F9070000 		.4byte	0x7f9
 1616 0004 0400     		.2byte	0x4
 1617 0006 00000000 		.4byte	.Ldebug_abbrev0
 1618 000a 04       		.byte	0x4
 1619 000b 01       		.uleb128 0x1
 1620 000c CC000000 		.4byte	.LASF110
 1621 0010 0C       		.byte	0xc
 1622 0011 11050000 		.4byte	.LASF111
 1623 0015 CD010000 		.4byte	.LASF112
 1624 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1625 001d 00000000 		.4byte	0
 1626 0021 00000000 		.4byte	.Ldebug_line0
 1627 0025 02       		.uleb128 0x2
 1628 0026 01       		.byte	0x1
 1629 0027 06       		.byte	0x6
 1630 0028 E3030000 		.4byte	.LASF0
 1631 002c 02       		.uleb128 0x2
 1632 002d 01       		.byte	0x1
 1633 002e 08       		.byte	0x8
 1634 002f A1030000 		.4byte	.LASF1
 1635 0033 02       		.uleb128 0x2
 1636 0034 02       		.byte	0x2
 1637 0035 05       		.byte	0x5
 1638 0036 98000000 		.4byte	.LASF2
 1639 003a 02       		.uleb128 0x2
 1640 003b 02       		.byte	0x2
 1641 003c 07       		.byte	0x7
 1642 003d FE040000 		.4byte	.LASF3
 1643 0041 03       		.uleb128 0x3
 1644 0042 5A050000 		.4byte	.LASF12
 1645 0046 02       		.byte	0x2
 1646 0047 3F       		.byte	0x3f
 1647 0048 4C000000 		.4byte	0x4c
 1648 004c 02       		.uleb128 0x2
 1649 004d 04       		.byte	0x4
 1650 004e 05       		.byte	0x5
 1651 004f F0020000 		.4byte	.LASF4
 1652 0053 02       		.uleb128 0x2
 1653 0054 04       		.byte	0x4
 1654 0055 07       		.byte	0x7
 1655 0056 18050000 		.4byte	.LASF5
 1656 005a 02       		.uleb128 0x2
 1657 005b 08       		.byte	0x8
 1658 005c 05       		.byte	0x5
 1659 005d A4020000 		.4byte	.LASF6
 1660 0061 02       		.uleb128 0x2
 1661 0062 08       		.byte	0x8
 1662 0063 07       		.byte	0x7
 1663 0064 EF030000 		.4byte	.LASF7
 1664 0068 04       		.uleb128 0x4
 1665 0069 04       		.byte	0x4
 1666 006a 05       		.byte	0x5
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 42


 1667 006b 696E7400 		.ascii	"int\000"
 1668 006f 02       		.uleb128 0x2
 1669 0070 04       		.byte	0x4
 1670 0071 07       		.byte	0x7
 1671 0072 21040000 		.4byte	.LASF8
 1672 0076 02       		.uleb128 0x2
 1673 0077 08       		.byte	0x8
 1674 0078 04       		.byte	0x4
 1675 0079 8E030000 		.4byte	.LASF9
 1676 007d 02       		.uleb128 0x2
 1677 007e 04       		.byte	0x4
 1678 007f 07       		.byte	0x7
 1679 0080 AF000000 		.4byte	.LASF10
 1680 0084 05       		.uleb128 0x5
 1681 0085 04       		.byte	0x4
 1682 0086 8A000000 		.4byte	0x8a
 1683 008a 02       		.uleb128 0x2
 1684 008b 01       		.byte	0x1
 1685 008c 08       		.byte	0x8
 1686 008d 76040000 		.4byte	.LASF11
 1687 0091 03       		.uleb128 0x3
 1688 0092 86040000 		.4byte	.LASF13
 1689 0096 03       		.byte	0x3
 1690 0097 2C       		.byte	0x2c
 1691 0098 41000000 		.4byte	0x41
 1692 009c 02       		.uleb128 0x2
 1693 009d 08       		.byte	0x8
 1694 009e 04       		.byte	0x4
 1695 009f 36000000 		.4byte	.LASF14
 1696 00a3 02       		.uleb128 0x2
 1697 00a4 04       		.byte	0x4
 1698 00a5 04       		.byte	0x4
 1699 00a6 84020000 		.4byte	.LASF15
 1700 00aa 06       		.uleb128 0x6
 1701 00ab B7040000 		.4byte	.LASF16
 1702 00af 04       		.byte	0x4
 1703 00b0 E401     		.2byte	0x1e4
 1704 00b2 2C000000 		.4byte	0x2c
 1705 00b6 06       		.uleb128 0x6
 1706 00b7 A3010000 		.4byte	.LASF17
 1707 00bb 04       		.byte	0x4
 1708 00bc E501     		.2byte	0x1e5
 1709 00be 3A000000 		.4byte	0x3a
 1710 00c2 06       		.uleb128 0x6
 1711 00c3 BF020000 		.4byte	.LASF18
 1712 00c7 04       		.byte	0x4
 1713 00c8 E701     		.2byte	0x1e7
 1714 00ca 25000000 		.4byte	0x25
 1715 00ce 06       		.uleb128 0x6
 1716 00cf BA010000 		.4byte	.LASF19
 1717 00d3 04       		.byte	0x4
 1718 00d4 E801     		.2byte	0x1e8
 1719 00d6 33000000 		.4byte	0x33
 1720 00da 07       		.uleb128 0x7
 1721 00db B0010000 		.4byte	.LASF113
 1722 00df 20       		.byte	0x20
 1723 00e0 05       		.byte	0x5
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 43


 1724 00e1 29       		.byte	0x29
 1725 00e2 B3010000 		.4byte	0x1b3
 1726 00e6 08       		.uleb128 0x8
 1727 00e7 29060000 		.4byte	.LASF20
 1728 00eb 05       		.byte	0x5
 1729 00ec 2A       		.byte	0x2a
 1730 00ed C2000000 		.4byte	0xc2
 1731 00f1 00       		.byte	0
 1732 00f2 08       		.uleb128 0x8
 1733 00f3 AA010000 		.4byte	.LASF21
 1734 00f7 05       		.byte	0x5
 1735 00f8 2B       		.byte	0x2b
 1736 00f9 AA000000 		.4byte	0xaa
 1737 00fd 01       		.byte	0x1
 1738 00fe 08       		.uleb128 0x8
 1739 00ff 7B040000 		.4byte	.LASF22
 1740 0103 05       		.byte	0x5
 1741 0104 2C       		.byte	0x2c
 1742 0105 CE000000 		.4byte	0xce
 1743 0109 02       		.byte	0x2
 1744 010a 08       		.uleb128 0x8
 1745 010b DB050000 		.4byte	.LASF23
 1746 010f 05       		.byte	0x5
 1747 0110 2D       		.byte	0x2d
 1748 0111 CE000000 		.4byte	0xce
 1749 0115 04       		.byte	0x4
 1750 0116 08       		.uleb128 0x8
 1751 0117 2E060000 		.4byte	.LASF24
 1752 011b 05       		.byte	0x5
 1753 011c 2E       		.byte	0x2e
 1754 011d CE000000 		.4byte	0xce
 1755 0121 06       		.byte	0x6
 1756 0122 08       		.uleb128 0x8
 1757 0123 E8020000 		.4byte	.LASF25
 1758 0127 05       		.byte	0x5
 1759 0128 2F       		.byte	0x2f
 1760 0129 CE000000 		.4byte	0xce
 1761 012d 08       		.byte	0x8
 1762 012e 08       		.uleb128 0x8
 1763 012f 8D050000 		.4byte	.LASF26
 1764 0133 05       		.byte	0x5
 1765 0134 30       		.byte	0x30
 1766 0135 CE000000 		.4byte	0xce
 1767 0139 0A       		.byte	0xa
 1768 013a 08       		.uleb128 0x8
 1769 013b C2030000 		.4byte	.LASF27
 1770 013f 05       		.byte	0x5
 1771 0140 31       		.byte	0x31
 1772 0141 CE000000 		.4byte	0xce
 1773 0145 0C       		.byte	0xc
 1774 0146 08       		.uleb128 0x8
 1775 0147 DB020000 		.4byte	.LASF28
 1776 014b 05       		.byte	0x5
 1777 014c 32       		.byte	0x32
 1778 014d CE000000 		.4byte	0xce
 1779 0151 0E       		.byte	0xe
 1780 0152 08       		.uleb128 0x8
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 44


 1781 0153 52040000 		.4byte	.LASF29
 1782 0157 05       		.byte	0x5
 1783 0158 33       		.byte	0x33
 1784 0159 CE000000 		.4byte	0xce
 1785 015d 10       		.byte	0x10
 1786 015e 08       		.uleb128 0x8
 1787 015f 8E040000 		.4byte	.LASF30
 1788 0163 05       		.byte	0x5
 1789 0164 34       		.byte	0x34
 1790 0165 CE000000 		.4byte	0xce
 1791 0169 12       		.byte	0x12
 1792 016a 08       		.uleb128 0x8
 1793 016b CB030000 		.4byte	.LASF31
 1794 016f 05       		.byte	0x5
 1795 0170 35       		.byte	0x35
 1796 0171 CE000000 		.4byte	0xce
 1797 0175 14       		.byte	0x14
 1798 0176 08       		.uleb128 0x8
 1799 0177 06060000 		.4byte	.LASF32
 1800 017b 05       		.byte	0x5
 1801 017c 36       		.byte	0x36
 1802 017d CE000000 		.4byte	0xce
 1803 0181 16       		.byte	0x16
 1804 0182 08       		.uleb128 0x8
 1805 0183 90000000 		.4byte	.LASF33
 1806 0187 05       		.byte	0x5
 1807 0188 37       		.byte	0x37
 1808 0189 CE000000 		.4byte	0xce
 1809 018d 18       		.byte	0x18
 1810 018e 08       		.uleb128 0x8
 1811 018f D3020000 		.4byte	.LASF34
 1812 0193 05       		.byte	0x5
 1813 0194 38       		.byte	0x38
 1814 0195 CE000000 		.4byte	0xce
 1815 0199 1A       		.byte	0x1a
 1816 019a 08       		.uleb128 0x8
 1817 019b 49040000 		.4byte	.LASF35
 1818 019f 05       		.byte	0x5
 1819 01a0 39       		.byte	0x39
 1820 01a1 CE000000 		.4byte	0xce
 1821 01a5 1C       		.byte	0x1c
 1822 01a6 08       		.uleb128 0x8
 1823 01a7 96040000 		.4byte	.LASF36
 1824 01ab 05       		.byte	0x5
 1825 01ac 3A       		.byte	0x3a
 1826 01ad CE000000 		.4byte	0xce
 1827 01b1 1E       		.byte	0x1e
 1828 01b2 00       		.byte	0
 1829 01b3 09       		.uleb128 0x9
 1830 01b4 72050000 		.4byte	.LASF37
 1831 01b8 01       		.byte	0x1
 1832 01b9 34       		.byte	0x34
 1833 01ba 00000000 		.4byte	.LFB64
 1834 01be 14000000 		.4byte	.LFE64-.LFB64
 1835 01c2 01       		.uleb128 0x1
 1836 01c3 9C       		.byte	0x9c
 1837 01c4 0A       		.uleb128 0xa
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 45


 1838 01c5 A9040000 		.4byte	.LASF40
 1839 01c9 01       		.byte	0x1
 1840 01ca 3A       		.byte	0x3a
 1841 01cb 00000000 		.4byte	.LFB65
 1842 01cf 2E000000 		.4byte	.LFE65-.LFB65
 1843 01d3 01       		.uleb128 0x1
 1844 01d4 9C       		.byte	0x9c
 1845 01d5 E6010000 		.4byte	0x1e6
 1846 01d9 0B       		.uleb128 0xb
 1847 01da 7800     		.ascii	"x\000"
 1848 01dc 01       		.byte	0x1
 1849 01dd 3A       		.byte	0x3a
 1850 01de 68000000 		.4byte	0x68
 1851 01e2 02       		.uleb128 0x2
 1852 01e3 91       		.byte	0x91
 1853 01e4 74       		.sleb128 -12
 1854 01e5 00       		.byte	0
 1855 01e6 09       		.uleb128 0x9
 1856 01e7 74000000 		.4byte	.LASF38
 1857 01eb 01       		.byte	0x1
 1858 01ec 42       		.byte	0x42
 1859 01ed 00000000 		.4byte	.LFB66
 1860 01f1 14000000 		.4byte	.LFE66-.LFB66
 1861 01f5 01       		.uleb128 0x1
 1862 01f6 9C       		.byte	0x9c
 1863 01f7 09       		.uleb128 0x9
 1864 01f8 00000000 		.4byte	.LASF39
 1865 01fc 01       		.byte	0x1
 1866 01fd 48       		.byte	0x48
 1867 01fe 00000000 		.4byte	.LFB67
 1868 0202 14000000 		.4byte	.LFE67-.LFB67
 1869 0206 01       		.uleb128 0x1
 1870 0207 9C       		.byte	0x9c
 1871 0208 0A       		.uleb128 0xa
 1872 0209 23030000 		.4byte	.LASF41
 1873 020d 01       		.byte	0x1
 1874 020e 4D       		.byte	0x4d
 1875 020f 00000000 		.4byte	.LFB68
 1876 0213 22000000 		.4byte	.LFE68-.LFB68
 1877 0217 01       		.uleb128 0x1
 1878 0218 9C       		.byte	0x9c
 1879 0219 2A020000 		.4byte	0x22a
 1880 021d 0B       		.uleb128 0xb
 1881 021e 7800     		.ascii	"x\000"
 1882 0220 01       		.byte	0x1
 1883 0221 4D       		.byte	0x4d
 1884 0222 AA000000 		.4byte	0xaa
 1885 0226 02       		.uleb128 0x2
 1886 0227 91       		.byte	0x91
 1887 0228 77       		.sleb128 -9
 1888 0229 00       		.byte	0
 1889 022a 0A       		.uleb128 0xa
 1890 022b 64050000 		.4byte	.LASF42
 1891 022f 01       		.byte	0x1
 1892 0230 54       		.byte	0x54
 1893 0231 00000000 		.4byte	.LFB69
 1894 0235 20000000 		.4byte	.LFE69-.LFB69
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 46


 1895 0239 01       		.uleb128 0x1
 1896 023a 9C       		.byte	0x9c
 1897 023b 4C020000 		.4byte	0x24c
 1898 023f 0B       		.uleb128 0xb
 1899 0240 7800     		.ascii	"x\000"
 1900 0242 01       		.byte	0x1
 1901 0243 54       		.byte	0x54
 1902 0244 AA000000 		.4byte	0xaa
 1903 0248 02       		.uleb128 0x2
 1904 0249 91       		.byte	0x91
 1905 024a 77       		.sleb128 -9
 1906 024b 00       		.byte	0
 1907 024c 0A       		.uleb128 0xa
 1908 024d 13060000 		.4byte	.LASF43
 1909 0251 01       		.byte	0x1
 1910 0252 5F       		.byte	0x5f
 1911 0253 00000000 		.4byte	.LFB70
 1912 0257 20000000 		.4byte	.LFE70-.LFB70
 1913 025b 01       		.uleb128 0x1
 1914 025c 9C       		.byte	0x9c
 1915 025d 6E020000 		.4byte	0x26e
 1916 0261 0B       		.uleb128 0xb
 1917 0262 7800     		.ascii	"x\000"
 1918 0264 01       		.byte	0x1
 1919 0265 5F       		.byte	0x5f
 1920 0266 68000000 		.4byte	0x68
 1921 026a 02       		.uleb128 0x2
 1922 026b 91       		.byte	0x91
 1923 026c 74       		.sleb128 -12
 1924 026d 00       		.byte	0
 1925 026e 0A       		.uleb128 0xa
 1926 026f 15040000 		.4byte	.LASF44
 1927 0273 01       		.byte	0x1
 1928 0274 68       		.byte	0x68
 1929 0275 00000000 		.4byte	.LFB71
 1930 0279 2A000000 		.4byte	.LFE71-.LFB71
 1931 027d 01       		.uleb128 0x1
 1932 027e 9C       		.byte	0x9c
 1933 027f 90020000 		.4byte	0x290
 1934 0283 0B       		.uleb128 0xb
 1935 0284 7800     		.ascii	"x\000"
 1936 0286 01       		.byte	0x1
 1937 0287 68       		.byte	0x68
 1938 0288 AA000000 		.4byte	0xaa
 1939 028c 02       		.uleb128 0x2
 1940 028d 91       		.byte	0x91
 1941 028e 77       		.sleb128 -9
 1942 028f 00       		.byte	0
 1943 0290 0A       		.uleb128 0xa
 1944 0291 5D000000 		.4byte	.LASF45
 1945 0295 01       		.byte	0x1
 1946 0296 7B       		.byte	0x7b
 1947 0297 00000000 		.4byte	.LFB72
 1948 029b E0000000 		.4byte	.LFE72-.LFB72
 1949 029f 01       		.uleb128 0x1
 1950 02a0 9C       		.byte	0x9c
 1951 02a1 04030000 		.4byte	0x304
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 47


 1952 02a5 0C       		.uleb128 0xc
 1953 02a6 0E000000 		.4byte	.LBB2
 1954 02aa B2000000 		.4byte	.LBE2-.LBB2
 1955 02ae 0D       		.uleb128 0xd
 1956 02af 78010000 		.4byte	.LASF46
 1957 02b3 01       		.byte	0x1
 1958 02b4 88       		.byte	0x88
 1959 02b5 CE000000 		.4byte	0xce
 1960 02b9 02       		.uleb128 0x2
 1961 02ba 91       		.byte	0x91
 1962 02bb 76       		.sleb128 -10
 1963 02bc 0D       		.uleb128 0xd
 1964 02bd 80010000 		.4byte	.LASF47
 1965 02c1 01       		.byte	0x1
 1966 02c2 89       		.byte	0x89
 1967 02c3 CE000000 		.4byte	0xce
 1968 02c7 02       		.uleb128 0x2
 1969 02c8 91       		.byte	0x91
 1970 02c9 74       		.sleb128 -12
 1971 02ca 0D       		.uleb128 0xd
 1972 02cb 88010000 		.4byte	.LASF48
 1973 02cf 01       		.byte	0x1
 1974 02d0 8A       		.byte	0x8a
 1975 02d1 CE000000 		.4byte	0xce
 1976 02d5 02       		.uleb128 0x2
 1977 02d6 91       		.byte	0x91
 1978 02d7 72       		.sleb128 -14
 1979 02d8 0D       		.uleb128 0xd
 1980 02d9 68010000 		.4byte	.LASF49
 1981 02dd 01       		.byte	0x1
 1982 02de 8C       		.byte	0x8c
 1983 02df CE000000 		.4byte	0xce
 1984 02e3 02       		.uleb128 0x2
 1985 02e4 91       		.byte	0x91
 1986 02e5 70       		.sleb128 -16
 1987 02e6 0D       		.uleb128 0xd
 1988 02e7 70010000 		.4byte	.LASF50
 1989 02eb 01       		.byte	0x1
 1990 02ec 8D       		.byte	0x8d
 1991 02ed CE000000 		.4byte	0xce
 1992 02f1 02       		.uleb128 0x2
 1993 02f2 91       		.byte	0x91
 1994 02f3 6E       		.sleb128 -18
 1995 02f4 0D       		.uleb128 0xd
 1996 02f5 90010000 		.4byte	.LASF51
 1997 02f9 01       		.byte	0x1
 1998 02fa 8E       		.byte	0x8e
 1999 02fb CE000000 		.4byte	0xce
 2000 02ff 02       		.uleb128 0x2
 2001 0300 91       		.byte	0x91
 2002 0301 6C       		.sleb128 -20
 2003 0302 00       		.byte	0
 2004 0303 00       		.byte	0
 2005 0304 0E       		.uleb128 0xe
 2006 0305 8A020000 		.4byte	.LASF59
 2007 0309 01       		.byte	0x1
 2008 030a BA       		.byte	0xba
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 48


 2009 030b 00000000 		.4byte	.LFB73
 2010 030f 0C000000 		.4byte	.LFE73-.LFB73
 2011 0313 01       		.uleb128 0x1
 2012 0314 9C       		.byte	0x9c
 2013 0315 0F       		.uleb128 0xf
 2014 0316 82050000 		.4byte	.LASF78
 2015 031a 01       		.byte	0x1
 2016 031b CD       		.byte	0xcd
 2017 031c 00000000 		.4byte	.LFB74
 2018 0320 C0000000 		.4byte	.LFE74-.LFB74
 2019 0324 01       		.uleb128 0x1
 2020 0325 9C       		.byte	0x9c
 2021 0326 83030000 		.4byte	0x383
 2022 032a 0D       		.uleb128 0xd
 2023 032b F9020000 		.4byte	.LASF52
 2024 032f 01       		.byte	0x1
 2025 0330 CE       		.byte	0xce
 2026 0331 CE000000 		.4byte	0xce
 2027 0335 02       		.uleb128 0x2
 2028 0336 91       		.byte	0x91
 2029 0337 76       		.sleb128 -10
 2030 0338 0D       		.uleb128 0xd
 2031 0339 0E030000 		.4byte	.LASF53
 2032 033d 01       		.byte	0x1
 2033 033e CF       		.byte	0xcf
 2034 033f CE000000 		.4byte	0xce
 2035 0343 02       		.uleb128 0x2
 2036 0344 91       		.byte	0x91
 2037 0345 74       		.sleb128 -12
 2038 0346 0D       		.uleb128 0xd
 2039 0347 79030000 		.4byte	.LASF54
 2040 034b 01       		.byte	0x1
 2041 034c D0       		.byte	0xd0
 2042 034d CE000000 		.4byte	0xce
 2043 0351 02       		.uleb128 0x2
 2044 0352 91       		.byte	0x91
 2045 0353 72       		.sleb128 -14
 2046 0354 0D       		.uleb128 0xd
 2047 0355 6A030000 		.4byte	.LASF55
 2048 0359 01       		.byte	0x1
 2049 035a D1       		.byte	0xd1
 2050 035b CE000000 		.4byte	0xce
 2051 035f 02       		.uleb128 0x2
 2052 0360 91       		.byte	0x91
 2053 0361 70       		.sleb128 -16
 2054 0362 0D       		.uleb128 0xd
 2055 0363 31030000 		.4byte	.LASF56
 2056 0367 01       		.byte	0x1
 2057 0368 D2       		.byte	0xd2
 2058 0369 83030000 		.4byte	0x383
 2059 036d 04       		.uleb128 0x4
 2060 036e 91       		.byte	0x91
 2061 036f E0B17F   		.sleb128 -10016
 2062 0372 0D       		.uleb128 0xd
 2063 0373 F9050000 		.4byte	.LASF57
 2064 0377 01       		.byte	0x1
 2065 0378 D4       		.byte	0xd4
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 49


 2066 0379 83030000 		.4byte	0x383
 2067 037d 04       		.uleb128 0x4
 2068 037e 91       		.byte	0x91
 2069 037f D0E37E   		.sleb128 -20016
 2070 0382 00       		.byte	0
 2071 0383 10       		.uleb128 0x10
 2072 0384 8A000000 		.4byte	0x8a
 2073 0388 94030000 		.4byte	0x394
 2074 038c 11       		.uleb128 0x11
 2075 038d 7D000000 		.4byte	0x7d
 2076 0391 0F27     		.2byte	0x270f
 2077 0393 00       		.byte	0
 2078 0394 0A       		.uleb128 0xa
 2079 0395 5F010000 		.4byte	.LASF58
 2080 0399 01       		.byte	0x1
 2081 039a DC       		.byte	0xdc
 2082 039b 00000000 		.4byte	.LFB75
 2083 039f 1A000000 		.4byte	.LFE75-.LFB75
 2084 03a3 01       		.uleb128 0x1
 2085 03a4 9C       		.byte	0x9c
 2086 03a5 B6030000 		.4byte	0x3b6
 2087 03a9 0B       		.uleb128 0xb
 2088 03aa 7800     		.ascii	"x\000"
 2089 03ac 01       		.byte	0x1
 2090 03ad DC       		.byte	0xdc
 2091 03ae 68000000 		.4byte	0x68
 2092 03b2 02       		.uleb128 0x2
 2093 03b3 91       		.byte	0x91
 2094 03b4 74       		.sleb128 -12
 2095 03b5 00       		.byte	0
 2096 03b6 12       		.uleb128 0x12
 2097 03b7 0A000000 		.4byte	.LASF60
 2098 03bb 01       		.byte	0x1
 2099 03bc F4       		.byte	0xf4
 2100 03bd 00000000 		.4byte	.LFB76
 2101 03c1 0C000000 		.4byte	.LFE76-.LFB76
 2102 03c5 01       		.uleb128 0x1
 2103 03c6 9C       		.byte	0x9c
 2104 03c7 13       		.uleb128 0x13
 2105 03c8 5A010000 		.4byte	.LASF61
 2106 03cc 01       		.byte	0x1
 2107 03cd 0101     		.2byte	0x101
 2108 03cf 68000000 		.4byte	0x68
 2109 03d3 00000000 		.4byte	.LFB77
 2110 03d7 B0020000 		.4byte	.LFE77-.LFB77
 2111 03db 01       		.uleb128 0x1
 2112 03dc 9C       		.byte	0x9c
 2113 03dd 83040000 		.4byte	0x483
 2114 03e1 14       		.uleb128 0x14
 2115 03e2 A0050000 		.4byte	.LASF62
 2116 03e6 01       		.byte	0x1
 2117 03e7 2401     		.2byte	0x124
 2118 03e9 68000000 		.4byte	0x68
 2119 03ed 02       		.uleb128 0x2
 2120 03ee 91       		.byte	0x91
 2121 03ef 68       		.sleb128 -24
 2122 03f0 14       		.uleb128 0x14
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 50


 2123 03f1 35050000 		.4byte	.LASF63
 2124 03f5 01       		.byte	0x1
 2125 03f6 2C01     		.2byte	0x12c
 2126 03f8 68000000 		.4byte	0x68
 2127 03fc 02       		.uleb128 0x2
 2128 03fd 91       		.byte	0x91
 2129 03fe 64       		.sleb128 -28
 2130 03ff 14       		.uleb128 0x14
 2131 0400 22000000 		.4byte	.LASF64
 2132 0404 01       		.byte	0x1
 2133 0405 5F01     		.2byte	0x15f
 2134 0407 68000000 		.4byte	0x68
 2135 040b 02       		.uleb128 0x2
 2136 040c 91       		.byte	0x91
 2137 040d 74       		.sleb128 -12
 2138 040e 14       		.uleb128 0x14
 2139 040f A3040000 		.4byte	.LASF65
 2140 0413 01       		.byte	0x1
 2141 0414 6901     		.2byte	0x169
 2142 0416 83040000 		.4byte	0x483
 2143 041a 03       		.uleb128 0x3
 2144 041b 91       		.byte	0x91
 2145 041c B460     		.sleb128 -4044
 2146 041e 14       		.uleb128 0x14
 2147 041f C0010000 		.4byte	.LASF66
 2148 0423 01       		.byte	0x1
 2149 0424 6A01     		.2byte	0x16a
 2150 0426 68000000 		.4byte	0x68
 2151 042a 02       		.uleb128 0x2
 2152 042b 91       		.byte	0x91
 2153 042c 70       		.sleb128 -16
 2154 042d 14       		.uleb128 0x14
 2155 042e B8000000 		.4byte	.LASF67
 2156 0432 01       		.byte	0x1
 2157 0433 6D01     		.2byte	0x16d
 2158 0435 68000000 		.4byte	0x68
 2159 0439 02       		.uleb128 0x2
 2160 043a 91       		.byte	0x91
 2161 043b 60       		.sleb128 -32
 2162 043c 14       		.uleb128 0x14
 2163 043d 06040000 		.4byte	.LASF68
 2164 0441 01       		.byte	0x1
 2165 0442 6E01     		.2byte	0x16e
 2166 0444 68000000 		.4byte	0x68
 2167 0448 02       		.uleb128 0x2
 2168 0449 91       		.byte	0x91
 2169 044a 6C       		.sleb128 -20
 2170 044b 0C       		.uleb128 0xc
 2171 044c D0000000 		.4byte	.LBB3
 2172 0450 C0010000 		.4byte	.LBE3-.LBB3
 2173 0454 14       		.uleb128 0x14
 2174 0455 5A040000 		.4byte	.LASF69
 2175 0459 01       		.byte	0x1
 2176 045a 7B01     		.2byte	0x17b
 2177 045c 68000000 		.4byte	0x68
 2178 0460 02       		.uleb128 0x2
 2179 0461 91       		.byte	0x91
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 51


 2180 0462 5C       		.sleb128 -36
 2181 0463 14       		.uleb128 0x14
 2182 0464 BD040000 		.4byte	.LASF70
 2183 0468 01       		.byte	0x1
 2184 0469 7C01     		.2byte	0x17c
 2185 046b 68000000 		.4byte	0x68
 2186 046f 02       		.uleb128 0x2
 2187 0470 91       		.byte	0x91
 2188 0471 58       		.sleb128 -40
 2189 0472 14       		.uleb128 0x14
 2190 0473 D3040000 		.4byte	.LASF71
 2191 0477 01       		.byte	0x1
 2192 0478 7D01     		.2byte	0x17d
 2193 047a 68000000 		.4byte	0x68
 2194 047e 02       		.uleb128 0x2
 2195 047f 91       		.byte	0x91
 2196 0480 54       		.sleb128 -44
 2197 0481 00       		.byte	0
 2198 0482 00       		.byte	0
 2199 0483 10       		.uleb128 0x10
 2200 0484 68000000 		.4byte	0x68
 2201 0488 94040000 		.4byte	0x494
 2202 048c 11       		.uleb128 0x11
 2203 048d 7D000000 		.4byte	0x7d
 2204 0491 E703     		.2byte	0x3e7
 2205 0493 00       		.byte	0
 2206 0494 15       		.uleb128 0x15
 2207 0495 64040000 		.4byte	.LASF72
 2208 0499 01       		.byte	0x1
 2209 049a 1902     		.2byte	0x219
 2210 049c 68000000 		.4byte	0x68
 2211 04a0 00000000 		.4byte	.LFB78
 2212 04a4 50000000 		.4byte	.LFE78-.LFB78
 2213 04a8 01       		.uleb128 0x1
 2214 04a9 9C       		.byte	0x9c
 2215 04aa E8040000 		.4byte	0x4e8
 2216 04ae 14       		.uleb128 0x14
 2217 04af 9A030000 		.4byte	.LASF73
 2218 04b3 01       		.byte	0x1
 2219 04b4 1B02     		.2byte	0x21b
 2220 04b6 68000000 		.4byte	0x68
 2221 04ba 02       		.uleb128 0x2
 2222 04bb 91       		.byte	0x91
 2223 04bc 74       		.sleb128 -12
 2224 04bd 16       		.uleb128 0x16
 2225 04be 513100   		.ascii	"Q1\000"
 2226 04c1 01       		.byte	0x1
 2227 04c2 1C02     		.2byte	0x21c
 2228 04c4 68000000 		.4byte	0x68
 2229 04c8 02       		.uleb128 0x2
 2230 04c9 91       		.byte	0x91
 2231 04ca 70       		.sleb128 -16
 2232 04cb 16       		.uleb128 0x16
 2233 04cc 513200   		.ascii	"Q2\000"
 2234 04cf 01       		.byte	0x1
 2235 04d0 1D02     		.2byte	0x21d
 2236 04d2 68000000 		.4byte	0x68
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 52


 2237 04d6 02       		.uleb128 0x2
 2238 04d7 91       		.byte	0x91
 2239 04d8 6C       		.sleb128 -20
 2240 04d9 16       		.uleb128 0x16
 2241 04da 513600   		.ascii	"Q6\000"
 2242 04dd 01       		.byte	0x1
 2243 04de 1E02     		.2byte	0x21e
 2244 04e0 68000000 		.4byte	0x68
 2245 04e4 02       		.uleb128 0x2
 2246 04e5 91       		.byte	0x91
 2247 04e6 68       		.sleb128 -24
 2248 04e7 00       		.byte	0
 2249 04e8 15       		.uleb128 0x15
 2250 04e9 EA040000 		.4byte	.LASF74
 2251 04ed 01       		.byte	0x1
 2252 04ee 2702     		.2byte	0x227
 2253 04f0 68000000 		.4byte	0x68
 2254 04f4 00000000 		.4byte	.LFB79
 2255 04f8 50000000 		.4byte	.LFE79-.LFB79
 2256 04fc 01       		.uleb128 0x1
 2257 04fd 9C       		.byte	0x9c
 2258 04fe 3C050000 		.4byte	0x53c
 2259 0502 14       		.uleb128 0x14
 2260 0503 F3050000 		.4byte	.LASF75
 2261 0507 01       		.byte	0x1
 2262 0508 2902     		.2byte	0x229
 2263 050a 68000000 		.4byte	0x68
 2264 050e 02       		.uleb128 0x2
 2265 050f 91       		.byte	0x91
 2266 0510 74       		.sleb128 -12
 2267 0511 16       		.uleb128 0x16
 2268 0512 513300   		.ascii	"Q3\000"
 2269 0515 01       		.byte	0x1
 2270 0516 2A02     		.2byte	0x22a
 2271 0518 68000000 		.4byte	0x68
 2272 051c 02       		.uleb128 0x2
 2273 051d 91       		.byte	0x91
 2274 051e 70       		.sleb128 -16
 2275 051f 16       		.uleb128 0x16
 2276 0520 513400   		.ascii	"Q4\000"
 2277 0523 01       		.byte	0x1
 2278 0524 2B02     		.2byte	0x22b
 2279 0526 68000000 		.4byte	0x68
 2280 052a 02       		.uleb128 0x2
 2281 052b 91       		.byte	0x91
 2282 052c 6C       		.sleb128 -20
 2283 052d 16       		.uleb128 0x16
 2284 052e 513500   		.ascii	"Q5\000"
 2285 0531 01       		.byte	0x1
 2286 0532 2C02     		.2byte	0x22c
 2287 0534 68000000 		.4byte	0x68
 2288 0538 02       		.uleb128 0x2
 2289 0539 91       		.byte	0x91
 2290 053a 68       		.sleb128 -24
 2291 053b 00       		.byte	0
 2292 053c 17       		.uleb128 0x17
 2293 053d B2020000 		.4byte	.LASF76
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 53


 2294 0541 01       		.byte	0x1
 2295 0542 3302     		.2byte	0x233
 2296 0544 00000000 		.4byte	.LFB80
 2297 0548 3E000000 		.4byte	.LFE80-.LFB80
 2298 054c 01       		.uleb128 0x1
 2299 054d 9C       		.byte	0x9c
 2300 054e 60050000 		.4byte	0x560
 2301 0552 18       		.uleb128 0x18
 2302 0553 7300     		.ascii	"s\000"
 2303 0555 01       		.byte	0x1
 2304 0556 3302     		.2byte	0x233
 2305 0558 84000000 		.4byte	0x84
 2306 055c 02       		.uleb128 0x2
 2307 055d 91       		.byte	0x91
 2308 055e 74       		.sleb128 -12
 2309 055f 00       		.byte	0
 2310 0560 17       		.uleb128 0x17
 2311 0561 49000000 		.4byte	.LASF77
 2312 0565 01       		.byte	0x1
 2313 0566 4102     		.2byte	0x241
 2314 0568 00000000 		.4byte	.LFB81
 2315 056c 26000000 		.4byte	.LFE81-.LFB81
 2316 0570 01       		.uleb128 0x1
 2317 0571 9C       		.byte	0x9c
 2318 0572 84050000 		.4byte	0x584
 2319 0576 18       		.uleb128 0x18
 2320 0577 6300     		.ascii	"c\000"
 2321 0579 01       		.byte	0x1
 2322 057a 4102     		.2byte	0x241
 2323 057c 8A000000 		.4byte	0x8a
 2324 0580 02       		.uleb128 0x2
 2325 0581 91       		.byte	0x91
 2326 0582 77       		.sleb128 -9
 2327 0583 00       		.byte	0
 2328 0584 19       		.uleb128 0x19
 2329 0585 B4050000 		.4byte	.LASF79
 2330 0589 01       		.byte	0x1
 2331 058a 4902     		.2byte	0x249
 2332 058c 00000000 		.4byte	.LFB82
 2333 0590 CC000000 		.4byte	.LFE82-.LFB82
 2334 0594 01       		.uleb128 0x1
 2335 0595 9C       		.byte	0x9c
 2336 0596 CC050000 		.4byte	0x5cc
 2337 059a 14       		.uleb128 0x14
 2338 059b 2A050000 		.4byte	.LASF80
 2339 059f 01       		.byte	0x1
 2340 05a0 4F02     		.2byte	0x24f
 2341 05a2 AA000000 		.4byte	0xaa
 2342 05a6 05       		.uleb128 0x5
 2343 05a7 03       		.byte	0x3
 2344 05a8 45000000 		.4byte	usbStarted.8829
 2345 05ac 14       		.uleb128 0x14
 2346 05ad 3D040000 		.4byte	.LASF81
 2347 05b1 01       		.byte	0x1
 2348 05b2 5002     		.2byte	0x250
 2349 05b4 B6000000 		.4byte	0xb6
 2350 05b8 05       		.uleb128 0x5
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 54


 2351 05b9 03       		.byte	0x3
 2352 05ba 46000000 		.4byte	usbBufCount.8830
 2353 05be 16       		.uleb128 0x16
 2354 05bf 6300     		.ascii	"c\000"
 2355 05c1 01       		.byte	0x1
 2356 05c2 5102     		.2byte	0x251
 2357 05c4 AA000000 		.4byte	0xaa
 2358 05c8 02       		.uleb128 0x2
 2359 05c9 91       		.byte	0x91
 2360 05ca 77       		.sleb128 -9
 2361 05cb 00       		.byte	0
 2362 05cc 0D       		.uleb128 0xd
 2363 05cd 48050000 		.4byte	.LASF82
 2364 05d1 01       		.byte	0x1
 2365 05d2 B9       		.byte	0xb9
 2366 05d3 DD050000 		.4byte	0x5dd
 2367 05d7 05       		.uleb128 0x5
 2368 05d8 03       		.byte	0x3
 2369 05d9 44000000 		.4byte	count
 2370 05dd 1A       		.uleb128 0x1a
 2371 05de C2000000 		.4byte	0xc2
 2372 05e2 1B       		.uleb128 0x1b
 2373 05e3 E6050000 		.4byte	.LASF83
 2374 05e7 06       		.byte	0x6
 2375 05e8 1207     		.2byte	0x712
 2376 05ea EE050000 		.4byte	0x5ee
 2377 05ee 1A       		.uleb128 0x1a
 2378 05ef 91000000 		.4byte	0x91
 2379 05f3 1C       		.uleb128 0x1c
 2380 05f4 747300   		.ascii	"ts\000"
 2381 05f7 05       		.byte	0x5
 2382 05f8 10       		.byte	0x10
 2383 05f9 AA000000 		.4byte	0xaa
 2384 05fd 05       		.uleb128 0x5
 2385 05fe 03       		.byte	0x3
 2386 05ff 00000000 		.4byte	ts
 2387 0603 1D       		.uleb128 0x1d
 2388 0604 2F000000 		.4byte	.LASF84
 2389 0608 05       		.byte	0x5
 2390 0609 11       		.byte	0x11
 2391 060a B6000000 		.4byte	0xb6
 2392 060e 05       		.uleb128 0x5
 2393 060f 03       		.byte	0x3
 2394 0610 00000000 		.4byte	ts_enc
 2395 0614 1D       		.uleb128 0x1d
 2396 0615 AA050000 		.4byte	.LASF85
 2397 0619 05       		.byte	0x5
 2398 061a 12       		.byte	0x12
 2399 061b B6000000 		.4byte	0xb6
 2400 061f 05       		.uleb128 0x5
 2401 0620 03       		.byte	0x3
 2402 0621 00000000 		.4byte	ts_update
 2403 0625 1D       		.uleb128 0x1d
 2404 0626 3F050000 		.4byte	.LASF86
 2405 062a 05       		.byte	0x5
 2406 062b 13       		.byte	0x13
 2407 062c B6000000 		.4byte	0xb6
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 55


 2408 0630 05       		.uleb128 0x5
 2409 0631 03       		.byte	0x3
 2410 0632 00000000 		.4byte	ts_speed
 2411 0636 1D       		.uleb128 0x1d
 2412 0637 95050000 		.4byte	.LASF87
 2413 063b 05       		.byte	0x5
 2414 063c 14       		.byte	0x14
 2415 063d B6000000 		.4byte	0xb6
 2416 0641 05       		.uleb128 0x5
 2417 0642 03       		.byte	0x3
 2418 0643 00000000 		.4byte	ts_display
 2419 0647 1D       		.uleb128 0x1d
 2420 0648 4E050000 		.4byte	.LASF88
 2421 064c 05       		.byte	0x5
 2422 064d 16       		.byte	0x16
 2423 064e AA000000 		.4byte	0xaa
 2424 0652 05       		.uleb128 0x5
 2425 0653 03       		.byte	0x3
 2426 0654 00000000 		.4byte	flag_ts_enc
 2427 0658 1D       		.uleb128 0x1d
 2428 0659 C4020000 		.4byte	.LASF89
 2429 065d 05       		.byte	0x5
 2430 065e 17       		.byte	0x17
 2431 065f AA000000 		.4byte	0xaa
 2432 0663 05       		.uleb128 0x5
 2433 0664 03       		.byte	0x3
 2434 0665 00000000 		.4byte	flag_ts_update
 2435 0669 1D       		.uleb128 0x1d
 2436 066a DC040000 		.4byte	.LASF90
 2437 066e 05       		.byte	0x5
 2438 066f 18       		.byte	0x18
 2439 0670 AA000000 		.4byte	0xaa
 2440 0674 05       		.uleb128 0x5
 2441 0675 03       		.byte	0x3
 2442 0676 00000000 		.4byte	flag_ts_speed
 2443 067a 1D       		.uleb128 0x1d
 2444 067b 52030000 		.4byte	.LASF91
 2445 067f 05       		.byte	0x5
 2446 0680 19       		.byte	0x19
 2447 0681 AA000000 		.4byte	0xaa
 2448 0685 05       		.uleb128 0x5
 2449 0686 03       		.byte	0x3
 2450 0687 00000000 		.4byte	flag_ts_display
 2451 068b 1D       		.uleb128 0x1d
 2452 068c 62030000 		.4byte	.LASF92
 2453 0690 05       		.byte	0x5
 2454 0691 1C       		.byte	0x1c
 2455 0692 AA000000 		.4byte	0xaa
 2456 0696 05       		.uleb128 0x5
 2457 0697 03       		.byte	0x3
 2458 0698 00000000 		.4byte	flag_rx
 2459 069c 1D       		.uleb128 0x1d
 2460 069d 3D000000 		.4byte	.LASF93
 2461 06a1 05       		.byte	0x5
 2462 06a2 1D       		.byte	0x1d
 2463 06a3 AA000000 		.4byte	0xaa
 2464 06a7 05       		.uleb128 0x5
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 56


 2465 06a8 03       		.byte	0x3
 2466 06a9 00000000 		.4byte	flag_packet
 2467 06ad 1D       		.uleb128 0x1d
 2468 06ae 2E040000 		.4byte	.LASF94
 2469 06b2 05       		.byte	0x5
 2470 06b3 1E       		.byte	0x1e
 2471 06b4 AA000000 		.4byte	0xaa
 2472 06b8 05       		.uleb128 0x5
 2473 06b9 03       		.byte	0x3
 2474 06ba 00000000 		.4byte	flag_KB_string
 2475 06be 1D       		.uleb128 0x1d
 2476 06bf D4030000 		.4byte	.LASF95
 2477 06c3 05       		.byte	0x5
 2478 06c4 20       		.byte	0x20
 2479 06c5 AA000000 		.4byte	0xaa
 2480 06c9 05       		.uleb128 0x5
 2481 06ca 03       		.byte	0x3
 2482 06cb 00000000 		.4byte	dataready_flag
 2483 06cf 1D       		.uleb128 0x1d
 2484 06d0 BF050000 		.4byte	.LASF96
 2485 06d4 05       		.byte	0x5
 2486 06d5 22       		.byte	0x22
 2487 06d6 AA000000 		.4byte	0xaa
 2488 06da 05       		.uleb128 0x5
 2489 06db 03       		.byte	0x3
 2490 06dc 00000000 		.4byte	flag_rf_transmission_active
 2491 06e0 10       		.uleb128 0x10
 2492 06e1 8A000000 		.4byte	0x8a
 2493 06e5 F0060000 		.4byte	0x6f0
 2494 06e9 1E       		.uleb128 0x1e
 2495 06ea 7D000000 		.4byte	0x7d
 2496 06ee 3F       		.byte	0x3f
 2497 06ef 00       		.byte	0
 2498 06f0 1D       		.uleb128 0x1d
 2499 06f1 C5040000 		.4byte	.LASF97
 2500 06f5 05       		.byte	0x5
 2501 06f6 25       		.byte	0x25
 2502 06f7 E0060000 		.4byte	0x6e0
 2503 06fb 05       		.uleb128 0x5
 2504 06fc 03       		.byte	0x3
 2505 06fd 00000000 		.4byte	displaystring
 2506 0701 1D       		.uleb128 0x1d
 2507 0702 4D030000 		.4byte	.LASF98
 2508 0706 05       		.byte	0x5
 2509 0707 26       		.byte	0x26
 2510 0708 E0060000 		.4byte	0x6e0
 2511 070c 05       		.uleb128 0x5
 2512 070d 03       		.byte	0x3
 2513 070e 00000000 		.4byte	line
 2514 0712 1D       		.uleb128 0x1d
 2515 0713 88030000 		.4byte	.LASF99
 2516 0717 05       		.byte	0x5
 2517 0718 26       		.byte	0x26
 2518 0719 E0060000 		.4byte	0x6e0
 2519 071d 05       		.uleb128 0x5
 2520 071e 03       		.byte	0x3
 2521 071f 00000000 		.4byte	entry
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 57


 2522 0723 10       		.uleb128 0x10
 2523 0724 AA000000 		.4byte	0xaa
 2524 0728 33070000 		.4byte	0x733
 2525 072c 1E       		.uleb128 0x1e
 2526 072d 7D000000 		.4byte	0x7d
 2527 0731 3F       		.byte	0x3f
 2528 0732 00       		.byte	0
 2529 0733 1D       		.uleb128 0x1d
 2530 0734 C2000000 		.4byte	.LASF100
 2531 0738 05       		.byte	0x5
 2532 0739 27       		.byte	0x27
 2533 073a 23070000 		.4byte	0x723
 2534 073e 05       		.uleb128 0x5
 2535 073f 03       		.byte	0x3
 2536 0740 00000000 		.4byte	usbBuffer
 2537 0744 1D       		.uleb128 0x1d
 2538 0745 A2000000 		.4byte	.LASF101
 2539 0749 05       		.byte	0x5
 2540 074a 3C       		.byte	0x3c
 2541 074b DA000000 		.4byte	0xda
 2542 074f 05       		.uleb128 0x5
 2543 0750 03       		.byte	0x3
 2544 0751 00000000 		.4byte	system_state
 2545 0755 1D       		.uleb128 0x1d
 2546 0756 66020000 		.4byte	.LASF102
 2547 075a 01       		.byte	0x1
 2548 075b 73       		.byte	0x73
 2549 075c 68000000 		.4byte	0x68
 2550 0760 05       		.uleb128 0x5
 2551 0761 03       		.byte	0x3
 2552 0762 00000000 		.4byte	changeMotor
 2553 0766 1D       		.uleb128 0x1d
 2554 0767 85000000 		.4byte	.LASF103
 2555 076b 01       		.byte	0x1
 2556 076c 74       		.byte	0x74
 2557 076d 68000000 		.4byte	0x68
 2558 0771 05       		.uleb128 0x5
 2559 0772 03       		.byte	0x3
 2560 0773 00000000 		.4byte	checkLight
 2561 0777 1D       		.uleb128 0x1d
 2562 0778 98010000 		.4byte	.LASF104
 2563 077c 01       		.byte	0x1
 2564 077d 75       		.byte	0x75
 2565 077e 68000000 		.4byte	0x68
 2566 0782 05       		.uleb128 0x5
 2567 0783 03       		.byte	0x3
 2568 0784 00000000 		.4byte	lightState
 2569 0788 10       		.uleb128 0x10
 2570 0789 98070000 		.4byte	0x798
 2571 078d 98070000 		.4byte	0x798
 2572 0791 1E       		.uleb128 0x1e
 2573 0792 7D000000 		.4byte	0x7d
 2574 0796 02       		.byte	0x2
 2575 0797 00       		.byte	0
 2576 0798 1A       		.uleb128 0x1a
 2577 0799 68000000 		.4byte	0x68
 2578 079d 1D       		.uleb128 0x1d
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 58


 2579 079e AF030000 		.4byte	.LASF105
 2580 07a2 01       		.byte	0x1
 2581 07a3 76       		.byte	0x76
 2582 07a4 AE070000 		.4byte	0x7ae
 2583 07a8 05       		.uleb128 0x5
 2584 07a9 03       		.byte	0x3
 2585 07aa 00000000 		.4byte	lightDetectedFront
 2586 07ae 1A       		.uleb128 0x1a
 2587 07af 88070000 		.4byte	0x788
 2588 07b3 1D       		.uleb128 0x1d
 2589 07b4 72020000 		.4byte	.LASF106
 2590 07b8 01       		.byte	0x1
 2591 07b9 77       		.byte	0x77
 2592 07ba C4070000 		.4byte	0x7c4
 2593 07be 05       		.uleb128 0x5
 2594 07bf 03       		.byte	0x3
 2595 07c0 00000000 		.4byte	lightDetectedBack
 2596 07c4 1A       		.uleb128 0x1a
 2597 07c5 88070000 		.4byte	0x788
 2598 07c9 1D       		.uleb128 0x1d
 2599 07ca 54000000 		.4byte	.LASF107
 2600 07ce 01       		.byte	0x1
 2601 07cf 78       		.byte	0x78
 2602 07d0 98070000 		.4byte	0x798
 2603 07d4 05       		.uleb128 0x5
 2604 07d5 03       		.byte	0x3
 2605 07d6 00000000 		.4byte	counteoc
 2606 07da 1D       		.uleb128 0x1d
 2607 07db 3E030000 		.4byte	.LASF108
 2608 07df 01       		.byte	0x1
 2609 07e0 79       		.byte	0x79
 2610 07e1 98070000 		.4byte	0x798
 2611 07e5 05       		.uleb128 0x5
 2612 07e6 03       		.byte	0x3
 2613 07e7 00000000 		.4byte	processSensors
 2614 07eb 1D       		.uleb128 0x1d
 2615 07ec 22060000 		.4byte	.LASF109
 2616 07f0 01       		.byte	0x1
 2617 07f1 7A       		.byte	0x7a
 2618 07f2 98070000 		.4byte	0x798
 2619 07f6 05       		.uleb128 0x5
 2620 07f7 03       		.byte	0x3
 2621 07f8 00000000 		.4byte	middle
 2622 07fc 00       		.byte	0
 2623              		.section	.debug_abbrev,"",%progbits
 2624              	.Ldebug_abbrev0:
 2625 0000 01       		.uleb128 0x1
 2626 0001 11       		.uleb128 0x11
 2627 0002 01       		.byte	0x1
 2628 0003 25       		.uleb128 0x25
 2629 0004 0E       		.uleb128 0xe
 2630 0005 13       		.uleb128 0x13
 2631 0006 0B       		.uleb128 0xb
 2632 0007 03       		.uleb128 0x3
 2633 0008 0E       		.uleb128 0xe
 2634 0009 1B       		.uleb128 0x1b
 2635 000a 0E       		.uleb128 0xe
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 59


 2636 000b 55       		.uleb128 0x55
 2637 000c 17       		.uleb128 0x17
 2638 000d 11       		.uleb128 0x11
 2639 000e 01       		.uleb128 0x1
 2640 000f 10       		.uleb128 0x10
 2641 0010 17       		.uleb128 0x17
 2642 0011 00       		.byte	0
 2643 0012 00       		.byte	0
 2644 0013 02       		.uleb128 0x2
 2645 0014 24       		.uleb128 0x24
 2646 0015 00       		.byte	0
 2647 0016 0B       		.uleb128 0xb
 2648 0017 0B       		.uleb128 0xb
 2649 0018 3E       		.uleb128 0x3e
 2650 0019 0B       		.uleb128 0xb
 2651 001a 03       		.uleb128 0x3
 2652 001b 0E       		.uleb128 0xe
 2653 001c 00       		.byte	0
 2654 001d 00       		.byte	0
 2655 001e 03       		.uleb128 0x3
 2656 001f 16       		.uleb128 0x16
 2657 0020 00       		.byte	0
 2658 0021 03       		.uleb128 0x3
 2659 0022 0E       		.uleb128 0xe
 2660 0023 3A       		.uleb128 0x3a
 2661 0024 0B       		.uleb128 0xb
 2662 0025 3B       		.uleb128 0x3b
 2663 0026 0B       		.uleb128 0xb
 2664 0027 49       		.uleb128 0x49
 2665 0028 13       		.uleb128 0x13
 2666 0029 00       		.byte	0
 2667 002a 00       		.byte	0
 2668 002b 04       		.uleb128 0x4
 2669 002c 24       		.uleb128 0x24
 2670 002d 00       		.byte	0
 2671 002e 0B       		.uleb128 0xb
 2672 002f 0B       		.uleb128 0xb
 2673 0030 3E       		.uleb128 0x3e
 2674 0031 0B       		.uleb128 0xb
 2675 0032 03       		.uleb128 0x3
 2676 0033 08       		.uleb128 0x8
 2677 0034 00       		.byte	0
 2678 0035 00       		.byte	0
 2679 0036 05       		.uleb128 0x5
 2680 0037 0F       		.uleb128 0xf
 2681 0038 00       		.byte	0
 2682 0039 0B       		.uleb128 0xb
 2683 003a 0B       		.uleb128 0xb
 2684 003b 49       		.uleb128 0x49
 2685 003c 13       		.uleb128 0x13
 2686 003d 00       		.byte	0
 2687 003e 00       		.byte	0
 2688 003f 06       		.uleb128 0x6
 2689 0040 16       		.uleb128 0x16
 2690 0041 00       		.byte	0
 2691 0042 03       		.uleb128 0x3
 2692 0043 0E       		.uleb128 0xe
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 60


 2693 0044 3A       		.uleb128 0x3a
 2694 0045 0B       		.uleb128 0xb
 2695 0046 3B       		.uleb128 0x3b
 2696 0047 05       		.uleb128 0x5
 2697 0048 49       		.uleb128 0x49
 2698 0049 13       		.uleb128 0x13
 2699 004a 00       		.byte	0
 2700 004b 00       		.byte	0
 2701 004c 07       		.uleb128 0x7
 2702 004d 13       		.uleb128 0x13
 2703 004e 01       		.byte	0x1
 2704 004f 03       		.uleb128 0x3
 2705 0050 0E       		.uleb128 0xe
 2706 0051 0B       		.uleb128 0xb
 2707 0052 0B       		.uleb128 0xb
 2708 0053 3A       		.uleb128 0x3a
 2709 0054 0B       		.uleb128 0xb
 2710 0055 3B       		.uleb128 0x3b
 2711 0056 0B       		.uleb128 0xb
 2712 0057 01       		.uleb128 0x1
 2713 0058 13       		.uleb128 0x13
 2714 0059 00       		.byte	0
 2715 005a 00       		.byte	0
 2716 005b 08       		.uleb128 0x8
 2717 005c 0D       		.uleb128 0xd
 2718 005d 00       		.byte	0
 2719 005e 03       		.uleb128 0x3
 2720 005f 0E       		.uleb128 0xe
 2721 0060 3A       		.uleb128 0x3a
 2722 0061 0B       		.uleb128 0xb
 2723 0062 3B       		.uleb128 0x3b
 2724 0063 0B       		.uleb128 0xb
 2725 0064 49       		.uleb128 0x49
 2726 0065 13       		.uleb128 0x13
 2727 0066 38       		.uleb128 0x38
 2728 0067 0B       		.uleb128 0xb
 2729 0068 00       		.byte	0
 2730 0069 00       		.byte	0
 2731 006a 09       		.uleb128 0x9
 2732 006b 2E       		.uleb128 0x2e
 2733 006c 00       		.byte	0
 2734 006d 3F       		.uleb128 0x3f
 2735 006e 19       		.uleb128 0x19
 2736 006f 03       		.uleb128 0x3
 2737 0070 0E       		.uleb128 0xe
 2738 0071 3A       		.uleb128 0x3a
 2739 0072 0B       		.uleb128 0xb
 2740 0073 3B       		.uleb128 0x3b
 2741 0074 0B       		.uleb128 0xb
 2742 0075 11       		.uleb128 0x11
 2743 0076 01       		.uleb128 0x1
 2744 0077 12       		.uleb128 0x12
 2745 0078 06       		.uleb128 0x6
 2746 0079 40       		.uleb128 0x40
 2747 007a 18       		.uleb128 0x18
 2748 007b 9642     		.uleb128 0x2116
 2749 007d 19       		.uleb128 0x19
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 61


 2750 007e 00       		.byte	0
 2751 007f 00       		.byte	0
 2752 0080 0A       		.uleb128 0xa
 2753 0081 2E       		.uleb128 0x2e
 2754 0082 01       		.byte	0x1
 2755 0083 3F       		.uleb128 0x3f
 2756 0084 19       		.uleb128 0x19
 2757 0085 03       		.uleb128 0x3
 2758 0086 0E       		.uleb128 0xe
 2759 0087 3A       		.uleb128 0x3a
 2760 0088 0B       		.uleb128 0xb
 2761 0089 3B       		.uleb128 0x3b
 2762 008a 0B       		.uleb128 0xb
 2763 008b 27       		.uleb128 0x27
 2764 008c 19       		.uleb128 0x19
 2765 008d 11       		.uleb128 0x11
 2766 008e 01       		.uleb128 0x1
 2767 008f 12       		.uleb128 0x12
 2768 0090 06       		.uleb128 0x6
 2769 0091 40       		.uleb128 0x40
 2770 0092 18       		.uleb128 0x18
 2771 0093 9642     		.uleb128 0x2116
 2772 0095 19       		.uleb128 0x19
 2773 0096 01       		.uleb128 0x1
 2774 0097 13       		.uleb128 0x13
 2775 0098 00       		.byte	0
 2776 0099 00       		.byte	0
 2777 009a 0B       		.uleb128 0xb
 2778 009b 05       		.uleb128 0x5
 2779 009c 00       		.byte	0
 2780 009d 03       		.uleb128 0x3
 2781 009e 08       		.uleb128 0x8
 2782 009f 3A       		.uleb128 0x3a
 2783 00a0 0B       		.uleb128 0xb
 2784 00a1 3B       		.uleb128 0x3b
 2785 00a2 0B       		.uleb128 0xb
 2786 00a3 49       		.uleb128 0x49
 2787 00a4 13       		.uleb128 0x13
 2788 00a5 02       		.uleb128 0x2
 2789 00a6 18       		.uleb128 0x18
 2790 00a7 00       		.byte	0
 2791 00a8 00       		.byte	0
 2792 00a9 0C       		.uleb128 0xc
 2793 00aa 0B       		.uleb128 0xb
 2794 00ab 01       		.byte	0x1
 2795 00ac 11       		.uleb128 0x11
 2796 00ad 01       		.uleb128 0x1
 2797 00ae 12       		.uleb128 0x12
 2798 00af 06       		.uleb128 0x6
 2799 00b0 00       		.byte	0
 2800 00b1 00       		.byte	0
 2801 00b2 0D       		.uleb128 0xd
 2802 00b3 34       		.uleb128 0x34
 2803 00b4 00       		.byte	0
 2804 00b5 03       		.uleb128 0x3
 2805 00b6 0E       		.uleb128 0xe
 2806 00b7 3A       		.uleb128 0x3a
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 62


 2807 00b8 0B       		.uleb128 0xb
 2808 00b9 3B       		.uleb128 0x3b
 2809 00ba 0B       		.uleb128 0xb
 2810 00bb 49       		.uleb128 0x49
 2811 00bc 13       		.uleb128 0x13
 2812 00bd 02       		.uleb128 0x2
 2813 00be 18       		.uleb128 0x18
 2814 00bf 00       		.byte	0
 2815 00c0 00       		.byte	0
 2816 00c1 0E       		.uleb128 0xe
 2817 00c2 2E       		.uleb128 0x2e
 2818 00c3 00       		.byte	0
 2819 00c4 3F       		.uleb128 0x3f
 2820 00c5 19       		.uleb128 0x19
 2821 00c6 03       		.uleb128 0x3
 2822 00c7 0E       		.uleb128 0xe
 2823 00c8 3A       		.uleb128 0x3a
 2824 00c9 0B       		.uleb128 0xb
 2825 00ca 3B       		.uleb128 0x3b
 2826 00cb 0B       		.uleb128 0xb
 2827 00cc 27       		.uleb128 0x27
 2828 00cd 19       		.uleb128 0x19
 2829 00ce 11       		.uleb128 0x11
 2830 00cf 01       		.uleb128 0x1
 2831 00d0 12       		.uleb128 0x12
 2832 00d1 06       		.uleb128 0x6
 2833 00d2 40       		.uleb128 0x40
 2834 00d3 18       		.uleb128 0x18
 2835 00d4 9742     		.uleb128 0x2117
 2836 00d6 19       		.uleb128 0x19
 2837 00d7 00       		.byte	0
 2838 00d8 00       		.byte	0
 2839 00d9 0F       		.uleb128 0xf
 2840 00da 2E       		.uleb128 0x2e
 2841 00db 01       		.byte	0x1
 2842 00dc 3F       		.uleb128 0x3f
 2843 00dd 19       		.uleb128 0x19
 2844 00de 03       		.uleb128 0x3
 2845 00df 0E       		.uleb128 0xe
 2846 00e0 3A       		.uleb128 0x3a
 2847 00e1 0B       		.uleb128 0xb
 2848 00e2 3B       		.uleb128 0x3b
 2849 00e3 0B       		.uleb128 0xb
 2850 00e4 11       		.uleb128 0x11
 2851 00e5 01       		.uleb128 0x1
 2852 00e6 12       		.uleb128 0x12
 2853 00e7 06       		.uleb128 0x6
 2854 00e8 40       		.uleb128 0x40
 2855 00e9 18       		.uleb128 0x18
 2856 00ea 9642     		.uleb128 0x2116
 2857 00ec 19       		.uleb128 0x19
 2858 00ed 01       		.uleb128 0x1
 2859 00ee 13       		.uleb128 0x13
 2860 00ef 00       		.byte	0
 2861 00f0 00       		.byte	0
 2862 00f1 10       		.uleb128 0x10
 2863 00f2 01       		.uleb128 0x1
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 63


 2864 00f3 01       		.byte	0x1
 2865 00f4 49       		.uleb128 0x49
 2866 00f5 13       		.uleb128 0x13
 2867 00f6 01       		.uleb128 0x1
 2868 00f7 13       		.uleb128 0x13
 2869 00f8 00       		.byte	0
 2870 00f9 00       		.byte	0
 2871 00fa 11       		.uleb128 0x11
 2872 00fb 21       		.uleb128 0x21
 2873 00fc 00       		.byte	0
 2874 00fd 49       		.uleb128 0x49
 2875 00fe 13       		.uleb128 0x13
 2876 00ff 2F       		.uleb128 0x2f
 2877 0100 05       		.uleb128 0x5
 2878 0101 00       		.byte	0
 2879 0102 00       		.byte	0
 2880 0103 12       		.uleb128 0x12
 2881 0104 2E       		.uleb128 0x2e
 2882 0105 00       		.byte	0
 2883 0106 3F       		.uleb128 0x3f
 2884 0107 19       		.uleb128 0x19
 2885 0108 03       		.uleb128 0x3
 2886 0109 0E       		.uleb128 0xe
 2887 010a 3A       		.uleb128 0x3a
 2888 010b 0B       		.uleb128 0xb
 2889 010c 3B       		.uleb128 0x3b
 2890 010d 0B       		.uleb128 0xb
 2891 010e 27       		.uleb128 0x27
 2892 010f 19       		.uleb128 0x19
 2893 0110 11       		.uleb128 0x11
 2894 0111 01       		.uleb128 0x1
 2895 0112 12       		.uleb128 0x12
 2896 0113 06       		.uleb128 0x6
 2897 0114 40       		.uleb128 0x40
 2898 0115 18       		.uleb128 0x18
 2899 0116 9642     		.uleb128 0x2116
 2900 0118 19       		.uleb128 0x19
 2901 0119 00       		.byte	0
 2902 011a 00       		.byte	0
 2903 011b 13       		.uleb128 0x13
 2904 011c 2E       		.uleb128 0x2e
 2905 011d 01       		.byte	0x1
 2906 011e 3F       		.uleb128 0x3f
 2907 011f 19       		.uleb128 0x19
 2908 0120 03       		.uleb128 0x3
 2909 0121 0E       		.uleb128 0xe
 2910 0122 3A       		.uleb128 0x3a
 2911 0123 0B       		.uleb128 0xb
 2912 0124 3B       		.uleb128 0x3b
 2913 0125 05       		.uleb128 0x5
 2914 0126 49       		.uleb128 0x49
 2915 0127 13       		.uleb128 0x13
 2916 0128 11       		.uleb128 0x11
 2917 0129 01       		.uleb128 0x1
 2918 012a 12       		.uleb128 0x12
 2919 012b 06       		.uleb128 0x6
 2920 012c 40       		.uleb128 0x40
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 64


 2921 012d 18       		.uleb128 0x18
 2922 012e 9642     		.uleb128 0x2116
 2923 0130 19       		.uleb128 0x19
 2924 0131 01       		.uleb128 0x1
 2925 0132 13       		.uleb128 0x13
 2926 0133 00       		.byte	0
 2927 0134 00       		.byte	0
 2928 0135 14       		.uleb128 0x14
 2929 0136 34       		.uleb128 0x34
 2930 0137 00       		.byte	0
 2931 0138 03       		.uleb128 0x3
 2932 0139 0E       		.uleb128 0xe
 2933 013a 3A       		.uleb128 0x3a
 2934 013b 0B       		.uleb128 0xb
 2935 013c 3B       		.uleb128 0x3b
 2936 013d 05       		.uleb128 0x5
 2937 013e 49       		.uleb128 0x49
 2938 013f 13       		.uleb128 0x13
 2939 0140 02       		.uleb128 0x2
 2940 0141 18       		.uleb128 0x18
 2941 0142 00       		.byte	0
 2942 0143 00       		.byte	0
 2943 0144 15       		.uleb128 0x15
 2944 0145 2E       		.uleb128 0x2e
 2945 0146 01       		.byte	0x1
 2946 0147 3F       		.uleb128 0x3f
 2947 0148 19       		.uleb128 0x19
 2948 0149 03       		.uleb128 0x3
 2949 014a 0E       		.uleb128 0xe
 2950 014b 3A       		.uleb128 0x3a
 2951 014c 0B       		.uleb128 0xb
 2952 014d 3B       		.uleb128 0x3b
 2953 014e 05       		.uleb128 0x5
 2954 014f 49       		.uleb128 0x49
 2955 0150 13       		.uleb128 0x13
 2956 0151 11       		.uleb128 0x11
 2957 0152 01       		.uleb128 0x1
 2958 0153 12       		.uleb128 0x12
 2959 0154 06       		.uleb128 0x6
 2960 0155 40       		.uleb128 0x40
 2961 0156 18       		.uleb128 0x18
 2962 0157 9742     		.uleb128 0x2117
 2963 0159 19       		.uleb128 0x19
 2964 015a 01       		.uleb128 0x1
 2965 015b 13       		.uleb128 0x13
 2966 015c 00       		.byte	0
 2967 015d 00       		.byte	0
 2968 015e 16       		.uleb128 0x16
 2969 015f 34       		.uleb128 0x34
 2970 0160 00       		.byte	0
 2971 0161 03       		.uleb128 0x3
 2972 0162 08       		.uleb128 0x8
 2973 0163 3A       		.uleb128 0x3a
 2974 0164 0B       		.uleb128 0xb
 2975 0165 3B       		.uleb128 0x3b
 2976 0166 05       		.uleb128 0x5
 2977 0167 49       		.uleb128 0x49
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 65


 2978 0168 13       		.uleb128 0x13
 2979 0169 02       		.uleb128 0x2
 2980 016a 18       		.uleb128 0x18
 2981 016b 00       		.byte	0
 2982 016c 00       		.byte	0
 2983 016d 17       		.uleb128 0x17
 2984 016e 2E       		.uleb128 0x2e
 2985 016f 01       		.byte	0x1
 2986 0170 3F       		.uleb128 0x3f
 2987 0171 19       		.uleb128 0x19
 2988 0172 03       		.uleb128 0x3
 2989 0173 0E       		.uleb128 0xe
 2990 0174 3A       		.uleb128 0x3a
 2991 0175 0B       		.uleb128 0xb
 2992 0176 3B       		.uleb128 0x3b
 2993 0177 05       		.uleb128 0x5
 2994 0178 27       		.uleb128 0x27
 2995 0179 19       		.uleb128 0x19
 2996 017a 11       		.uleb128 0x11
 2997 017b 01       		.uleb128 0x1
 2998 017c 12       		.uleb128 0x12
 2999 017d 06       		.uleb128 0x6
 3000 017e 40       		.uleb128 0x40
 3001 017f 18       		.uleb128 0x18
 3002 0180 9642     		.uleb128 0x2116
 3003 0182 19       		.uleb128 0x19
 3004 0183 01       		.uleb128 0x1
 3005 0184 13       		.uleb128 0x13
 3006 0185 00       		.byte	0
 3007 0186 00       		.byte	0
 3008 0187 18       		.uleb128 0x18
 3009 0188 05       		.uleb128 0x5
 3010 0189 00       		.byte	0
 3011 018a 03       		.uleb128 0x3
 3012 018b 08       		.uleb128 0x8
 3013 018c 3A       		.uleb128 0x3a
 3014 018d 0B       		.uleb128 0xb
 3015 018e 3B       		.uleb128 0x3b
 3016 018f 05       		.uleb128 0x5
 3017 0190 49       		.uleb128 0x49
 3018 0191 13       		.uleb128 0x13
 3019 0192 02       		.uleb128 0x2
 3020 0193 18       		.uleb128 0x18
 3021 0194 00       		.byte	0
 3022 0195 00       		.byte	0
 3023 0196 19       		.uleb128 0x19
 3024 0197 2E       		.uleb128 0x2e
 3025 0198 01       		.byte	0x1
 3026 0199 3F       		.uleb128 0x3f
 3027 019a 19       		.uleb128 0x19
 3028 019b 03       		.uleb128 0x3
 3029 019c 0E       		.uleb128 0xe
 3030 019d 3A       		.uleb128 0x3a
 3031 019e 0B       		.uleb128 0xb
 3032 019f 3B       		.uleb128 0x3b
 3033 01a0 05       		.uleb128 0x5
 3034 01a1 11       		.uleb128 0x11
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 66


 3035 01a2 01       		.uleb128 0x1
 3036 01a3 12       		.uleb128 0x12
 3037 01a4 06       		.uleb128 0x6
 3038 01a5 40       		.uleb128 0x40
 3039 01a6 18       		.uleb128 0x18
 3040 01a7 9642     		.uleb128 0x2116
 3041 01a9 19       		.uleb128 0x19
 3042 01aa 01       		.uleb128 0x1
 3043 01ab 13       		.uleb128 0x13
 3044 01ac 00       		.byte	0
 3045 01ad 00       		.byte	0
 3046 01ae 1A       		.uleb128 0x1a
 3047 01af 35       		.uleb128 0x35
 3048 01b0 00       		.byte	0
 3049 01b1 49       		.uleb128 0x49
 3050 01b2 13       		.uleb128 0x13
 3051 01b3 00       		.byte	0
 3052 01b4 00       		.byte	0
 3053 01b5 1B       		.uleb128 0x1b
 3054 01b6 34       		.uleb128 0x34
 3055 01b7 00       		.byte	0
 3056 01b8 03       		.uleb128 0x3
 3057 01b9 0E       		.uleb128 0xe
 3058 01ba 3A       		.uleb128 0x3a
 3059 01bb 0B       		.uleb128 0xb
 3060 01bc 3B       		.uleb128 0x3b
 3061 01bd 05       		.uleb128 0x5
 3062 01be 49       		.uleb128 0x49
 3063 01bf 13       		.uleb128 0x13
 3064 01c0 3F       		.uleb128 0x3f
 3065 01c1 19       		.uleb128 0x19
 3066 01c2 3C       		.uleb128 0x3c
 3067 01c3 19       		.uleb128 0x19
 3068 01c4 00       		.byte	0
 3069 01c5 00       		.byte	0
 3070 01c6 1C       		.uleb128 0x1c
 3071 01c7 34       		.uleb128 0x34
 3072 01c8 00       		.byte	0
 3073 01c9 03       		.uleb128 0x3
 3074 01ca 08       		.uleb128 0x8
 3075 01cb 3A       		.uleb128 0x3a
 3076 01cc 0B       		.uleb128 0xb
 3077 01cd 3B       		.uleb128 0x3b
 3078 01ce 0B       		.uleb128 0xb
 3079 01cf 49       		.uleb128 0x49
 3080 01d0 13       		.uleb128 0x13
 3081 01d1 3F       		.uleb128 0x3f
 3082 01d2 19       		.uleb128 0x19
 3083 01d3 02       		.uleb128 0x2
 3084 01d4 18       		.uleb128 0x18
 3085 01d5 00       		.byte	0
 3086 01d6 00       		.byte	0
 3087 01d7 1D       		.uleb128 0x1d
 3088 01d8 34       		.uleb128 0x34
 3089 01d9 00       		.byte	0
 3090 01da 03       		.uleb128 0x3
 3091 01db 0E       		.uleb128 0xe
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 67


 3092 01dc 3A       		.uleb128 0x3a
 3093 01dd 0B       		.uleb128 0xb
 3094 01de 3B       		.uleb128 0x3b
 3095 01df 0B       		.uleb128 0xb
 3096 01e0 49       		.uleb128 0x49
 3097 01e1 13       		.uleb128 0x13
 3098 01e2 3F       		.uleb128 0x3f
 3099 01e3 19       		.uleb128 0x19
 3100 01e4 02       		.uleb128 0x2
 3101 01e5 18       		.uleb128 0x18
 3102 01e6 00       		.byte	0
 3103 01e7 00       		.byte	0
 3104 01e8 1E       		.uleb128 0x1e
 3105 01e9 21       		.uleb128 0x21
 3106 01ea 00       		.byte	0
 3107 01eb 49       		.uleb128 0x49
 3108 01ec 13       		.uleb128 0x13
 3109 01ed 2F       		.uleb128 0x2f
 3110 01ee 0B       		.uleb128 0xb
 3111 01ef 00       		.byte	0
 3112 01f0 00       		.byte	0
 3113 01f1 00       		.byte	0
 3114              		.section	.debug_aranges,"",%progbits
 3115 0000 AC000000 		.4byte	0xac
 3116 0004 0200     		.2byte	0x2
 3117 0006 00000000 		.4byte	.Ldebug_info0
 3118 000a 04       		.byte	0x4
 3119 000b 00       		.byte	0
 3120 000c 0000     		.2byte	0
 3121 000e 0000     		.2byte	0
 3122 0010 00000000 		.4byte	.LFB64
 3123 0014 14000000 		.4byte	.LFE64-.LFB64
 3124 0018 00000000 		.4byte	.LFB65
 3125 001c 2E000000 		.4byte	.LFE65-.LFB65
 3126 0020 00000000 		.4byte	.LFB66
 3127 0024 14000000 		.4byte	.LFE66-.LFB66
 3128 0028 00000000 		.4byte	.LFB67
 3129 002c 14000000 		.4byte	.LFE67-.LFB67
 3130 0030 00000000 		.4byte	.LFB68
 3131 0034 22000000 		.4byte	.LFE68-.LFB68
 3132 0038 00000000 		.4byte	.LFB69
 3133 003c 20000000 		.4byte	.LFE69-.LFB69
 3134 0040 00000000 		.4byte	.LFB70
 3135 0044 20000000 		.4byte	.LFE70-.LFB70
 3136 0048 00000000 		.4byte	.LFB71
 3137 004c 2A000000 		.4byte	.LFE71-.LFB71
 3138 0050 00000000 		.4byte	.LFB72
 3139 0054 E0000000 		.4byte	.LFE72-.LFB72
 3140 0058 00000000 		.4byte	.LFB73
 3141 005c 0C000000 		.4byte	.LFE73-.LFB73
 3142 0060 00000000 		.4byte	.LFB74
 3143 0064 C0000000 		.4byte	.LFE74-.LFB74
 3144 0068 00000000 		.4byte	.LFB75
 3145 006c 1A000000 		.4byte	.LFE75-.LFB75
 3146 0070 00000000 		.4byte	.LFB76
 3147 0074 0C000000 		.4byte	.LFE76-.LFB76
 3148 0078 00000000 		.4byte	.LFB77
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 68


 3149 007c B0020000 		.4byte	.LFE77-.LFB77
 3150 0080 00000000 		.4byte	.LFB78
 3151 0084 50000000 		.4byte	.LFE78-.LFB78
 3152 0088 00000000 		.4byte	.LFB79
 3153 008c 50000000 		.4byte	.LFE79-.LFB79
 3154 0090 00000000 		.4byte	.LFB80
 3155 0094 3E000000 		.4byte	.LFE80-.LFB80
 3156 0098 00000000 		.4byte	.LFB81
 3157 009c 26000000 		.4byte	.LFE81-.LFB81
 3158 00a0 00000000 		.4byte	.LFB82
 3159 00a4 CC000000 		.4byte	.LFE82-.LFB82
 3160 00a8 00000000 		.4byte	0
 3161 00ac 00000000 		.4byte	0
 3162              		.section	.debug_ranges,"",%progbits
 3163              	.Ldebug_ranges0:
 3164 0000 00000000 		.4byte	.LFB64
 3165 0004 14000000 		.4byte	.LFE64
 3166 0008 00000000 		.4byte	.LFB65
 3167 000c 2E000000 		.4byte	.LFE65
 3168 0010 00000000 		.4byte	.LFB66
 3169 0014 14000000 		.4byte	.LFE66
 3170 0018 00000000 		.4byte	.LFB67
 3171 001c 14000000 		.4byte	.LFE67
 3172 0020 00000000 		.4byte	.LFB68
 3173 0024 22000000 		.4byte	.LFE68
 3174 0028 00000000 		.4byte	.LFB69
 3175 002c 20000000 		.4byte	.LFE69
 3176 0030 00000000 		.4byte	.LFB70
 3177 0034 20000000 		.4byte	.LFE70
 3178 0038 00000000 		.4byte	.LFB71
 3179 003c 2A000000 		.4byte	.LFE71
 3180 0040 00000000 		.4byte	.LFB72
 3181 0044 E0000000 		.4byte	.LFE72
 3182 0048 00000000 		.4byte	.LFB73
 3183 004c 0C000000 		.4byte	.LFE73
 3184 0050 00000000 		.4byte	.LFB74
 3185 0054 C0000000 		.4byte	.LFE74
 3186 0058 00000000 		.4byte	.LFB75
 3187 005c 1A000000 		.4byte	.LFE75
 3188 0060 00000000 		.4byte	.LFB76
 3189 0064 0C000000 		.4byte	.LFE76
 3190 0068 00000000 		.4byte	.LFB77
 3191 006c B0020000 		.4byte	.LFE77
 3192 0070 00000000 		.4byte	.LFB78
 3193 0074 50000000 		.4byte	.LFE78
 3194 0078 00000000 		.4byte	.LFB79
 3195 007c 50000000 		.4byte	.LFE79
 3196 0080 00000000 		.4byte	.LFB80
 3197 0084 3E000000 		.4byte	.LFE80
 3198 0088 00000000 		.4byte	.LFB81
 3199 008c 26000000 		.4byte	.LFE81
 3200 0090 00000000 		.4byte	.LFB82
 3201 0094 CC000000 		.4byte	.LFE82
 3202 0098 00000000 		.4byte	0
 3203 009c 00000000 		.4byte	0
 3204              		.section	.debug_line,"",%progbits
 3205              	.Ldebug_line0:
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 69


 3206 0000 99030000 		.section	.debug_str,"MS",%progbits,1
 3206      02005601 
 3206      00000201 
 3206      FB0E0D00 
 3206      01010101 
 3207              	.LASF39:
 3208 0000 6D6F746F 		.ascii	"motorStop\000"
 3208      7253746F 
 3208      7000
 3209              	.LASF60:
 3210 000a 6973725F 		.ascii	"isr_TS_Interrupt_sample\000"
 3210      54535F49 
 3210      6E746572 
 3210      72757074 
 3210      5F73616D 
 3211              	.LASF64:
 3212 0022 64656369 		.ascii	"decisionflag\000"
 3212      73696F6E 
 3212      666C6167 
 3212      00
 3213              	.LASF84:
 3214 002f 74735F65 		.ascii	"ts_enc\000"
 3214      6E6300
 3215              	.LASF14:
 3216 0036 646F7562 		.ascii	"double\000"
 3216      6C6500
 3217              	.LASF93:
 3218 003d 666C6167 		.ascii	"flag_packet\000"
 3218      5F706163 
 3218      6B657400 
 3219              	.LASF77:
 3220 0049 75736250 		.ascii	"usbPutChar\000"
 3220      75744368 
 3220      617200
 3221              	.LASF107:
 3222 0054 636F756E 		.ascii	"counteoc\000"
 3222      74656F63 
 3222      00
 3223              	.LASF45:
 3224 005d 6973725F 		.ascii	"isr_eoc_Interrupt_test\000"
 3224      656F635F 
 3224      496E7465 
 3224      72727570 
 3224      745F7465 
 3225              	.LASF38:
 3226 0074 6D6F746F 		.ascii	"motorGoBackwards\000"
 3226      72476F42 
 3226      61636B77 
 3226      61726473 
 3226      00
 3227              	.LASF103:
 3228 0085 63686563 		.ascii	"checkLight\000"
 3228      6B4C6967 
 3228      687400
 3229              	.LASF33:
 3230 0090 67325F78 		.ascii	"g2_xpos\000"
 3230      706F7300 
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 70


 3231              	.LASF2:
 3232 0098 73686F72 		.ascii	"short int\000"
 3232      7420696E 
 3232      7400
 3233              	.LASF101:
 3234 00a2 73797374 		.ascii	"system_state\000"
 3234      656D5F73 
 3234      74617465 
 3234      00
 3235              	.LASF10:
 3236 00af 73697A65 		.ascii	"sizetype\000"
 3236      74797065 
 3236      00
 3237              	.LASF67:
 3238 00b8 71756575 		.ascii	"queueSize\000"
 3238      6553697A 
 3238      6500
 3239              	.LASF100:
 3240 00c2 75736242 		.ascii	"usbBuffer\000"
 3240      75666665 
 3240      7200
 3241              	.LASF110:
 3242 00cc 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3242      43313120 
 3242      352E342E 
 3242      31203230 
 3242      31363036 
 3243 00ff 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3243      20726576 
 3243      6973696F 
 3243      6E203233 
 3243      37373135 
 3244 0132 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3244      66756E63 
 3244      74696F6E 
 3244      2D736563 
 3244      74696F6E 
 3245              	.LASF61:
 3246 015a 6D61696E 		.ascii	"main\000"
 3246      00
 3247              	.LASF58:
 3248 015f 6D6F746F 		.ascii	"motorRun\000"
 3248      7252756E 
 3248      00
 3249              	.LASF49:
 3250 0168 76616C75 		.ascii	"valueQ1\000"
 3250      65513100 
 3251              	.LASF50:
 3252 0170 76616C75 		.ascii	"valueQ2\000"
 3252      65513200 
 3253              	.LASF46:
 3254 0178 76616C75 		.ascii	"valueQ3\000"
 3254      65513300 
 3255              	.LASF47:
 3256 0180 76616C75 		.ascii	"valueQ4\000"
 3256      65513400 
 3257              	.LASF48:
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 71


 3258 0188 76616C75 		.ascii	"valueQ5\000"
 3258      65513500 
 3259              	.LASF51:
 3260 0190 76616C75 		.ascii	"valueQ6\000"
 3260      65513600 
 3261              	.LASF104:
 3262 0198 6C696768 		.ascii	"lightState\000"
 3262      74537461 
 3262      746500
 3263              	.LASF17:
 3264 01a3 75696E74 		.ascii	"uint16\000"
 3264      313600
 3265              	.LASF21:
 3266 01aa 696E6465 		.ascii	"index\000"
 3266      7800
 3267              	.LASF113:
 3268 01b0 64617461 		.ascii	"data_main\000"
 3268      5F6D6169 
 3268      6E00
 3269              	.LASF19:
 3270 01ba 696E7431 		.ascii	"int16\000"
 3270      3600
 3271              	.LASF66:
 3272 01c0 696E6465 		.ascii	"indexPointer\000"
 3272      78506F69 
 3272      6E746572 
 3272      00
 3273              	.LASF112:
 3274 01cd 5C5C6669 		.ascii	"\\\\files.auckland.ac.nz\\myhome\\Documents\\GitHub"
 3274      6C65732E 
 3274      6175636B 
 3274      6C616E64 
 3274      2E61632E 
 3275 01fb 5C70726F 		.ascii	"\\project-project_group_11\\COMPSYS 301\\psoc stude"
 3275      6A656374 
 3275      2D70726F 
 3275      6A656374 
 3275      5F67726F 
 3276 022b 6E742070 		.ascii	"nt pack\\psoc student pack\\psoc_code_base\\CS301_C"
 3276      61636B5C 
 3276      70736F63 
 3276      20737475 
 3276      64656E74 
 3277 025b 6C617373 		.ascii	"lass.cydsn\000"
 3277      2E637964 
 3277      736E00
 3278              	.LASF102:
 3279 0266 6368616E 		.ascii	"changeMotor\000"
 3279      67654D6F 
 3279      746F7200 
 3280              	.LASF106:
 3281 0272 6C696768 		.ascii	"lightDetectedBack\000"
 3281      74446574 
 3281      65637465 
 3281      64426163 
 3281      6B00
 3282              	.LASF15:
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 72


 3283 0284 666C6F61 		.ascii	"float\000"
 3283      7400
 3284              	.LASF59:
 3285 028a 6973725F 		.ascii	"isr_motor_interrupt_speed\000"
 3285      6D6F746F 
 3285      725F696E 
 3285      74657272 
 3285      7570745F 
 3286              	.LASF6:
 3287 02a4 6C6F6E67 		.ascii	"long long int\000"
 3287      206C6F6E 
 3287      6720696E 
 3287      7400
 3288              	.LASF76:
 3289 02b2 75736250 		.ascii	"usbPutString\000"
 3289      75745374 
 3289      72696E67 
 3289      00
 3290              	.LASF18:
 3291 02bf 696E7438 		.ascii	"int8\000"
 3291      00
 3292              	.LASF89:
 3293 02c4 666C6167 		.ascii	"flag_ts_update\000"
 3293      5F74735F 
 3293      75706461 
 3293      746500
 3294              	.LASF34:
 3295 02d3 67325F79 		.ascii	"g2_ypos\000"
 3295      706F7300 
 3296              	.LASF28:
 3297 02db 67305F64 		.ascii	"g0_direction\000"
 3297      69726563 
 3297      74696F6E 
 3297      00
 3298              	.LASF25:
 3299 02e8 67305F78 		.ascii	"g0_xpos\000"
 3299      706F7300 
 3300              	.LASF4:
 3301 02f0 6C6F6E67 		.ascii	"long int\000"
 3301      20696E74 
 3301      00
 3302              	.LASF52:
 3303 02f9 62656769 		.ascii	"beginningCountMotor1\000"
 3303      6E6E696E 
 3303      67436F75 
 3303      6E744D6F 
 3303      746F7231 
 3304              	.LASF53:
 3305 030e 62656769 		.ascii	"beginningCountMotor2\000"
 3305      6E6E696E 
 3305      67436F75 
 3305      6E744D6F 
 3305      746F7232 
 3306              	.LASF41:
 3307 0323 6D6F746F 		.ascii	"motorBeyblade\000"
 3307      72426579 
 3307      626C6164 
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 73


 3307      6500
 3308              	.LASF56:
 3309 0331 6D6F746F 		.ascii	"motor1String\000"
 3309      72315374 
 3309      72696E67 
 3309      00
 3310              	.LASF108:
 3311 033e 70726F63 		.ascii	"processSensors\000"
 3311      65737353 
 3311      656E736F 
 3311      727300
 3312              	.LASF98:
 3313 034d 6C696E65 		.ascii	"line\000"
 3313      00
 3314              	.LASF91:
 3315 0352 666C6167 		.ascii	"flag_ts_display\000"
 3315      5F74735F 
 3315      64697370 
 3315      6C617900 
 3316              	.LASF92:
 3317 0362 666C6167 		.ascii	"flag_rx\000"
 3317      5F727800 
 3318              	.LASF55:
 3319 036a 656E6443 		.ascii	"endCountMotor1\000"
 3319      6F756E74 
 3319      4D6F746F 
 3319      723100
 3320              	.LASF54:
 3321 0379 656E6443 		.ascii	"endCountMotor2\000"
 3321      6F756E74 
 3321      4D6F746F 
 3321      723200
 3322              	.LASF99:
 3323 0388 656E7472 		.ascii	"entry\000"
 3323      7900
 3324              	.LASF9:
 3325 038e 6C6F6E67 		.ascii	"long double\000"
 3325      20646F75 
 3325      626C6500 
 3326              	.LASF73:
 3327 039a 76616C75 		.ascii	"value1\000"
 3327      653100
 3328              	.LASF1:
 3329 03a1 756E7369 		.ascii	"unsigned char\000"
 3329      676E6564 
 3329      20636861 
 3329      7200
 3330              	.LASF105:
 3331 03af 6C696768 		.ascii	"lightDetectedFront\000"
 3331      74446574 
 3331      65637465 
 3331      6446726F 
 3331      6E7400
 3332              	.LASF27:
 3333 03c2 67305F73 		.ascii	"g0_speed\000"
 3333      70656564 
 3333      00
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 74


 3334              	.LASF31:
 3335 03cb 67315F73 		.ascii	"g1_speed\000"
 3335      70656564 
 3335      00
 3336              	.LASF95:
 3337 03d4 64617461 		.ascii	"dataready_flag\000"
 3337      72656164 
 3337      795F666C 
 3337      616700
 3338              	.LASF0:
 3339 03e3 7369676E 		.ascii	"signed char\000"
 3339      65642063 
 3339      68617200 
 3340              	.LASF7:
 3341 03ef 6C6F6E67 		.ascii	"long long unsigned int\000"
 3341      206C6F6E 
 3341      6720756E 
 3341      7369676E 
 3341      65642069 
 3342              	.LASF68:
 3343 0406 6D6F746F 		.ascii	"motoerFlagSTOP\000"
 3343      6572466C 
 3343      61675354 
 3343      4F5000
 3344              	.LASF44:
 3345 0415 6D6F746F 		.ascii	"motorCircle\000"
 3345      72436972 
 3345      636C6500 
 3346              	.LASF8:
 3347 0421 756E7369 		.ascii	"unsigned int\000"
 3347      676E6564 
 3347      20696E74 
 3347      00
 3348              	.LASF94:
 3349 042e 666C6167 		.ascii	"flag_KB_string\000"
 3349      5F4B425F 
 3349      73747269 
 3349      6E6700
 3350              	.LASF81:
 3351 043d 75736242 		.ascii	"usbBufCount\000"
 3351      7566436F 
 3351      756E7400 
 3352              	.LASF35:
 3353 0449 67325F73 		.ascii	"g2_speed\000"
 3353      70656564 
 3353      00
 3354              	.LASF29:
 3355 0452 67315F78 		.ascii	"g1_xpos\000"
 3355      706F7300 
 3356              	.LASF69:
 3357 045a 6F706572 		.ascii	"operation\000"
 3357      6174696F 
 3357      6E00
 3358              	.LASF72:
 3359 0464 636F6E76 		.ascii	"convertBackBinary\000"
 3359      65727442 
 3359      61636B42 
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 75


 3359      696E6172 
 3359      7900
 3360              	.LASF11:
 3361 0476 63686172 		.ascii	"char\000"
 3361      00
 3362              	.LASF22:
 3363 047b 726F626F 		.ascii	"robot_xpos\000"
 3363      745F7870 
 3363      6F7300
 3364              	.LASF13:
 3365 0486 696E7433 		.ascii	"int32_t\000"
 3365      325F7400 
 3366              	.LASF30:
 3367 048e 67315F79 		.ascii	"g1_ypos\000"
 3367      706F7300 
 3368              	.LASF36:
 3369 0496 67325F64 		.ascii	"g2_direction\000"
 3369      69726563 
 3369      74696F6E 
 3369      00
 3370              	.LASF65:
 3371 04a3 71756575 		.ascii	"queue\000"
 3371      6500
 3372              	.LASF40:
 3373 04a9 6D6F746F 		.ascii	"motorSetSpeed\000"
 3373      72536574 
 3373      53706565 
 3373      6400
 3374              	.LASF16:
 3375 04b7 75696E74 		.ascii	"uint8\000"
 3375      3800
 3376              	.LASF70:
 3377 04bd 6261636B 		.ascii	"backOps\000"
 3377      4F707300 
 3378              	.LASF97:
 3379 04c5 64697370 		.ascii	"displaystring\000"
 3379      6C617973 
 3379      7472696E 
 3379      6700
 3380              	.LASF71:
 3381 04d3 64656369 		.ascii	"decision\000"
 3381      73696F6E 
 3381      00
 3382              	.LASF90:
 3383 04dc 666C6167 		.ascii	"flag_ts_speed\000"
 3383      5F74735F 
 3383      73706565 
 3383      6400
 3384              	.LASF74:
 3385 04ea 636F6E76 		.ascii	"convertSensorBinary\000"
 3385      65727453 
 3385      656E736F 
 3385      7242696E 
 3385      61727900 
 3386              	.LASF3:
 3387 04fe 73686F72 		.ascii	"short unsigned int\000"
 3387      7420756E 
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 76


 3387      7369676E 
 3387      65642069 
 3387      6E7400
 3388              	.LASF111:
 3389 0511 6D61696E 		.ascii	"main.c\000"
 3389      2E6300
 3390              	.LASF5:
 3391 0518 6C6F6E67 		.ascii	"long unsigned int\000"
 3391      20756E73 
 3391      69676E65 
 3391      6420696E 
 3391      7400
 3392              	.LASF80:
 3393 052a 75736253 		.ascii	"usbStarted\000"
 3393      74617274 
 3393      656400
 3394              	.LASF63:
 3395 0535 74726176 		.ascii	"travelDis\000"
 3395      656C4469 
 3395      7300
 3396              	.LASF86:
 3397 053f 74735F73 		.ascii	"ts_speed\000"
 3397      70656564 
 3397      00
 3398              	.LASF82:
 3399 0548 636F756E 		.ascii	"count\000"
 3399      7400
 3400              	.LASF88:
 3401 054e 666C6167 		.ascii	"flag_ts_enc\000"
 3401      5F74735F 
 3401      656E6300 
 3402              	.LASF12:
 3403 055a 5F5F696E 		.ascii	"__int32_t\000"
 3403      7433325F 
 3403      7400
 3404              	.LASF42:
 3405 0564 6D6F746F 		.ascii	"motorTurnLeft\000"
 3405      72547572 
 3405      6E4C6566 
 3405      7400
 3406              	.LASF37:
 3407 0572 6D6F746F 		.ascii	"motorGoStraight\000"
 3407      72476F53 
 3407      74726169 
 3407      67687400 
 3408              	.LASF78:
 3409 0582 6D6F746F 		.ascii	"motorCount\000"
 3409      72436F75 
 3409      6E7400
 3410              	.LASF26:
 3411 058d 67305F79 		.ascii	"g0_ypos\000"
 3411      706F7300 
 3412              	.LASF87:
 3413 0595 74735F64 		.ascii	"ts_display\000"
 3413      6973706C 
 3413      617900
 3414              	.LASF62:
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 77


 3415 05a0 6C617374 		.ascii	"lastState\000"
 3415      53746174 
 3415      6500
 3416              	.LASF85:
 3417 05aa 74735F75 		.ascii	"ts_update\000"
 3417      70646174 
 3417      6500
 3418              	.LASF79:
 3419 05b4 68616E64 		.ascii	"handle_usb\000"
 3419      6C655F75 
 3419      736200
 3420              	.LASF96:
 3421 05bf 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3421      5F72665F 
 3421      7472616E 
 3421      736D6973 
 3421      73696F6E 
 3422              	.LASF23:
 3423 05db 726F626F 		.ascii	"robot_ypos\000"
 3423      745F7970 
 3423      6F7300
 3424              	.LASF83:
 3425 05e6 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3425      52784275 
 3425      66666572 
 3425      00
 3426              	.LASF75:
 3427 05f3 76616C75 		.ascii	"value\000"
 3427      6500
 3428              	.LASF57:
 3429 05f9 6D6F746F 		.ascii	"motor2String\000"
 3429      72325374 
 3429      72696E67 
 3429      00
 3430              	.LASF32:
 3431 0606 67315F64 		.ascii	"g1_direction\000"
 3431      69726563 
 3431      74696F6E 
 3431      00
 3432              	.LASF43:
 3433 0613 6D6F746F 		.ascii	"motorTurnRight\000"
 3433      72547572 
 3433      6E526967 
 3433      687400
 3434              	.LASF109:
 3435 0622 6D696464 		.ascii	"middle\000"
 3435      6C6500
 3436              	.LASF20:
 3437 0629 72737369 		.ascii	"rssi\000"
 3437      00
 3438              	.LASF24:
 3439 062e 726F626F 		.ascii	"robot_orientation\000"
 3439      745F6F72 
 3439      69656E74 
 3439      6174696F 
 3439      6E00
 3440              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccYUo0LB.s 			page 78


