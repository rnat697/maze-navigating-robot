ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.section	.text.motorGoStraight,"ax",%progbits
 107              		.align	2
 108              		.global	motorGoStraight
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 3


 109              		.thumb
 110              		.thumb_func
 111              		.type	motorGoStraight, %function
 112              	motorGoStraight:
 113              	.LFB64:
 114              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <stdbool.h>
  19:main.c        **** #include <string.h>
  20:main.c        **** #include <stdlib.h>
  21:main.c        **** #include <project.h>
  22:main.c        **** //* ========================================
  23:main.c        **** #include "defines.h"
  24:main.c        **** #include "vars.h"
  25:main.c        **** #include "isr_eoc.h"
  26:main.c        **** //* ========================================
  27:main.c        **** void usbPutString(char *s);
  28:main.c        **** void usbPutChar(char c);
  29:main.c        **** void handle_usb();
  30:main.c        **** //* ========================================
  31:main.c        **** 
  32:main.c        **** 
  33:main.c        **** #define rota180 500 //turns
  34:main.c        **** #define rota90Left 250
  35:main.c        **** 
  36:main.c        **** #define moveSlow 50
  37:main.c        **** #define travelDist 326 // how
  38:main.c        **** #define Q1CHANNEL 3
  39:main.c        **** #define Q2CHANNEL 5 
  40:main.c        **** #define Q3CHANNEL 0
  41:main.c        **** #define Q4CHANNEL 1
  42:main.c        **** #define Q5CHANNEL 2
  43:main.c        **** #define Q6CHANNEL 4
  44:main.c        **** 
  45:main.c        **** CY_ISR_PROTO(isr_eoc_Interrupt_test);
  46:main.c        **** CY_ISR_PROTO(isr_motor_interrupt_speed);
  47:main.c        **** CY_ISR_PROTO(isr_TS_interrupt_sample);
  48:main.c        **** int convertSensorBinary();
  49:main.c        **** 
  50:main.c        **** void motorGoStraight(){
 115              		.loc 1 50 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 4


 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119 0000 80B5     		push	{r7, lr}
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 7, -8
 122              		.cfi_offset 14, -4
 123 0002 00AF     		add	r7, sp, #0
 124              		.cfi_def_cfa_register 7
  51:main.c        ****     ////PWM_1_WriteCompare(150); // left wheel near power switch is stronker than right wheel //150
  52:main.c        ****     //M1_IN2_Write(0);
  53:main.c        ****     PWM_1_WriteCompare(200);//200
 125              		.loc 1 53 0
 126 0004 C820     		movs	r0, #200
 127 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  54:main.c        ****     PWM_2_WriteCompare(50); //50
 128              		.loc 1 54 0
 129 000a 3220     		movs	r0, #50
 130 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  55:main.c        **** }
 131              		.loc 1 55 0
 132 0010 00BF     		nop
 133 0012 80BD     		pop	{r7, pc}
 134              		.cfi_endproc
 135              	.LFE64:
 136              		.size	motorGoStraight, .-motorGoStraight
 137              		.section	.text.motorGoBackwards,"ax",%progbits
 138              		.align	2
 139              		.global	motorGoBackwards
 140              		.thumb
 141              		.thumb_func
 142              		.type	motorGoBackwards, %function
 143              	motorGoBackwards:
 144              	.LFB65:
  56:main.c        **** void motorGoBackwards(){
 145              		.loc 1 56 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 1, uses_anonymous_args = 0
 149 0000 80B5     		push	{r7, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 00AF     		add	r7, sp, #0
 154              		.cfi_def_cfa_register 7
  57:main.c        ****     
  58:main.c        ****     //M1_IN2_Write(0);
  59:main.c        ****     PWM_1_WriteCompare(55); //55
 155              		.loc 1 59 0
 156 0004 3720     		movs	r0, #55
 157 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  60:main.c        ****     PWM_2_WriteCompare(201); //201
 158              		.loc 1 60 0
 159 000a C920     		movs	r0, #201
 160 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  61:main.c        **** }
 161              		.loc 1 61 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 5


 162 0010 00BF     		nop
 163 0012 80BD     		pop	{r7, pc}
 164              		.cfi_endproc
 165              	.LFE65:
 166              		.size	motorGoBackwards, .-motorGoBackwards
 167              		.section	.text.motorStop,"ax",%progbits
 168              		.align	2
 169              		.global	motorStop
 170              		.thumb
 171              		.thumb_func
 172              		.type	motorStop, %function
 173              	motorStop:
 174              	.LFB66:
  62:main.c        **** void motorStop(){
 175              		.loc 1 62 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 1, uses_anonymous_args = 0
 179 0000 80B5     		push	{r7, lr}
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 7, -8
 182              		.cfi_offset 14, -4
 183 0002 00AF     		add	r7, sp, #0
 184              		.cfi_def_cfa_register 7
  63:main.c        ****     PWM_1_WriteCompare(127); // left wheel near power switch is stronker than right wheel
 185              		.loc 1 63 0
 186 0004 7F20     		movs	r0, #127
 187 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  64:main.c        ****     PWM_2_WriteCompare(127);
 188              		.loc 1 64 0
 189 000a 7F20     		movs	r0, #127
 190 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  65:main.c        **** }
 191              		.loc 1 65 0
 192 0010 00BF     		nop
 193 0012 80BD     		pop	{r7, pc}
 194              		.cfi_endproc
 195              	.LFE66:
 196              		.size	motorStop, .-motorStop
 197              		.section	.text.motorTurnLeft,"ax",%progbits
 198              		.align	2
 199              		.global	motorTurnLeft
 200              		.thumb
 201              		.thumb_func
 202              		.type	motorTurnLeft, %function
 203              	motorTurnLeft:
 204              	.LFB67:
  66:main.c        **** 
  67:main.c        **** void motorTurnLeft(int x){
 205              		.loc 1 67 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 8
 208              		@ frame_needed = 1, uses_anonymous_args = 0
 209 0000 80B5     		push	{r7, lr}
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 7, -8
 212              		.cfi_offset 14, -4
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 6


 213 0002 82B0     		sub	sp, sp, #8
 214              		.cfi_def_cfa_offset 16
 215 0004 00AF     		add	r7, sp, #0
 216              		.cfi_def_cfa_register 7
 217 0006 7860     		str	r0, [r7, #4]
  68:main.c        ****     // TO DO
  69:main.c        ****     
  70:main.c        ****     PWM_1_WriteCompare(x); //55
 218              		.loc 1 70 0
 219 0008 7B68     		ldr	r3, [r7, #4]
 220 000a DBB2     		uxtb	r3, r3
 221 000c 1846     		mov	r0, r3
 222 000e FFF7FEFF 		bl	PWM_1_WriteCompare
  71:main.c        ****     PWM_2_WriteCompare(125); //201
 223              		.loc 1 71 0
 224 0012 7D20     		movs	r0, #125
 225 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
  72:main.c        ****     
  73:main.c        ****     
  74:main.c        ****     
  75:main.c        ****     //255
  76:main.c        **** }
 226              		.loc 1 76 0
 227 0018 00BF     		nop
 228 001a 0837     		adds	r7, r7, #8
 229              		.cfi_def_cfa_offset 8
 230 001c BD46     		mov	sp, r7
 231              		.cfi_def_cfa_register 13
 232              		@ sp needed
 233 001e 80BD     		pop	{r7, pc}
 234              		.cfi_endproc
 235              	.LFE67:
 236              		.size	motorTurnLeft, .-motorTurnLeft
 237              		.section	.text.motorTurnRight,"ax",%progbits
 238              		.align	2
 239              		.global	motorTurnRight
 240              		.thumb
 241              		.thumb_func
 242              		.type	motorTurnRight, %function
 243              	motorTurnRight:
 244              	.LFB68:
  77:main.c        **** 
  78:main.c        **** void motorTurnRight(int x){
 245              		.loc 1 78 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 8
 248              		@ frame_needed = 1, uses_anonymous_args = 0
 249 0000 80B5     		push	{r7, lr}
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 7, -8
 252              		.cfi_offset 14, -4
 253 0002 82B0     		sub	sp, sp, #8
 254              		.cfi_def_cfa_offset 16
 255 0004 00AF     		add	r7, sp, #0
 256              		.cfi_def_cfa_register 7
 257 0006 7860     		str	r0, [r7, #4]
  79:main.c        ****     // TO DO
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 7


  80:main.c        ****     
  81:main.c        ****     PWM_1_WriteCompare(127);//200
 258              		.loc 1 81 0
 259 0008 7F20     		movs	r0, #127
 260 000a FFF7FEFF 		bl	PWM_1_WriteCompare
  82:main.c        ****     PWM_2_WriteCompare(x); //50
 261              		.loc 1 82 0
 262 000e 7B68     		ldr	r3, [r7, #4]
 263 0010 DBB2     		uxtb	r3, r3
 264 0012 1846     		mov	r0, r3
 265 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
  83:main.c        ****    CyDelay(rota90Left);
 266              		.loc 1 83 0
 267 0018 FA20     		movs	r0, #250
 268 001a FFF7FEFF 		bl	CyDelay
  84:main.c        **** }
 269              		.loc 1 84 0
 270 001e 00BF     		nop
 271 0020 0837     		adds	r7, r7, #8
 272              		.cfi_def_cfa_offset 8
 273 0022 BD46     		mov	sp, r7
 274              		.cfi_def_cfa_register 13
 275              		@ sp needed
 276 0024 80BD     		pop	{r7, pc}
 277              		.cfi_endproc
 278              	.LFE68:
 279              		.size	motorTurnRight, .-motorTurnRight
 280              		.global	changeMotor
 281 0026 00BF     		.bss
 282 0012 0000     		.align	2
 283              		.type	changeMotor, %object
 284              		.size	changeMotor, 4
 285              	changeMotor:
 286 0014 00000000 		.space	4
 287              		.global	checkLight
 288              		.align	2
 289              		.type	checkLight, %object
 290              		.size	checkLight, 4
 291              	checkLight:
 292 0018 00000000 		.space	4
 293              		.global	lightState
 294              		.align	2
 295              		.type	lightState, %object
 296              		.size	lightState, 4
 297              	lightState:
 298 001c 00000000 		.space	4
 299              		.global	lightDetectedFront
 300              		.align	2
 301              		.type	lightDetectedFront, %object
 302              		.size	lightDetectedFront, 12
 303              	lightDetectedFront:
 304 0020 00000000 		.space	12
 304      00000000 
 304      00000000 
 305              		.global	counteoc
 306              		.align	2
 307              		.type	counteoc, %object
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 8


 308              		.size	counteoc, 4
 309              	counteoc:
 310 002c 00000000 		.space	4
 311              		.global	processSensors
 312              		.align	2
 313              		.type	processSensors, %object
 314              		.size	processSensors, 4
 315              	processSensors:
 316 0030 00000000 		.space	4
 317              		.section	.text.isr_eoc_Interrupt_test,"ax",%progbits
 318              		.align	2
 319              		.global	isr_eoc_Interrupt_test
 320              		.thumb
 321              		.thumb_func
 322              		.type	isr_eoc_Interrupt_test, %function
 323              	isr_eoc_Interrupt_test:
 324              	.LFB69:
  85:main.c        **** int changeMotor=0;
  86:main.c        **** int checkLight =0;
  87:main.c        **** int lightState=0;
  88:main.c        **** volatile int lightDetectedFront[3] = {0,0,0};
  89:main.c        **** volatile int counteoc = 0;
  90:main.c        **** volatile int processSensors = 0;
  91:main.c        **** CY_ISR(isr_eoc_Interrupt_test)
  92:main.c        **** {
 325              		.loc 1 92 0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 8
 328              		@ frame_needed = 1, uses_anonymous_args = 0
 329 0000 80B5     		push	{r7, lr}
 330              		.cfi_def_cfa_offset 8
 331              		.cfi_offset 7, -8
 332              		.cfi_offset 14, -4
 333 0002 82B0     		sub	sp, sp, #8
 334              		.cfi_def_cfa_offset 16
 335 0004 00AF     		add	r7, sp, #0
 336              		.cfi_def_cfa_register 7
  93:main.c        ****     #ifdef isr_test_INTERRUPT_INTERRUPT_CALLBACK
  94:main.c        ****         isr_TS_Interrupt_InterruptCallback();
  95:main.c        ****     #endif /* isr_eoc_INTERRUPT_INTERRUPT_CALLBACK */ 
  96:main.c        **** 
  97:main.c        ****     /*  Place your Interrupt code here. */
  98:main.c        ****     /* `#START isr_eoc_Interrupt` */
  99:main.c        ****     int16 valueQ3 =  ADC_GetResult16(Q3CHANNEL);
 337              		.loc 1 99 0
 338 0006 0020     		movs	r0, #0
 339 0008 FFF7FEFF 		bl	ADC_GetResult16
 340 000c 0346     		mov	r3, r0
 341 000e FB80     		strh	r3, [r7, #6]	@ movhi
 100:main.c        ****     int16 valueQ4 =  ADC_GetResult16(Q4CHANNEL);
 342              		.loc 1 100 0
 343 0010 0120     		movs	r0, #1
 344 0012 FFF7FEFF 		bl	ADC_GetResult16
 345 0016 0346     		mov	r3, r0
 346 0018 BB80     		strh	r3, [r7, #4]	@ movhi
 101:main.c        ****     int16 valueQ5 =  ADC_GetResult16(Q5CHANNEL);
 347              		.loc 1 101 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 9


 348 001a 0220     		movs	r0, #2
 349 001c FFF7FEFF 		bl	ADC_GetResult16
 350 0020 0346     		mov	r3, r0
 351 0022 7B80     		strh	r3, [r7, #2]	@ movhi
 102:main.c        ****     // get value from ADC then convert to DAC to send to external LEDs
 103:main.c        ****     if (counteoc < 10) {
 352              		.loc 1 103 0
 353 0024 174B     		ldr	r3, .L13
 354 0026 1B68     		ldr	r3, [r3]
 355 0028 092B     		cmp	r3, #9
 356 002a 20DC     		bgt	.L7
 104:main.c        ****         //2211
 105:main.c        ****         if (valueQ3 >= 2211) {
 357              		.loc 1 105 0
 358 002c B7F90630 		ldrsh	r3, [r7, #6]
 359 0030 40F6A202 		movw	r2, #2210
 360 0034 9342     		cmp	r3, r2
 361 0036 02DD     		ble	.L8
 106:main.c        ****         //set flag for white light detected
 107:main.c        ****         lightDetectedFront[0] = 1;
 362              		.loc 1 107 0
 363 0038 134B     		ldr	r3, .L13+4
 364 003a 0122     		movs	r2, #1
 365 003c 1A60     		str	r2, [r3]
 366              	.L8:
 108:main.c        ****         }
 109:main.c        ****         if (valueQ4 >= 2211) {
 367              		.loc 1 109 0
 368 003e B7F90430 		ldrsh	r3, [r7, #4]
 369 0042 40F6A202 		movw	r2, #2210
 370 0046 9342     		cmp	r3, r2
 371 0048 02DD     		ble	.L9
 110:main.c        ****         //set flag for white light detected
 111:main.c        ****         lightDetectedFront[1] = 1;
 372              		.loc 1 111 0
 373 004a 0F4B     		ldr	r3, .L13+4
 374 004c 0122     		movs	r2, #1
 375 004e 5A60     		str	r2, [r3, #4]
 376              	.L9:
 112:main.c        ****         }
 113:main.c        ****     
 114:main.c        ****         if (valueQ5 >= 2211) {
 377              		.loc 1 114 0
 378 0050 B7F90230 		ldrsh	r3, [r7, #2]
 379 0054 40F6A202 		movw	r2, #2210
 380 0058 9342     		cmp	r3, r2
 381 005a 02DD     		ble	.L10
 115:main.c        ****         //set flag for white light detected
 116:main.c        ****         lightDetectedFront[2] = 1;
 382              		.loc 1 116 0
 383 005c 0A4B     		ldr	r3, .L13+4
 384 005e 0122     		movs	r2, #1
 385 0060 9A60     		str	r2, [r3, #8]
 386              	.L10:
 117:main.c        ****         }
 118:main.c        ****         
 119:main.c        ****         counteoc++;
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 10


 387              		.loc 1 119 0
 388 0062 084B     		ldr	r3, .L13
 389 0064 1B68     		ldr	r3, [r3]
 390 0066 0133     		adds	r3, r3, #1
 391 0068 064A     		ldr	r2, .L13
 392 006a 1360     		str	r3, [r2]
 120:main.c        ****     } else {
 121:main.c        ****         processSensors = 1;   
 122:main.c        ****         counteoc = 0;
 123:main.c        ****     }
 124:main.c        ****     /* `#END` */
 125:main.c        **** }
 393              		.loc 1 125 0
 394 006c 05E0     		b	.L12
 395              	.L7:
 121:main.c        ****         counteoc = 0;
 396              		.loc 1 121 0
 397 006e 074B     		ldr	r3, .L13+8
 398 0070 0122     		movs	r2, #1
 399 0072 1A60     		str	r2, [r3]
 122:main.c        ****     }
 400              		.loc 1 122 0
 401 0074 034B     		ldr	r3, .L13
 402 0076 0022     		movs	r2, #0
 403 0078 1A60     		str	r2, [r3]
 404              	.L12:
 405              		.loc 1 125 0
 406 007a 00BF     		nop
 407 007c 0837     		adds	r7, r7, #8
 408              		.cfi_def_cfa_offset 8
 409 007e BD46     		mov	sp, r7
 410              		.cfi_def_cfa_register 13
 411              		@ sp needed
 412 0080 80BD     		pop	{r7, pc}
 413              	.L14:
 414 0082 00BF     		.align	2
 415              	.L13:
 416 0084 00000000 		.word	counteoc
 417 0088 00000000 		.word	lightDetectedFront
 418 008c 00000000 		.word	processSensors
 419              		.cfi_endproc
 420              	.LFE69:
 421              		.size	isr_eoc_Interrupt_test, .-isr_eoc_Interrupt_test
 422              		.bss
 423              	count:
 424 0034 00       		.space	1
 425              		.section	.text.isr_motor_interrupt_speed,"ax",%progbits
 426              		.align	2
 427              		.global	isr_motor_interrupt_speed
 428              		.thumb
 429              		.thumb_func
 430              		.type	isr_motor_interrupt_speed, %function
 431              	isr_motor_interrupt_speed:
 432              	.LFB70:
 126:main.c        **** // NEED TO INCREASE/DECREASE SPEED TOO
 127:main.c        **** // AND IMPLEMENT LIGHT SENSOR THINGS
 128:main.c        **** volatile static int8 count;
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 11


 129:main.c        **** CY_ISR(isr_motor_interrupt_speed)
 130:main.c        **** {
 433              		.loc 1 130 0
 434              		.cfi_startproc
 435              		@ args = 0, pretend = 0, frame = 0
 436              		@ frame_needed = 1, uses_anonymous_args = 0
 437              		@ link register save eliminated.
 438 0000 80B4     		push	{r7}
 439              		.cfi_def_cfa_offset 4
 440              		.cfi_offset 7, -4
 441 0002 00AF     		add	r7, sp, #0
 442              		.cfi_def_cfa_register 7
 131:main.c        ****     #ifdef isr_motor_INTERRUPT_INTERRUPT_CALLBACK
 132:main.c        ****         isr_motor_Interrupt_InterruptCallback();
 133:main.c        ****     #endif /* isr_motor_INTERRUPT_INTERRUPT_CALLBACK */ 
 134:main.c        **** 
 135:main.c        ****     /*  Place your Interrupt code here. */
 136:main.c        ****     /* `#START isr_motor_Interrupt` */
 137:main.c        ****       /*int16 currCountMotor2 = QuadDec_M2_GetCounter();
 138:main.c        ****       int16 currCountMotor1 = QuadDec_M1_GetCounter();  
 139:main.c        ****       
 140:main.c        ****      speedMotor1 = (currCountMotor1 - prevcountMotor1) / 0.2;
 141:main.c        ****      speedMotor2 = (currCountMotor2 - prevcountMotor2) / 0.2;
 142:main.c        ****     
 143:main.c        ****       prevcountMotor1 = currCountMotor1;
 144:main.c        ****       prevcountMotor2 = currCountMotor2;*/
 145:main.c        ****     
 146:main.c        ****     /* `#END` */
 147:main.c        **** }
 443              		.loc 1 147 0
 444 0004 00BF     		nop
 445 0006 BD46     		mov	sp, r7
 446              		.cfi_def_cfa_register 13
 447              		@ sp needed
 448 0008 80BC     		pop	{r7}
 449              		.cfi_restore 7
 450              		.cfi_def_cfa_offset 0
 451 000a 7047     		bx	lr
 452              		.cfi_endproc
 453              	.LFE70:
 454              		.size	isr_motor_interrupt_speed, .-isr_motor_interrupt_speed
 455              		.section	.rodata
 456              		.align	2
 457              	.LC0:
 458 0000 4D6F746F 		.ascii	"Motor 1 - start count: %d, end count: %d \012\000"
 458      72203120 
 458      2D207374 
 458      61727420 
 458      636F756E 
 459 002b 00       		.align	2
 460              	.LC1:
 461 002c 4D6F746F 		.ascii	"Motor 2 - start count: %d, end count: %d \012\000"
 461      72203220 
 461      2D207374 
 461      61727420 
 461      636F756E 
 462              		.section	.text.motorCount,"ax",%progbits
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 12


 463              		.align	2
 464              		.global	motorCount
 465              		.thumb
 466              		.thumb_func
 467              		.type	motorCount, %function
 468              	motorCount:
 469              	.LFB71:
 148:main.c        **** void motorCount(){
 470              		.loc 1 148 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 20008
 473              		@ frame_needed = 1, uses_anonymous_args = 0
 474 0000 80B5     		push	{r7, lr}
 475              		.cfi_def_cfa_offset 8
 476              		.cfi_offset 7, -8
 477              		.cfi_offset 14, -4
 478 0002 ADF59C4D 		sub	sp, sp, #19968
 479              		.cfi_def_cfa_offset 19976
 480 0006 8AB0     		sub	sp, sp, #40
 481              		.cfi_def_cfa_offset 20016
 482 0008 00AF     		add	r7, sp, #0
 483              		.cfi_def_cfa_register 7
 149:main.c        ****     int16 beginningCountMotor1 = 0;
 484              		.loc 1 149 0
 485 000a 0023     		movs	r3, #0
 486 000c 07F59C42 		add	r2, r7, #19968
 487 0010 02F12602 		add	r2, r2, #38
 488 0014 1380     		strh	r3, [r2]	@ movhi
 150:main.c        ****     int16 beginningCountMotor2 = 0;
 489              		.loc 1 150 0
 490 0016 0023     		movs	r3, #0
 491 0018 07F59C42 		add	r2, r7, #19968
 492 001c 02F12402 		add	r2, r2, #36
 493 0020 1380     		strh	r3, [r2]	@ movhi
 151:main.c        ****     int16 endCountMotor2 = QuadDec_M2_GetCounter();
 494              		.loc 1 151 0
 495 0022 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 496 0026 0346     		mov	r3, r0
 497 0028 07F59C42 		add	r2, r7, #19968
 498 002c 02F12202 		add	r2, r2, #34
 499 0030 1380     		strh	r3, [r2]	@ movhi
 152:main.c        ****     int16 endCountMotor1 = QuadDec_M1_GetCounter();
 500              		.loc 1 152 0
 501 0032 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 502 0036 0346     		mov	r3, r0
 503 0038 07F59C42 		add	r2, r7, #19968
 504 003c 02F12002 		add	r2, r2, #32
 505 0040 1380     		strh	r3, [r2]	@ movhi
 153:main.c        ****     char motor1String[10000]; 
 154:main.c        ****     sprintf(motor1String,"Motor 1 - start count: %d, end count: %d \n", beginningCountMotor1, endCo
 506              		.loc 1 154 0
 507 0042 07F59C43 		add	r3, r7, #19968
 508 0046 03F12603 		add	r3, r3, #38
 509 004a B3F90020 		ldrsh	r2, [r3]
 510 004e 07F59C43 		add	r3, r7, #19968
 511 0052 03F12003 		add	r3, r3, #32
 512 0056 B3F90030 		ldrsh	r3, [r3]
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 13


 513 005a 07F51C50 		add	r0, r7, #9984
 514 005e 00F12800 		add	r0, r0, #40
 515 0062 1838     		subs	r0, r0, #24
 516 0064 1449     		ldr	r1, .L17
 517 0066 FFF7FEFF 		bl	sprintf
 155:main.c        ****     char motor2String[10000];
 156:main.c        ****     sprintf(motor2String,"Motor 2 - start count: %d, end count: %d \n", beginningCountMotor2 , endC
 518              		.loc 1 156 0
 519 006a 07F59C43 		add	r3, r7, #19968
 520 006e 03F12403 		add	r3, r3, #36
 521 0072 B3F90020 		ldrsh	r2, [r3]
 522 0076 07F59C43 		add	r3, r7, #19968
 523 007a 03F12203 		add	r3, r3, #34
 524 007e B3F90030 		ldrsh	r3, [r3]
 525 0082 07F12800 		add	r0, r7, #40
 526 0086 2838     		subs	r0, r0, #40
 527 0088 0C49     		ldr	r1, .L17+4
 528 008a FFF7FEFF 		bl	sprintf
 157:main.c        ****     
 158:main.c        ****     usbPutString(motor1String);
 529              		.loc 1 158 0
 530 008e 07F51C53 		add	r3, r7, #9984
 531 0092 03F12803 		add	r3, r3, #40
 532 0096 183B     		subs	r3, r3, #24
 533 0098 1846     		mov	r0, r3
 534 009a FFF7FEFF 		bl	usbPutString
 159:main.c        ****     usbPutString(motor2String);
 535              		.loc 1 159 0
 536 009e 07F12803 		add	r3, r7, #40
 537 00a2 283B     		subs	r3, r3, #40
 538 00a4 1846     		mov	r0, r3
 539 00a6 FFF7FEFF 		bl	usbPutString
 160:main.c        **** 
 161:main.c        **** }
 540              		.loc 1 161 0
 541 00aa 00BF     		nop
 542 00ac 07F59C47 		add	r7, r7, #19968
 543 00b0 2837     		adds	r7, r7, #40
 544              		.cfi_def_cfa_offset 8
 545 00b2 BD46     		mov	sp, r7
 546              		.cfi_def_cfa_register 13
 547              		@ sp needed
 548 00b4 80BD     		pop	{r7, pc}
 549              	.L18:
 550 00b6 00BF     		.align	2
 551              	.L17:
 552 00b8 00000000 		.word	.LC0
 553 00bc 2C000000 		.word	.LC1
 554              		.cfi_endproc
 555              	.LFE71:
 556              		.size	motorCount, .-motorCount
 557              		.section	.text.motorRun,"ax",%progbits
 558              		.align	2
 559              		.global	motorRun
 560              		.thumb
 561              		.thumb_func
 562              		.type	motorRun, %function
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 14


 563              	motorRun:
 564              	.LFB72:
 162:main.c        **** 
 163:main.c        **** void motorRun(){
 565              		.loc 1 163 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 1, uses_anonymous_args = 0
 569 0000 80B5     		push	{r7, lr}
 570              		.cfi_def_cfa_offset 8
 571              		.cfi_offset 7, -8
 572              		.cfi_offset 14, -4
 573 0002 00AF     		add	r7, sp, #0
 574              		.cfi_def_cfa_register 7
 164:main.c        ****     
 165:main.c        ****     
 166:main.c        ****     
 167:main.c        ****     PWM_1_Start();
 575              		.loc 1 167 0
 576 0004 FFF7FEFF 		bl	PWM_1_Start
 168:main.c        ****     PWM_2_Start();
 577              		.loc 1 168 0
 578 0008 FFF7FEFF 		bl	PWM_2_Start
 169:main.c        **** 
 170:main.c        **** 
 171:main.c        ****     motorStop();
 579              		.loc 1 171 0
 580 000c FFF7FEFF 		bl	motorStop
 172:main.c        ****     CyDelay(2000); // so we have time to set the robot up
 581              		.loc 1 172 0
 582 0010 4FF4FA60 		mov	r0, #2000
 583 0014 FFF7FEFF 		bl	CyDelay
 173:main.c        ****     motorGoStraight();
 584              		.loc 1 173 0
 585 0018 FFF7FEFF 		bl	motorGoStraight
 174:main.c        ****     CyDelay(2000);
 586              		.loc 1 174 0
 587 001c 4FF4FA60 		mov	r0, #2000
 588 0020 FFF7FEFF 		bl	CyDelay
 175:main.c        ****     motorStop();
 589              		.loc 1 175 0
 590 0024 FFF7FEFF 		bl	motorStop
 176:main.c        ****     
 177:main.c        ****     //motorGoBackwards();
 178:main.c        **** 
 179:main.c        ****     
 180:main.c        ****     //CyDelay(2000);
 181:main.c        ****  
 182:main.c        ****     //motorStop();
 183:main.c        ****     //motorCount();//checks count per second.
 184:main.c        **** 
 185:main.c        **** }
 591              		.loc 1 185 0
 592 0028 00BF     		nop
 593 002a 80BD     		pop	{r7, pc}
 594              		.cfi_endproc
 595              	.LFE72:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 15


 596              		.size	motorRun, .-motorRun
 597              		.section	.text.isr_TS_Interrupt_sample,"ax",%progbits
 598              		.align	2
 599              		.global	isr_TS_Interrupt_sample
 600              		.thumb
 601              		.thumb_func
 602              		.type	isr_TS_Interrupt_sample, %function
 603              	isr_TS_Interrupt_sample:
 604              	.LFB73:
 186:main.c        **** CY_ISR(isr_TS_Interrupt_sample)
 187:main.c        **** {
 605              		.loc 1 187 0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 0
 608              		@ frame_needed = 1, uses_anonymous_args = 0
 609 0000 80B5     		push	{r7, lr}
 610              		.cfi_def_cfa_offset 8
 611              		.cfi_offset 7, -8
 612              		.cfi_offset 14, -4
 613 0002 00AF     		add	r7, sp, #0
 614              		.cfi_def_cfa_register 7
 188:main.c        ****     #ifdef isr_TS_INTERRUPT_INTERRUPT_CALLBACK
 189:main.c        ****         isr_TS_Interrupt_InterruptCallback();
 190:main.c        ****     #endif /* isr_TS_INTERRUPT_INTERRUPT_CALLBACK */ 
 191:main.c        ****         ADC_StartConvert();
 615              		.loc 1 191 0
 616 0004 FFF7FEFF 		bl	ADC_StartConvert
 192:main.c        ****     /*  Place your Interrupt code here. */
 193:main.c        ****     /* `#START isr_TS_Interrupt` */
 194:main.c        **** 
 195:main.c        ****     /* `#END` */
 196:main.c        **** }
 617              		.loc 1 196 0
 618 0008 00BF     		nop
 619 000a 80BD     		pop	{r7, pc}
 620              		.cfi_endproc
 621              	.LFE73:
 622              		.size	isr_TS_Interrupt_sample, .-isr_TS_Interrupt_sample
 623              		.section	.text.main,"ax",%progbits
 624              		.align	2
 625              		.global	main
 626              		.thumb
 627              		.thumb_func
 628              		.type	main, %function
 629              	main:
 630              	.LFB74:
 197:main.c        **** 
 198:main.c        **** 
 199:main.c        **** int main()
 200:main.c        **** {
 631              		.loc 1 200 0
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 8
 634              		@ frame_needed = 1, uses_anonymous_args = 0
 635 0000 80B5     		push	{r7, lr}
 636              		.cfi_def_cfa_offset 8
 637              		.cfi_offset 7, -8
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 16


 638              		.cfi_offset 14, -4
 639 0002 82B0     		sub	sp, sp, #8
 640              		.cfi_def_cfa_offset 16
 641 0004 00AF     		add	r7, sp, #0
 642              		.cfi_def_cfa_register 7
 201:main.c        ****     
 202:main.c        **** 
 203:main.c        **** // --------------------------------    
 204:main.c        **** // ----- INITIALIZATIONS ----------
 205:main.c        ****     CYGlobalIntEnable;
 643              		.loc 1 205 0
 644              		.syntax unified
 645              	@ 205 "main.c" 1
 646 0006 62B6     		CPSIE   i
 647              	@ 0 "" 2
 206:main.c        ****     count  = 0;
 648              		.loc 1 206 0
 649              		.thumb
 650              		.syntax unified
 651 0008 324B     		ldr	r3, .L31
 652 000a 0022     		movs	r2, #0
 653 000c 1A70     		strb	r2, [r3]
 207:main.c        ****     
 208:main.c        ****    
 209:main.c        ****     Timer_TS_Start();
 654              		.loc 1 209 0
 655 000e FFF7FEFF 		bl	Timer_TS_Start
 210:main.c        ****     Timer_Motor_Start();
 656              		.loc 1 210 0
 657 0012 FFF7FEFF 		bl	Timer_Motor_Start
 211:main.c        ****     QuadDec_M1_Start();
 658              		.loc 1 211 0
 659 0016 FFF7FEFF 		bl	QuadDec_M1_Start
 212:main.c        ****     QuadDec_M2_Start(); //init the quadencoder,
 660              		.loc 1 212 0
 661 001a FFF7FEFF 		bl	QuadDec_M2_Start
 213:main.c        ****     //isr_motor_StartEx(isr_motor_interrupt_speed);
 214:main.c        ****     isr_TS_StartEx(isr_TS_Interrupt_sample);
 662              		.loc 1 214 0
 663 001e 2E48     		ldr	r0, .L31+4
 664 0020 FFF7FEFF 		bl	isr_TS_StartEx
 215:main.c        ****     isr_eoc_StartEx(isr_eoc_Interrupt_test);
 665              		.loc 1 215 0
 666 0024 2D48     		ldr	r0, .L31+8
 667 0026 FFF7FEFF 		bl	isr_eoc_StartEx
 216:main.c        ****     
 217:main.c        ****     ADC_Start();
 668              		.loc 1 217 0
 669 002a FFF7FEFF 		bl	ADC_Start
 218:main.c        ****     //ADC_StartConvert();
 219:main.c        ****     
 220:main.c        ****     PWM_1_Start();
 670              		.loc 1 220 0
 671 002e FFF7FEFF 		bl	PWM_1_Start
 221:main.c        ****     PWM_2_Start();
 672              		.loc 1 221 0
 673 0032 FFF7FEFF 		bl	PWM_2_Start
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 17


 222:main.c        ****     
 223:main.c        ****     LED_Write(0);
 674              		.loc 1 223 0
 675 0036 0020     		movs	r0, #0
 676 0038 FFF7FEFF 		bl	LED_Write
 224:main.c        ****     ///////IF NOT USINNG MOTOR RUN DO PWM START STUFF
 225:main.c        ****     // SO write compare is a measure of speed
 226:main.c        ****     // And Cy delay delays the running of the motor and duration that it travels
 227:main.c        ****     //look at motor RUn config above for more info.
 228:main.c        ****     motorStop();
 677              		.loc 1 228 0
 678 003c FFF7FEFF 		bl	motorStop
 229:main.c        ****     CyDelay(2000); // to prep
 679              		.loc 1 229 0
 680 0040 4FF4FA60 		mov	r0, #2000
 681 0044 FFF7FEFF 		bl	CyDelay
 682              	.L30:
 230:main.c        ****    /* while(QuadDec_M1_GetCounter()<travelDist){
 231:main.c        ****     //where counter is value we want it to stop at.
 232:main.c        ****         motorGoStraight();
 233:main.c        ****     
 234:main.c        ****     
 235:main.c        ****     }*/
 236:main.c        **** 
 237:main.c        ****     
 238:main.c        ****     //motorStop();
 239:main.c        ****    // CyDelay(2000); // so we have time to set the robot up
 240:main.c        ****     //motorTurnLeft();
 241:main.c        ****     //motorStop();
 242:main.c        ****     //motorCount();//checks count per second.
 243:main.c        ****      
 244:main.c        ****     
 245:main.c        ****     
 246:main.c        **** 
 247:main.c        ****     
 248:main.c        **** 
 249:main.c        ****     
 250:main.c        **** // ------USB SETUP ----------------    
 251:main.c        **** //#ifdef USE_USB    
 252:main.c        **** //    USBUART_Start(0,USBUART_5V_OPERATION);
 253:main.c        **** //#endif        
 254:main.c        **** //        
 255:main.c        **** //    RF_BT_SELECT_Write(0);
 256:main.c        **** //    motorCount();//checks count per second.
 257:main.c        **** 
 258:main.c        ****     //usbPutString(displaystring);
 259:main.c        ****     while(1)
 260:main.c        ****     {
 261:main.c        ****         /* Place your application code here. */
 262:main.c        ****         
 263:main.c        ****         //if Q3 SENSES BLACK LIGHT BUT Q4 DOES NOT SENSE THE BLACK LIGHT MOVE TOWARDS THE RIGHT TO 
 264:main.c        ****     // IF Q3 AND Q4 SENSES TURN 90 DEGREES LEFT - intersection
 265:main.c        ****     // IF Q5 BUT NOT Q4 SENSES BLACK LIGHT MOVE TOWARDS THE LEFT TO REALIGN CENTER
 266:main.c        ****     // IF Q5 AND Q4 TURN 90 DEGREES RIGHT - intersection
 267:main.c        ****        
 268:main.c        ****         if (processSensors == 1) {
 683              		.loc 1 268 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 18


 684 0048 254B     		ldr	r3, .L31+12
 685 004a 1B68     		ldr	r3, [r3]
 686 004c 012B     		cmp	r3, #1
 687 004e FBD1     		bne	.L30
 688              	.LBB2:
 269:main.c        ****             
 270:main.c        ****             //make decision
 271:main.c        ****             
 272:main.c        ****             //checks intersection
 273:main.c        ****             //int leftIntersection= (lightDetectedFront[0] == 1 && lightDetectedFront[1]==1);
 274:main.c        ****             //int rightIntersection=  (lightDetectedFront[2] == 1 && lightDetectedFront[1]==1);
 275:main.c        ****             
 276:main.c        ****            //check intersectin
 277:main.c        ****             ///mazeIntersection(leftIntersection,rightIntersection);
 278:main.c        ****         
 279:main.c        ****             int operation = convertSensorBinary();
 689              		.loc 1 279 0
 690 0050 FFF7FEFF 		bl	convertSensorBinary
 691 0054 7860     		str	r0, [r7, #4]
 280:main.c        ****             
 281:main.c        ****             switch(operation){
 692              		.loc 1 281 0
 693 0056 7B68     		ldr	r3, [r7, #4]
 694 0058 072B     		cmp	r3, #7
 695 005a 2BD8     		bhi	.L23
 696 005c 01A2     		adr	r2, .L25
 697 005e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 698 0062 00BF     		.p2align 2
 699              	.L25:
 700 0064 85000000 		.word	.L24+1
 701 0068 B5000000 		.word	.L23+1
 702 006c B5000000 		.word	.L23+1
 703 0070 B5000000 		.word	.L23+1
 704 0074 91000000 		.word	.L26+1
 705 0078 9D000000 		.word	.L27+1
 706 007c B5000000 		.word	.L23+1
 707 0080 A9000000 		.word	.L28+1
 708              		.p2align 1
 709              	.L24:
 282:main.c        ****             
 283:main.c        ****                 case 0: // all sensors are in black
 284:main.c        ****                     motorGoStraight();
 710              		.loc 1 284 0
 711 0084 FFF7FEFF 		bl	motorGoStraight
 285:main.c        ****                     LED_Write(1);
 712              		.loc 1 285 0
 713 0088 0120     		movs	r0, #1
 714 008a FFF7FEFF 		bl	LED_Write
 286:main.c        ****                     break;
 715              		.loc 1 286 0
 716 008e 13E0     		b	.L29
 717              	.L26:
 287:main.c        ****                 
 288:main.c        **** //                case 1:
 289:main.c        **** //                    motorStop();
 290:main.c        **** //                    LED_Write(0);
 291:main.c        **** //                    break;
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 19


 292:main.c        **** //                
 293:main.c        **** //                
 294:main.c        **** //                case 2:
 295:main.c        **** //                    motorStop();
 296:main.c        **** //                    LED_Write(0);
 297:main.c        **** //                    break;
 298:main.c        **** //                
 299:main.c        **** //                case 3:
 300:main.c        **** //                    motorStop();
 301:main.c        **** //                    LED_Write(0);
 302:main.c        **** //                    break;
 303:main.c        ****                 
 304:main.c        ****                 case 4:
 305:main.c        ****                     motorStop();
 718              		.loc 1 305 0
 719 0090 FFF7FEFF 		bl	motorStop
 306:main.c        ****                     motorTurnRight(100);
 720              		.loc 1 306 0
 721 0094 6420     		movs	r0, #100
 722 0096 FFF7FEFF 		bl	motorTurnRight
 307:main.c        ****                     break;
 723              		.loc 1 307 0
 724 009a 0DE0     		b	.L29
 725              	.L27:
 308:main.c        ****                     
 309:main.c        ****                 case 5:
 310:main.c        ****                     LED_Write(1);
 726              		.loc 1 310 0
 727 009c 0120     		movs	r0, #1
 728 009e FFF7FEFF 		bl	LED_Write
 311:main.c        ****                     motorGoStraight();
 729              		.loc 1 311 0
 730 00a2 FFF7FEFF 		bl	motorGoStraight
 312:main.c        ****                     break;
 731              		.loc 1 312 0
 732 00a6 07E0     		b	.L29
 733              	.L28:
 313:main.c        **** 
 314:main.c        **** //                case 6:
 315:main.c        **** //                    motorStop();
 316:main.c        **** //                    LED_Write(0);
 317:main.c        **** //                    break;
 318:main.c        ****                     
 319:main.c        ****                 case 7:
 320:main.c        ****             
 321:main.c        ****                     motorStop();
 734              		.loc 1 321 0
 735 00a8 FFF7FEFF 		bl	motorStop
 322:main.c        ****                     LED_Write(0);
 736              		.loc 1 322 0
 737 00ac 0020     		movs	r0, #0
 738 00ae FFF7FEFF 		bl	LED_Write
 323:main.c        ****                     break;
 739              		.loc 1 323 0
 740 00b2 01E0     		b	.L29
 741              	.L23:
 324:main.c        ****             
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 20


 325:main.c        ****                 default:
 326:main.c        ****                     motorStop();
 742              		.loc 1 326 0
 743 00b4 FFF7FEFF 		bl	motorStop
 744              	.L29:
 327:main.c        ****             
 328:main.c        ****                 
 329:main.c        ****             
 330:main.c        ****             }
 331:main.c        **** //            if(leftIntersection){
 332:main.c        **** //                motorTurnLeft(55);
 333:main.c        **** //            
 334:main.c        **** //            
 335:main.c        **** //                CyDelay(250);
 336:main.c        **** //            }
 337:main.c        **** //            
 338:main.c        **** //            if(rightIntersection){
 339:main.c        **** //                motorTurnRight(55);
 340:main.c        **** //                
 341:main.c        **** //                CyDelay(250);//small rotation need small time
 342:main.c        **** //            
 343:main.c        **** //            }
 344:main.c        ****             
 345:main.c        **** //            //Slight turns
 346:main.c        **** //            if(lightDetectedFront[0] == 1 && lightDetectedFront[1]==0){
 347:main.c        **** //                motorTurnRight(140);
 348:main.c        **** //                CyDelay(20);//small rotation need small time
 349:main.c        **** //            }
 350:main.c        **** //            
 351:main.c        **** //            if(lightDetectedFront[2] == 0 && lightDetectedFront[1]==1){
 352:main.c        **** //                motorTurnLeft(140);
 353:main.c        **** //                CyDelay(20);//small rotation need small time
 354:main.c        **** //            }
 355:main.c        **** 
 356:main.c        ****            
 357:main.c        ****             //reset variable.
 358:main.c        ****             processSensors = 0;
 745              		.loc 1 358 0
 746 00b8 094B     		ldr	r3, .L31+12
 747 00ba 0022     		movs	r2, #0
 748 00bc 1A60     		str	r2, [r3]
 359:main.c        ****             //reset counter
 360:main.c        ****             //reset flags for lightsensors because it checks every 10 iterations, adds delay/
 361:main.c        ****             lightDetectedFront[0] = 0;
 749              		.loc 1 361 0
 750 00be 094B     		ldr	r3, .L31+16
 751 00c0 0022     		movs	r2, #0
 752 00c2 1A60     		str	r2, [r3]
 362:main.c        ****             lightDetectedFront[1] = 0;
 753              		.loc 1 362 0
 754 00c4 074B     		ldr	r3, .L31+16
 755 00c6 0022     		movs	r2, #0
 756 00c8 5A60     		str	r2, [r3, #4]
 363:main.c        ****             lightDetectedFront[2] = 0;
 757              		.loc 1 363 0
 758 00ca 064B     		ldr	r3, .L31+16
 759 00cc 0022     		movs	r2, #0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 21


 760 00ce 9A60     		str	r2, [r3, #8]
 761              	.LBE2:
 364:main.c        ****           
 365:main.c        ****         }
 366:main.c        ****         
 367:main.c        ****     }   
 762              		.loc 1 367 0
 763 00d0 BAE7     		b	.L30
 764              	.L32:
 765 00d2 00BF     		.align	2
 766              	.L31:
 767 00d4 34000000 		.word	count
 768 00d8 00000000 		.word	isr_TS_Interrupt_sample
 769 00dc 00000000 		.word	isr_eoc_Interrupt_test
 770 00e0 00000000 		.word	processSensors
 771 00e4 00000000 		.word	lightDetectedFront
 772              		.cfi_endproc
 773              	.LFE74:
 774              		.size	main, .-main
 775              		.section	.text.convertSensorBinary,"ax",%progbits
 776              		.align	2
 777              		.global	convertSensorBinary
 778              		.thumb
 779              		.thumb_func
 780              		.type	convertSensorBinary, %function
 781              	convertSensorBinary:
 782              	.LFB75:
 368:main.c        **** }
 369:main.c        **** 
 370:main.c        ****   
 371:main.c        **** 
 372:main.c        **** 
 373:main.c        **** 
 374:main.c        **** int convertSensorBinary()
 375:main.c        **** {
 783              		.loc 1 375 0
 784              		.cfi_startproc
 785              		@ args = 0, pretend = 0, frame = 16
 786              		@ frame_needed = 1, uses_anonymous_args = 0
 787              		@ link register save eliminated.
 788 0000 80B4     		push	{r7}
 789              		.cfi_def_cfa_offset 4
 790              		.cfi_offset 7, -4
 791 0002 85B0     		sub	sp, sp, #20
 792              		.cfi_def_cfa_offset 24
 793 0004 00AF     		add	r7, sp, #0
 794              		.cfi_def_cfa_register 7
 376:main.c        ****    int value=0;
 795              		.loc 1 376 0
 796 0006 0023     		movs	r3, #0
 797 0008 FB60     		str	r3, [r7, #12]
 377:main.c        ****    int binaryIndex = 0;
 798              		.loc 1 377 0
 799 000a 0023     		movs	r3, #0
 800 000c BB60     		str	r3, [r7, #8]
 801              	.LBB3:
 378:main.c        ****    for (int i=2;i>=0;i--){
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 22


 802              		.loc 1 378 0
 803 000e 0223     		movs	r3, #2
 804 0010 7B60     		str	r3, [r7, #4]
 805 0012 16E0     		b	.L34
 806              	.L35:
 807              	.LBB4:
 379:main.c        ****     int x=lightDetectedFront[i];
 808              		.loc 1 379 0 discriminator 3
 809 0014 0F4A     		ldr	r2, .L37
 810 0016 7B68     		ldr	r3, [r7, #4]
 811 0018 52F82330 		ldr	r3, [r2, r3, lsl #2]
 812 001c 3B60     		str	r3, [r7]
 380:main.c        ****     value = value + ((2^binaryIndex) * lightDetectedFront[i]); // eg first value, Q2 is in whitelig
 813              		.loc 1 380 0 discriminator 3
 814 001e BB68     		ldr	r3, [r7, #8]
 815 0020 83F00203 		eor	r3, r3, #2
 816 0024 0B49     		ldr	r1, .L37
 817 0026 7A68     		ldr	r2, [r7, #4]
 818 0028 51F82220 		ldr	r2, [r1, r2, lsl #2]
 819 002c 02FB03F3 		mul	r3, r2, r3
 820 0030 FA68     		ldr	r2, [r7, #12]
 821 0032 1344     		add	r3, r3, r2
 822 0034 FB60     		str	r3, [r7, #12]
 381:main.c        ****     binaryIndex++;
 823              		.loc 1 381 0 discriminator 3
 824 0036 BB68     		ldr	r3, [r7, #8]
 825 0038 0133     		adds	r3, r3, #1
 826 003a BB60     		str	r3, [r7, #8]
 827              	.LBE4:
 378:main.c        ****     int x=lightDetectedFront[i];
 828              		.loc 1 378 0 discriminator 3
 829 003c 7B68     		ldr	r3, [r7, #4]
 830 003e 013B     		subs	r3, r3, #1
 831 0040 7B60     		str	r3, [r7, #4]
 832              	.L34:
 378:main.c        ****     int x=lightDetectedFront[i];
 833              		.loc 1 378 0 is_stmt 0 discriminator 1
 834 0042 7B68     		ldr	r3, [r7, #4]
 835 0044 002B     		cmp	r3, #0
 836 0046 E5DA     		bge	.L35
 837              	.LBE3:
 382:main.c        ****     }
 383:main.c        **** 
 384:main.c        ****     return value;
 838              		.loc 1 384 0 is_stmt 1
 839 0048 FB68     		ldr	r3, [r7, #12]
 385:main.c        **** }
 840              		.loc 1 385 0
 841 004a 1846     		mov	r0, r3
 842 004c 1437     		adds	r7, r7, #20
 843              		.cfi_def_cfa_offset 4
 844 004e BD46     		mov	sp, r7
 845              		.cfi_def_cfa_register 13
 846              		@ sp needed
 847 0050 80BC     		pop	{r7}
 848              		.cfi_restore 7
 849              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 23


 850 0052 7047     		bx	lr
 851              	.L38:
 852              		.align	2
 853              	.L37:
 854 0054 00000000 		.word	lightDetectedFront
 855              		.cfi_endproc
 856              	.LFE75:
 857              		.size	convertSensorBinary, .-convertSensorBinary
 858              		.section	.text.usbPutString,"ax",%progbits
 859              		.align	2
 860              		.global	usbPutString
 861              		.thumb
 862              		.thumb_func
 863              		.type	usbPutString, %function
 864              	usbPutString:
 865              	.LFB76:
 386:main.c        **** //* ========================================
 387:main.c        **** void usbPutString(char *s)
 388:main.c        **** {
 866              		.loc 1 388 0
 867              		.cfi_startproc
 868              		@ args = 0, pretend = 0, frame = 8
 869              		@ frame_needed = 1, uses_anonymous_args = 0
 870 0000 80B5     		push	{r7, lr}
 871              		.cfi_def_cfa_offset 8
 872              		.cfi_offset 7, -8
 873              		.cfi_offset 14, -4
 874 0002 82B0     		sub	sp, sp, #8
 875              		.cfi_def_cfa_offset 16
 876 0004 00AF     		add	r7, sp, #0
 877              		.cfi_def_cfa_register 7
 878 0006 7860     		str	r0, [r7, #4]
 389:main.c        **** // !! Assumes that *s is a string with allocated space >=64 chars     
 390:main.c        **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 391:main.c        **** //  length to 62 char (63rd char is a '!')
 392:main.c        **** 
 393:main.c        **** #ifdef USE_USB     
 394:main.c        ****     while (USBUART_CDCIsReady() == 0);
 879              		.loc 1 394 0
 880 0008 00BF     		nop
 881              	.L40:
 882              		.loc 1 394 0 is_stmt 0 discriminator 1
 883 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 884 000e 0346     		mov	r3, r0
 885 0010 002B     		cmp	r3, #0
 886 0012 FAD0     		beq	.L40
 395:main.c        ****     s[63]='\0';
 887              		.loc 1 395 0 is_stmt 1
 888 0014 7B68     		ldr	r3, [r7, #4]
 889 0016 3F33     		adds	r3, r3, #63
 890 0018 0022     		movs	r2, #0
 891 001a 1A70     		strb	r2, [r3]
 396:main.c        ****     s[62]='!';
 892              		.loc 1 396 0
 893 001c 7B68     		ldr	r3, [r7, #4]
 894 001e 3E33     		adds	r3, r3, #62
 895 0020 2122     		movs	r2, #33
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 24


 896 0022 1A70     		strb	r2, [r3]
 397:main.c        ****     USBUART_PutData((uint8*)s,strlen(s));
 897              		.loc 1 397 0
 898 0024 7868     		ldr	r0, [r7, #4]
 899 0026 FFF7FEFF 		bl	strlen
 900 002a 0346     		mov	r3, r0
 901 002c 9BB2     		uxth	r3, r3
 902 002e 1946     		mov	r1, r3
 903 0030 7868     		ldr	r0, [r7, #4]
 904 0032 FFF7FEFF 		bl	USBUART_PutData
 398:main.c        **** #endif
 399:main.c        **** }
 905              		.loc 1 399 0
 906 0036 00BF     		nop
 907 0038 0837     		adds	r7, r7, #8
 908              		.cfi_def_cfa_offset 8
 909 003a BD46     		mov	sp, r7
 910              		.cfi_def_cfa_register 13
 911              		@ sp needed
 912 003c 80BD     		pop	{r7, pc}
 913              		.cfi_endproc
 914              	.LFE76:
 915              		.size	usbPutString, .-usbPutString
 916 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 917              		.align	2
 918              		.global	usbPutChar
 919              		.thumb
 920              		.thumb_func
 921              		.type	usbPutChar, %function
 922              	usbPutChar:
 923              	.LFB77:
 400:main.c        **** //* ========================================
 401:main.c        **** void usbPutChar(char c)
 402:main.c        **** {
 924              		.loc 1 402 0
 925              		.cfi_startproc
 926              		@ args = 0, pretend = 0, frame = 8
 927              		@ frame_needed = 1, uses_anonymous_args = 0
 928 0000 80B5     		push	{r7, lr}
 929              		.cfi_def_cfa_offset 8
 930              		.cfi_offset 7, -8
 931              		.cfi_offset 14, -4
 932 0002 82B0     		sub	sp, sp, #8
 933              		.cfi_def_cfa_offset 16
 934 0004 00AF     		add	r7, sp, #0
 935              		.cfi_def_cfa_register 7
 936 0006 0346     		mov	r3, r0
 937 0008 FB71     		strb	r3, [r7, #7]
 403:main.c        **** #ifdef USE_USB     
 404:main.c        ****     while (USBUART_CDCIsReady() == 0);
 938              		.loc 1 404 0
 939 000a 00BF     		nop
 940              	.L42:
 941              		.loc 1 404 0 is_stmt 0 discriminator 1
 942 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 943 0010 0346     		mov	r3, r0
 944 0012 002B     		cmp	r3, #0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 25


 945 0014 FAD0     		beq	.L42
 405:main.c        ****     USBUART_PutChar(c);
 946              		.loc 1 405 0 is_stmt 1
 947 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 948 0018 1846     		mov	r0, r3
 949 001a FFF7FEFF 		bl	USBUART_PutChar
 406:main.c        **** #endif    
 407:main.c        **** }
 950              		.loc 1 407 0
 951 001e 00BF     		nop
 952 0020 0837     		adds	r7, r7, #8
 953              		.cfi_def_cfa_offset 8
 954 0022 BD46     		mov	sp, r7
 955              		.cfi_def_cfa_register 13
 956              		@ sp needed
 957 0024 80BD     		pop	{r7, pc}
 958              		.cfi_endproc
 959              	.LFE77:
 960              		.size	usbPutChar, .-usbPutChar
 961 0026 00BF     		.section	.text.handle_usb,"ax",%progbits
 962              		.align	2
 963              		.global	handle_usb
 964              		.thumb
 965              		.thumb_func
 966              		.type	handle_usb, %function
 967              	handle_usb:
 968              	.LFB78:
 408:main.c        **** //* ========================================
 409:main.c        **** void handle_usb()
 410:main.c        **** {
 969              		.loc 1 410 0
 970              		.cfi_startproc
 971              		@ args = 0, pretend = 0, frame = 8
 972              		@ frame_needed = 1, uses_anonymous_args = 0
 973 0000 80B5     		push	{r7, lr}
 974              		.cfi_def_cfa_offset 8
 975              		.cfi_offset 7, -8
 976              		.cfi_offset 14, -4
 977 0002 82B0     		sub	sp, sp, #8
 978              		.cfi_def_cfa_offset 16
 979 0004 00AF     		add	r7, sp, #0
 980              		.cfi_def_cfa_register 7
 411:main.c        ****     // handles input at terminal, echos it back to the terminal
 412:main.c        ****     // turn echo OFF, key emulation: only CR
 413:main.c        ****     // entered string is made available in 'line' and 'flag_KB_string' is set
 414:main.c        ****     
 415:main.c        ****     static uint8 usbStarted = FALSE;
 416:main.c        ****     static uint16 usbBufCount = 0;
 417:main.c        ****     uint8 c; 
 418:main.c        ****     
 419:main.c        **** 
 420:main.c        ****     if (!usbStarted)
 981              		.loc 1 420 0
 982 0006 2B4B     		ldr	r3, .L53
 983 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 984 000a 002B     		cmp	r3, #0
 985 000c 0AD1     		bne	.L44
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 26


 421:main.c        ****     {
 422:main.c        ****         if (USBUART_GetConfiguration())
 986              		.loc 1 422 0
 987 000e FFF7FEFF 		bl	USBUART_GetConfiguration
 988 0012 0346     		mov	r3, r0
 989 0014 002B     		cmp	r3, #0
 990 0016 49D0     		beq	.L52
 423:main.c        ****         {
 424:main.c        ****             USBUART_CDC_Init();
 991              		.loc 1 424 0
 992 0018 FFF7FEFF 		bl	USBUART_CDC_Init
 425:main.c        ****             usbStarted = TRUE;
 993              		.loc 1 425 0
 994 001c 254B     		ldr	r3, .L53
 995 001e 0122     		movs	r2, #1
 996 0020 1A70     		strb	r2, [r3]
 426:main.c        ****         }
 427:main.c        ****     }
 428:main.c        ****     else
 429:main.c        ****     {
 430:main.c        ****         if (USBUART_DataIsReady() != 0)
 431:main.c        ****         {  
 432:main.c        ****             c = USBUART_GetChar();
 433:main.c        **** 
 434:main.c        ****             if ((c == 13) || (c == 10))
 435:main.c        ****             {
 436:main.c        **** //                if (usbBufCount > 0)
 437:main.c        ****                 {
 438:main.c        ****                     entry[usbBufCount]= '\0';
 439:main.c        ****                     strcpy(line,entry);
 440:main.c        ****                     usbBufCount = 0;
 441:main.c        ****                     flag_KB_string = 1;
 442:main.c        ****                 }
 443:main.c        ****             }
 444:main.c        ****             else 
 445:main.c        ****             {
 446:main.c        ****                 if (((c == CHAR_BACKSP) || (c == CHAR_DEL) ) && (usbBufCount > 0) )
 447:main.c        ****                     usbBufCount--;
 448:main.c        ****                 else
 449:main.c        ****                 {
 450:main.c        ****                     if (usbBufCount > (BUF_SIZE-2) ) // one less else strtok triggers a crash
 451:main.c        ****                     {
 452:main.c        ****                        USBUART_PutChar('!');        
 453:main.c        ****                     }
 454:main.c        ****                     else
 455:main.c        ****                         entry[usbBufCount++] = c;  
 456:main.c        ****                 }  
 457:main.c        ****             }
 458:main.c        ****         }
 459:main.c        ****     }    
 460:main.c        **** }
 997              		.loc 1 460 0
 998 0022 43E0     		b	.L52
 999              	.L44:
 430:main.c        ****         {  
 1000              		.loc 1 430 0
 1001 0024 FFF7FEFF 		bl	USBUART_DataIsReady
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 27


 1002 0028 0346     		mov	r3, r0
 1003 002a 002B     		cmp	r3, #0
 1004 002c 3ED0     		beq	.L52
 432:main.c        **** 
 1005              		.loc 1 432 0
 1006 002e FFF7FEFF 		bl	USBUART_GetChar
 1007 0032 0346     		mov	r3, r0
 1008 0034 FB71     		strb	r3, [r7, #7]
 434:main.c        ****             {
 1009              		.loc 1 434 0
 1010 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1011 0038 0D2B     		cmp	r3, #13
 1012 003a 02D0     		beq	.L47
 434:main.c        ****             {
 1013              		.loc 1 434 0 is_stmt 0 discriminator 1
 1014 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1015 003e 0A2B     		cmp	r3, #10
 1016 0040 10D1     		bne	.L48
 1017              	.L47:
 438:main.c        ****                     strcpy(line,entry);
 1018              		.loc 1 438 0 is_stmt 1
 1019 0042 1D4B     		ldr	r3, .L53+4
 1020 0044 1B88     		ldrh	r3, [r3]
 1021 0046 1A46     		mov	r2, r3
 1022 0048 1C4B     		ldr	r3, .L53+8
 1023 004a 0021     		movs	r1, #0
 1024 004c 9954     		strb	r1, [r3, r2]
 439:main.c        ****                     usbBufCount = 0;
 1025              		.loc 1 439 0
 1026 004e 1B49     		ldr	r1, .L53+8
 1027 0050 1B48     		ldr	r0, .L53+12
 1028 0052 FFF7FEFF 		bl	strcpy
 440:main.c        ****                     flag_KB_string = 1;
 1029              		.loc 1 440 0
 1030 0056 184B     		ldr	r3, .L53+4
 1031 0058 0022     		movs	r2, #0
 1032 005a 1A80     		strh	r2, [r3]	@ movhi
 441:main.c        ****                 }
 1033              		.loc 1 441 0
 1034 005c 194B     		ldr	r3, .L53+16
 1035 005e 0122     		movs	r2, #1
 1036 0060 1A70     		strb	r2, [r3]
 1037 0062 23E0     		b	.L46
 1038              	.L48:
 446:main.c        ****                     usbBufCount--;
 1039              		.loc 1 446 0
 1040 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1041 0066 082B     		cmp	r3, #8
 1042 0068 02D0     		beq	.L49
 446:main.c        ****                     usbBufCount--;
 1043              		.loc 1 446 0 is_stmt 0 discriminator 2
 1044 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1045 006c 7F2B     		cmp	r3, #127
 1046 006e 0AD1     		bne	.L50
 1047              	.L49:
 446:main.c        ****                     usbBufCount--;
 1048              		.loc 1 446 0 discriminator 3
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 28


 1049 0070 114B     		ldr	r3, .L53+4
 1050 0072 1B88     		ldrh	r3, [r3]
 1051 0074 002B     		cmp	r3, #0
 1052 0076 06D0     		beq	.L50
 447:main.c        ****                 else
 1053              		.loc 1 447 0 is_stmt 1
 1054 0078 0F4B     		ldr	r3, .L53+4
 1055 007a 1B88     		ldrh	r3, [r3]
 1056 007c 013B     		subs	r3, r3, #1
 1057 007e 9AB2     		uxth	r2, r3
 1058 0080 0D4B     		ldr	r3, .L53+4
 1059 0082 1A80     		strh	r2, [r3]	@ movhi
 1060 0084 12E0     		b	.L46
 1061              	.L50:
 450:main.c        ****                     {
 1062              		.loc 1 450 0
 1063 0086 0C4B     		ldr	r3, .L53+4
 1064 0088 1B88     		ldrh	r3, [r3]
 1065 008a 3E2B     		cmp	r3, #62
 1066 008c 03D9     		bls	.L51
 452:main.c        ****                     }
 1067              		.loc 1 452 0
 1068 008e 2120     		movs	r0, #33
 1069 0090 FFF7FEFF 		bl	USBUART_PutChar
 1070              		.loc 1 460 0
 1071 0094 0AE0     		b	.L52
 1072              	.L51:
 455:main.c        ****                 }  
 1073              		.loc 1 455 0
 1074 0096 084B     		ldr	r3, .L53+4
 1075 0098 1B88     		ldrh	r3, [r3]
 1076 009a 5A1C     		adds	r2, r3, #1
 1077 009c 91B2     		uxth	r1, r2
 1078 009e 064A     		ldr	r2, .L53+4
 1079 00a0 1180     		strh	r1, [r2]	@ movhi
 1080 00a2 1946     		mov	r1, r3
 1081 00a4 054A     		ldr	r2, .L53+8
 1082 00a6 FB79     		ldrb	r3, [r7, #7]
 1083 00a8 5354     		strb	r3, [r2, r1]
 1084              		.loc 1 460 0
 1085 00aa FFE7     		b	.L52
 1086              	.L46:
 1087              	.L52:
 1088 00ac 00BF     		nop
 1089 00ae 0837     		adds	r7, r7, #8
 1090              		.cfi_def_cfa_offset 8
 1091 00b0 BD46     		mov	sp, r7
 1092              		.cfi_def_cfa_register 13
 1093              		@ sp needed
 1094 00b2 80BD     		pop	{r7, pc}
 1095              	.L54:
 1096              		.align	2
 1097              	.L53:
 1098 00b4 35000000 		.word	usbStarted.8280
 1099 00b8 36000000 		.word	usbBufCount.8281
 1100 00bc 00000000 		.word	entry
 1101 00c0 00000000 		.word	line
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 29


 1102 00c4 00000000 		.word	flag_KB_string
 1103              		.cfi_endproc
 1104              	.LFE78:
 1105              		.size	handle_usb, .-handle_usb
 1106              		.bss
 1107              	usbStarted.8280:
 1108 0035 00       		.space	1
 1109              		.align	1
 1110              	usbBufCount.8281:
 1111 0036 0000     		.space	2
 1112              		.text
 1113              	.Letext0:
 1114              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1115              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1116              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1117              		.file 5 "vars.h"
 1118              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1119              		.section	.debug_info,"",%progbits
 1120              	.Ldebug_info0:
 1121 0000 4C060000 		.4byte	0x64c
 1122 0004 0400     		.2byte	0x4
 1123 0006 00000000 		.4byte	.Ldebug_abbrev0
 1124 000a 04       		.byte	0x4
 1125 000b 01       		.uleb128 0x1
 1126 000c B5000000 		.4byte	.LASF92
 1127 0010 0C       		.byte	0xc
 1128 0011 68040000 		.4byte	.LASF93
 1129 0015 8D010000 		.4byte	.LASF94
 1130 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1131 001d 00000000 		.4byte	0
 1132 0021 00000000 		.4byte	.Ldebug_line0
 1133 0025 02       		.uleb128 0x2
 1134 0026 01       		.byte	0x1
 1135 0027 06       		.byte	0x6
 1136 0028 73030000 		.4byte	.LASF0
 1137 002c 02       		.uleb128 0x2
 1138 002d 01       		.byte	0x1
 1139 002e 08       		.byte	0x8
 1140 002f 3A030000 		.4byte	.LASF1
 1141 0033 02       		.uleb128 0x2
 1142 0034 02       		.byte	0x2
 1143 0035 05       		.byte	0x5
 1144 0036 8B000000 		.4byte	.LASF2
 1145 003a 02       		.uleb128 0x2
 1146 003b 02       		.byte	0x2
 1147 003c 07       		.byte	0x7
 1148 003d 1C040000 		.4byte	.LASF3
 1149 0041 03       		.uleb128 0x3
 1150 0042 A7040000 		.4byte	.LASF12
 1151 0046 02       		.byte	0x2
 1152 0047 3F       		.byte	0x3f
 1153 0048 4C000000 		.4byte	0x4c
 1154 004c 02       		.uleb128 0x2
 1155 004d 04       		.byte	0x4
 1156 004e 05       		.byte	0x5
 1157 004f A3020000 		.4byte	.LASF4
 1158 0053 02       		.uleb128 0x2
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 30


 1159 0054 04       		.byte	0x4
 1160 0055 07       		.byte	0x7
 1161 0056 6F040000 		.4byte	.LASF5
 1162 005a 02       		.uleb128 0x2
 1163 005b 08       		.byte	0x8
 1164 005c 05       		.byte	0x5
 1165 005d 57020000 		.4byte	.LASF6
 1166 0061 02       		.uleb128 0x2
 1167 0062 08       		.byte	0x8
 1168 0063 07       		.byte	0x7
 1169 0064 7F030000 		.4byte	.LASF7
 1170 0068 04       		.uleb128 0x4
 1171 0069 04       		.byte	0x4
 1172 006a 05       		.byte	0x5
 1173 006b 696E7400 		.ascii	"int\000"
 1174 006f 02       		.uleb128 0x2
 1175 0070 04       		.byte	0x4
 1176 0071 07       		.byte	0x7
 1177 0072 96030000 		.4byte	.LASF8
 1178 0076 02       		.uleb128 0x2
 1179 0077 08       		.byte	0x8
 1180 0078 04       		.byte	0x4
 1181 0079 28030000 		.4byte	.LASF9
 1182 007d 02       		.uleb128 0x2
 1183 007e 04       		.byte	0x4
 1184 007f 07       		.byte	0x7
 1185 0080 A2000000 		.4byte	.LASF10
 1186 0084 05       		.uleb128 0x5
 1187 0085 04       		.byte	0x4
 1188 0086 8A000000 		.4byte	0x8a
 1189 008a 02       		.uleb128 0x2
 1190 008b 01       		.byte	0x1
 1191 008c 08       		.byte	0x8
 1192 008d EF030000 		.4byte	.LASF11
 1193 0091 03       		.uleb128 0x3
 1194 0092 FF030000 		.4byte	.LASF13
 1195 0096 03       		.byte	0x3
 1196 0097 2C       		.byte	0x2c
 1197 0098 41000000 		.4byte	0x41
 1198 009c 06       		.uleb128 0x6
 1199 009d 87010000 		.4byte	.LASF14
 1200 00a1 04       		.byte	0x4
 1201 00a2 E401     		.2byte	0x1e4
 1202 00a4 2C000000 		.4byte	0x2c
 1203 00a8 06       		.uleb128 0x6
 1204 00a9 74010000 		.4byte	.LASF15
 1205 00ad 04       		.byte	0x4
 1206 00ae E501     		.2byte	0x1e5
 1207 00b0 3A000000 		.4byte	0x3a
 1208 00b4 06       		.uleb128 0x6
 1209 00b5 72020000 		.4byte	.LASF16
 1210 00b9 04       		.byte	0x4
 1211 00ba E701     		.2byte	0x1e7
 1212 00bc 25000000 		.4byte	0x25
 1213 00c0 06       		.uleb128 0x6
 1214 00c1 81010000 		.4byte	.LASF17
 1215 00c5 04       		.byte	0x4
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 31


 1216 00c6 E801     		.2byte	0x1e8
 1217 00c8 33000000 		.4byte	0x33
 1218 00cc 02       		.uleb128 0x2
 1219 00cd 04       		.byte	0x4
 1220 00ce 04       		.byte	0x4
 1221 00cf 37020000 		.4byte	.LASF18
 1222 00d3 02       		.uleb128 0x2
 1223 00d4 08       		.byte	0x8
 1224 00d5 04       		.byte	0x4
 1225 00d6 29000000 		.4byte	.LASF19
 1226 00da 07       		.uleb128 0x7
 1227 00db D9030000 		.4byte	.LASF95
 1228 00df 20       		.byte	0x20
 1229 00e0 05       		.byte	0x5
 1230 00e1 29       		.byte	0x29
 1231 00e2 B3010000 		.4byte	0x1b3
 1232 00e6 08       		.uleb128 0x8
 1233 00e7 65050000 		.4byte	.LASF20
 1234 00eb 05       		.byte	0x5
 1235 00ec 2A       		.byte	0x2a
 1236 00ed B4000000 		.4byte	0xb4
 1237 00f1 00       		.byte	0
 1238 00f2 08       		.uleb128 0x8
 1239 00f3 7B010000 		.4byte	.LASF21
 1240 00f7 05       		.byte	0x5
 1241 00f8 2B       		.byte	0x2b
 1242 00f9 9C000000 		.4byte	0x9c
 1243 00fd 01       		.byte	0x1
 1244 00fe 08       		.uleb128 0x8
 1245 00ff F4030000 		.4byte	.LASF22
 1246 0103 05       		.byte	0x5
 1247 0104 2C       		.byte	0x2c
 1248 0105 C0000000 		.4byte	0xc0
 1249 0109 02       		.byte	0x2
 1250 010a 08       		.uleb128 0x8
 1251 010b 1E050000 		.4byte	.LASF23
 1252 010f 05       		.byte	0x5
 1253 0110 2D       		.byte	0x2d
 1254 0111 C0000000 		.4byte	0xc0
 1255 0115 04       		.byte	0x4
 1256 0116 08       		.uleb128 0x8
 1257 0117 6A050000 		.4byte	.LASF24
 1258 011b 05       		.byte	0x5
 1259 011c 2E       		.byte	0x2e
 1260 011d C0000000 		.4byte	0xc0
 1261 0121 06       		.byte	0x6
 1262 0122 08       		.uleb128 0x8
 1263 0123 9B020000 		.4byte	.LASF25
 1264 0127 05       		.byte	0x5
 1265 0128 2F       		.byte	0x2f
 1266 0129 C0000000 		.4byte	0xc0
 1267 012d 08       		.byte	0x8
 1268 012e 08       		.uleb128 0x8
 1269 012f DA040000 		.4byte	.LASF26
 1270 0133 05       		.byte	0x5
 1271 0134 30       		.byte	0x30
 1272 0135 C0000000 		.4byte	0xc0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 32


 1273 0139 0A       		.byte	0xa
 1274 013a 08       		.uleb128 0x8
 1275 013b 5B030000 		.4byte	.LASF27
 1276 013f 05       		.byte	0x5
 1277 0140 31       		.byte	0x31
 1278 0141 C0000000 		.4byte	0xc0
 1279 0145 0C       		.byte	0xc
 1280 0146 08       		.uleb128 0x8
 1281 0147 8E020000 		.4byte	.LASF28
 1282 014b 05       		.byte	0x5
 1283 014c 32       		.byte	0x32
 1284 014d C0000000 		.4byte	0xc0
 1285 0151 0E       		.byte	0xe
 1286 0152 08       		.uleb128 0x8
 1287 0153 C7030000 		.4byte	.LASF29
 1288 0157 05       		.byte	0x5
 1289 0158 33       		.byte	0x33
 1290 0159 C0000000 		.4byte	0xc0
 1291 015d 10       		.byte	0x10
 1292 015e 08       		.uleb128 0x8
 1293 015f 07040000 		.4byte	.LASF30
 1294 0163 05       		.byte	0x5
 1295 0164 34       		.byte	0x34
 1296 0165 C0000000 		.4byte	0xc0
 1297 0169 12       		.byte	0x12
 1298 016a 08       		.uleb128 0x8
 1299 016b 2F040000 		.4byte	.LASF31
 1300 016f 05       		.byte	0x5
 1301 0170 35       		.byte	0x35
 1302 0171 C0000000 		.4byte	0xc0
 1303 0175 14       		.byte	0x14
 1304 0176 08       		.uleb128 0x8
 1305 0177 49050000 		.4byte	.LASF32
 1306 017b 05       		.byte	0x5
 1307 017c 36       		.byte	0x36
 1308 017d C0000000 		.4byte	0xc0
 1309 0181 16       		.byte	0x16
 1310 0182 08       		.uleb128 0x8
 1311 0183 83000000 		.4byte	.LASF33
 1312 0187 05       		.byte	0x5
 1313 0188 37       		.byte	0x37
 1314 0189 C0000000 		.4byte	0xc0
 1315 018d 18       		.byte	0x18
 1316 018e 08       		.uleb128 0x8
 1317 018f 86020000 		.4byte	.LASF34
 1318 0193 05       		.byte	0x5
 1319 0194 38       		.byte	0x38
 1320 0195 C0000000 		.4byte	0xc0
 1321 0199 1A       		.byte	0x1a
 1322 019a 08       		.uleb128 0x8
 1323 019b BE030000 		.4byte	.LASF35
 1324 019f 05       		.byte	0x5
 1325 01a0 39       		.byte	0x39
 1326 01a1 C0000000 		.4byte	0xc0
 1327 01a5 1C       		.byte	0x1c
 1328 01a6 08       		.uleb128 0x8
 1329 01a7 0F040000 		.4byte	.LASF36
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 33


 1330 01ab 05       		.byte	0x5
 1331 01ac 3A       		.byte	0x3a
 1332 01ad C0000000 		.4byte	0xc0
 1333 01b1 1E       		.byte	0x1e
 1334 01b2 00       		.byte	0
 1335 01b3 09       		.uleb128 0x9
 1336 01b4 BF040000 		.4byte	.LASF37
 1337 01b8 01       		.byte	0x1
 1338 01b9 32       		.byte	0x32
 1339 01ba 00000000 		.4byte	.LFB64
 1340 01be 14000000 		.4byte	.LFE64-.LFB64
 1341 01c2 01       		.uleb128 0x1
 1342 01c3 9C       		.byte	0x9c
 1343 01c4 09       		.uleb128 0x9
 1344 01c5 67000000 		.4byte	.LASF38
 1345 01c9 01       		.byte	0x1
 1346 01ca 38       		.byte	0x38
 1347 01cb 00000000 		.4byte	.LFB65
 1348 01cf 14000000 		.4byte	.LFE65-.LFB65
 1349 01d3 01       		.uleb128 0x1
 1350 01d4 9C       		.byte	0x9c
 1351 01d5 09       		.uleb128 0x9
 1352 01d6 00000000 		.4byte	.LASF39
 1353 01da 01       		.byte	0x1
 1354 01db 3E       		.byte	0x3e
 1355 01dc 00000000 		.4byte	.LFB66
 1356 01e0 14000000 		.4byte	.LFE66-.LFB66
 1357 01e4 01       		.uleb128 0x1
 1358 01e5 9C       		.byte	0x9c
 1359 01e6 0A       		.uleb128 0xa
 1360 01e7 B1040000 		.4byte	.LASF40
 1361 01eb 01       		.byte	0x1
 1362 01ec 43       		.byte	0x43
 1363 01ed 00000000 		.4byte	.LFB67
 1364 01f1 20000000 		.4byte	.LFE67-.LFB67
 1365 01f5 01       		.uleb128 0x1
 1366 01f6 9C       		.byte	0x9c
 1367 01f7 08020000 		.4byte	0x208
 1368 01fb 0B       		.uleb128 0xb
 1369 01fc 7800     		.ascii	"x\000"
 1370 01fe 01       		.byte	0x1
 1371 01ff 43       		.byte	0x43
 1372 0200 68000000 		.4byte	0x68
 1373 0204 02       		.uleb128 0x2
 1374 0205 91       		.byte	0x91
 1375 0206 74       		.sleb128 -12
 1376 0207 00       		.byte	0
 1377 0208 0A       		.uleb128 0xa
 1378 0209 56050000 		.4byte	.LASF41
 1379 020d 01       		.byte	0x1
 1380 020e 4E       		.byte	0x4e
 1381 020f 00000000 		.4byte	.LFB68
 1382 0213 26000000 		.4byte	.LFE68-.LFB68
 1383 0217 01       		.uleb128 0x1
 1384 0218 9C       		.byte	0x9c
 1385 0219 2A020000 		.4byte	0x22a
 1386 021d 0B       		.uleb128 0xb
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 34


 1387 021e 7800     		.ascii	"x\000"
 1388 0220 01       		.byte	0x1
 1389 0221 4E       		.byte	0x4e
 1390 0222 68000000 		.4byte	0x68
 1391 0226 02       		.uleb128 0x2
 1392 0227 91       		.byte	0x91
 1393 0228 74       		.sleb128 -12
 1394 0229 00       		.byte	0
 1395 022a 0A       		.uleb128 0xa
 1396 022b 50000000 		.4byte	.LASF42
 1397 022f 01       		.byte	0x1
 1398 0230 5B       		.byte	0x5b
 1399 0231 00000000 		.4byte	.LFB69
 1400 0235 90000000 		.4byte	.LFE69-.LFB69
 1401 0239 01       		.uleb128 0x1
 1402 023a 9C       		.byte	0x9c
 1403 023b 6A020000 		.4byte	0x26a
 1404 023f 0C       		.uleb128 0xc
 1405 0240 48010000 		.4byte	.LASF43
 1406 0244 01       		.byte	0x1
 1407 0245 63       		.byte	0x63
 1408 0246 C0000000 		.4byte	0xc0
 1409 024a 02       		.uleb128 0x2
 1410 024b 91       		.byte	0x91
 1411 024c 76       		.sleb128 -10
 1412 024d 0C       		.uleb128 0xc
 1413 024e 50010000 		.4byte	.LASF44
 1414 0252 01       		.byte	0x1
 1415 0253 64       		.byte	0x64
 1416 0254 C0000000 		.4byte	0xc0
 1417 0258 02       		.uleb128 0x2
 1418 0259 91       		.byte	0x91
 1419 025a 74       		.sleb128 -12
 1420 025b 0C       		.uleb128 0xc
 1421 025c 58010000 		.4byte	.LASF45
 1422 0260 01       		.byte	0x1
 1423 0261 65       		.byte	0x65
 1424 0262 C0000000 		.4byte	0xc0
 1425 0266 02       		.uleb128 0x2
 1426 0267 91       		.byte	0x91
 1427 0268 72       		.sleb128 -14
 1428 0269 00       		.byte	0
 1429 026a 0D       		.uleb128 0xd
 1430 026b 3D020000 		.4byte	.LASF53
 1431 026f 01       		.byte	0x1
 1432 0270 81       		.byte	0x81
 1433 0271 00000000 		.4byte	.LFB70
 1434 0275 0C000000 		.4byte	.LFE70-.LFB70
 1435 0279 01       		.uleb128 0x1
 1436 027a 9C       		.byte	0x9c
 1437 027b 0E       		.uleb128 0xe
 1438 027c CF040000 		.4byte	.LASF62
 1439 0280 01       		.byte	0x1
 1440 0281 94       		.byte	0x94
 1441 0282 00000000 		.4byte	.LFB71
 1442 0286 C0000000 		.4byte	.LFE71-.LFB71
 1443 028a 01       		.uleb128 0x1
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 35


 1444 028b 9C       		.byte	0x9c
 1445 028c E9020000 		.4byte	0x2e9
 1446 0290 0C       		.uleb128 0xc
 1447 0291 AC020000 		.4byte	.LASF46
 1448 0295 01       		.byte	0x1
 1449 0296 95       		.byte	0x95
 1450 0297 C0000000 		.4byte	0xc0
 1451 029b 02       		.uleb128 0x2
 1452 029c 91       		.byte	0x91
 1453 029d 76       		.sleb128 -10
 1454 029e 0C       		.uleb128 0xc
 1455 029f C1020000 		.4byte	.LASF47
 1456 02a3 01       		.byte	0x1
 1457 02a4 96       		.byte	0x96
 1458 02a5 C0000000 		.4byte	0xc0
 1459 02a9 02       		.uleb128 0x2
 1460 02aa 91       		.byte	0x91
 1461 02ab 74       		.sleb128 -12
 1462 02ac 0C       		.uleb128 0xc
 1463 02ad 19030000 		.4byte	.LASF48
 1464 02b1 01       		.byte	0x1
 1465 02b2 97       		.byte	0x97
 1466 02b3 C0000000 		.4byte	0xc0
 1467 02b7 02       		.uleb128 0x2
 1468 02b8 91       		.byte	0x91
 1469 02b9 72       		.sleb128 -14
 1470 02ba 0C       		.uleb128 0xc
 1471 02bb 0A030000 		.4byte	.LASF49
 1472 02bf 01       		.byte	0x1
 1473 02c0 98       		.byte	0x98
 1474 02c1 C0000000 		.4byte	0xc0
 1475 02c5 02       		.uleb128 0x2
 1476 02c6 91       		.byte	0x91
 1477 02c7 70       		.sleb128 -16
 1478 02c8 0C       		.uleb128 0xc
 1479 02c9 D6020000 		.4byte	.LASF50
 1480 02cd 01       		.byte	0x1
 1481 02ce 99       		.byte	0x99
 1482 02cf E9020000 		.4byte	0x2e9
 1483 02d3 04       		.uleb128 0x4
 1484 02d4 91       		.byte	0x91
 1485 02d5 E0B17F   		.sleb128 -10016
 1486 02d8 0C       		.uleb128 0xc
 1487 02d9 3C050000 		.4byte	.LASF51
 1488 02dd 01       		.byte	0x1
 1489 02de 9B       		.byte	0x9b
 1490 02df E9020000 		.4byte	0x2e9
 1491 02e3 04       		.uleb128 0x4
 1492 02e4 91       		.byte	0x91
 1493 02e5 D0E37E   		.sleb128 -20016
 1494 02e8 00       		.byte	0
 1495 02e9 0F       		.uleb128 0xf
 1496 02ea 8A000000 		.4byte	0x8a
 1497 02ee FA020000 		.4byte	0x2fa
 1498 02f2 10       		.uleb128 0x10
 1499 02f3 7D000000 		.4byte	0x7d
 1500 02f7 0F27     		.2byte	0x270f
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 36


 1501 02f9 00       		.byte	0
 1502 02fa 09       		.uleb128 0x9
 1503 02fb 60010000 		.4byte	.LASF52
 1504 02ff 01       		.byte	0x1
 1505 0300 A3       		.byte	0xa3
 1506 0301 00000000 		.4byte	.LFB72
 1507 0305 2C000000 		.4byte	.LFE72-.LFB72
 1508 0309 01       		.uleb128 0x1
 1509 030a 9C       		.byte	0x9c
 1510 030b 11       		.uleb128 0x11
 1511 030c 0A000000 		.4byte	.LASF54
 1512 0310 01       		.byte	0x1
 1513 0311 BA       		.byte	0xba
 1514 0312 00000000 		.4byte	.LFB73
 1515 0316 0C000000 		.4byte	.LFE73-.LFB73
 1516 031a 01       		.uleb128 0x1
 1517 031b 9C       		.byte	0x9c
 1518 031c 12       		.uleb128 0x12
 1519 031d 43010000 		.4byte	.LASF55
 1520 0321 01       		.byte	0x1
 1521 0322 C7       		.byte	0xc7
 1522 0323 68000000 		.4byte	0x68
 1523 0327 00000000 		.4byte	.LFB74
 1524 032b E8000000 		.4byte	.LFE74-.LFB74
 1525 032f 01       		.uleb128 0x1
 1526 0330 9C       		.byte	0x9c
 1527 0331 4F030000 		.4byte	0x34f
 1528 0335 13       		.uleb128 0x13
 1529 0336 50000000 		.4byte	.LBB2
 1530 033a 80000000 		.4byte	.LBE2-.LBB2
 1531 033e 14       		.uleb128 0x14
 1532 033f CF030000 		.4byte	.LASF56
 1533 0343 01       		.byte	0x1
 1534 0344 1701     		.2byte	0x117
 1535 0346 68000000 		.4byte	0x68
 1536 034a 02       		.uleb128 0x2
 1537 034b 91       		.byte	0x91
 1538 034c 74       		.sleb128 -12
 1539 034d 00       		.byte	0
 1540 034e 00       		.byte	0
 1541 034f 15       		.uleb128 0x15
 1542 0350 54040000 		.4byte	.LASF57
 1543 0354 01       		.byte	0x1
 1544 0355 7601     		.2byte	0x176
 1545 0357 68000000 		.4byte	0x68
 1546 035b 00000000 		.4byte	.LFB75
 1547 035f 58000000 		.4byte	.LFE75-.LFB75
 1548 0363 01       		.uleb128 0x1
 1549 0364 9C       		.byte	0x9c
 1550 0365 B6030000 		.4byte	0x3b6
 1551 0369 14       		.uleb128 0x14
 1552 036a 36050000 		.4byte	.LASF58
 1553 036e 01       		.byte	0x1
 1554 036f 7801     		.2byte	0x178
 1555 0371 68000000 		.4byte	0x68
 1556 0375 02       		.uleb128 0x2
 1557 0376 91       		.byte	0x91
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 37


 1558 0377 74       		.sleb128 -12
 1559 0378 14       		.uleb128 0x14
 1560 0379 E3030000 		.4byte	.LASF59
 1561 037d 01       		.byte	0x1
 1562 037e 7901     		.2byte	0x179
 1563 0380 68000000 		.4byte	0x68
 1564 0384 02       		.uleb128 0x2
 1565 0385 91       		.byte	0x91
 1566 0386 70       		.sleb128 -16
 1567 0387 13       		.uleb128 0x13
 1568 0388 0E000000 		.4byte	.LBB3
 1569 038c 3A000000 		.4byte	.LBE3-.LBB3
 1570 0390 16       		.uleb128 0x16
 1571 0391 6900     		.ascii	"i\000"
 1572 0393 01       		.byte	0x1
 1573 0394 7A01     		.2byte	0x17a
 1574 0396 68000000 		.4byte	0x68
 1575 039a 02       		.uleb128 0x2
 1576 039b 91       		.byte	0x91
 1577 039c 6C       		.sleb128 -20
 1578 039d 13       		.uleb128 0x13
 1579 039e 14000000 		.4byte	.LBB4
 1580 03a2 28000000 		.4byte	.LBE4-.LBB4
 1581 03a6 16       		.uleb128 0x16
 1582 03a7 7800     		.ascii	"x\000"
 1583 03a9 01       		.byte	0x1
 1584 03aa 7B01     		.2byte	0x17b
 1585 03ac 68000000 		.4byte	0x68
 1586 03b0 02       		.uleb128 0x2
 1587 03b1 91       		.byte	0x91
 1588 03b2 68       		.sleb128 -24
 1589 03b3 00       		.byte	0
 1590 03b4 00       		.byte	0
 1591 03b5 00       		.byte	0
 1592 03b6 17       		.uleb128 0x17
 1593 03b7 65020000 		.4byte	.LASF60
 1594 03bb 01       		.byte	0x1
 1595 03bc 8301     		.2byte	0x183
 1596 03be 00000000 		.4byte	.LFB76
 1597 03c2 3E000000 		.4byte	.LFE76-.LFB76
 1598 03c6 01       		.uleb128 0x1
 1599 03c7 9C       		.byte	0x9c
 1600 03c8 DA030000 		.4byte	0x3da
 1601 03cc 18       		.uleb128 0x18
 1602 03cd 7300     		.ascii	"s\000"
 1603 03cf 01       		.byte	0x1
 1604 03d0 8301     		.2byte	0x183
 1605 03d2 84000000 		.4byte	0x84
 1606 03d6 02       		.uleb128 0x2
 1607 03d7 91       		.byte	0x91
 1608 03d8 74       		.sleb128 -12
 1609 03d9 00       		.byte	0
 1610 03da 17       		.uleb128 0x17
 1611 03db 3C000000 		.4byte	.LASF61
 1612 03df 01       		.byte	0x1
 1613 03e0 9101     		.2byte	0x191
 1614 03e2 00000000 		.4byte	.LFB77
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 38


 1615 03e6 26000000 		.4byte	.LFE77-.LFB77
 1616 03ea 01       		.uleb128 0x1
 1617 03eb 9C       		.byte	0x9c
 1618 03ec FE030000 		.4byte	0x3fe
 1619 03f0 18       		.uleb128 0x18
 1620 03f1 6300     		.ascii	"c\000"
 1621 03f3 01       		.byte	0x1
 1622 03f4 9101     		.2byte	0x191
 1623 03f6 8A000000 		.4byte	0x8a
 1624 03fa 02       		.uleb128 0x2
 1625 03fb 91       		.byte	0x91
 1626 03fc 77       		.sleb128 -9
 1627 03fd 00       		.byte	0
 1628 03fe 19       		.uleb128 0x19
 1629 03ff F7040000 		.4byte	.LASF63
 1630 0403 01       		.byte	0x1
 1631 0404 9901     		.2byte	0x199
 1632 0406 00000000 		.4byte	.LFB78
 1633 040a C8000000 		.4byte	.LFE78-.LFB78
 1634 040e 01       		.uleb128 0x1
 1635 040f 9C       		.byte	0x9c
 1636 0410 46040000 		.4byte	0x446
 1637 0414 14       		.uleb128 0x14
 1638 0415 81040000 		.4byte	.LASF64
 1639 0419 01       		.byte	0x1
 1640 041a 9F01     		.2byte	0x19f
 1641 041c 9C000000 		.4byte	0x9c
 1642 0420 05       		.uleb128 0x5
 1643 0421 03       		.byte	0x3
 1644 0422 35000000 		.4byte	usbStarted.8280
 1645 0426 14       		.uleb128 0x14
 1646 0427 B2030000 		.4byte	.LASF65
 1647 042b 01       		.byte	0x1
 1648 042c A001     		.2byte	0x1a0
 1649 042e A8000000 		.4byte	0xa8
 1650 0432 05       		.uleb128 0x5
 1651 0433 03       		.byte	0x3
 1652 0434 36000000 		.4byte	usbBufCount.8281
 1653 0438 16       		.uleb128 0x16
 1654 0439 6300     		.ascii	"c\000"
 1655 043b 01       		.byte	0x1
 1656 043c A101     		.2byte	0x1a1
 1657 043e 9C000000 		.4byte	0x9c
 1658 0442 02       		.uleb128 0x2
 1659 0443 91       		.byte	0x91
 1660 0444 77       		.sleb128 -9
 1661 0445 00       		.byte	0
 1662 0446 0C       		.uleb128 0xc
 1663 0447 95040000 		.4byte	.LASF66
 1664 044b 01       		.byte	0x1
 1665 044c 80       		.byte	0x80
 1666 044d 57040000 		.4byte	0x457
 1667 0451 05       		.uleb128 0x5
 1668 0452 03       		.byte	0x3
 1669 0453 34000000 		.4byte	count
 1670 0457 1A       		.uleb128 0x1a
 1671 0458 B4000000 		.4byte	0xb4
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 39


 1672 045c 1B       		.uleb128 0x1b
 1673 045d 29050000 		.4byte	.LASF67
 1674 0461 06       		.byte	0x6
 1675 0462 1207     		.2byte	0x712
 1676 0464 68040000 		.4byte	0x468
 1677 0468 1A       		.uleb128 0x1a
 1678 0469 91000000 		.4byte	0x91
 1679 046d 1C       		.uleb128 0x1c
 1680 046e 747300   		.ascii	"ts\000"
 1681 0471 05       		.byte	0x5
 1682 0472 10       		.byte	0x10
 1683 0473 9C000000 		.4byte	0x9c
 1684 0477 05       		.uleb128 0x5
 1685 0478 03       		.byte	0x3
 1686 0479 00000000 		.4byte	ts
 1687 047d 1D       		.uleb128 0x1d
 1688 047e 22000000 		.4byte	.LASF68
 1689 0482 05       		.byte	0x5
 1690 0483 11       		.byte	0x11
 1691 0484 A8000000 		.4byte	0xa8
 1692 0488 05       		.uleb128 0x5
 1693 0489 03       		.byte	0x3
 1694 048a 00000000 		.4byte	ts_enc
 1695 048e 1D       		.uleb128 0x1d
 1696 048f ED040000 		.4byte	.LASF69
 1697 0493 05       		.byte	0x5
 1698 0494 12       		.byte	0x12
 1699 0495 A8000000 		.4byte	0xa8
 1700 0499 05       		.uleb128 0x5
 1701 049a 03       		.byte	0x3
 1702 049b 00000000 		.4byte	ts_update
 1703 049f 1D       		.uleb128 0x1d
 1704 04a0 8C040000 		.4byte	.LASF70
 1705 04a4 05       		.byte	0x5
 1706 04a5 13       		.byte	0x13
 1707 04a6 A8000000 		.4byte	0xa8
 1708 04aa 05       		.uleb128 0x5
 1709 04ab 03       		.byte	0x3
 1710 04ac 00000000 		.4byte	ts_speed
 1711 04b0 1D       		.uleb128 0x1d
 1712 04b1 E2040000 		.4byte	.LASF71
 1713 04b5 05       		.byte	0x5
 1714 04b6 14       		.byte	0x14
 1715 04b7 A8000000 		.4byte	0xa8
 1716 04bb 05       		.uleb128 0x5
 1717 04bc 03       		.byte	0x3
 1718 04bd 00000000 		.4byte	ts_display
 1719 04c1 1D       		.uleb128 0x1d
 1720 04c2 9B040000 		.4byte	.LASF72
 1721 04c6 05       		.byte	0x5
 1722 04c7 16       		.byte	0x16
 1723 04c8 9C000000 		.4byte	0x9c
 1724 04cc 05       		.uleb128 0x5
 1725 04cd 03       		.byte	0x3
 1726 04ce 00000000 		.4byte	flag_ts_enc
 1727 04d2 1D       		.uleb128 0x1d
 1728 04d3 77020000 		.4byte	.LASF73
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 40


 1729 04d7 05       		.byte	0x5
 1730 04d8 17       		.byte	0x17
 1731 04d9 9C000000 		.4byte	0x9c
 1732 04dd 05       		.uleb128 0x5
 1733 04de 03       		.byte	0x3
 1734 04df 00000000 		.4byte	flag_ts_update
 1735 04e3 1D       		.uleb128 0x1d
 1736 04e4 46040000 		.4byte	.LASF74
 1737 04e8 05       		.byte	0x5
 1738 04e9 18       		.byte	0x18
 1739 04ea 9C000000 		.4byte	0x9c
 1740 04ee 05       		.uleb128 0x5
 1741 04ef 03       		.byte	0x3
 1742 04f0 00000000 		.4byte	flag_ts_speed
 1743 04f4 1D       		.uleb128 0x1d
 1744 04f5 F2020000 		.4byte	.LASF75
 1745 04f9 05       		.byte	0x5
 1746 04fa 19       		.byte	0x19
 1747 04fb 9C000000 		.4byte	0x9c
 1748 04ff 05       		.uleb128 0x5
 1749 0500 03       		.byte	0x3
 1750 0501 00000000 		.4byte	flag_ts_display
 1751 0505 1D       		.uleb128 0x1d
 1752 0506 02030000 		.4byte	.LASF76
 1753 050a 05       		.byte	0x5
 1754 050b 1C       		.byte	0x1c
 1755 050c 9C000000 		.4byte	0x9c
 1756 0510 05       		.uleb128 0x5
 1757 0511 03       		.byte	0x3
 1758 0512 00000000 		.4byte	flag_rx
 1759 0516 1D       		.uleb128 0x1d
 1760 0517 30000000 		.4byte	.LASF77
 1761 051b 05       		.byte	0x5
 1762 051c 1D       		.byte	0x1d
 1763 051d 9C000000 		.4byte	0x9c
 1764 0521 05       		.uleb128 0x5
 1765 0522 03       		.byte	0x3
 1766 0523 00000000 		.4byte	flag_packet
 1767 0527 1D       		.uleb128 0x1d
 1768 0528 A3030000 		.4byte	.LASF78
 1769 052c 05       		.byte	0x5
 1770 052d 1E       		.byte	0x1e
 1771 052e 9C000000 		.4byte	0x9c
 1772 0532 05       		.uleb128 0x5
 1773 0533 03       		.byte	0x3
 1774 0534 00000000 		.4byte	flag_KB_string
 1775 0538 1D       		.uleb128 0x1d
 1776 0539 64030000 		.4byte	.LASF79
 1777 053d 05       		.byte	0x5
 1778 053e 20       		.byte	0x20
 1779 053f 9C000000 		.4byte	0x9c
 1780 0543 05       		.uleb128 0x5
 1781 0544 03       		.byte	0x3
 1782 0545 00000000 		.4byte	dataready_flag
 1783 0549 1D       		.uleb128 0x1d
 1784 054a 02050000 		.4byte	.LASF80
 1785 054e 05       		.byte	0x5
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 41


 1786 054f 22       		.byte	0x22
 1787 0550 9C000000 		.4byte	0x9c
 1788 0554 05       		.uleb128 0x5
 1789 0555 03       		.byte	0x3
 1790 0556 00000000 		.4byte	flag_rf_transmission_active
 1791 055a 0F       		.uleb128 0xf
 1792 055b 8A000000 		.4byte	0x8a
 1793 055f 6A050000 		.4byte	0x56a
 1794 0563 1E       		.uleb128 0x1e
 1795 0564 7D000000 		.4byte	0x7d
 1796 0568 3F       		.byte	0x3f
 1797 0569 00       		.byte	0
 1798 056a 1D       		.uleb128 0x1d
 1799 056b 38040000 		.4byte	.LASF81
 1800 056f 05       		.byte	0x5
 1801 0570 25       		.byte	0x25
 1802 0571 5A050000 		.4byte	0x55a
 1803 0575 05       		.uleb128 0x5
 1804 0576 03       		.byte	0x3
 1805 0577 00000000 		.4byte	displaystring
 1806 057b 1D       		.uleb128 0x1d
 1807 057c 32020000 		.4byte	.LASF82
 1808 0580 05       		.byte	0x5
 1809 0581 26       		.byte	0x26
 1810 0582 5A050000 		.4byte	0x55a
 1811 0586 05       		.uleb128 0x5
 1812 0587 03       		.byte	0x3
 1813 0588 00000000 		.4byte	line
 1814 058c 1D       		.uleb128 0x1d
 1815 058d 34030000 		.4byte	.LASF83
 1816 0591 05       		.byte	0x5
 1817 0592 26       		.byte	0x26
 1818 0593 5A050000 		.4byte	0x55a
 1819 0597 05       		.uleb128 0x5
 1820 0598 03       		.byte	0x3
 1821 0599 00000000 		.4byte	entry
 1822 059d 0F       		.uleb128 0xf
 1823 059e 9C000000 		.4byte	0x9c
 1824 05a2 AD050000 		.4byte	0x5ad
 1825 05a6 1E       		.uleb128 0x1e
 1826 05a7 7D000000 		.4byte	0x7d
 1827 05ab 3F       		.byte	0x3f
 1828 05ac 00       		.byte	0
 1829 05ad 1D       		.uleb128 0x1d
 1830 05ae AB000000 		.4byte	.LASF84
 1831 05b2 05       		.byte	0x5
 1832 05b3 27       		.byte	0x27
 1833 05b4 9D050000 		.4byte	0x59d
 1834 05b8 05       		.uleb128 0x5
 1835 05b9 03       		.byte	0x3
 1836 05ba 00000000 		.4byte	usbBuffer
 1837 05be 1D       		.uleb128 0x1d
 1838 05bf 95000000 		.4byte	.LASF85
 1839 05c3 05       		.byte	0x5
 1840 05c4 3C       		.byte	0x3c
 1841 05c5 DA000000 		.4byte	0xda
 1842 05c9 05       		.uleb128 0x5
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 42


 1843 05ca 03       		.byte	0x3
 1844 05cb 00000000 		.4byte	system_state
 1845 05cf 1D       		.uleb128 0x1d
 1846 05d0 26020000 		.4byte	.LASF86
 1847 05d4 01       		.byte	0x1
 1848 05d5 55       		.byte	0x55
 1849 05d6 68000000 		.4byte	0x68
 1850 05da 05       		.uleb128 0x5
 1851 05db 03       		.byte	0x3
 1852 05dc 00000000 		.4byte	changeMotor
 1853 05e0 1D       		.uleb128 0x1d
 1854 05e1 78000000 		.4byte	.LASF87
 1855 05e5 01       		.byte	0x1
 1856 05e6 56       		.byte	0x56
 1857 05e7 68000000 		.4byte	0x68
 1858 05eb 05       		.uleb128 0x5
 1859 05ec 03       		.byte	0x3
 1860 05ed 00000000 		.4byte	checkLight
 1861 05f1 1D       		.uleb128 0x1d
 1862 05f2 69010000 		.4byte	.LASF88
 1863 05f6 01       		.byte	0x1
 1864 05f7 57       		.byte	0x57
 1865 05f8 68000000 		.4byte	0x68
 1866 05fc 05       		.uleb128 0x5
 1867 05fd 03       		.byte	0x3
 1868 05fe 00000000 		.4byte	lightState
 1869 0602 0F       		.uleb128 0xf
 1870 0603 12060000 		.4byte	0x612
 1871 0607 12060000 		.4byte	0x612
 1872 060b 1E       		.uleb128 0x1e
 1873 060c 7D000000 		.4byte	0x7d
 1874 0610 02       		.byte	0x2
 1875 0611 00       		.byte	0
 1876 0612 1A       		.uleb128 0x1a
 1877 0613 68000000 		.4byte	0x68
 1878 0617 1D       		.uleb128 0x1d
 1879 0618 48030000 		.4byte	.LASF89
 1880 061c 01       		.byte	0x1
 1881 061d 58       		.byte	0x58
 1882 061e 28060000 		.4byte	0x628
 1883 0622 05       		.uleb128 0x5
 1884 0623 03       		.byte	0x3
 1885 0624 00000000 		.4byte	lightDetectedFront
 1886 0628 1A       		.uleb128 0x1a
 1887 0629 02060000 		.4byte	0x602
 1888 062d 1D       		.uleb128 0x1d
 1889 062e 47000000 		.4byte	.LASF90
 1890 0632 01       		.byte	0x1
 1891 0633 59       		.byte	0x59
 1892 0634 12060000 		.4byte	0x612
 1893 0638 05       		.uleb128 0x5
 1894 0639 03       		.byte	0x3
 1895 063a 00000000 		.4byte	counteoc
 1896 063e 1D       		.uleb128 0x1d
 1897 063f E3020000 		.4byte	.LASF91
 1898 0643 01       		.byte	0x1
 1899 0644 5A       		.byte	0x5a
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 43


 1900 0645 12060000 		.4byte	0x612
 1901 0649 05       		.uleb128 0x5
 1902 064a 03       		.byte	0x3
 1903 064b 00000000 		.4byte	processSensors
 1904 064f 00       		.byte	0
 1905              		.section	.debug_abbrev,"",%progbits
 1906              	.Ldebug_abbrev0:
 1907 0000 01       		.uleb128 0x1
 1908 0001 11       		.uleb128 0x11
 1909 0002 01       		.byte	0x1
 1910 0003 25       		.uleb128 0x25
 1911 0004 0E       		.uleb128 0xe
 1912 0005 13       		.uleb128 0x13
 1913 0006 0B       		.uleb128 0xb
 1914 0007 03       		.uleb128 0x3
 1915 0008 0E       		.uleb128 0xe
 1916 0009 1B       		.uleb128 0x1b
 1917 000a 0E       		.uleb128 0xe
 1918 000b 55       		.uleb128 0x55
 1919 000c 17       		.uleb128 0x17
 1920 000d 11       		.uleb128 0x11
 1921 000e 01       		.uleb128 0x1
 1922 000f 10       		.uleb128 0x10
 1923 0010 17       		.uleb128 0x17
 1924 0011 00       		.byte	0
 1925 0012 00       		.byte	0
 1926 0013 02       		.uleb128 0x2
 1927 0014 24       		.uleb128 0x24
 1928 0015 00       		.byte	0
 1929 0016 0B       		.uleb128 0xb
 1930 0017 0B       		.uleb128 0xb
 1931 0018 3E       		.uleb128 0x3e
 1932 0019 0B       		.uleb128 0xb
 1933 001a 03       		.uleb128 0x3
 1934 001b 0E       		.uleb128 0xe
 1935 001c 00       		.byte	0
 1936 001d 00       		.byte	0
 1937 001e 03       		.uleb128 0x3
 1938 001f 16       		.uleb128 0x16
 1939 0020 00       		.byte	0
 1940 0021 03       		.uleb128 0x3
 1941 0022 0E       		.uleb128 0xe
 1942 0023 3A       		.uleb128 0x3a
 1943 0024 0B       		.uleb128 0xb
 1944 0025 3B       		.uleb128 0x3b
 1945 0026 0B       		.uleb128 0xb
 1946 0027 49       		.uleb128 0x49
 1947 0028 13       		.uleb128 0x13
 1948 0029 00       		.byte	0
 1949 002a 00       		.byte	0
 1950 002b 04       		.uleb128 0x4
 1951 002c 24       		.uleb128 0x24
 1952 002d 00       		.byte	0
 1953 002e 0B       		.uleb128 0xb
 1954 002f 0B       		.uleb128 0xb
 1955 0030 3E       		.uleb128 0x3e
 1956 0031 0B       		.uleb128 0xb
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 44


 1957 0032 03       		.uleb128 0x3
 1958 0033 08       		.uleb128 0x8
 1959 0034 00       		.byte	0
 1960 0035 00       		.byte	0
 1961 0036 05       		.uleb128 0x5
 1962 0037 0F       		.uleb128 0xf
 1963 0038 00       		.byte	0
 1964 0039 0B       		.uleb128 0xb
 1965 003a 0B       		.uleb128 0xb
 1966 003b 49       		.uleb128 0x49
 1967 003c 13       		.uleb128 0x13
 1968 003d 00       		.byte	0
 1969 003e 00       		.byte	0
 1970 003f 06       		.uleb128 0x6
 1971 0040 16       		.uleb128 0x16
 1972 0041 00       		.byte	0
 1973 0042 03       		.uleb128 0x3
 1974 0043 0E       		.uleb128 0xe
 1975 0044 3A       		.uleb128 0x3a
 1976 0045 0B       		.uleb128 0xb
 1977 0046 3B       		.uleb128 0x3b
 1978 0047 05       		.uleb128 0x5
 1979 0048 49       		.uleb128 0x49
 1980 0049 13       		.uleb128 0x13
 1981 004a 00       		.byte	0
 1982 004b 00       		.byte	0
 1983 004c 07       		.uleb128 0x7
 1984 004d 13       		.uleb128 0x13
 1985 004e 01       		.byte	0x1
 1986 004f 03       		.uleb128 0x3
 1987 0050 0E       		.uleb128 0xe
 1988 0051 0B       		.uleb128 0xb
 1989 0052 0B       		.uleb128 0xb
 1990 0053 3A       		.uleb128 0x3a
 1991 0054 0B       		.uleb128 0xb
 1992 0055 3B       		.uleb128 0x3b
 1993 0056 0B       		.uleb128 0xb
 1994 0057 01       		.uleb128 0x1
 1995 0058 13       		.uleb128 0x13
 1996 0059 00       		.byte	0
 1997 005a 00       		.byte	0
 1998 005b 08       		.uleb128 0x8
 1999 005c 0D       		.uleb128 0xd
 2000 005d 00       		.byte	0
 2001 005e 03       		.uleb128 0x3
 2002 005f 0E       		.uleb128 0xe
 2003 0060 3A       		.uleb128 0x3a
 2004 0061 0B       		.uleb128 0xb
 2005 0062 3B       		.uleb128 0x3b
 2006 0063 0B       		.uleb128 0xb
 2007 0064 49       		.uleb128 0x49
 2008 0065 13       		.uleb128 0x13
 2009 0066 38       		.uleb128 0x38
 2010 0067 0B       		.uleb128 0xb
 2011 0068 00       		.byte	0
 2012 0069 00       		.byte	0
 2013 006a 09       		.uleb128 0x9
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 45


 2014 006b 2E       		.uleb128 0x2e
 2015 006c 00       		.byte	0
 2016 006d 3F       		.uleb128 0x3f
 2017 006e 19       		.uleb128 0x19
 2018 006f 03       		.uleb128 0x3
 2019 0070 0E       		.uleb128 0xe
 2020 0071 3A       		.uleb128 0x3a
 2021 0072 0B       		.uleb128 0xb
 2022 0073 3B       		.uleb128 0x3b
 2023 0074 0B       		.uleb128 0xb
 2024 0075 11       		.uleb128 0x11
 2025 0076 01       		.uleb128 0x1
 2026 0077 12       		.uleb128 0x12
 2027 0078 06       		.uleb128 0x6
 2028 0079 40       		.uleb128 0x40
 2029 007a 18       		.uleb128 0x18
 2030 007b 9642     		.uleb128 0x2116
 2031 007d 19       		.uleb128 0x19
 2032 007e 00       		.byte	0
 2033 007f 00       		.byte	0
 2034 0080 0A       		.uleb128 0xa
 2035 0081 2E       		.uleb128 0x2e
 2036 0082 01       		.byte	0x1
 2037 0083 3F       		.uleb128 0x3f
 2038 0084 19       		.uleb128 0x19
 2039 0085 03       		.uleb128 0x3
 2040 0086 0E       		.uleb128 0xe
 2041 0087 3A       		.uleb128 0x3a
 2042 0088 0B       		.uleb128 0xb
 2043 0089 3B       		.uleb128 0x3b
 2044 008a 0B       		.uleb128 0xb
 2045 008b 27       		.uleb128 0x27
 2046 008c 19       		.uleb128 0x19
 2047 008d 11       		.uleb128 0x11
 2048 008e 01       		.uleb128 0x1
 2049 008f 12       		.uleb128 0x12
 2050 0090 06       		.uleb128 0x6
 2051 0091 40       		.uleb128 0x40
 2052 0092 18       		.uleb128 0x18
 2053 0093 9642     		.uleb128 0x2116
 2054 0095 19       		.uleb128 0x19
 2055 0096 01       		.uleb128 0x1
 2056 0097 13       		.uleb128 0x13
 2057 0098 00       		.byte	0
 2058 0099 00       		.byte	0
 2059 009a 0B       		.uleb128 0xb
 2060 009b 05       		.uleb128 0x5
 2061 009c 00       		.byte	0
 2062 009d 03       		.uleb128 0x3
 2063 009e 08       		.uleb128 0x8
 2064 009f 3A       		.uleb128 0x3a
 2065 00a0 0B       		.uleb128 0xb
 2066 00a1 3B       		.uleb128 0x3b
 2067 00a2 0B       		.uleb128 0xb
 2068 00a3 49       		.uleb128 0x49
 2069 00a4 13       		.uleb128 0x13
 2070 00a5 02       		.uleb128 0x2
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 46


 2071 00a6 18       		.uleb128 0x18
 2072 00a7 00       		.byte	0
 2073 00a8 00       		.byte	0
 2074 00a9 0C       		.uleb128 0xc
 2075 00aa 34       		.uleb128 0x34
 2076 00ab 00       		.byte	0
 2077 00ac 03       		.uleb128 0x3
 2078 00ad 0E       		.uleb128 0xe
 2079 00ae 3A       		.uleb128 0x3a
 2080 00af 0B       		.uleb128 0xb
 2081 00b0 3B       		.uleb128 0x3b
 2082 00b1 0B       		.uleb128 0xb
 2083 00b2 49       		.uleb128 0x49
 2084 00b3 13       		.uleb128 0x13
 2085 00b4 02       		.uleb128 0x2
 2086 00b5 18       		.uleb128 0x18
 2087 00b6 00       		.byte	0
 2088 00b7 00       		.byte	0
 2089 00b8 0D       		.uleb128 0xd
 2090 00b9 2E       		.uleb128 0x2e
 2091 00ba 00       		.byte	0
 2092 00bb 3F       		.uleb128 0x3f
 2093 00bc 19       		.uleb128 0x19
 2094 00bd 03       		.uleb128 0x3
 2095 00be 0E       		.uleb128 0xe
 2096 00bf 3A       		.uleb128 0x3a
 2097 00c0 0B       		.uleb128 0xb
 2098 00c1 3B       		.uleb128 0x3b
 2099 00c2 0B       		.uleb128 0xb
 2100 00c3 27       		.uleb128 0x27
 2101 00c4 19       		.uleb128 0x19
 2102 00c5 11       		.uleb128 0x11
 2103 00c6 01       		.uleb128 0x1
 2104 00c7 12       		.uleb128 0x12
 2105 00c8 06       		.uleb128 0x6
 2106 00c9 40       		.uleb128 0x40
 2107 00ca 18       		.uleb128 0x18
 2108 00cb 9742     		.uleb128 0x2117
 2109 00cd 19       		.uleb128 0x19
 2110 00ce 00       		.byte	0
 2111 00cf 00       		.byte	0
 2112 00d0 0E       		.uleb128 0xe
 2113 00d1 2E       		.uleb128 0x2e
 2114 00d2 01       		.byte	0x1
 2115 00d3 3F       		.uleb128 0x3f
 2116 00d4 19       		.uleb128 0x19
 2117 00d5 03       		.uleb128 0x3
 2118 00d6 0E       		.uleb128 0xe
 2119 00d7 3A       		.uleb128 0x3a
 2120 00d8 0B       		.uleb128 0xb
 2121 00d9 3B       		.uleb128 0x3b
 2122 00da 0B       		.uleb128 0xb
 2123 00db 11       		.uleb128 0x11
 2124 00dc 01       		.uleb128 0x1
 2125 00dd 12       		.uleb128 0x12
 2126 00de 06       		.uleb128 0x6
 2127 00df 40       		.uleb128 0x40
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 47


 2128 00e0 18       		.uleb128 0x18
 2129 00e1 9642     		.uleb128 0x2116
 2130 00e3 19       		.uleb128 0x19
 2131 00e4 01       		.uleb128 0x1
 2132 00e5 13       		.uleb128 0x13
 2133 00e6 00       		.byte	0
 2134 00e7 00       		.byte	0
 2135 00e8 0F       		.uleb128 0xf
 2136 00e9 01       		.uleb128 0x1
 2137 00ea 01       		.byte	0x1
 2138 00eb 49       		.uleb128 0x49
 2139 00ec 13       		.uleb128 0x13
 2140 00ed 01       		.uleb128 0x1
 2141 00ee 13       		.uleb128 0x13
 2142 00ef 00       		.byte	0
 2143 00f0 00       		.byte	0
 2144 00f1 10       		.uleb128 0x10
 2145 00f2 21       		.uleb128 0x21
 2146 00f3 00       		.byte	0
 2147 00f4 49       		.uleb128 0x49
 2148 00f5 13       		.uleb128 0x13
 2149 00f6 2F       		.uleb128 0x2f
 2150 00f7 05       		.uleb128 0x5
 2151 00f8 00       		.byte	0
 2152 00f9 00       		.byte	0
 2153 00fa 11       		.uleb128 0x11
 2154 00fb 2E       		.uleb128 0x2e
 2155 00fc 00       		.byte	0
 2156 00fd 3F       		.uleb128 0x3f
 2157 00fe 19       		.uleb128 0x19
 2158 00ff 03       		.uleb128 0x3
 2159 0100 0E       		.uleb128 0xe
 2160 0101 3A       		.uleb128 0x3a
 2161 0102 0B       		.uleb128 0xb
 2162 0103 3B       		.uleb128 0x3b
 2163 0104 0B       		.uleb128 0xb
 2164 0105 27       		.uleb128 0x27
 2165 0106 19       		.uleb128 0x19
 2166 0107 11       		.uleb128 0x11
 2167 0108 01       		.uleb128 0x1
 2168 0109 12       		.uleb128 0x12
 2169 010a 06       		.uleb128 0x6
 2170 010b 40       		.uleb128 0x40
 2171 010c 18       		.uleb128 0x18
 2172 010d 9642     		.uleb128 0x2116
 2173 010f 19       		.uleb128 0x19
 2174 0110 00       		.byte	0
 2175 0111 00       		.byte	0
 2176 0112 12       		.uleb128 0x12
 2177 0113 2E       		.uleb128 0x2e
 2178 0114 01       		.byte	0x1
 2179 0115 3F       		.uleb128 0x3f
 2180 0116 19       		.uleb128 0x19
 2181 0117 03       		.uleb128 0x3
 2182 0118 0E       		.uleb128 0xe
 2183 0119 3A       		.uleb128 0x3a
 2184 011a 0B       		.uleb128 0xb
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 48


 2185 011b 3B       		.uleb128 0x3b
 2186 011c 0B       		.uleb128 0xb
 2187 011d 49       		.uleb128 0x49
 2188 011e 13       		.uleb128 0x13
 2189 011f 11       		.uleb128 0x11
 2190 0120 01       		.uleb128 0x1
 2191 0121 12       		.uleb128 0x12
 2192 0122 06       		.uleb128 0x6
 2193 0123 40       		.uleb128 0x40
 2194 0124 18       		.uleb128 0x18
 2195 0125 9642     		.uleb128 0x2116
 2196 0127 19       		.uleb128 0x19
 2197 0128 01       		.uleb128 0x1
 2198 0129 13       		.uleb128 0x13
 2199 012a 00       		.byte	0
 2200 012b 00       		.byte	0
 2201 012c 13       		.uleb128 0x13
 2202 012d 0B       		.uleb128 0xb
 2203 012e 01       		.byte	0x1
 2204 012f 11       		.uleb128 0x11
 2205 0130 01       		.uleb128 0x1
 2206 0131 12       		.uleb128 0x12
 2207 0132 06       		.uleb128 0x6
 2208 0133 00       		.byte	0
 2209 0134 00       		.byte	0
 2210 0135 14       		.uleb128 0x14
 2211 0136 34       		.uleb128 0x34
 2212 0137 00       		.byte	0
 2213 0138 03       		.uleb128 0x3
 2214 0139 0E       		.uleb128 0xe
 2215 013a 3A       		.uleb128 0x3a
 2216 013b 0B       		.uleb128 0xb
 2217 013c 3B       		.uleb128 0x3b
 2218 013d 05       		.uleb128 0x5
 2219 013e 49       		.uleb128 0x49
 2220 013f 13       		.uleb128 0x13
 2221 0140 02       		.uleb128 0x2
 2222 0141 18       		.uleb128 0x18
 2223 0142 00       		.byte	0
 2224 0143 00       		.byte	0
 2225 0144 15       		.uleb128 0x15
 2226 0145 2E       		.uleb128 0x2e
 2227 0146 01       		.byte	0x1
 2228 0147 3F       		.uleb128 0x3f
 2229 0148 19       		.uleb128 0x19
 2230 0149 03       		.uleb128 0x3
 2231 014a 0E       		.uleb128 0xe
 2232 014b 3A       		.uleb128 0x3a
 2233 014c 0B       		.uleb128 0xb
 2234 014d 3B       		.uleb128 0x3b
 2235 014e 05       		.uleb128 0x5
 2236 014f 49       		.uleb128 0x49
 2237 0150 13       		.uleb128 0x13
 2238 0151 11       		.uleb128 0x11
 2239 0152 01       		.uleb128 0x1
 2240 0153 12       		.uleb128 0x12
 2241 0154 06       		.uleb128 0x6
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 49


 2242 0155 40       		.uleb128 0x40
 2243 0156 18       		.uleb128 0x18
 2244 0157 9742     		.uleb128 0x2117
 2245 0159 19       		.uleb128 0x19
 2246 015a 01       		.uleb128 0x1
 2247 015b 13       		.uleb128 0x13
 2248 015c 00       		.byte	0
 2249 015d 00       		.byte	0
 2250 015e 16       		.uleb128 0x16
 2251 015f 34       		.uleb128 0x34
 2252 0160 00       		.byte	0
 2253 0161 03       		.uleb128 0x3
 2254 0162 08       		.uleb128 0x8
 2255 0163 3A       		.uleb128 0x3a
 2256 0164 0B       		.uleb128 0xb
 2257 0165 3B       		.uleb128 0x3b
 2258 0166 05       		.uleb128 0x5
 2259 0167 49       		.uleb128 0x49
 2260 0168 13       		.uleb128 0x13
 2261 0169 02       		.uleb128 0x2
 2262 016a 18       		.uleb128 0x18
 2263 016b 00       		.byte	0
 2264 016c 00       		.byte	0
 2265 016d 17       		.uleb128 0x17
 2266 016e 2E       		.uleb128 0x2e
 2267 016f 01       		.byte	0x1
 2268 0170 3F       		.uleb128 0x3f
 2269 0171 19       		.uleb128 0x19
 2270 0172 03       		.uleb128 0x3
 2271 0173 0E       		.uleb128 0xe
 2272 0174 3A       		.uleb128 0x3a
 2273 0175 0B       		.uleb128 0xb
 2274 0176 3B       		.uleb128 0x3b
 2275 0177 05       		.uleb128 0x5
 2276 0178 27       		.uleb128 0x27
 2277 0179 19       		.uleb128 0x19
 2278 017a 11       		.uleb128 0x11
 2279 017b 01       		.uleb128 0x1
 2280 017c 12       		.uleb128 0x12
 2281 017d 06       		.uleb128 0x6
 2282 017e 40       		.uleb128 0x40
 2283 017f 18       		.uleb128 0x18
 2284 0180 9642     		.uleb128 0x2116
 2285 0182 19       		.uleb128 0x19
 2286 0183 01       		.uleb128 0x1
 2287 0184 13       		.uleb128 0x13
 2288 0185 00       		.byte	0
 2289 0186 00       		.byte	0
 2290 0187 18       		.uleb128 0x18
 2291 0188 05       		.uleb128 0x5
 2292 0189 00       		.byte	0
 2293 018a 03       		.uleb128 0x3
 2294 018b 08       		.uleb128 0x8
 2295 018c 3A       		.uleb128 0x3a
 2296 018d 0B       		.uleb128 0xb
 2297 018e 3B       		.uleb128 0x3b
 2298 018f 05       		.uleb128 0x5
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 50


 2299 0190 49       		.uleb128 0x49
 2300 0191 13       		.uleb128 0x13
 2301 0192 02       		.uleb128 0x2
 2302 0193 18       		.uleb128 0x18
 2303 0194 00       		.byte	0
 2304 0195 00       		.byte	0
 2305 0196 19       		.uleb128 0x19
 2306 0197 2E       		.uleb128 0x2e
 2307 0198 01       		.byte	0x1
 2308 0199 3F       		.uleb128 0x3f
 2309 019a 19       		.uleb128 0x19
 2310 019b 03       		.uleb128 0x3
 2311 019c 0E       		.uleb128 0xe
 2312 019d 3A       		.uleb128 0x3a
 2313 019e 0B       		.uleb128 0xb
 2314 019f 3B       		.uleb128 0x3b
 2315 01a0 05       		.uleb128 0x5
 2316 01a1 11       		.uleb128 0x11
 2317 01a2 01       		.uleb128 0x1
 2318 01a3 12       		.uleb128 0x12
 2319 01a4 06       		.uleb128 0x6
 2320 01a5 40       		.uleb128 0x40
 2321 01a6 18       		.uleb128 0x18
 2322 01a7 9642     		.uleb128 0x2116
 2323 01a9 19       		.uleb128 0x19
 2324 01aa 01       		.uleb128 0x1
 2325 01ab 13       		.uleb128 0x13
 2326 01ac 00       		.byte	0
 2327 01ad 00       		.byte	0
 2328 01ae 1A       		.uleb128 0x1a
 2329 01af 35       		.uleb128 0x35
 2330 01b0 00       		.byte	0
 2331 01b1 49       		.uleb128 0x49
 2332 01b2 13       		.uleb128 0x13
 2333 01b3 00       		.byte	0
 2334 01b4 00       		.byte	0
 2335 01b5 1B       		.uleb128 0x1b
 2336 01b6 34       		.uleb128 0x34
 2337 01b7 00       		.byte	0
 2338 01b8 03       		.uleb128 0x3
 2339 01b9 0E       		.uleb128 0xe
 2340 01ba 3A       		.uleb128 0x3a
 2341 01bb 0B       		.uleb128 0xb
 2342 01bc 3B       		.uleb128 0x3b
 2343 01bd 05       		.uleb128 0x5
 2344 01be 49       		.uleb128 0x49
 2345 01bf 13       		.uleb128 0x13
 2346 01c0 3F       		.uleb128 0x3f
 2347 01c1 19       		.uleb128 0x19
 2348 01c2 3C       		.uleb128 0x3c
 2349 01c3 19       		.uleb128 0x19
 2350 01c4 00       		.byte	0
 2351 01c5 00       		.byte	0
 2352 01c6 1C       		.uleb128 0x1c
 2353 01c7 34       		.uleb128 0x34
 2354 01c8 00       		.byte	0
 2355 01c9 03       		.uleb128 0x3
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 51


 2356 01ca 08       		.uleb128 0x8
 2357 01cb 3A       		.uleb128 0x3a
 2358 01cc 0B       		.uleb128 0xb
 2359 01cd 3B       		.uleb128 0x3b
 2360 01ce 0B       		.uleb128 0xb
 2361 01cf 49       		.uleb128 0x49
 2362 01d0 13       		.uleb128 0x13
 2363 01d1 3F       		.uleb128 0x3f
 2364 01d2 19       		.uleb128 0x19
 2365 01d3 02       		.uleb128 0x2
 2366 01d4 18       		.uleb128 0x18
 2367 01d5 00       		.byte	0
 2368 01d6 00       		.byte	0
 2369 01d7 1D       		.uleb128 0x1d
 2370 01d8 34       		.uleb128 0x34
 2371 01d9 00       		.byte	0
 2372 01da 03       		.uleb128 0x3
 2373 01db 0E       		.uleb128 0xe
 2374 01dc 3A       		.uleb128 0x3a
 2375 01dd 0B       		.uleb128 0xb
 2376 01de 3B       		.uleb128 0x3b
 2377 01df 0B       		.uleb128 0xb
 2378 01e0 49       		.uleb128 0x49
 2379 01e1 13       		.uleb128 0x13
 2380 01e2 3F       		.uleb128 0x3f
 2381 01e3 19       		.uleb128 0x19
 2382 01e4 02       		.uleb128 0x2
 2383 01e5 18       		.uleb128 0x18
 2384 01e6 00       		.byte	0
 2385 01e7 00       		.byte	0
 2386 01e8 1E       		.uleb128 0x1e
 2387 01e9 21       		.uleb128 0x21
 2388 01ea 00       		.byte	0
 2389 01eb 49       		.uleb128 0x49
 2390 01ec 13       		.uleb128 0x13
 2391 01ed 2F       		.uleb128 0x2f
 2392 01ee 0B       		.uleb128 0xb
 2393 01ef 00       		.byte	0
 2394 01f0 00       		.byte	0
 2395 01f1 00       		.byte	0
 2396              		.section	.debug_aranges,"",%progbits
 2397 0000 8C000000 		.4byte	0x8c
 2398 0004 0200     		.2byte	0x2
 2399 0006 00000000 		.4byte	.Ldebug_info0
 2400 000a 04       		.byte	0x4
 2401 000b 00       		.byte	0
 2402 000c 0000     		.2byte	0
 2403 000e 0000     		.2byte	0
 2404 0010 00000000 		.4byte	.LFB64
 2405 0014 14000000 		.4byte	.LFE64-.LFB64
 2406 0018 00000000 		.4byte	.LFB65
 2407 001c 14000000 		.4byte	.LFE65-.LFB65
 2408 0020 00000000 		.4byte	.LFB66
 2409 0024 14000000 		.4byte	.LFE66-.LFB66
 2410 0028 00000000 		.4byte	.LFB67
 2411 002c 20000000 		.4byte	.LFE67-.LFB67
 2412 0030 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 52


 2413 0034 26000000 		.4byte	.LFE68-.LFB68
 2414 0038 00000000 		.4byte	.LFB69
 2415 003c 90000000 		.4byte	.LFE69-.LFB69
 2416 0040 00000000 		.4byte	.LFB70
 2417 0044 0C000000 		.4byte	.LFE70-.LFB70
 2418 0048 00000000 		.4byte	.LFB71
 2419 004c C0000000 		.4byte	.LFE71-.LFB71
 2420 0050 00000000 		.4byte	.LFB72
 2421 0054 2C000000 		.4byte	.LFE72-.LFB72
 2422 0058 00000000 		.4byte	.LFB73
 2423 005c 0C000000 		.4byte	.LFE73-.LFB73
 2424 0060 00000000 		.4byte	.LFB74
 2425 0064 E8000000 		.4byte	.LFE74-.LFB74
 2426 0068 00000000 		.4byte	.LFB75
 2427 006c 58000000 		.4byte	.LFE75-.LFB75
 2428 0070 00000000 		.4byte	.LFB76
 2429 0074 3E000000 		.4byte	.LFE76-.LFB76
 2430 0078 00000000 		.4byte	.LFB77
 2431 007c 26000000 		.4byte	.LFE77-.LFB77
 2432 0080 00000000 		.4byte	.LFB78
 2433 0084 C8000000 		.4byte	.LFE78-.LFB78
 2434 0088 00000000 		.4byte	0
 2435 008c 00000000 		.4byte	0
 2436              		.section	.debug_ranges,"",%progbits
 2437              	.Ldebug_ranges0:
 2438 0000 00000000 		.4byte	.LFB64
 2439 0004 14000000 		.4byte	.LFE64
 2440 0008 00000000 		.4byte	.LFB65
 2441 000c 14000000 		.4byte	.LFE65
 2442 0010 00000000 		.4byte	.LFB66
 2443 0014 14000000 		.4byte	.LFE66
 2444 0018 00000000 		.4byte	.LFB67
 2445 001c 20000000 		.4byte	.LFE67
 2446 0020 00000000 		.4byte	.LFB68
 2447 0024 26000000 		.4byte	.LFE68
 2448 0028 00000000 		.4byte	.LFB69
 2449 002c 90000000 		.4byte	.LFE69
 2450 0030 00000000 		.4byte	.LFB70
 2451 0034 0C000000 		.4byte	.LFE70
 2452 0038 00000000 		.4byte	.LFB71
 2453 003c C0000000 		.4byte	.LFE71
 2454 0040 00000000 		.4byte	.LFB72
 2455 0044 2C000000 		.4byte	.LFE72
 2456 0048 00000000 		.4byte	.LFB73
 2457 004c 0C000000 		.4byte	.LFE73
 2458 0050 00000000 		.4byte	.LFB74
 2459 0054 E8000000 		.4byte	.LFE74
 2460 0058 00000000 		.4byte	.LFB75
 2461 005c 58000000 		.4byte	.LFE75
 2462 0060 00000000 		.4byte	.LFB76
 2463 0064 3E000000 		.4byte	.LFE76
 2464 0068 00000000 		.4byte	.LFB77
 2465 006c 26000000 		.4byte	.LFE77
 2466 0070 00000000 		.4byte	.LFB78
 2467 0074 C8000000 		.4byte	.LFE78
 2468 0078 00000000 		.4byte	0
 2469 007c 00000000 		.4byte	0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 53


 2470              		.section	.debug_line,"",%progbits
 2471              	.Ldebug_line0:
 2472 0000 12030000 		.section	.debug_str,"MS",%progbits,1
 2472      02005601 
 2472      00000201 
 2472      FB0E0D00 
 2472      01010101 
 2473              	.LASF39:
 2474 0000 6D6F746F 		.ascii	"motorStop\000"
 2474      7253746F 
 2474      7000
 2475              	.LASF54:
 2476 000a 6973725F 		.ascii	"isr_TS_Interrupt_sample\000"
 2476      54535F49 
 2476      6E746572 
 2476      72757074 
 2476      5F73616D 
 2477              	.LASF68:
 2478 0022 74735F65 		.ascii	"ts_enc\000"
 2478      6E6300
 2479              	.LASF19:
 2480 0029 646F7562 		.ascii	"double\000"
 2480      6C6500
 2481              	.LASF77:
 2482 0030 666C6167 		.ascii	"flag_packet\000"
 2482      5F706163 
 2482      6B657400 
 2483              	.LASF61:
 2484 003c 75736250 		.ascii	"usbPutChar\000"
 2484      75744368 
 2484      617200
 2485              	.LASF90:
 2486 0047 636F756E 		.ascii	"counteoc\000"
 2486      74656F63 
 2486      00
 2487              	.LASF42:
 2488 0050 6973725F 		.ascii	"isr_eoc_Interrupt_test\000"
 2488      656F635F 
 2488      496E7465 
 2488      72727570 
 2488      745F7465 
 2489              	.LASF38:
 2490 0067 6D6F746F 		.ascii	"motorGoBackwards\000"
 2490      72476F42 
 2490      61636B77 
 2490      61726473 
 2490      00
 2491              	.LASF87:
 2492 0078 63686563 		.ascii	"checkLight\000"
 2492      6B4C6967 
 2492      687400
 2493              	.LASF33:
 2494 0083 67325F78 		.ascii	"g2_xpos\000"
 2494      706F7300 
 2495              	.LASF2:
 2496 008b 73686F72 		.ascii	"short int\000"
 2496      7420696E 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 54


 2496      7400
 2497              	.LASF85:
 2498 0095 73797374 		.ascii	"system_state\000"
 2498      656D5F73 
 2498      74617465 
 2498      00
 2499              	.LASF10:
 2500 00a2 73697A65 		.ascii	"sizetype\000"
 2500      74797065 
 2500      00
 2501              	.LASF84:
 2502 00ab 75736242 		.ascii	"usbBuffer\000"
 2502      75666665 
 2502      7200
 2503              	.LASF92:
 2504 00b5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2504      43313120 
 2504      352E342E 
 2504      31203230 
 2504      31363036 
 2505 00e8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2505      20726576 
 2505      6973696F 
 2505      6E203233 
 2505      37373135 
 2506 011b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2506      66756E63 
 2506      74696F6E 
 2506      2D736563 
 2506      74696F6E 
 2507              	.LASF55:
 2508 0143 6D61696E 		.ascii	"main\000"
 2508      00
 2509              	.LASF43:
 2510 0148 76616C75 		.ascii	"valueQ3\000"
 2510      65513300 
 2511              	.LASF44:
 2512 0150 76616C75 		.ascii	"valueQ4\000"
 2512      65513400 
 2513              	.LASF45:
 2514 0158 76616C75 		.ascii	"valueQ5\000"
 2514      65513500 
 2515              	.LASF52:
 2516 0160 6D6F746F 		.ascii	"motorRun\000"
 2516      7252756E 
 2516      00
 2517              	.LASF88:
 2518 0169 6C696768 		.ascii	"lightState\000"
 2518      74537461 
 2518      746500
 2519              	.LASF15:
 2520 0174 75696E74 		.ascii	"uint16\000"
 2520      313600
 2521              	.LASF21:
 2522 017b 696E6465 		.ascii	"index\000"
 2522      7800
 2523              	.LASF17:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 55


 2524 0181 696E7431 		.ascii	"int16\000"
 2524      3600
 2525              	.LASF14:
 2526 0187 75696E74 		.ascii	"uint8\000"
 2526      3800
 2527              	.LASF94:
 2528 018d 5C5C6669 		.ascii	"\\\\files.auckland.ac.nz\\myhome\\Documents\\GitHub"
 2528      6C65732E 
 2528      6175636B 
 2528      6C616E64 
 2528      2E61632E 
 2529 01bb 5C70726F 		.ascii	"\\project-project_group_11\\COMPSYS 301\\psoc stude"
 2529      6A656374 
 2529      2D70726F 
 2529      6A656374 
 2529      5F67726F 
 2530 01eb 6E742070 		.ascii	"nt pack\\psoc student pack\\psoc_code_base\\CS301_C"
 2530      61636B5C 
 2530      70736F63 
 2530      20737475 
 2530      64656E74 
 2531 021b 6C617373 		.ascii	"lass.cydsn\000"
 2531      2E637964 
 2531      736E00
 2532              	.LASF86:
 2533 0226 6368616E 		.ascii	"changeMotor\000"
 2533      67654D6F 
 2533      746F7200 
 2534              	.LASF82:
 2535 0232 6C696E65 		.ascii	"line\000"
 2535      00
 2536              	.LASF18:
 2537 0237 666C6F61 		.ascii	"float\000"
 2537      7400
 2538              	.LASF53:
 2539 023d 6973725F 		.ascii	"isr_motor_interrupt_speed\000"
 2539      6D6F746F 
 2539      725F696E 
 2539      74657272 
 2539      7570745F 
 2540              	.LASF6:
 2541 0257 6C6F6E67 		.ascii	"long long int\000"
 2541      206C6F6E 
 2541      6720696E 
 2541      7400
 2542              	.LASF60:
 2543 0265 75736250 		.ascii	"usbPutString\000"
 2543      75745374 
 2543      72696E67 
 2543      00
 2544              	.LASF16:
 2545 0272 696E7438 		.ascii	"int8\000"
 2545      00
 2546              	.LASF73:
 2547 0277 666C6167 		.ascii	"flag_ts_update\000"
 2547      5F74735F 
 2547      75706461 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 56


 2547      746500
 2548              	.LASF34:
 2549 0286 67325F79 		.ascii	"g2_ypos\000"
 2549      706F7300 
 2550              	.LASF28:
 2551 028e 67305F64 		.ascii	"g0_direction\000"
 2551      69726563 
 2551      74696F6E 
 2551      00
 2552              	.LASF25:
 2553 029b 67305F78 		.ascii	"g0_xpos\000"
 2553      706F7300 
 2554              	.LASF4:
 2555 02a3 6C6F6E67 		.ascii	"long int\000"
 2555      20696E74 
 2555      00
 2556              	.LASF46:
 2557 02ac 62656769 		.ascii	"beginningCountMotor1\000"
 2557      6E6E696E 
 2557      67436F75 
 2557      6E744D6F 
 2557      746F7231 
 2558              	.LASF47:
 2559 02c1 62656769 		.ascii	"beginningCountMotor2\000"
 2559      6E6E696E 
 2559      67436F75 
 2559      6E744D6F 
 2559      746F7232 
 2560              	.LASF50:
 2561 02d6 6D6F746F 		.ascii	"motor1String\000"
 2561      72315374 
 2561      72696E67 
 2561      00
 2562              	.LASF91:
 2563 02e3 70726F63 		.ascii	"processSensors\000"
 2563      65737353 
 2563      656E736F 
 2563      727300
 2564              	.LASF75:
 2565 02f2 666C6167 		.ascii	"flag_ts_display\000"
 2565      5F74735F 
 2565      64697370 
 2565      6C617900 
 2566              	.LASF76:
 2567 0302 666C6167 		.ascii	"flag_rx\000"
 2567      5F727800 
 2568              	.LASF49:
 2569 030a 656E6443 		.ascii	"endCountMotor1\000"
 2569      6F756E74 
 2569      4D6F746F 
 2569      723100
 2570              	.LASF48:
 2571 0319 656E6443 		.ascii	"endCountMotor2\000"
 2571      6F756E74 
 2571      4D6F746F 
 2571      723200
 2572              	.LASF9:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 57


 2573 0328 6C6F6E67 		.ascii	"long double\000"
 2573      20646F75 
 2573      626C6500 
 2574              	.LASF83:
 2575 0334 656E7472 		.ascii	"entry\000"
 2575      7900
 2576              	.LASF1:
 2577 033a 756E7369 		.ascii	"unsigned char\000"
 2577      676E6564 
 2577      20636861 
 2577      7200
 2578              	.LASF89:
 2579 0348 6C696768 		.ascii	"lightDetectedFront\000"
 2579      74446574 
 2579      65637465 
 2579      6446726F 
 2579      6E7400
 2580              	.LASF27:
 2581 035b 67305F73 		.ascii	"g0_speed\000"
 2581      70656564 
 2581      00
 2582              	.LASF79:
 2583 0364 64617461 		.ascii	"dataready_flag\000"
 2583      72656164 
 2583      795F666C 
 2583      616700
 2584              	.LASF0:
 2585 0373 7369676E 		.ascii	"signed char\000"
 2585      65642063 
 2585      68617200 
 2586              	.LASF7:
 2587 037f 6C6F6E67 		.ascii	"long long unsigned int\000"
 2587      206C6F6E 
 2587      6720756E 
 2587      7369676E 
 2587      65642069 
 2588              	.LASF8:
 2589 0396 756E7369 		.ascii	"unsigned int\000"
 2589      676E6564 
 2589      20696E74 
 2589      00
 2590              	.LASF78:
 2591 03a3 666C6167 		.ascii	"flag_KB_string\000"
 2591      5F4B425F 
 2591      73747269 
 2591      6E6700
 2592              	.LASF65:
 2593 03b2 75736242 		.ascii	"usbBufCount\000"
 2593      7566436F 
 2593      756E7400 
 2594              	.LASF35:
 2595 03be 67325F73 		.ascii	"g2_speed\000"
 2595      70656564 
 2595      00
 2596              	.LASF29:
 2597 03c7 67315F78 		.ascii	"g1_xpos\000"
 2597      706F7300 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 58


 2598              	.LASF56:
 2599 03cf 6F706572 		.ascii	"operation\000"
 2599      6174696F 
 2599      6E00
 2600              	.LASF95:
 2601 03d9 64617461 		.ascii	"data_main\000"
 2601      5F6D6169 
 2601      6E00
 2602              	.LASF59:
 2603 03e3 62696E61 		.ascii	"binaryIndex\000"
 2603      7279496E 
 2603      64657800 
 2604              	.LASF11:
 2605 03ef 63686172 		.ascii	"char\000"
 2605      00
 2606              	.LASF22:
 2607 03f4 726F626F 		.ascii	"robot_xpos\000"
 2607      745F7870 
 2607      6F7300
 2608              	.LASF13:
 2609 03ff 696E7433 		.ascii	"int32_t\000"
 2609      325F7400 
 2610              	.LASF30:
 2611 0407 67315F79 		.ascii	"g1_ypos\000"
 2611      706F7300 
 2612              	.LASF36:
 2613 040f 67325F64 		.ascii	"g2_direction\000"
 2613      69726563 
 2613      74696F6E 
 2613      00
 2614              	.LASF3:
 2615 041c 73686F72 		.ascii	"short unsigned int\000"
 2615      7420756E 
 2615      7369676E 
 2615      65642069 
 2615      6E7400
 2616              	.LASF31:
 2617 042f 67315F73 		.ascii	"g1_speed\000"
 2617      70656564 
 2617      00
 2618              	.LASF81:
 2619 0438 64697370 		.ascii	"displaystring\000"
 2619      6C617973 
 2619      7472696E 
 2619      6700
 2620              	.LASF74:
 2621 0446 666C6167 		.ascii	"flag_ts_speed\000"
 2621      5F74735F 
 2621      73706565 
 2621      6400
 2622              	.LASF57:
 2623 0454 636F6E76 		.ascii	"convertSensorBinary\000"
 2623      65727453 
 2623      656E736F 
 2623      7242696E 
 2623      61727900 
 2624              	.LASF93:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 59


 2625 0468 6D61696E 		.ascii	"main.c\000"
 2625      2E6300
 2626              	.LASF5:
 2627 046f 6C6F6E67 		.ascii	"long unsigned int\000"
 2627      20756E73 
 2627      69676E65 
 2627      6420696E 
 2627      7400
 2628              	.LASF64:
 2629 0481 75736253 		.ascii	"usbStarted\000"
 2629      74617274 
 2629      656400
 2630              	.LASF70:
 2631 048c 74735F73 		.ascii	"ts_speed\000"
 2631      70656564 
 2631      00
 2632              	.LASF66:
 2633 0495 636F756E 		.ascii	"count\000"
 2633      7400
 2634              	.LASF72:
 2635 049b 666C6167 		.ascii	"flag_ts_enc\000"
 2635      5F74735F 
 2635      656E6300 
 2636              	.LASF12:
 2637 04a7 5F5F696E 		.ascii	"__int32_t\000"
 2637      7433325F 
 2637      7400
 2638              	.LASF40:
 2639 04b1 6D6F746F 		.ascii	"motorTurnLeft\000"
 2639      72547572 
 2639      6E4C6566 
 2639      7400
 2640              	.LASF37:
 2641 04bf 6D6F746F 		.ascii	"motorGoStraight\000"
 2641      72476F53 
 2641      74726169 
 2641      67687400 
 2642              	.LASF62:
 2643 04cf 6D6F746F 		.ascii	"motorCount\000"
 2643      72436F75 
 2643      6E7400
 2644              	.LASF26:
 2645 04da 67305F79 		.ascii	"g0_ypos\000"
 2645      706F7300 
 2646              	.LASF71:
 2647 04e2 74735F64 		.ascii	"ts_display\000"
 2647      6973706C 
 2647      617900
 2648              	.LASF69:
 2649 04ed 74735F75 		.ascii	"ts_update\000"
 2649      70646174 
 2649      6500
 2650              	.LASF63:
 2651 04f7 68616E64 		.ascii	"handle_usb\000"
 2651      6C655F75 
 2651      736200
 2652              	.LASF80:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccjnyOTp.s 			page 60


 2653 0502 666C6167 		.ascii	"flag_rf_transmission_active\000"
 2653      5F72665F 
 2653      7472616E 
 2653      736D6973 
 2653      73696F6E 
 2654              	.LASF23:
 2655 051e 726F626F 		.ascii	"robot_ypos\000"
 2655      745F7970 
 2655      6F7300
 2656              	.LASF67:
 2657 0529 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2657      52784275 
 2657      66666572 
 2657      00
 2658              	.LASF58:
 2659 0536 76616C75 		.ascii	"value\000"
 2659      6500
 2660              	.LASF51:
 2661 053c 6D6F746F 		.ascii	"motor2String\000"
 2661      72325374 
 2661      72696E67 
 2661      00
 2662              	.LASF32:
 2663 0549 67315F64 		.ascii	"g1_direction\000"
 2663      69726563 
 2663      74696F6E 
 2663      00
 2664              	.LASF41:
 2665 0556 6D6F746F 		.ascii	"motorTurnRight\000"
 2665      72547572 
 2665      6E526967 
 2665      687400
 2666              	.LASF20:
 2667 0565 72737369 		.ascii	"rssi\000"
 2667      00
 2668              	.LASF24:
 2669 056a 726F626F 		.ascii	"robot_orientation\000"
 2669      745F6F72 
 2669      69656E74 
 2669      6174696F 
 2669      6E00
 2670              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
