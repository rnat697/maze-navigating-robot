ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.section	.text.motorGoStraight,"ax",%progbits
 107              		.align	2
 108              		.global	motorGoStraight
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 3


 109              		.thumb
 110              		.thumb_func
 111              		.type	motorGoStraight, %function
 112              	motorGoStraight:
 113              	.LFB64:
 114              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <stdbool.h>
  19:main.c        **** #include <string.h>
  20:main.c        **** #include <stdlib.h>
  21:main.c        **** #include <project.h>
  22:main.c        **** //* ========================================
  23:main.c        **** #include "defines.h"
  24:main.c        **** #include "vars.h"
  25:main.c        **** #include "isr_eoc.h"
  26:main.c        **** //* ========================================
  27:main.c        **** void usbPutString(char *s);
  28:main.c        **** void usbPutChar(char c);
  29:main.c        **** void handle_usb();
  30:main.c        **** //* ========================================
  31:main.c        **** 
  32:main.c        **** 
  33:main.c        **** #define rota180 500 //turns
  34:main.c        **** #define rota90Left 250
  35:main.c        **** 
  36:main.c        **** #define moveSlow 50
  37:main.c        **** #define travelDist 326 // how
  38:main.c        **** #define Q1CHANNEL 3
  39:main.c        **** #define Q2CHANNEL 5 
  40:main.c        **** #define Q3CHANNEL 0
  41:main.c        **** #define Q4CHANNEL 1
  42:main.c        **** #define Q5CHANNEL 2
  43:main.c        **** #define Q6CHANNEL 4
  44:main.c        **** 
  45:main.c        **** CY_ISR_PROTO(isr_eoc_Interrupt_test);
  46:main.c        **** CY_ISR_PROTO(isr_motor_interrupt_speed);
  47:main.c        **** CY_ISR_PROTO(isr_TS_interrupt_sample);
  48:main.c        **** 
  49:main.c        **** 
  50:main.c        **** void motorGoStraight(){
 115              		.loc 1 50 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 4


 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119 0000 80B5     		push	{r7, lr}
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 7, -8
 122              		.cfi_offset 14, -4
 123 0002 00AF     		add	r7, sp, #0
 124              		.cfi_def_cfa_register 7
  51:main.c        ****     ////PWM_1_WriteCompare(150); // left wheel near power switch is stronker than right wheel //150
  52:main.c        ****     //M1_IN2_Write(0);
  53:main.c        ****     PWM_1_WriteCompare(200);//200
 125              		.loc 1 53 0
 126 0004 C820     		movs	r0, #200
 127 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  54:main.c        ****     PWM_2_WriteCompare(50); //50
 128              		.loc 1 54 0
 129 000a 3220     		movs	r0, #50
 130 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  55:main.c        **** }
 131              		.loc 1 55 0
 132 0010 00BF     		nop
 133 0012 80BD     		pop	{r7, pc}
 134              		.cfi_endproc
 135              	.LFE64:
 136              		.size	motorGoStraight, .-motorGoStraight
 137              		.section	.text.motorGoBackwards,"ax",%progbits
 138              		.align	2
 139              		.global	motorGoBackwards
 140              		.thumb
 141              		.thumb_func
 142              		.type	motorGoBackwards, %function
 143              	motorGoBackwards:
 144              	.LFB65:
  56:main.c        **** void motorGoBackwards(){
 145              		.loc 1 56 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 1, uses_anonymous_args = 0
 149 0000 80B5     		push	{r7, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 00AF     		add	r7, sp, #0
 154              		.cfi_def_cfa_register 7
  57:main.c        ****     
  58:main.c        ****     //M1_IN2_Write(0);
  59:main.c        ****     PWM_1_WriteCompare(55); //55
 155              		.loc 1 59 0
 156 0004 3720     		movs	r0, #55
 157 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  60:main.c        ****     PWM_2_WriteCompare(201); //201
 158              		.loc 1 60 0
 159 000a C920     		movs	r0, #201
 160 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  61:main.c        **** }
 161              		.loc 1 61 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 5


 162 0010 00BF     		nop
 163 0012 80BD     		pop	{r7, pc}
 164              		.cfi_endproc
 165              	.LFE65:
 166              		.size	motorGoBackwards, .-motorGoBackwards
 167              		.section	.text.motorStop,"ax",%progbits
 168              		.align	2
 169              		.global	motorStop
 170              		.thumb
 171              		.thumb_func
 172              		.type	motorStop, %function
 173              	motorStop:
 174              	.LFB66:
  62:main.c        **** void motorStop(){
 175              		.loc 1 62 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 1, uses_anonymous_args = 0
 179 0000 80B5     		push	{r7, lr}
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 7, -8
 182              		.cfi_offset 14, -4
 183 0002 00AF     		add	r7, sp, #0
 184              		.cfi_def_cfa_register 7
  63:main.c        ****     PWM_1_WriteCompare(127); // left wheel near power switch is stronker than right wheel
 185              		.loc 1 63 0
 186 0004 7F20     		movs	r0, #127
 187 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  64:main.c        ****     PWM_2_WriteCompare(127);
 188              		.loc 1 64 0
 189 000a 7F20     		movs	r0, #127
 190 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  65:main.c        **** }
 191              		.loc 1 65 0
 192 0010 00BF     		nop
 193 0012 80BD     		pop	{r7, pc}
 194              		.cfi_endproc
 195              	.LFE66:
 196              		.size	motorStop, .-motorStop
 197              		.section	.text.motorTurnLeft,"ax",%progbits
 198              		.align	2
 199              		.global	motorTurnLeft
 200              		.thumb
 201              		.thumb_func
 202              		.type	motorTurnLeft, %function
 203              	motorTurnLeft:
 204              	.LFB67:
  66:main.c        **** 
  67:main.c        **** void motorTurnLeft(int x){
 205              		.loc 1 67 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 8
 208              		@ frame_needed = 1, uses_anonymous_args = 0
 209 0000 80B5     		push	{r7, lr}
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 7, -8
 212              		.cfi_offset 14, -4
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 6


 213 0002 82B0     		sub	sp, sp, #8
 214              		.cfi_def_cfa_offset 16
 215 0004 00AF     		add	r7, sp, #0
 216              		.cfi_def_cfa_register 7
 217 0006 7860     		str	r0, [r7, #4]
  68:main.c        ****     // TO DO
  69:main.c        ****     
  70:main.c        ****     PWM_1_WriteCompare(x); //55
 218              		.loc 1 70 0
 219 0008 7B68     		ldr	r3, [r7, #4]
 220 000a DBB2     		uxtb	r3, r3
 221 000c 1846     		mov	r0, r3
 222 000e FFF7FEFF 		bl	PWM_1_WriteCompare
  71:main.c        ****     PWM_2_WriteCompare(125); //201
 223              		.loc 1 71 0
 224 0012 7D20     		movs	r0, #125
 225 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
  72:main.c        ****     
  73:main.c        ****     
  74:main.c        ****     
  75:main.c        ****     //255
  76:main.c        **** }
 226              		.loc 1 76 0
 227 0018 00BF     		nop
 228 001a 0837     		adds	r7, r7, #8
 229              		.cfi_def_cfa_offset 8
 230 001c BD46     		mov	sp, r7
 231              		.cfi_def_cfa_register 13
 232              		@ sp needed
 233 001e 80BD     		pop	{r7, pc}
 234              		.cfi_endproc
 235              	.LFE67:
 236              		.size	motorTurnLeft, .-motorTurnLeft
 237              		.section	.text.motorTurnRight,"ax",%progbits
 238              		.align	2
 239              		.global	motorTurnRight
 240              		.thumb
 241              		.thumb_func
 242              		.type	motorTurnRight, %function
 243              	motorTurnRight:
 244              	.LFB68:
  77:main.c        **** 
  78:main.c        **** void motorTurnRight(int x){
 245              		.loc 1 78 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 8
 248              		@ frame_needed = 1, uses_anonymous_args = 0
 249 0000 80B5     		push	{r7, lr}
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 7, -8
 252              		.cfi_offset 14, -4
 253 0002 82B0     		sub	sp, sp, #8
 254              		.cfi_def_cfa_offset 16
 255 0004 00AF     		add	r7, sp, #0
 256              		.cfi_def_cfa_register 7
 257 0006 7860     		str	r0, [r7, #4]
  79:main.c        ****     // TO DO
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 7


  80:main.c        ****     
  81:main.c        ****     PWM_1_WriteCompare(127);//200
 258              		.loc 1 81 0
 259 0008 7F20     		movs	r0, #127
 260 000a FFF7FEFF 		bl	PWM_1_WriteCompare
  82:main.c        ****     PWM_2_WriteCompare(x); //50
 261              		.loc 1 82 0
 262 000e 7B68     		ldr	r3, [r7, #4]
 263 0010 DBB2     		uxtb	r3, r3
 264 0012 1846     		mov	r0, r3
 265 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
  83:main.c        ****    CyDelay(rota90Left);
 266              		.loc 1 83 0
 267 0018 FA20     		movs	r0, #250
 268 001a FFF7FEFF 		bl	CyDelay
  84:main.c        **** }
 269              		.loc 1 84 0
 270 001e 00BF     		nop
 271 0020 0837     		adds	r7, r7, #8
 272              		.cfi_def_cfa_offset 8
 273 0022 BD46     		mov	sp, r7
 274              		.cfi_def_cfa_register 13
 275              		@ sp needed
 276 0024 80BD     		pop	{r7, pc}
 277              		.cfi_endproc
 278              	.LFE68:
 279              		.size	motorTurnRight, .-motorTurnRight
 280              		.global	changeMotor
 281 0026 00BF     		.bss
 282 0012 0000     		.align	2
 283              		.type	changeMotor, %object
 284              		.size	changeMotor, 4
 285              	changeMotor:
 286 0014 00000000 		.space	4
 287              		.global	checkLight
 288              		.align	2
 289              		.type	checkLight, %object
 290              		.size	checkLight, 4
 291              	checkLight:
 292 0018 00000000 		.space	4
 293              		.global	lightState
 294              		.align	2
 295              		.type	lightState, %object
 296              		.size	lightState, 4
 297              	lightState:
 298 001c 00000000 		.space	4
 299              		.global	lightDetectedFront
 300              		.align	2
 301              		.type	lightDetectedFront, %object
 302              		.size	lightDetectedFront, 12
 303              	lightDetectedFront:
 304 0020 00000000 		.space	12
 304      00000000 
 304      00000000 
 305              		.global	counteoc
 306              		.align	2
 307              		.type	counteoc, %object
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 8


 308              		.size	counteoc, 4
 309              	counteoc:
 310 002c 00000000 		.space	4
 311              		.global	processSensors
 312              		.align	2
 313              		.type	processSensors, %object
 314              		.size	processSensors, 4
 315              	processSensors:
 316 0030 00000000 		.space	4
 317              		.section	.text.isr_eoc_Interrupt_test,"ax",%progbits
 318              		.align	2
 319              		.global	isr_eoc_Interrupt_test
 320              		.thumb
 321              		.thumb_func
 322              		.type	isr_eoc_Interrupt_test, %function
 323              	isr_eoc_Interrupt_test:
 324              	.LFB69:
  85:main.c        **** int changeMotor=0;
  86:main.c        **** int checkLight =0;
  87:main.c        **** int lightState=0;
  88:main.c        **** volatile int lightDetectedFront[3] = {0,0,0};
  89:main.c        **** volatile int counteoc = 0;
  90:main.c        **** volatile int processSensors = 0;
  91:main.c        **** CY_ISR(isr_eoc_Interrupt_test)
  92:main.c        **** {
 325              		.loc 1 92 0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 8
 328              		@ frame_needed = 1, uses_anonymous_args = 0
 329 0000 80B5     		push	{r7, lr}
 330              		.cfi_def_cfa_offset 8
 331              		.cfi_offset 7, -8
 332              		.cfi_offset 14, -4
 333 0002 82B0     		sub	sp, sp, #8
 334              		.cfi_def_cfa_offset 16
 335 0004 00AF     		add	r7, sp, #0
 336              		.cfi_def_cfa_register 7
  93:main.c        ****     #ifdef isr_test_INTERRUPT_INTERRUPT_CALLBACK
  94:main.c        ****         isr_TS_Interrupt_InterruptCallback();
  95:main.c        ****     #endif /* isr_eoc_INTERRUPT_INTERRUPT_CALLBACK */ 
  96:main.c        **** 
  97:main.c        ****     /*  Place your Interrupt code here. */
  98:main.c        ****     /* `#START isr_eoc_Interrupt` */
  99:main.c        ****     int16 valueQ3 =  ADC_GetResult16(Q3CHANNEL);
 337              		.loc 1 99 0
 338 0006 0020     		movs	r0, #0
 339 0008 FFF7FEFF 		bl	ADC_GetResult16
 340 000c 0346     		mov	r3, r0
 341 000e FB80     		strh	r3, [r7, #6]	@ movhi
 100:main.c        ****     int16 valueQ4 =  ADC_GetResult16(Q4CHANNEL);
 342              		.loc 1 100 0
 343 0010 0120     		movs	r0, #1
 344 0012 FFF7FEFF 		bl	ADC_GetResult16
 345 0016 0346     		mov	r3, r0
 346 0018 BB80     		strh	r3, [r7, #4]	@ movhi
 101:main.c        ****     int16 valueQ5 =  ADC_GetResult16(Q5CHANNEL);
 347              		.loc 1 101 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 9


 348 001a 0220     		movs	r0, #2
 349 001c FFF7FEFF 		bl	ADC_GetResult16
 350 0020 0346     		mov	r3, r0
 351 0022 7B80     		strh	r3, [r7, #2]	@ movhi
 102:main.c        ****     // get value from ADC then convert to DAC to send to external LEDs
 103:main.c        ****     if (counteoc < 10) {
 352              		.loc 1 103 0
 353 0024 154B     		ldr	r3, .L13
 354 0026 1B68     		ldr	r3, [r3]
 355 0028 092B     		cmp	r3, #9
 356 002a 20DC     		bgt	.L7
 104:main.c        ****         
 105:main.c        ****         if (valueQ3 >= 2211) {
 357              		.loc 1 105 0
 358 002c B7F90630 		ldrsh	r3, [r7, #6]
 359 0030 40F6A202 		movw	r2, #2210
 360 0034 9342     		cmp	r3, r2
 361 0036 02DD     		ble	.L8
 106:main.c        ****         //set flag for white light detected
 107:main.c        ****         lightDetectedFront[0] = 1;
 362              		.loc 1 107 0
 363 0038 114B     		ldr	r3, .L13+4
 364 003a 0122     		movs	r2, #1
 365 003c 1A60     		str	r2, [r3]
 366              	.L8:
 108:main.c        ****         }
 109:main.c        ****         if (valueQ4 >= 2211) {
 367              		.loc 1 109 0
 368 003e B7F90430 		ldrsh	r3, [r7, #4]
 369 0042 40F6A202 		movw	r2, #2210
 370 0046 9342     		cmp	r3, r2
 371 0048 02DD     		ble	.L9
 110:main.c        ****         //set flag for white light detected
 111:main.c        ****         lightDetectedFront[1] = 1;
 372              		.loc 1 111 0
 373 004a 0D4B     		ldr	r3, .L13+4
 374 004c 0122     		movs	r2, #1
 375 004e 5A60     		str	r2, [r3, #4]
 376              	.L9:
 112:main.c        ****         }
 113:main.c        ****     
 114:main.c        ****         if (valueQ5 >= 2211) {
 377              		.loc 1 114 0
 378 0050 B7F90230 		ldrsh	r3, [r7, #2]
 379 0054 40F6A202 		movw	r2, #2210
 380 0058 9342     		cmp	r3, r2
 381 005a 02DD     		ble	.L10
 115:main.c        ****         //set flag for white light detected
 116:main.c        ****         lightDetectedFront[2] = 1;
 382              		.loc 1 116 0
 383 005c 084B     		ldr	r3, .L13+4
 384 005e 0122     		movs	r2, #1
 385 0060 9A60     		str	r2, [r3, #8]
 386              	.L10:
 117:main.c        ****         }
 118:main.c        ****         
 119:main.c        ****         counteoc++;
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 10


 387              		.loc 1 119 0
 388 0062 064B     		ldr	r3, .L13
 389 0064 1B68     		ldr	r3, [r3]
 390 0066 0133     		adds	r3, r3, #1
 391 0068 044A     		ldr	r2, .L13
 392 006a 1360     		str	r3, [r2]
 120:main.c        ****     } else {
 121:main.c        ****         processSensors = 1;   
 122:main.c        ****     }
 123:main.c        ****     /* `#END` */
 124:main.c        **** }
 393              		.loc 1 124 0
 394 006c 02E0     		b	.L12
 395              	.L7:
 121:main.c        ****     }
 396              		.loc 1 121 0
 397 006e 054B     		ldr	r3, .L13+8
 398 0070 0122     		movs	r2, #1
 399 0072 1A60     		str	r2, [r3]
 400              	.L12:
 401              		.loc 1 124 0
 402 0074 00BF     		nop
 403 0076 0837     		adds	r7, r7, #8
 404              		.cfi_def_cfa_offset 8
 405 0078 BD46     		mov	sp, r7
 406              		.cfi_def_cfa_register 13
 407              		@ sp needed
 408 007a 80BD     		pop	{r7, pc}
 409              	.L14:
 410              		.align	2
 411              	.L13:
 412 007c 00000000 		.word	counteoc
 413 0080 00000000 		.word	lightDetectedFront
 414 0084 00000000 		.word	processSensors
 415              		.cfi_endproc
 416              	.LFE69:
 417              		.size	isr_eoc_Interrupt_test, .-isr_eoc_Interrupt_test
 418              		.bss
 419              	count:
 420 0034 00       		.space	1
 421              		.section	.text.isr_motor_interrupt_speed,"ax",%progbits
 422              		.align	2
 423              		.global	isr_motor_interrupt_speed
 424              		.thumb
 425              		.thumb_func
 426              		.type	isr_motor_interrupt_speed, %function
 427              	isr_motor_interrupt_speed:
 428              	.LFB70:
 125:main.c        **** // NEED TO INCREASE/DECREASE SPEED TOO
 126:main.c        **** // AND IMPLEMENT LIGHT SENSOR THINGS
 127:main.c        **** volatile static int8 count;
 128:main.c        **** CY_ISR(isr_motor_interrupt_speed)
 129:main.c        **** {
 429              		.loc 1 129 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 11


 433              		@ link register save eliminated.
 434 0000 80B4     		push	{r7}
 435              		.cfi_def_cfa_offset 4
 436              		.cfi_offset 7, -4
 437 0002 00AF     		add	r7, sp, #0
 438              		.cfi_def_cfa_register 7
 130:main.c        ****     #ifdef isr_motor_INTERRUPT_INTERRUPT_CALLBACK
 131:main.c        ****         isr_motor_Interrupt_InterruptCallback();
 132:main.c        ****     #endif /* isr_motor_INTERRUPT_INTERRUPT_CALLBACK */ 
 133:main.c        **** 
 134:main.c        ****     /*  Place your Interrupt code here. */
 135:main.c        ****     /* `#START isr_motor_Interrupt` */
 136:main.c        ****       /*int16 currCountMotor2 = QuadDec_M2_GetCounter();
 137:main.c        ****       int16 currCountMotor1 = QuadDec_M1_GetCounter();  
 138:main.c        ****       
 139:main.c        ****      speedMotor1 = (currCountMotor1 - prevcountMotor1) / 0.2;
 140:main.c        ****      speedMotor2 = (currCountMotor2 - prevcountMotor2) / 0.2;
 141:main.c        ****     
 142:main.c        ****       prevcountMotor1 = currCountMotor1;
 143:main.c        ****       prevcountMotor2 = currCountMotor2;*/
 144:main.c        ****     
 145:main.c        ****     /* `#END` */
 146:main.c        **** }
 439              		.loc 1 146 0
 440 0004 00BF     		nop
 441 0006 BD46     		mov	sp, r7
 442              		.cfi_def_cfa_register 13
 443              		@ sp needed
 444 0008 80BC     		pop	{r7}
 445              		.cfi_restore 7
 446              		.cfi_def_cfa_offset 0
 447 000a 7047     		bx	lr
 448              		.cfi_endproc
 449              	.LFE70:
 450              		.size	isr_motor_interrupt_speed, .-isr_motor_interrupt_speed
 451              		.section	.rodata
 452              		.align	2
 453              	.LC0:
 454 0000 4D6F746F 		.ascii	"Motor 1 - start count: %d, end count: %d \012\000"
 454      72203120 
 454      2D207374 
 454      61727420 
 454      636F756E 
 455 002b 00       		.align	2
 456              	.LC1:
 457 002c 4D6F746F 		.ascii	"Motor 2 - start count: %d, end count: %d \012\000"
 457      72203220 
 457      2D207374 
 457      61727420 
 457      636F756E 
 458              		.section	.text.motorCount,"ax",%progbits
 459              		.align	2
 460              		.global	motorCount
 461              		.thumb
 462              		.thumb_func
 463              		.type	motorCount, %function
 464              	motorCount:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 12


 465              	.LFB71:
 147:main.c        **** void motorCount(){
 466              		.loc 1 147 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 20008
 469              		@ frame_needed = 1, uses_anonymous_args = 0
 470 0000 80B5     		push	{r7, lr}
 471              		.cfi_def_cfa_offset 8
 472              		.cfi_offset 7, -8
 473              		.cfi_offset 14, -4
 474 0002 ADF59C4D 		sub	sp, sp, #19968
 475              		.cfi_def_cfa_offset 19976
 476 0006 8AB0     		sub	sp, sp, #40
 477              		.cfi_def_cfa_offset 20016
 478 0008 00AF     		add	r7, sp, #0
 479              		.cfi_def_cfa_register 7
 148:main.c        ****     int16 beginningCountMotor1 = 0;
 480              		.loc 1 148 0
 481 000a 0023     		movs	r3, #0
 482 000c 07F59C42 		add	r2, r7, #19968
 483 0010 02F12602 		add	r2, r2, #38
 484 0014 1380     		strh	r3, [r2]	@ movhi
 149:main.c        ****     int16 beginningCountMotor2 = 0;
 485              		.loc 1 149 0
 486 0016 0023     		movs	r3, #0
 487 0018 07F59C42 		add	r2, r7, #19968
 488 001c 02F12402 		add	r2, r2, #36
 489 0020 1380     		strh	r3, [r2]	@ movhi
 150:main.c        ****     int16 endCountMotor2 = QuadDec_M2_GetCounter();
 490              		.loc 1 150 0
 491 0022 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 492 0026 0346     		mov	r3, r0
 493 0028 07F59C42 		add	r2, r7, #19968
 494 002c 02F12202 		add	r2, r2, #34
 495 0030 1380     		strh	r3, [r2]	@ movhi
 151:main.c        ****     int16 endCountMotor1 = QuadDec_M1_GetCounter();
 496              		.loc 1 151 0
 497 0032 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 498 0036 0346     		mov	r3, r0
 499 0038 07F59C42 		add	r2, r7, #19968
 500 003c 02F12002 		add	r2, r2, #32
 501 0040 1380     		strh	r3, [r2]	@ movhi
 152:main.c        ****     char motor1String[10000]; 
 153:main.c        ****     sprintf(motor1String,"Motor 1 - start count: %d, end count: %d \n", beginningCountMotor1, endCo
 502              		.loc 1 153 0
 503 0042 07F59C43 		add	r3, r7, #19968
 504 0046 03F12603 		add	r3, r3, #38
 505 004a B3F90020 		ldrsh	r2, [r3]
 506 004e 07F59C43 		add	r3, r7, #19968
 507 0052 03F12003 		add	r3, r3, #32
 508 0056 B3F90030 		ldrsh	r3, [r3]
 509 005a 07F51C50 		add	r0, r7, #9984
 510 005e 00F12800 		add	r0, r0, #40
 511 0062 1838     		subs	r0, r0, #24
 512 0064 1449     		ldr	r1, .L17
 513 0066 FFF7FEFF 		bl	sprintf
 154:main.c        ****     char motor2String[10000];
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 13


 155:main.c        ****     sprintf(motor2String,"Motor 2 - start count: %d, end count: %d \n", beginningCountMotor2 , endC
 514              		.loc 1 155 0
 515 006a 07F59C43 		add	r3, r7, #19968
 516 006e 03F12403 		add	r3, r3, #36
 517 0072 B3F90020 		ldrsh	r2, [r3]
 518 0076 07F59C43 		add	r3, r7, #19968
 519 007a 03F12203 		add	r3, r3, #34
 520 007e B3F90030 		ldrsh	r3, [r3]
 521 0082 07F12800 		add	r0, r7, #40
 522 0086 2838     		subs	r0, r0, #40
 523 0088 0C49     		ldr	r1, .L17+4
 524 008a FFF7FEFF 		bl	sprintf
 156:main.c        ****     
 157:main.c        ****     usbPutString(motor1String);
 525              		.loc 1 157 0
 526 008e 07F51C53 		add	r3, r7, #9984
 527 0092 03F12803 		add	r3, r3, #40
 528 0096 183B     		subs	r3, r3, #24
 529 0098 1846     		mov	r0, r3
 530 009a FFF7FEFF 		bl	usbPutString
 158:main.c        ****     usbPutString(motor2String);
 531              		.loc 1 158 0
 532 009e 07F12803 		add	r3, r7, #40
 533 00a2 283B     		subs	r3, r3, #40
 534 00a4 1846     		mov	r0, r3
 535 00a6 FFF7FEFF 		bl	usbPutString
 159:main.c        **** 
 160:main.c        **** }
 536              		.loc 1 160 0
 537 00aa 00BF     		nop
 538 00ac 07F59C47 		add	r7, r7, #19968
 539 00b0 2837     		adds	r7, r7, #40
 540              		.cfi_def_cfa_offset 8
 541 00b2 BD46     		mov	sp, r7
 542              		.cfi_def_cfa_register 13
 543              		@ sp needed
 544 00b4 80BD     		pop	{r7, pc}
 545              	.L18:
 546 00b6 00BF     		.align	2
 547              	.L17:
 548 00b8 00000000 		.word	.LC0
 549 00bc 2C000000 		.word	.LC1
 550              		.cfi_endproc
 551              	.LFE71:
 552              		.size	motorCount, .-motorCount
 553              		.section	.text.motorRun,"ax",%progbits
 554              		.align	2
 555              		.global	motorRun
 556              		.thumb
 557              		.thumb_func
 558              		.type	motorRun, %function
 559              	motorRun:
 560              	.LFB72:
 161:main.c        **** 
 162:main.c        **** void motorRun(){
 561              		.loc 1 162 0
 562              		.cfi_startproc
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 14


 563              		@ args = 0, pretend = 0, frame = 0
 564              		@ frame_needed = 1, uses_anonymous_args = 0
 565 0000 80B5     		push	{r7, lr}
 566              		.cfi_def_cfa_offset 8
 567              		.cfi_offset 7, -8
 568              		.cfi_offset 14, -4
 569 0002 00AF     		add	r7, sp, #0
 570              		.cfi_def_cfa_register 7
 163:main.c        ****     
 164:main.c        ****     
 165:main.c        ****     
 166:main.c        ****     PWM_1_Start();
 571              		.loc 1 166 0
 572 0004 FFF7FEFF 		bl	PWM_1_Start
 167:main.c        ****     PWM_2_Start();
 573              		.loc 1 167 0
 574 0008 FFF7FEFF 		bl	PWM_2_Start
 168:main.c        **** 
 169:main.c        **** 
 170:main.c        ****     motorStop();
 575              		.loc 1 170 0
 576 000c FFF7FEFF 		bl	motorStop
 171:main.c        ****     CyDelay(2000); // so we have time to set the robot up
 577              		.loc 1 171 0
 578 0010 4FF4FA60 		mov	r0, #2000
 579 0014 FFF7FEFF 		bl	CyDelay
 172:main.c        ****     motorGoStraight();
 580              		.loc 1 172 0
 581 0018 FFF7FEFF 		bl	motorGoStraight
 173:main.c        ****     CyDelay(2000);
 582              		.loc 1 173 0
 583 001c 4FF4FA60 		mov	r0, #2000
 584 0020 FFF7FEFF 		bl	CyDelay
 174:main.c        ****     motorStop();
 585              		.loc 1 174 0
 586 0024 FFF7FEFF 		bl	motorStop
 175:main.c        ****     
 176:main.c        ****     //motorGoBackwards();
 177:main.c        **** 
 178:main.c        ****     
 179:main.c        ****     //CyDelay(2000);
 180:main.c        ****  
 181:main.c        ****     //motorStop();
 182:main.c        ****     //motorCount();//checks count per second.
 183:main.c        **** 
 184:main.c        **** }
 587              		.loc 1 184 0
 588 0028 00BF     		nop
 589 002a 80BD     		pop	{r7, pc}
 590              		.cfi_endproc
 591              	.LFE72:
 592              		.size	motorRun, .-motorRun
 593              		.section	.text.isr_TS_Interrupt_sample,"ax",%progbits
 594              		.align	2
 595              		.global	isr_TS_Interrupt_sample
 596              		.thumb
 597              		.thumb_func
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 15


 598              		.type	isr_TS_Interrupt_sample, %function
 599              	isr_TS_Interrupt_sample:
 600              	.LFB73:
 185:main.c        **** CY_ISR(isr_TS_Interrupt_sample)
 186:main.c        **** {
 601              		.loc 1 186 0
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 0
 604              		@ frame_needed = 1, uses_anonymous_args = 0
 605 0000 80B5     		push	{r7, lr}
 606              		.cfi_def_cfa_offset 8
 607              		.cfi_offset 7, -8
 608              		.cfi_offset 14, -4
 609 0002 00AF     		add	r7, sp, #0
 610              		.cfi_def_cfa_register 7
 187:main.c        ****     #ifdef isr_TS_INTERRUPT_INTERRUPT_CALLBACK
 188:main.c        ****         isr_TS_Interrupt_InterruptCallback();
 189:main.c        ****     #endif /* isr_TS_INTERRUPT_INTERRUPT_CALLBACK */ 
 190:main.c        ****         ADC_StartConvert();
 611              		.loc 1 190 0
 612 0004 FFF7FEFF 		bl	ADC_StartConvert
 191:main.c        ****     /*  Place your Interrupt code here. */
 192:main.c        ****     /* `#START isr_TS_Interrupt` */
 193:main.c        **** 
 194:main.c        ****     /* `#END` */
 195:main.c        **** }
 613              		.loc 1 195 0
 614 0008 00BF     		nop
 615 000a 80BD     		pop	{r7, pc}
 616              		.cfi_endproc
 617              	.LFE73:
 618              		.size	isr_TS_Interrupt_sample, .-isr_TS_Interrupt_sample
 619              		.section	.text.main,"ax",%progbits
 620              		.align	2
 621              		.global	main
 622              		.thumb
 623              		.thumb_func
 624              		.type	main, %function
 625              	main:
 626              	.LFB74:
 196:main.c        **** 
 197:main.c        **** 
 198:main.c        **** int main()
 199:main.c        **** {
 627              		.loc 1 199 0
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 8
 630              		@ frame_needed = 1, uses_anonymous_args = 0
 631 0000 80B5     		push	{r7, lr}
 632              		.cfi_def_cfa_offset 8
 633              		.cfi_offset 7, -8
 634              		.cfi_offset 14, -4
 635 0002 82B0     		sub	sp, sp, #8
 636              		.cfi_def_cfa_offset 16
 637 0004 00AF     		add	r7, sp, #0
 638              		.cfi_def_cfa_register 7
 200:main.c        ****     
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 16


 201:main.c        **** 
 202:main.c        **** // --------------------------------    
 203:main.c        **** // ----- INITIALIZATIONS ----------
 204:main.c        ****     CYGlobalIntEnable;
 639              		.loc 1 204 0
 640              		.syntax unified
 641              	@ 204 "main.c" 1
 642 0006 62B6     		CPSIE   i
 643              	@ 0 "" 2
 205:main.c        ****     count  = 0;
 644              		.loc 1 205 0
 645              		.thumb
 646              		.syntax unified
 647 0008 2E4B     		ldr	r3, .L26
 648 000a 0022     		movs	r2, #0
 649 000c 1A70     		strb	r2, [r3]
 206:main.c        ****     
 207:main.c        ****    
 208:main.c        ****     Timer_TS_Start();
 650              		.loc 1 208 0
 651 000e FFF7FEFF 		bl	Timer_TS_Start
 209:main.c        ****     Timer_Motor_Start();
 652              		.loc 1 209 0
 653 0012 FFF7FEFF 		bl	Timer_Motor_Start
 210:main.c        ****     QuadDec_M1_Start();
 654              		.loc 1 210 0
 655 0016 FFF7FEFF 		bl	QuadDec_M1_Start
 211:main.c        ****     QuadDec_M2_Start(); //init the quadencoder,
 656              		.loc 1 211 0
 657 001a FFF7FEFF 		bl	QuadDec_M2_Start
 212:main.c        ****     //isr_motor_StartEx(isr_motor_interrupt_speed);
 213:main.c        ****     isr_TS_StartEx(isr_TS_Interrupt_sample);
 658              		.loc 1 213 0
 659 001e 2A48     		ldr	r0, .L26+4
 660 0020 FFF7FEFF 		bl	isr_TS_StartEx
 214:main.c        ****     isr_eoc_StartEx(isr_eoc_Interrupt_test);
 661              		.loc 1 214 0
 662 0024 2948     		ldr	r0, .L26+8
 663 0026 FFF7FEFF 		bl	isr_eoc_StartEx
 215:main.c        ****     
 216:main.c        ****     ADC_Start();
 664              		.loc 1 216 0
 665 002a FFF7FEFF 		bl	ADC_Start
 217:main.c        ****     //ADC_StartConvert();
 218:main.c        ****     
 219:main.c        ****     PWM_1_Start();
 666              		.loc 1 219 0
 667 002e FFF7FEFF 		bl	PWM_1_Start
 220:main.c        ****     PWM_2_Start();
 668              		.loc 1 220 0
 669 0032 FFF7FEFF 		bl	PWM_2_Start
 221:main.c        ****     
 222:main.c        ****     LED_Write(0);
 670              		.loc 1 222 0
 671 0036 0020     		movs	r0, #0
 672 0038 FFF7FEFF 		bl	LED_Write
 223:main.c        ****     ///////IF NOT USINNG MOTOR RUN DO PWM START STUFF
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 17


 224:main.c        ****     // SO write compare is a measure of speed
 225:main.c        ****     // And Cy delay delays the running of the motor and duration that it travels
 226:main.c        ****     //look at motor RUn config above for more info.
 227:main.c        ****     motorStop();
 673              		.loc 1 227 0
 674 003c FFF7FEFF 		bl	motorStop
 228:main.c        ****     CyDelay(2000); // to prep
 675              		.loc 1 228 0
 676 0040 4FF4FA60 		mov	r0, #2000
 677 0044 FFF7FEFF 		bl	CyDelay
 678              	.L25:
 229:main.c        ****    /* while(QuadDec_M1_GetCounter()<travelDist){
 230:main.c        ****     //where counter is value we want it to stop at.
 231:main.c        ****         motorGoStraight();
 232:main.c        ****     
 233:main.c        ****     
 234:main.c        ****     }*/
 235:main.c        **** 
 236:main.c        ****     
 237:main.c        ****     //motorStop();
 238:main.c        ****    // CyDelay(2000); // so we have time to set the robot up
 239:main.c        ****     //motorTurnLeft();
 240:main.c        ****     //motorStop();
 241:main.c        ****     //motorCount();//checks count per second.
 242:main.c        ****      
 243:main.c        ****     
 244:main.c        ****     
 245:main.c        **** 
 246:main.c        ****     
 247:main.c        **** 
 248:main.c        ****     
 249:main.c        **** // ------USB SETUP ----------------    
 250:main.c        **** //#ifdef USE_USB    
 251:main.c        **** //    USBUART_Start(0,USBUART_5V_OPERATION);
 252:main.c        **** //#endif        
 253:main.c        **** //        
 254:main.c        **** //    RF_BT_SELECT_Write(0);
 255:main.c        **** //    motorCount();//checks count per second.
 256:main.c        **** 
 257:main.c        ****     //usbPutString(displaystring);
 258:main.c        ****     while(1)
 259:main.c        ****     {
 260:main.c        ****         /* Place your application code here. */
 261:main.c        ****         
 262:main.c        ****         //if Q3 SENSES BLACK LIGHT BUT Q4 DOES NOT SENSE THE BLACK LIGHT MOVE TOWARDS THE RIGHT TO 
 263:main.c        ****     // IF Q3 AND Q4 SENSES TURN 90 DEGREES LEFT - intersection
 264:main.c        ****     // IF Q5 BUT NOT Q4 SENSES BLACK LIGHT MOVE TOWARDS THE LEFT TO REALIGN CENTER
 265:main.c        ****     // IF Q5 AND Q4 TURN 90 DEGREES RIGHT - intersection
 266:main.c        ****        
 267:main.c        ****         if (processSensors == 1) {
 679              		.loc 1 267 0
 680 0048 214B     		ldr	r3, .L26+12
 681 004a 1B68     		ldr	r3, [r3]
 682 004c 012B     		cmp	r3, #1
 683 004e FBD1     		bne	.L25
 684              	.LBB2:
 268:main.c        ****             
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 18


 269:main.c        ****             //make decision
 270:main.c        ****             
 271:main.c        ****             //checks intersection
 272:main.c        ****             //int leftIntersection= (lightDetectedFront[0] == 1 && lightDetectedFront[1]==1);
 273:main.c        ****             //int rightIntersection=  (lightDetectedFront[2] == 1 && lightDetectedFront[1]==1);
 274:main.c        ****             
 275:main.c        ****            //check intersectin
 276:main.c        ****             ///mazeIntersection(leftIntersection,rightIntersection);
 277:main.c        ****             
 278:main.c        ****             int noneOn = ((lightDetectedFront[0]==1) == (lightDetectedFront[2] ==1));
 685              		.loc 1 278 0
 686 0050 204B     		ldr	r3, .L26+16
 687 0052 1B68     		ldr	r3, [r3]
 688 0054 012B     		cmp	r3, #1
 689 0056 14BF     		ite	ne
 690 0058 0123     		movne	r3, #1
 691 005a 0023     		moveq	r3, #0
 692 005c DAB2     		uxtb	r2, r3
 693 005e 1D4B     		ldr	r3, .L26+16
 694 0060 9B68     		ldr	r3, [r3, #8]
 695 0062 012B     		cmp	r3, #1
 696 0064 0CBF     		ite	eq
 697 0066 0123     		moveq	r3, #1
 698 0068 0023     		movne	r3, #0
 699 006a DBB2     		uxtb	r3, r3
 700 006c 5340     		eors	r3, r3, r2
 701 006e DBB2     		uxtb	r3, r3
 702 0070 7B60     		str	r3, [r7, #4]
 279:main.c        ****             //int Q4On = ((lightDetectedFront[0]==1) == (lightDetectedFront[2] ==1));
 280:main.c        ****              if(noneOn == (lightDetectedFront[1] ==1)){
 703              		.loc 1 280 0
 704 0072 184B     		ldr	r3, .L26+16
 705 0074 5B68     		ldr	r3, [r3, #4]
 706 0076 012B     		cmp	r3, #1
 707 0078 0CBF     		ite	eq
 708 007a 0123     		moveq	r3, #1
 709 007c 0023     		movne	r3, #0
 710 007e DBB2     		uxtb	r3, r3
 711 0080 1A46     		mov	r2, r3
 712 0082 7B68     		ldr	r3, [r7, #4]
 713 0084 9A42     		cmp	r2, r3
 714 0086 04D1     		bne	.L23
 281:main.c        ****                 motorStop();
 715              		.loc 1 281 0
 716 0088 FFF7FEFF 		bl	motorStop
 282:main.c        ****                 LED_Write(0);
 717              		.loc 1 282 0
 718 008c 0020     		movs	r0, #0
 719 008e FFF7FEFF 		bl	LED_Write
 720              	.L23:
 283:main.c        ****             }
 284:main.c        ****             
 285:main.c        ****             
 286:main.c        **** //            if(leftIntersection){
 287:main.c        **** //                motorTurnLeft(55);
 288:main.c        **** //            
 289:main.c        **** //            
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 19


 290:main.c        **** //                CyDelay(250);
 291:main.c        **** //            }
 292:main.c        **** //            
 293:main.c        **** //            if(rightIntersection){
 294:main.c        **** //                motorTurnRight(55);
 295:main.c        **** //                
 296:main.c        **** //                CyDelay(250);//small rotation need small time
 297:main.c        **** //            
 298:main.c        **** //            }
 299:main.c        ****             
 300:main.c        **** //            //Slight turns
 301:main.c        **** //            if(lightDetectedFront[0] == 1 && lightDetectedFront[1]==0){
 302:main.c        **** //                motorTurnRight(140);
 303:main.c        **** //                CyDelay(20);//small rotation need small time
 304:main.c        **** //            }
 305:main.c        **** //            
 306:main.c        **** //            if(lightDetectedFront[2] == 0 && lightDetectedFront[1]==1){
 307:main.c        **** //                motorTurnLeft(140);
 308:main.c        **** //                CyDelay(20);//small rotation need small time
 309:main.c        **** //            }
 310:main.c        ****             if(lightDetectedFront[1] == 0){
 721              		.loc 1 310 0
 722 0092 104B     		ldr	r3, .L26+16
 723 0094 5B68     		ldr	r3, [r3, #4]
 724 0096 002B     		cmp	r3, #0
 725 0098 04D1     		bne	.L24
 311:main.c        ****                 LED_Write(1);
 726              		.loc 1 311 0
 727 009a 0120     		movs	r0, #1
 728 009c FFF7FEFF 		bl	LED_Write
 312:main.c        ****                 motorGoStraight();
 729              		.loc 1 312 0
 730 00a0 FFF7FEFF 		bl	motorGoStraight
 731              	.L24:
 313:main.c        **** 
 314:main.c        ****             }
 315:main.c        ****            
 316:main.c        ****             //reset variable.
 317:main.c        ****             processSensors = 0;
 732              		.loc 1 317 0
 733 00a4 0A4B     		ldr	r3, .L26+12
 734 00a6 0022     		movs	r2, #0
 735 00a8 1A60     		str	r2, [r3]
 318:main.c        ****             //reset counter
 319:main.c        ****             counteoc = 0;
 736              		.loc 1 319 0
 737 00aa 0B4B     		ldr	r3, .L26+20
 738 00ac 0022     		movs	r2, #0
 739 00ae 1A60     		str	r2, [r3]
 320:main.c        ****             //reset flags for lightsensors
 321:main.c        ****             lightDetectedFront[0] = 0;
 740              		.loc 1 321 0
 741 00b0 084B     		ldr	r3, .L26+16
 742 00b2 0022     		movs	r2, #0
 743 00b4 1A60     		str	r2, [r3]
 322:main.c        ****             lightDetectedFront[1] = 0;
 744              		.loc 1 322 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 20


 745 00b6 074B     		ldr	r3, .L26+16
 746 00b8 0022     		movs	r2, #0
 747 00ba 5A60     		str	r2, [r3, #4]
 323:main.c        ****             lightDetectedFront[2] = 0;
 748              		.loc 1 323 0
 749 00bc 054B     		ldr	r3, .L26+16
 750 00be 0022     		movs	r2, #0
 751 00c0 9A60     		str	r2, [r3, #8]
 752              	.LBE2:
 324:main.c        ****             
 325:main.c        ****         }
 326:main.c        ****         
 327:main.c        ****     }   
 753              		.loc 1 327 0
 754 00c2 C1E7     		b	.L25
 755              	.L27:
 756              		.align	2
 757              	.L26:
 758 00c4 34000000 		.word	count
 759 00c8 00000000 		.word	isr_TS_Interrupt_sample
 760 00cc 00000000 		.word	isr_eoc_Interrupt_test
 761 00d0 00000000 		.word	processSensors
 762 00d4 00000000 		.word	lightDetectedFront
 763 00d8 00000000 		.word	counteoc
 764              		.cfi_endproc
 765              	.LFE74:
 766              		.size	main, .-main
 767              		.section	.text.usbPutString,"ax",%progbits
 768              		.align	2
 769              		.global	usbPutString
 770              		.thumb
 771              		.thumb_func
 772              		.type	usbPutString, %function
 773              	usbPutString:
 774              	.LFB75:
 328:main.c        **** }
 329:main.c        **** //* ========================================
 330:main.c        **** void usbPutString(char *s)
 331:main.c        **** {
 775              		.loc 1 331 0
 776              		.cfi_startproc
 777              		@ args = 0, pretend = 0, frame = 8
 778              		@ frame_needed = 1, uses_anonymous_args = 0
 779 0000 80B5     		push	{r7, lr}
 780              		.cfi_def_cfa_offset 8
 781              		.cfi_offset 7, -8
 782              		.cfi_offset 14, -4
 783 0002 82B0     		sub	sp, sp, #8
 784              		.cfi_def_cfa_offset 16
 785 0004 00AF     		add	r7, sp, #0
 786              		.cfi_def_cfa_register 7
 787 0006 7860     		str	r0, [r7, #4]
 332:main.c        **** // !! Assumes that *s is a string with allocated space >=64 chars     
 333:main.c        **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 334:main.c        **** //  length to 62 char (63rd char is a '!')
 335:main.c        **** 
 336:main.c        **** #ifdef USE_USB     
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 21


 337:main.c        ****     while (USBUART_CDCIsReady() == 0);
 788              		.loc 1 337 0
 789 0008 00BF     		nop
 790              	.L29:
 791              		.loc 1 337 0 is_stmt 0 discriminator 1
 792 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 793 000e 0346     		mov	r3, r0
 794 0010 002B     		cmp	r3, #0
 795 0012 FAD0     		beq	.L29
 338:main.c        ****     s[63]='\0';
 796              		.loc 1 338 0 is_stmt 1
 797 0014 7B68     		ldr	r3, [r7, #4]
 798 0016 3F33     		adds	r3, r3, #63
 799 0018 0022     		movs	r2, #0
 800 001a 1A70     		strb	r2, [r3]
 339:main.c        ****     s[62]='!';
 801              		.loc 1 339 0
 802 001c 7B68     		ldr	r3, [r7, #4]
 803 001e 3E33     		adds	r3, r3, #62
 804 0020 2122     		movs	r2, #33
 805 0022 1A70     		strb	r2, [r3]
 340:main.c        ****     USBUART_PutData((uint8*)s,strlen(s));
 806              		.loc 1 340 0
 807 0024 7868     		ldr	r0, [r7, #4]
 808 0026 FFF7FEFF 		bl	strlen
 809 002a 0346     		mov	r3, r0
 810 002c 9BB2     		uxth	r3, r3
 811 002e 1946     		mov	r1, r3
 812 0030 7868     		ldr	r0, [r7, #4]
 813 0032 FFF7FEFF 		bl	USBUART_PutData
 341:main.c        **** #endif
 342:main.c        **** }
 814              		.loc 1 342 0
 815 0036 00BF     		nop
 816 0038 0837     		adds	r7, r7, #8
 817              		.cfi_def_cfa_offset 8
 818 003a BD46     		mov	sp, r7
 819              		.cfi_def_cfa_register 13
 820              		@ sp needed
 821 003c 80BD     		pop	{r7, pc}
 822              		.cfi_endproc
 823              	.LFE75:
 824              		.size	usbPutString, .-usbPutString
 825 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 826              		.align	2
 827              		.global	usbPutChar
 828              		.thumb
 829              		.thumb_func
 830              		.type	usbPutChar, %function
 831              	usbPutChar:
 832              	.LFB76:
 343:main.c        **** //* ========================================
 344:main.c        **** void usbPutChar(char c)
 345:main.c        **** {
 833              		.loc 1 345 0
 834              		.cfi_startproc
 835              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 22


 836              		@ frame_needed = 1, uses_anonymous_args = 0
 837 0000 80B5     		push	{r7, lr}
 838              		.cfi_def_cfa_offset 8
 839              		.cfi_offset 7, -8
 840              		.cfi_offset 14, -4
 841 0002 82B0     		sub	sp, sp, #8
 842              		.cfi_def_cfa_offset 16
 843 0004 00AF     		add	r7, sp, #0
 844              		.cfi_def_cfa_register 7
 845 0006 0346     		mov	r3, r0
 846 0008 FB71     		strb	r3, [r7, #7]
 346:main.c        **** #ifdef USE_USB     
 347:main.c        ****     while (USBUART_CDCIsReady() == 0);
 847              		.loc 1 347 0
 848 000a 00BF     		nop
 849              	.L31:
 850              		.loc 1 347 0 is_stmt 0 discriminator 1
 851 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 852 0010 0346     		mov	r3, r0
 853 0012 002B     		cmp	r3, #0
 854 0014 FAD0     		beq	.L31
 348:main.c        ****     USBUART_PutChar(c);
 855              		.loc 1 348 0 is_stmt 1
 856 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 857 0018 1846     		mov	r0, r3
 858 001a FFF7FEFF 		bl	USBUART_PutChar
 349:main.c        **** #endif    
 350:main.c        **** }
 859              		.loc 1 350 0
 860 001e 00BF     		nop
 861 0020 0837     		adds	r7, r7, #8
 862              		.cfi_def_cfa_offset 8
 863 0022 BD46     		mov	sp, r7
 864              		.cfi_def_cfa_register 13
 865              		@ sp needed
 866 0024 80BD     		pop	{r7, pc}
 867              		.cfi_endproc
 868              	.LFE76:
 869              		.size	usbPutChar, .-usbPutChar
 870 0026 00BF     		.section	.text.handle_usb,"ax",%progbits
 871              		.align	2
 872              		.global	handle_usb
 873              		.thumb
 874              		.thumb_func
 875              		.type	handle_usb, %function
 876              	handle_usb:
 877              	.LFB77:
 351:main.c        **** //* ========================================
 352:main.c        **** void handle_usb()
 353:main.c        **** {
 878              		.loc 1 353 0
 879              		.cfi_startproc
 880              		@ args = 0, pretend = 0, frame = 8
 881              		@ frame_needed = 1, uses_anonymous_args = 0
 882 0000 80B5     		push	{r7, lr}
 883              		.cfi_def_cfa_offset 8
 884              		.cfi_offset 7, -8
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 23


 885              		.cfi_offset 14, -4
 886 0002 82B0     		sub	sp, sp, #8
 887              		.cfi_def_cfa_offset 16
 888 0004 00AF     		add	r7, sp, #0
 889              		.cfi_def_cfa_register 7
 354:main.c        ****     // handles input at terminal, echos it back to the terminal
 355:main.c        ****     // turn echo OFF, key emulation: only CR
 356:main.c        ****     // entered string is made available in 'line' and 'flag_KB_string' is set
 357:main.c        ****     
 358:main.c        ****     static uint8 usbStarted = FALSE;
 359:main.c        ****     static uint16 usbBufCount = 0;
 360:main.c        ****     uint8 c; 
 361:main.c        ****     
 362:main.c        **** 
 363:main.c        ****     if (!usbStarted)
 890              		.loc 1 363 0
 891 0006 2B4B     		ldr	r3, .L42
 892 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 893 000a 002B     		cmp	r3, #0
 894 000c 0AD1     		bne	.L33
 364:main.c        ****     {
 365:main.c        ****         if (USBUART_GetConfiguration())
 895              		.loc 1 365 0
 896 000e FFF7FEFF 		bl	USBUART_GetConfiguration
 897 0012 0346     		mov	r3, r0
 898 0014 002B     		cmp	r3, #0
 899 0016 49D0     		beq	.L41
 366:main.c        ****         {
 367:main.c        ****             USBUART_CDC_Init();
 900              		.loc 1 367 0
 901 0018 FFF7FEFF 		bl	USBUART_CDC_Init
 368:main.c        ****             usbStarted = TRUE;
 902              		.loc 1 368 0
 903 001c 254B     		ldr	r3, .L42
 904 001e 0122     		movs	r2, #1
 905 0020 1A70     		strb	r2, [r3]
 369:main.c        ****         }
 370:main.c        ****     }
 371:main.c        ****     else
 372:main.c        ****     {
 373:main.c        ****         if (USBUART_DataIsReady() != 0)
 374:main.c        ****         {  
 375:main.c        ****             c = USBUART_GetChar();
 376:main.c        **** 
 377:main.c        ****             if ((c == 13) || (c == 10))
 378:main.c        ****             {
 379:main.c        **** //                if (usbBufCount > 0)
 380:main.c        ****                 {
 381:main.c        ****                     entry[usbBufCount]= '\0';
 382:main.c        ****                     strcpy(line,entry);
 383:main.c        ****                     usbBufCount = 0;
 384:main.c        ****                     flag_KB_string = 1;
 385:main.c        ****                 }
 386:main.c        ****             }
 387:main.c        ****             else 
 388:main.c        ****             {
 389:main.c        ****                 if (((c == CHAR_BACKSP) || (c == CHAR_DEL) ) && (usbBufCount > 0) )
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 24


 390:main.c        ****                     usbBufCount--;
 391:main.c        ****                 else
 392:main.c        ****                 {
 393:main.c        ****                     if (usbBufCount > (BUF_SIZE-2) ) // one less else strtok triggers a crash
 394:main.c        ****                     {
 395:main.c        ****                        USBUART_PutChar('!');        
 396:main.c        ****                     }
 397:main.c        ****                     else
 398:main.c        ****                         entry[usbBufCount++] = c;  
 399:main.c        ****                 }  
 400:main.c        ****             }
 401:main.c        ****         }
 402:main.c        ****     }    
 403:main.c        **** }
 906              		.loc 1 403 0
 907 0022 43E0     		b	.L41
 908              	.L33:
 373:main.c        ****         {  
 909              		.loc 1 373 0
 910 0024 FFF7FEFF 		bl	USBUART_DataIsReady
 911 0028 0346     		mov	r3, r0
 912 002a 002B     		cmp	r3, #0
 913 002c 3ED0     		beq	.L41
 375:main.c        **** 
 914              		.loc 1 375 0
 915 002e FFF7FEFF 		bl	USBUART_GetChar
 916 0032 0346     		mov	r3, r0
 917 0034 FB71     		strb	r3, [r7, #7]
 377:main.c        ****             {
 918              		.loc 1 377 0
 919 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 920 0038 0D2B     		cmp	r3, #13
 921 003a 02D0     		beq	.L36
 377:main.c        ****             {
 922              		.loc 1 377 0 is_stmt 0 discriminator 1
 923 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 924 003e 0A2B     		cmp	r3, #10
 925 0040 10D1     		bne	.L37
 926              	.L36:
 381:main.c        ****                     strcpy(line,entry);
 927              		.loc 1 381 0 is_stmt 1
 928 0042 1D4B     		ldr	r3, .L42+4
 929 0044 1B88     		ldrh	r3, [r3]
 930 0046 1A46     		mov	r2, r3
 931 0048 1C4B     		ldr	r3, .L42+8
 932 004a 0021     		movs	r1, #0
 933 004c 9954     		strb	r1, [r3, r2]
 382:main.c        ****                     usbBufCount = 0;
 934              		.loc 1 382 0
 935 004e 1B49     		ldr	r1, .L42+8
 936 0050 1B48     		ldr	r0, .L42+12
 937 0052 FFF7FEFF 		bl	strcpy
 383:main.c        ****                     flag_KB_string = 1;
 938              		.loc 1 383 0
 939 0056 184B     		ldr	r3, .L42+4
 940 0058 0022     		movs	r2, #0
 941 005a 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 25


 384:main.c        ****                 }
 942              		.loc 1 384 0
 943 005c 194B     		ldr	r3, .L42+16
 944 005e 0122     		movs	r2, #1
 945 0060 1A70     		strb	r2, [r3]
 946 0062 23E0     		b	.L35
 947              	.L37:
 389:main.c        ****                     usbBufCount--;
 948              		.loc 1 389 0
 949 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 950 0066 082B     		cmp	r3, #8
 951 0068 02D0     		beq	.L38
 389:main.c        ****                     usbBufCount--;
 952              		.loc 1 389 0 is_stmt 0 discriminator 2
 953 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 954 006c 7F2B     		cmp	r3, #127
 955 006e 0AD1     		bne	.L39
 956              	.L38:
 389:main.c        ****                     usbBufCount--;
 957              		.loc 1 389 0 discriminator 3
 958 0070 114B     		ldr	r3, .L42+4
 959 0072 1B88     		ldrh	r3, [r3]
 960 0074 002B     		cmp	r3, #0
 961 0076 06D0     		beq	.L39
 390:main.c        ****                 else
 962              		.loc 1 390 0 is_stmt 1
 963 0078 0F4B     		ldr	r3, .L42+4
 964 007a 1B88     		ldrh	r3, [r3]
 965 007c 013B     		subs	r3, r3, #1
 966 007e 9AB2     		uxth	r2, r3
 967 0080 0D4B     		ldr	r3, .L42+4
 968 0082 1A80     		strh	r2, [r3]	@ movhi
 969 0084 12E0     		b	.L35
 970              	.L39:
 393:main.c        ****                     {
 971              		.loc 1 393 0
 972 0086 0C4B     		ldr	r3, .L42+4
 973 0088 1B88     		ldrh	r3, [r3]
 974 008a 3E2B     		cmp	r3, #62
 975 008c 03D9     		bls	.L40
 395:main.c        ****                     }
 976              		.loc 1 395 0
 977 008e 2120     		movs	r0, #33
 978 0090 FFF7FEFF 		bl	USBUART_PutChar
 979              		.loc 1 403 0
 980 0094 0AE0     		b	.L41
 981              	.L40:
 398:main.c        ****                 }  
 982              		.loc 1 398 0
 983 0096 084B     		ldr	r3, .L42+4
 984 0098 1B88     		ldrh	r3, [r3]
 985 009a 5A1C     		adds	r2, r3, #1
 986 009c 91B2     		uxth	r1, r2
 987 009e 064A     		ldr	r2, .L42+4
 988 00a0 1180     		strh	r1, [r2]	@ movhi
 989 00a2 1946     		mov	r1, r3
 990 00a4 054A     		ldr	r2, .L42+8
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 26


 991 00a6 FB79     		ldrb	r3, [r7, #7]
 992 00a8 5354     		strb	r3, [r2, r1]
 993              		.loc 1 403 0
 994 00aa FFE7     		b	.L41
 995              	.L35:
 996              	.L41:
 997 00ac 00BF     		nop
 998 00ae 0837     		adds	r7, r7, #8
 999              		.cfi_def_cfa_offset 8
 1000 00b0 BD46     		mov	sp, r7
 1001              		.cfi_def_cfa_register 13
 1002              		@ sp needed
 1003 00b2 80BD     		pop	{r7, pc}
 1004              	.L43:
 1005              		.align	2
 1006              	.L42:
 1007 00b4 35000000 		.word	usbStarted.8264
 1008 00b8 36000000 		.word	usbBufCount.8265
 1009 00bc 00000000 		.word	entry
 1010 00c0 00000000 		.word	line
 1011 00c4 00000000 		.word	flag_KB_string
 1012              		.cfi_endproc
 1013              	.LFE77:
 1014              		.size	handle_usb, .-handle_usb
 1015              		.bss
 1016              	usbStarted.8264:
 1017 0035 00       		.space	1
 1018              		.align	1
 1019              	usbBufCount.8265:
 1020 0036 0000     		.space	2
 1021              		.text
 1022              	.Letext0:
 1023              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1024              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1025              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1026              		.file 5 "vars.h"
 1027              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1028              		.section	.debug_info,"",%progbits
 1029              	.Ldebug_info0:
 1030 0000 E5050000 		.4byte	0x5e5
 1031 0004 0400     		.2byte	0x4
 1032 0006 00000000 		.4byte	.Ldebug_abbrev0
 1033 000a 04       		.byte	0x4
 1034 000b 01       		.uleb128 0x1
 1035 000c B5000000 		.4byte	.LASF89
 1036 0010 0C       		.byte	0xc
 1037 0011 3E040000 		.4byte	.LASF90
 1038 0015 8D010000 		.4byte	.LASF91
 1039 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1040 001d 00000000 		.4byte	0
 1041 0021 00000000 		.4byte	.Ldebug_line0
 1042 0025 02       		.uleb128 0x2
 1043 0026 01       		.byte	0x1
 1044 0027 06       		.byte	0x6
 1045 0028 73030000 		.4byte	.LASF0
 1046 002c 02       		.uleb128 0x2
 1047 002d 01       		.byte	0x1
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 27


 1048 002e 08       		.byte	0x8
 1049 002f 3A030000 		.4byte	.LASF1
 1050 0033 02       		.uleb128 0x2
 1051 0034 02       		.byte	0x2
 1052 0035 05       		.byte	0x5
 1053 0036 8B000000 		.4byte	.LASF2
 1054 003a 02       		.uleb128 0x2
 1055 003b 02       		.byte	0x2
 1056 003c 07       		.byte	0x7
 1057 003d CF030000 		.4byte	.LASF3
 1058 0041 03       		.uleb128 0x3
 1059 0042 7D040000 		.4byte	.LASF12
 1060 0046 02       		.byte	0x2
 1061 0047 3F       		.byte	0x3f
 1062 0048 4C000000 		.4byte	0x4c
 1063 004c 02       		.uleb128 0x2
 1064 004d 04       		.byte	0x4
 1065 004e 05       		.byte	0x5
 1066 004f A3020000 		.4byte	.LASF4
 1067 0053 02       		.uleb128 0x2
 1068 0054 04       		.byte	0x4
 1069 0055 07       		.byte	0x7
 1070 0056 45040000 		.4byte	.LASF5
 1071 005a 02       		.uleb128 0x2
 1072 005b 08       		.byte	0x8
 1073 005c 05       		.byte	0x5
 1074 005d 57020000 		.4byte	.LASF6
 1075 0061 02       		.uleb128 0x2
 1076 0062 08       		.byte	0x8
 1077 0063 07       		.byte	0x7
 1078 0064 7F030000 		.4byte	.LASF7
 1079 0068 04       		.uleb128 0x4
 1080 0069 04       		.byte	0x4
 1081 006a 05       		.byte	0x5
 1082 006b 696E7400 		.ascii	"int\000"
 1083 006f 02       		.uleb128 0x2
 1084 0070 04       		.byte	0x4
 1085 0071 07       		.byte	0x7
 1086 0072 96030000 		.4byte	.LASF8
 1087 0076 02       		.uleb128 0x2
 1088 0077 08       		.byte	0x8
 1089 0078 04       		.byte	0x4
 1090 0079 2E030000 		.4byte	.LASF9
 1091 007d 02       		.uleb128 0x2
 1092 007e 04       		.byte	0x4
 1093 007f 07       		.byte	0x7
 1094 0080 A2000000 		.4byte	.LASF10
 1095 0084 05       		.uleb128 0x5
 1096 0085 04       		.byte	0x4
 1097 0086 8A000000 		.4byte	0x8a
 1098 008a 02       		.uleb128 0x2
 1099 008b 01       		.byte	0x1
 1100 008c 08       		.byte	0x8
 1101 008d EC030000 		.4byte	.LASF11
 1102 0091 03       		.uleb128 0x3
 1103 0092 FC030000 		.4byte	.LASF13
 1104 0096 03       		.byte	0x3
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 28


 1105 0097 2C       		.byte	0x2c
 1106 0098 41000000 		.4byte	0x41
 1107 009c 06       		.uleb128 0x6
 1108 009d 87010000 		.4byte	.LASF14
 1109 00a1 04       		.byte	0x4
 1110 00a2 E401     		.2byte	0x1e4
 1111 00a4 2C000000 		.4byte	0x2c
 1112 00a8 06       		.uleb128 0x6
 1113 00a9 74010000 		.4byte	.LASF15
 1114 00ad 04       		.byte	0x4
 1115 00ae E501     		.2byte	0x1e5
 1116 00b0 3A000000 		.4byte	0x3a
 1117 00b4 06       		.uleb128 0x6
 1118 00b5 72020000 		.4byte	.LASF16
 1119 00b9 04       		.byte	0x4
 1120 00ba E701     		.2byte	0x1e7
 1121 00bc 25000000 		.4byte	0x25
 1122 00c0 06       		.uleb128 0x6
 1123 00c1 81010000 		.4byte	.LASF17
 1124 00c5 04       		.byte	0x4
 1125 00c6 E801     		.2byte	0x1e8
 1126 00c8 33000000 		.4byte	0x33
 1127 00cc 02       		.uleb128 0x2
 1128 00cd 04       		.byte	0x4
 1129 00ce 04       		.byte	0x4
 1130 00cf 37020000 		.4byte	.LASF18
 1131 00d3 02       		.uleb128 0x2
 1132 00d4 08       		.byte	0x8
 1133 00d5 04       		.byte	0x4
 1134 00d6 29000000 		.4byte	.LASF19
 1135 00da 07       		.uleb128 0x7
 1136 00db E2030000 		.4byte	.LASF92
 1137 00df 20       		.byte	0x20
 1138 00e0 05       		.byte	0x5
 1139 00e1 29       		.byte	0x29
 1140 00e2 B3010000 		.4byte	0x1b3
 1141 00e6 08       		.uleb128 0x8
 1142 00e7 3C050000 		.4byte	.LASF20
 1143 00eb 05       		.byte	0x5
 1144 00ec 2A       		.byte	0x2a
 1145 00ed B4000000 		.4byte	0xb4
 1146 00f1 00       		.byte	0
 1147 00f2 08       		.uleb128 0x8
 1148 00f3 7B010000 		.4byte	.LASF21
 1149 00f7 05       		.byte	0x5
 1150 00f8 2B       		.byte	0x2b
 1151 00f9 9C000000 		.4byte	0x9c
 1152 00fd 01       		.byte	0x1
 1153 00fe 08       		.uleb128 0x8
 1154 00ff F1030000 		.4byte	.LASF22
 1155 0103 05       		.byte	0x5
 1156 0104 2C       		.byte	0x2c
 1157 0105 C0000000 		.4byte	0xc0
 1158 0109 02       		.byte	0x2
 1159 010a 08       		.uleb128 0x8
 1160 010b FB040000 		.4byte	.LASF23
 1161 010f 05       		.byte	0x5
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 29


 1162 0110 2D       		.byte	0x2d
 1163 0111 C0000000 		.4byte	0xc0
 1164 0115 04       		.byte	0x4
 1165 0116 08       		.uleb128 0x8
 1166 0117 41050000 		.4byte	.LASF24
 1167 011b 05       		.byte	0x5
 1168 011c 2E       		.byte	0x2e
 1169 011d C0000000 		.4byte	0xc0
 1170 0121 06       		.byte	0x6
 1171 0122 08       		.uleb128 0x8
 1172 0123 9B020000 		.4byte	.LASF25
 1173 0127 05       		.byte	0x5
 1174 0128 2F       		.byte	0x2f
 1175 0129 C0000000 		.4byte	0xc0
 1176 012d 08       		.byte	0x8
 1177 012e 08       		.uleb128 0x8
 1178 012f B7040000 		.4byte	.LASF26
 1179 0133 05       		.byte	0x5
 1180 0134 30       		.byte	0x30
 1181 0135 C0000000 		.4byte	0xc0
 1182 0139 0A       		.byte	0xa
 1183 013a 08       		.uleb128 0x8
 1184 013b 5B030000 		.4byte	.LASF27
 1185 013f 05       		.byte	0x5
 1186 0140 31       		.byte	0x31
 1187 0141 C0000000 		.4byte	0xc0
 1188 0145 0C       		.byte	0xc
 1189 0146 08       		.uleb128 0x8
 1190 0147 8E020000 		.4byte	.LASF28
 1191 014b 05       		.byte	0x5
 1192 014c 32       		.byte	0x32
 1193 014d C0000000 		.4byte	0xc0
 1194 0151 0E       		.byte	0xe
 1195 0152 08       		.uleb128 0x8
 1196 0153 C7030000 		.4byte	.LASF29
 1197 0157 05       		.byte	0x5
 1198 0158 33       		.byte	0x33
 1199 0159 C0000000 		.4byte	0xc0
 1200 015d 10       		.byte	0x10
 1201 015e 08       		.uleb128 0x8
 1202 015f 04040000 		.4byte	.LASF30
 1203 0163 05       		.byte	0x5
 1204 0164 34       		.byte	0x34
 1205 0165 C0000000 		.4byte	0xc0
 1206 0169 12       		.byte	0x12
 1207 016a 08       		.uleb128 0x8
 1208 016b 19040000 		.4byte	.LASF31
 1209 016f 05       		.byte	0x5
 1210 0170 35       		.byte	0x35
 1211 0171 C0000000 		.4byte	0xc0
 1212 0175 14       		.byte	0x14
 1213 0176 08       		.uleb128 0x8
 1214 0177 20050000 		.4byte	.LASF32
 1215 017b 05       		.byte	0x5
 1216 017c 36       		.byte	0x36
 1217 017d C0000000 		.4byte	0xc0
 1218 0181 16       		.byte	0x16
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 30


 1219 0182 08       		.uleb128 0x8
 1220 0183 83000000 		.4byte	.LASF33
 1221 0187 05       		.byte	0x5
 1222 0188 37       		.byte	0x37
 1223 0189 C0000000 		.4byte	0xc0
 1224 018d 18       		.byte	0x18
 1225 018e 08       		.uleb128 0x8
 1226 018f 86020000 		.4byte	.LASF34
 1227 0193 05       		.byte	0x5
 1228 0194 38       		.byte	0x38
 1229 0195 C0000000 		.4byte	0xc0
 1230 0199 1A       		.byte	0x1a
 1231 019a 08       		.uleb128 0x8
 1232 019b BE030000 		.4byte	.LASF35
 1233 019f 05       		.byte	0x5
 1234 01a0 39       		.byte	0x39
 1235 01a1 C0000000 		.4byte	0xc0
 1236 01a5 1C       		.byte	0x1c
 1237 01a6 08       		.uleb128 0x8
 1238 01a7 0C040000 		.4byte	.LASF36
 1239 01ab 05       		.byte	0x5
 1240 01ac 3A       		.byte	0x3a
 1241 01ad C0000000 		.4byte	0xc0
 1242 01b1 1E       		.byte	0x1e
 1243 01b2 00       		.byte	0
 1244 01b3 09       		.uleb128 0x9
 1245 01b4 9C040000 		.4byte	.LASF37
 1246 01b8 01       		.byte	0x1
 1247 01b9 32       		.byte	0x32
 1248 01ba 00000000 		.4byte	.LFB64
 1249 01be 14000000 		.4byte	.LFE64-.LFB64
 1250 01c2 01       		.uleb128 0x1
 1251 01c3 9C       		.byte	0x9c
 1252 01c4 09       		.uleb128 0x9
 1253 01c5 67000000 		.4byte	.LASF38
 1254 01c9 01       		.byte	0x1
 1255 01ca 38       		.byte	0x38
 1256 01cb 00000000 		.4byte	.LFB65
 1257 01cf 14000000 		.4byte	.LFE65-.LFB65
 1258 01d3 01       		.uleb128 0x1
 1259 01d4 9C       		.byte	0x9c
 1260 01d5 09       		.uleb128 0x9
 1261 01d6 00000000 		.4byte	.LASF39
 1262 01da 01       		.byte	0x1
 1263 01db 3E       		.byte	0x3e
 1264 01dc 00000000 		.4byte	.LFB66
 1265 01e0 14000000 		.4byte	.LFE66-.LFB66
 1266 01e4 01       		.uleb128 0x1
 1267 01e5 9C       		.byte	0x9c
 1268 01e6 0A       		.uleb128 0xa
 1269 01e7 87040000 		.4byte	.LASF40
 1270 01eb 01       		.byte	0x1
 1271 01ec 43       		.byte	0x43
 1272 01ed 00000000 		.4byte	.LFB67
 1273 01f1 20000000 		.4byte	.LFE67-.LFB67
 1274 01f5 01       		.uleb128 0x1
 1275 01f6 9C       		.byte	0x9c
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 31


 1276 01f7 08020000 		.4byte	0x208
 1277 01fb 0B       		.uleb128 0xb
 1278 01fc 7800     		.ascii	"x\000"
 1279 01fe 01       		.byte	0x1
 1280 01ff 43       		.byte	0x43
 1281 0200 68000000 		.4byte	0x68
 1282 0204 02       		.uleb128 0x2
 1283 0205 91       		.byte	0x91
 1284 0206 74       		.sleb128 -12
 1285 0207 00       		.byte	0
 1286 0208 0A       		.uleb128 0xa
 1287 0209 2D050000 		.4byte	.LASF41
 1288 020d 01       		.byte	0x1
 1289 020e 4E       		.byte	0x4e
 1290 020f 00000000 		.4byte	.LFB68
 1291 0213 26000000 		.4byte	.LFE68-.LFB68
 1292 0217 01       		.uleb128 0x1
 1293 0218 9C       		.byte	0x9c
 1294 0219 2A020000 		.4byte	0x22a
 1295 021d 0B       		.uleb128 0xb
 1296 021e 7800     		.ascii	"x\000"
 1297 0220 01       		.byte	0x1
 1298 0221 4E       		.byte	0x4e
 1299 0222 68000000 		.4byte	0x68
 1300 0226 02       		.uleb128 0x2
 1301 0227 91       		.byte	0x91
 1302 0228 74       		.sleb128 -12
 1303 0229 00       		.byte	0
 1304 022a 0A       		.uleb128 0xa
 1305 022b 50000000 		.4byte	.LASF42
 1306 022f 01       		.byte	0x1
 1307 0230 5B       		.byte	0x5b
 1308 0231 00000000 		.4byte	.LFB69
 1309 0235 88000000 		.4byte	.LFE69-.LFB69
 1310 0239 01       		.uleb128 0x1
 1311 023a 9C       		.byte	0x9c
 1312 023b 6A020000 		.4byte	0x26a
 1313 023f 0C       		.uleb128 0xc
 1314 0240 48010000 		.4byte	.LASF43
 1315 0244 01       		.byte	0x1
 1316 0245 63       		.byte	0x63
 1317 0246 C0000000 		.4byte	0xc0
 1318 024a 02       		.uleb128 0x2
 1319 024b 91       		.byte	0x91
 1320 024c 76       		.sleb128 -10
 1321 024d 0C       		.uleb128 0xc
 1322 024e 50010000 		.4byte	.LASF44
 1323 0252 01       		.byte	0x1
 1324 0253 64       		.byte	0x64
 1325 0254 C0000000 		.4byte	0xc0
 1326 0258 02       		.uleb128 0x2
 1327 0259 91       		.byte	0x91
 1328 025a 74       		.sleb128 -12
 1329 025b 0C       		.uleb128 0xc
 1330 025c 58010000 		.4byte	.LASF45
 1331 0260 01       		.byte	0x1
 1332 0261 65       		.byte	0x65
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 32


 1333 0262 C0000000 		.4byte	0xc0
 1334 0266 02       		.uleb128 0x2
 1335 0267 91       		.byte	0x91
 1336 0268 72       		.sleb128 -14
 1337 0269 00       		.byte	0
 1338 026a 0D       		.uleb128 0xd
 1339 026b 3D020000 		.4byte	.LASF53
 1340 026f 01       		.byte	0x1
 1341 0270 80       		.byte	0x80
 1342 0271 00000000 		.4byte	.LFB70
 1343 0275 0C000000 		.4byte	.LFE70-.LFB70
 1344 0279 01       		.uleb128 0x1
 1345 027a 9C       		.byte	0x9c
 1346 027b 0E       		.uleb128 0xe
 1347 027c AC040000 		.4byte	.LASF59
 1348 0280 01       		.byte	0x1
 1349 0281 93       		.byte	0x93
 1350 0282 00000000 		.4byte	.LFB71
 1351 0286 C0000000 		.4byte	.LFE71-.LFB71
 1352 028a 01       		.uleb128 0x1
 1353 028b 9C       		.byte	0x9c
 1354 028c E9020000 		.4byte	0x2e9
 1355 0290 0C       		.uleb128 0xc
 1356 0291 AC020000 		.4byte	.LASF46
 1357 0295 01       		.byte	0x1
 1358 0296 94       		.byte	0x94
 1359 0297 C0000000 		.4byte	0xc0
 1360 029b 02       		.uleb128 0x2
 1361 029c 91       		.byte	0x91
 1362 029d 76       		.sleb128 -10
 1363 029e 0C       		.uleb128 0xc
 1364 029f C1020000 		.4byte	.LASF47
 1365 02a3 01       		.byte	0x1
 1366 02a4 95       		.byte	0x95
 1367 02a5 C0000000 		.4byte	0xc0
 1368 02a9 02       		.uleb128 0x2
 1369 02aa 91       		.byte	0x91
 1370 02ab 74       		.sleb128 -12
 1371 02ac 0C       		.uleb128 0xc
 1372 02ad 19030000 		.4byte	.LASF48
 1373 02b1 01       		.byte	0x1
 1374 02b2 96       		.byte	0x96
 1375 02b3 C0000000 		.4byte	0xc0
 1376 02b7 02       		.uleb128 0x2
 1377 02b8 91       		.byte	0x91
 1378 02b9 72       		.sleb128 -14
 1379 02ba 0C       		.uleb128 0xc
 1380 02bb 0A030000 		.4byte	.LASF49
 1381 02bf 01       		.byte	0x1
 1382 02c0 97       		.byte	0x97
 1383 02c1 C0000000 		.4byte	0xc0
 1384 02c5 02       		.uleb128 0x2
 1385 02c6 91       		.byte	0x91
 1386 02c7 70       		.sleb128 -16
 1387 02c8 0C       		.uleb128 0xc
 1388 02c9 D6020000 		.4byte	.LASF50
 1389 02cd 01       		.byte	0x1
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 33


 1390 02ce 98       		.byte	0x98
 1391 02cf E9020000 		.4byte	0x2e9
 1392 02d3 04       		.uleb128 0x4
 1393 02d4 91       		.byte	0x91
 1394 02d5 E0B17F   		.sleb128 -10016
 1395 02d8 0C       		.uleb128 0xc
 1396 02d9 13050000 		.4byte	.LASF51
 1397 02dd 01       		.byte	0x1
 1398 02de 9A       		.byte	0x9a
 1399 02df E9020000 		.4byte	0x2e9
 1400 02e3 04       		.uleb128 0x4
 1401 02e4 91       		.byte	0x91
 1402 02e5 D0E37E   		.sleb128 -20016
 1403 02e8 00       		.byte	0
 1404 02e9 0F       		.uleb128 0xf
 1405 02ea 8A000000 		.4byte	0x8a
 1406 02ee FA020000 		.4byte	0x2fa
 1407 02f2 10       		.uleb128 0x10
 1408 02f3 7D000000 		.4byte	0x7d
 1409 02f7 0F27     		.2byte	0x270f
 1410 02f9 00       		.byte	0
 1411 02fa 09       		.uleb128 0x9
 1412 02fb 60010000 		.4byte	.LASF52
 1413 02ff 01       		.byte	0x1
 1414 0300 A2       		.byte	0xa2
 1415 0301 00000000 		.4byte	.LFB72
 1416 0305 2C000000 		.4byte	.LFE72-.LFB72
 1417 0309 01       		.uleb128 0x1
 1418 030a 9C       		.byte	0x9c
 1419 030b 11       		.uleb128 0x11
 1420 030c 0A000000 		.4byte	.LASF54
 1421 0310 01       		.byte	0x1
 1422 0311 B9       		.byte	0xb9
 1423 0312 00000000 		.4byte	.LFB73
 1424 0316 0C000000 		.4byte	.LFE73-.LFB73
 1425 031a 01       		.uleb128 0x1
 1426 031b 9C       		.byte	0x9c
 1427 031c 12       		.uleb128 0x12
 1428 031d 43010000 		.4byte	.LASF55
 1429 0321 01       		.byte	0x1
 1430 0322 C6       		.byte	0xc6
 1431 0323 68000000 		.4byte	0x68
 1432 0327 00000000 		.4byte	.LFB74
 1433 032b DC000000 		.4byte	.LFE74-.LFB74
 1434 032f 01       		.uleb128 0x1
 1435 0330 9C       		.byte	0x9c
 1436 0331 4F030000 		.4byte	0x34f
 1437 0335 13       		.uleb128 0x13
 1438 0336 50000000 		.4byte	.LBB2
 1439 033a 72000000 		.4byte	.LBE2-.LBB2
 1440 033e 14       		.uleb128 0x14
 1441 033f 95040000 		.4byte	.LASF56
 1442 0343 01       		.byte	0x1
 1443 0344 1601     		.2byte	0x116
 1444 0346 68000000 		.4byte	0x68
 1445 034a 02       		.uleb128 0x2
 1446 034b 91       		.byte	0x91
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 34


 1447 034c 74       		.sleb128 -12
 1448 034d 00       		.byte	0
 1449 034e 00       		.byte	0
 1450 034f 15       		.uleb128 0x15
 1451 0350 65020000 		.4byte	.LASF57
 1452 0354 01       		.byte	0x1
 1453 0355 4A01     		.2byte	0x14a
 1454 0357 00000000 		.4byte	.LFB75
 1455 035b 3E000000 		.4byte	.LFE75-.LFB75
 1456 035f 01       		.uleb128 0x1
 1457 0360 9C       		.byte	0x9c
 1458 0361 73030000 		.4byte	0x373
 1459 0365 16       		.uleb128 0x16
 1460 0366 7300     		.ascii	"s\000"
 1461 0368 01       		.byte	0x1
 1462 0369 4A01     		.2byte	0x14a
 1463 036b 84000000 		.4byte	0x84
 1464 036f 02       		.uleb128 0x2
 1465 0370 91       		.byte	0x91
 1466 0371 74       		.sleb128 -12
 1467 0372 00       		.byte	0
 1468 0373 15       		.uleb128 0x15
 1469 0374 3C000000 		.4byte	.LASF58
 1470 0378 01       		.byte	0x1
 1471 0379 5801     		.2byte	0x158
 1472 037b 00000000 		.4byte	.LFB76
 1473 037f 26000000 		.4byte	.LFE76-.LFB76
 1474 0383 01       		.uleb128 0x1
 1475 0384 9C       		.byte	0x9c
 1476 0385 97030000 		.4byte	0x397
 1477 0389 16       		.uleb128 0x16
 1478 038a 6300     		.ascii	"c\000"
 1479 038c 01       		.byte	0x1
 1480 038d 5801     		.2byte	0x158
 1481 038f 8A000000 		.4byte	0x8a
 1482 0393 02       		.uleb128 0x2
 1483 0394 91       		.byte	0x91
 1484 0395 77       		.sleb128 -9
 1485 0396 00       		.byte	0
 1486 0397 17       		.uleb128 0x17
 1487 0398 D4040000 		.4byte	.LASF60
 1488 039c 01       		.byte	0x1
 1489 039d 6001     		.2byte	0x160
 1490 039f 00000000 		.4byte	.LFB77
 1491 03a3 C8000000 		.4byte	.LFE77-.LFB77
 1492 03a7 01       		.uleb128 0x1
 1493 03a8 9C       		.byte	0x9c
 1494 03a9 DF030000 		.4byte	0x3df
 1495 03ad 14       		.uleb128 0x14
 1496 03ae 57040000 		.4byte	.LASF61
 1497 03b2 01       		.byte	0x1
 1498 03b3 6601     		.2byte	0x166
 1499 03b5 9C000000 		.4byte	0x9c
 1500 03b9 05       		.uleb128 0x5
 1501 03ba 03       		.byte	0x3
 1502 03bb 35000000 		.4byte	usbStarted.8264
 1503 03bf 14       		.uleb128 0x14
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 35


 1504 03c0 B2030000 		.4byte	.LASF62
 1505 03c4 01       		.byte	0x1
 1506 03c5 6701     		.2byte	0x167
 1507 03c7 A8000000 		.4byte	0xa8
 1508 03cb 05       		.uleb128 0x5
 1509 03cc 03       		.byte	0x3
 1510 03cd 36000000 		.4byte	usbBufCount.8265
 1511 03d1 18       		.uleb128 0x18
 1512 03d2 6300     		.ascii	"c\000"
 1513 03d4 01       		.byte	0x1
 1514 03d5 6801     		.2byte	0x168
 1515 03d7 9C000000 		.4byte	0x9c
 1516 03db 02       		.uleb128 0x2
 1517 03dc 91       		.byte	0x91
 1518 03dd 77       		.sleb128 -9
 1519 03de 00       		.byte	0
 1520 03df 0C       		.uleb128 0xc
 1521 03e0 6B040000 		.4byte	.LASF63
 1522 03e4 01       		.byte	0x1
 1523 03e5 7F       		.byte	0x7f
 1524 03e6 F0030000 		.4byte	0x3f0
 1525 03ea 05       		.uleb128 0x5
 1526 03eb 03       		.byte	0x3
 1527 03ec 34000000 		.4byte	count
 1528 03f0 19       		.uleb128 0x19
 1529 03f1 B4000000 		.4byte	0xb4
 1530 03f5 1A       		.uleb128 0x1a
 1531 03f6 06050000 		.4byte	.LASF64
 1532 03fa 06       		.byte	0x6
 1533 03fb 1207     		.2byte	0x712
 1534 03fd 01040000 		.4byte	0x401
 1535 0401 19       		.uleb128 0x19
 1536 0402 91000000 		.4byte	0x91
 1537 0406 1B       		.uleb128 0x1b
 1538 0407 747300   		.ascii	"ts\000"
 1539 040a 05       		.byte	0x5
 1540 040b 10       		.byte	0x10
 1541 040c 9C000000 		.4byte	0x9c
 1542 0410 05       		.uleb128 0x5
 1543 0411 03       		.byte	0x3
 1544 0412 00000000 		.4byte	ts
 1545 0416 1C       		.uleb128 0x1c
 1546 0417 22000000 		.4byte	.LASF65
 1547 041b 05       		.byte	0x5
 1548 041c 11       		.byte	0x11
 1549 041d A8000000 		.4byte	0xa8
 1550 0421 05       		.uleb128 0x5
 1551 0422 03       		.byte	0x3
 1552 0423 00000000 		.4byte	ts_enc
 1553 0427 1C       		.uleb128 0x1c
 1554 0428 CA040000 		.4byte	.LASF66
 1555 042c 05       		.byte	0x5
 1556 042d 12       		.byte	0x12
 1557 042e A8000000 		.4byte	0xa8
 1558 0432 05       		.uleb128 0x5
 1559 0433 03       		.byte	0x3
 1560 0434 00000000 		.4byte	ts_update
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 36


 1561 0438 1C       		.uleb128 0x1c
 1562 0439 62040000 		.4byte	.LASF67
 1563 043d 05       		.byte	0x5
 1564 043e 13       		.byte	0x13
 1565 043f A8000000 		.4byte	0xa8
 1566 0443 05       		.uleb128 0x5
 1567 0444 03       		.byte	0x3
 1568 0445 00000000 		.4byte	ts_speed
 1569 0449 1C       		.uleb128 0x1c
 1570 044a BF040000 		.4byte	.LASF68
 1571 044e 05       		.byte	0x5
 1572 044f 14       		.byte	0x14
 1573 0450 A8000000 		.4byte	0xa8
 1574 0454 05       		.uleb128 0x5
 1575 0455 03       		.byte	0x3
 1576 0456 00000000 		.4byte	ts_display
 1577 045a 1C       		.uleb128 0x1c
 1578 045b 71040000 		.4byte	.LASF69
 1579 045f 05       		.byte	0x5
 1580 0460 16       		.byte	0x16
 1581 0461 9C000000 		.4byte	0x9c
 1582 0465 05       		.uleb128 0x5
 1583 0466 03       		.byte	0x3
 1584 0467 00000000 		.4byte	flag_ts_enc
 1585 046b 1C       		.uleb128 0x1c
 1586 046c 77020000 		.4byte	.LASF70
 1587 0470 05       		.byte	0x5
 1588 0471 17       		.byte	0x17
 1589 0472 9C000000 		.4byte	0x9c
 1590 0476 05       		.uleb128 0x5
 1591 0477 03       		.byte	0x3
 1592 0478 00000000 		.4byte	flag_ts_update
 1593 047c 1C       		.uleb128 0x1c
 1594 047d 30040000 		.4byte	.LASF71
 1595 0481 05       		.byte	0x5
 1596 0482 18       		.byte	0x18
 1597 0483 9C000000 		.4byte	0x9c
 1598 0487 05       		.uleb128 0x5
 1599 0488 03       		.byte	0x3
 1600 0489 00000000 		.4byte	flag_ts_speed
 1601 048d 1C       		.uleb128 0x1c
 1602 048e F2020000 		.4byte	.LASF72
 1603 0492 05       		.byte	0x5
 1604 0493 19       		.byte	0x19
 1605 0494 9C000000 		.4byte	0x9c
 1606 0498 05       		.uleb128 0x5
 1607 0499 03       		.byte	0x3
 1608 049a 00000000 		.4byte	flag_ts_display
 1609 049e 1C       		.uleb128 0x1c
 1610 049f 02030000 		.4byte	.LASF73
 1611 04a3 05       		.byte	0x5
 1612 04a4 1C       		.byte	0x1c
 1613 04a5 9C000000 		.4byte	0x9c
 1614 04a9 05       		.uleb128 0x5
 1615 04aa 03       		.byte	0x3
 1616 04ab 00000000 		.4byte	flag_rx
 1617 04af 1C       		.uleb128 0x1c
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 37


 1618 04b0 30000000 		.4byte	.LASF74
 1619 04b4 05       		.byte	0x5
 1620 04b5 1D       		.byte	0x1d
 1621 04b6 9C000000 		.4byte	0x9c
 1622 04ba 05       		.uleb128 0x5
 1623 04bb 03       		.byte	0x3
 1624 04bc 00000000 		.4byte	flag_packet
 1625 04c0 1C       		.uleb128 0x1c
 1626 04c1 A3030000 		.4byte	.LASF75
 1627 04c5 05       		.byte	0x5
 1628 04c6 1E       		.byte	0x1e
 1629 04c7 9C000000 		.4byte	0x9c
 1630 04cb 05       		.uleb128 0x5
 1631 04cc 03       		.byte	0x3
 1632 04cd 00000000 		.4byte	flag_KB_string
 1633 04d1 1C       		.uleb128 0x1c
 1634 04d2 64030000 		.4byte	.LASF76
 1635 04d6 05       		.byte	0x5
 1636 04d7 20       		.byte	0x20
 1637 04d8 9C000000 		.4byte	0x9c
 1638 04dc 05       		.uleb128 0x5
 1639 04dd 03       		.byte	0x3
 1640 04de 00000000 		.4byte	dataready_flag
 1641 04e2 1C       		.uleb128 0x1c
 1642 04e3 DF040000 		.4byte	.LASF77
 1643 04e7 05       		.byte	0x5
 1644 04e8 22       		.byte	0x22
 1645 04e9 9C000000 		.4byte	0x9c
 1646 04ed 05       		.uleb128 0x5
 1647 04ee 03       		.byte	0x3
 1648 04ef 00000000 		.4byte	flag_rf_transmission_active
 1649 04f3 0F       		.uleb128 0xf
 1650 04f4 8A000000 		.4byte	0x8a
 1651 04f8 03050000 		.4byte	0x503
 1652 04fc 1D       		.uleb128 0x1d
 1653 04fd 7D000000 		.4byte	0x7d
 1654 0501 3F       		.byte	0x3f
 1655 0502 00       		.byte	0
 1656 0503 1C       		.uleb128 0x1c
 1657 0504 22040000 		.4byte	.LASF78
 1658 0508 05       		.byte	0x5
 1659 0509 25       		.byte	0x25
 1660 050a F3040000 		.4byte	0x4f3
 1661 050e 05       		.uleb128 0x5
 1662 050f 03       		.byte	0x3
 1663 0510 00000000 		.4byte	displaystring
 1664 0514 1C       		.uleb128 0x1c
 1665 0515 32020000 		.4byte	.LASF79
 1666 0519 05       		.byte	0x5
 1667 051a 26       		.byte	0x26
 1668 051b F3040000 		.4byte	0x4f3
 1669 051f 05       		.uleb128 0x5
 1670 0520 03       		.byte	0x3
 1671 0521 00000000 		.4byte	line
 1672 0525 1C       		.uleb128 0x1c
 1673 0526 28030000 		.4byte	.LASF80
 1674 052a 05       		.byte	0x5
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 38


 1675 052b 26       		.byte	0x26
 1676 052c F3040000 		.4byte	0x4f3
 1677 0530 05       		.uleb128 0x5
 1678 0531 03       		.byte	0x3
 1679 0532 00000000 		.4byte	entry
 1680 0536 0F       		.uleb128 0xf
 1681 0537 9C000000 		.4byte	0x9c
 1682 053b 46050000 		.4byte	0x546
 1683 053f 1D       		.uleb128 0x1d
 1684 0540 7D000000 		.4byte	0x7d
 1685 0544 3F       		.byte	0x3f
 1686 0545 00       		.byte	0
 1687 0546 1C       		.uleb128 0x1c
 1688 0547 AB000000 		.4byte	.LASF81
 1689 054b 05       		.byte	0x5
 1690 054c 27       		.byte	0x27
 1691 054d 36050000 		.4byte	0x536
 1692 0551 05       		.uleb128 0x5
 1693 0552 03       		.byte	0x3
 1694 0553 00000000 		.4byte	usbBuffer
 1695 0557 1C       		.uleb128 0x1c
 1696 0558 95000000 		.4byte	.LASF82
 1697 055c 05       		.byte	0x5
 1698 055d 3C       		.byte	0x3c
 1699 055e DA000000 		.4byte	0xda
 1700 0562 05       		.uleb128 0x5
 1701 0563 03       		.byte	0x3
 1702 0564 00000000 		.4byte	system_state
 1703 0568 1C       		.uleb128 0x1c
 1704 0569 26020000 		.4byte	.LASF83
 1705 056d 01       		.byte	0x1
 1706 056e 55       		.byte	0x55
 1707 056f 68000000 		.4byte	0x68
 1708 0573 05       		.uleb128 0x5
 1709 0574 03       		.byte	0x3
 1710 0575 00000000 		.4byte	changeMotor
 1711 0579 1C       		.uleb128 0x1c
 1712 057a 78000000 		.4byte	.LASF84
 1713 057e 01       		.byte	0x1
 1714 057f 56       		.byte	0x56
 1715 0580 68000000 		.4byte	0x68
 1716 0584 05       		.uleb128 0x5
 1717 0585 03       		.byte	0x3
 1718 0586 00000000 		.4byte	checkLight
 1719 058a 1C       		.uleb128 0x1c
 1720 058b 69010000 		.4byte	.LASF85
 1721 058f 01       		.byte	0x1
 1722 0590 57       		.byte	0x57
 1723 0591 68000000 		.4byte	0x68
 1724 0595 05       		.uleb128 0x5
 1725 0596 03       		.byte	0x3
 1726 0597 00000000 		.4byte	lightState
 1727 059b 0F       		.uleb128 0xf
 1728 059c AB050000 		.4byte	0x5ab
 1729 05a0 AB050000 		.4byte	0x5ab
 1730 05a4 1D       		.uleb128 0x1d
 1731 05a5 7D000000 		.4byte	0x7d
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 39


 1732 05a9 02       		.byte	0x2
 1733 05aa 00       		.byte	0
 1734 05ab 19       		.uleb128 0x19
 1735 05ac 68000000 		.4byte	0x68
 1736 05b0 1C       		.uleb128 0x1c
 1737 05b1 48030000 		.4byte	.LASF86
 1738 05b5 01       		.byte	0x1
 1739 05b6 58       		.byte	0x58
 1740 05b7 C1050000 		.4byte	0x5c1
 1741 05bb 05       		.uleb128 0x5
 1742 05bc 03       		.byte	0x3
 1743 05bd 00000000 		.4byte	lightDetectedFront
 1744 05c1 19       		.uleb128 0x19
 1745 05c2 9B050000 		.4byte	0x59b
 1746 05c6 1C       		.uleb128 0x1c
 1747 05c7 47000000 		.4byte	.LASF87
 1748 05cb 01       		.byte	0x1
 1749 05cc 59       		.byte	0x59
 1750 05cd AB050000 		.4byte	0x5ab
 1751 05d1 05       		.uleb128 0x5
 1752 05d2 03       		.byte	0x3
 1753 05d3 00000000 		.4byte	counteoc
 1754 05d7 1C       		.uleb128 0x1c
 1755 05d8 E3020000 		.4byte	.LASF88
 1756 05dc 01       		.byte	0x1
 1757 05dd 5A       		.byte	0x5a
 1758 05de AB050000 		.4byte	0x5ab
 1759 05e2 05       		.uleb128 0x5
 1760 05e3 03       		.byte	0x3
 1761 05e4 00000000 		.4byte	processSensors
 1762 05e8 00       		.byte	0
 1763              		.section	.debug_abbrev,"",%progbits
 1764              	.Ldebug_abbrev0:
 1765 0000 01       		.uleb128 0x1
 1766 0001 11       		.uleb128 0x11
 1767 0002 01       		.byte	0x1
 1768 0003 25       		.uleb128 0x25
 1769 0004 0E       		.uleb128 0xe
 1770 0005 13       		.uleb128 0x13
 1771 0006 0B       		.uleb128 0xb
 1772 0007 03       		.uleb128 0x3
 1773 0008 0E       		.uleb128 0xe
 1774 0009 1B       		.uleb128 0x1b
 1775 000a 0E       		.uleb128 0xe
 1776 000b 55       		.uleb128 0x55
 1777 000c 17       		.uleb128 0x17
 1778 000d 11       		.uleb128 0x11
 1779 000e 01       		.uleb128 0x1
 1780 000f 10       		.uleb128 0x10
 1781 0010 17       		.uleb128 0x17
 1782 0011 00       		.byte	0
 1783 0012 00       		.byte	0
 1784 0013 02       		.uleb128 0x2
 1785 0014 24       		.uleb128 0x24
 1786 0015 00       		.byte	0
 1787 0016 0B       		.uleb128 0xb
 1788 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 40


 1789 0018 3E       		.uleb128 0x3e
 1790 0019 0B       		.uleb128 0xb
 1791 001a 03       		.uleb128 0x3
 1792 001b 0E       		.uleb128 0xe
 1793 001c 00       		.byte	0
 1794 001d 00       		.byte	0
 1795 001e 03       		.uleb128 0x3
 1796 001f 16       		.uleb128 0x16
 1797 0020 00       		.byte	0
 1798 0021 03       		.uleb128 0x3
 1799 0022 0E       		.uleb128 0xe
 1800 0023 3A       		.uleb128 0x3a
 1801 0024 0B       		.uleb128 0xb
 1802 0025 3B       		.uleb128 0x3b
 1803 0026 0B       		.uleb128 0xb
 1804 0027 49       		.uleb128 0x49
 1805 0028 13       		.uleb128 0x13
 1806 0029 00       		.byte	0
 1807 002a 00       		.byte	0
 1808 002b 04       		.uleb128 0x4
 1809 002c 24       		.uleb128 0x24
 1810 002d 00       		.byte	0
 1811 002e 0B       		.uleb128 0xb
 1812 002f 0B       		.uleb128 0xb
 1813 0030 3E       		.uleb128 0x3e
 1814 0031 0B       		.uleb128 0xb
 1815 0032 03       		.uleb128 0x3
 1816 0033 08       		.uleb128 0x8
 1817 0034 00       		.byte	0
 1818 0035 00       		.byte	0
 1819 0036 05       		.uleb128 0x5
 1820 0037 0F       		.uleb128 0xf
 1821 0038 00       		.byte	0
 1822 0039 0B       		.uleb128 0xb
 1823 003a 0B       		.uleb128 0xb
 1824 003b 49       		.uleb128 0x49
 1825 003c 13       		.uleb128 0x13
 1826 003d 00       		.byte	0
 1827 003e 00       		.byte	0
 1828 003f 06       		.uleb128 0x6
 1829 0040 16       		.uleb128 0x16
 1830 0041 00       		.byte	0
 1831 0042 03       		.uleb128 0x3
 1832 0043 0E       		.uleb128 0xe
 1833 0044 3A       		.uleb128 0x3a
 1834 0045 0B       		.uleb128 0xb
 1835 0046 3B       		.uleb128 0x3b
 1836 0047 05       		.uleb128 0x5
 1837 0048 49       		.uleb128 0x49
 1838 0049 13       		.uleb128 0x13
 1839 004a 00       		.byte	0
 1840 004b 00       		.byte	0
 1841 004c 07       		.uleb128 0x7
 1842 004d 13       		.uleb128 0x13
 1843 004e 01       		.byte	0x1
 1844 004f 03       		.uleb128 0x3
 1845 0050 0E       		.uleb128 0xe
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 41


 1846 0051 0B       		.uleb128 0xb
 1847 0052 0B       		.uleb128 0xb
 1848 0053 3A       		.uleb128 0x3a
 1849 0054 0B       		.uleb128 0xb
 1850 0055 3B       		.uleb128 0x3b
 1851 0056 0B       		.uleb128 0xb
 1852 0057 01       		.uleb128 0x1
 1853 0058 13       		.uleb128 0x13
 1854 0059 00       		.byte	0
 1855 005a 00       		.byte	0
 1856 005b 08       		.uleb128 0x8
 1857 005c 0D       		.uleb128 0xd
 1858 005d 00       		.byte	0
 1859 005e 03       		.uleb128 0x3
 1860 005f 0E       		.uleb128 0xe
 1861 0060 3A       		.uleb128 0x3a
 1862 0061 0B       		.uleb128 0xb
 1863 0062 3B       		.uleb128 0x3b
 1864 0063 0B       		.uleb128 0xb
 1865 0064 49       		.uleb128 0x49
 1866 0065 13       		.uleb128 0x13
 1867 0066 38       		.uleb128 0x38
 1868 0067 0B       		.uleb128 0xb
 1869 0068 00       		.byte	0
 1870 0069 00       		.byte	0
 1871 006a 09       		.uleb128 0x9
 1872 006b 2E       		.uleb128 0x2e
 1873 006c 00       		.byte	0
 1874 006d 3F       		.uleb128 0x3f
 1875 006e 19       		.uleb128 0x19
 1876 006f 03       		.uleb128 0x3
 1877 0070 0E       		.uleb128 0xe
 1878 0071 3A       		.uleb128 0x3a
 1879 0072 0B       		.uleb128 0xb
 1880 0073 3B       		.uleb128 0x3b
 1881 0074 0B       		.uleb128 0xb
 1882 0075 11       		.uleb128 0x11
 1883 0076 01       		.uleb128 0x1
 1884 0077 12       		.uleb128 0x12
 1885 0078 06       		.uleb128 0x6
 1886 0079 40       		.uleb128 0x40
 1887 007a 18       		.uleb128 0x18
 1888 007b 9642     		.uleb128 0x2116
 1889 007d 19       		.uleb128 0x19
 1890 007e 00       		.byte	0
 1891 007f 00       		.byte	0
 1892 0080 0A       		.uleb128 0xa
 1893 0081 2E       		.uleb128 0x2e
 1894 0082 01       		.byte	0x1
 1895 0083 3F       		.uleb128 0x3f
 1896 0084 19       		.uleb128 0x19
 1897 0085 03       		.uleb128 0x3
 1898 0086 0E       		.uleb128 0xe
 1899 0087 3A       		.uleb128 0x3a
 1900 0088 0B       		.uleb128 0xb
 1901 0089 3B       		.uleb128 0x3b
 1902 008a 0B       		.uleb128 0xb
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 42


 1903 008b 27       		.uleb128 0x27
 1904 008c 19       		.uleb128 0x19
 1905 008d 11       		.uleb128 0x11
 1906 008e 01       		.uleb128 0x1
 1907 008f 12       		.uleb128 0x12
 1908 0090 06       		.uleb128 0x6
 1909 0091 40       		.uleb128 0x40
 1910 0092 18       		.uleb128 0x18
 1911 0093 9642     		.uleb128 0x2116
 1912 0095 19       		.uleb128 0x19
 1913 0096 01       		.uleb128 0x1
 1914 0097 13       		.uleb128 0x13
 1915 0098 00       		.byte	0
 1916 0099 00       		.byte	0
 1917 009a 0B       		.uleb128 0xb
 1918 009b 05       		.uleb128 0x5
 1919 009c 00       		.byte	0
 1920 009d 03       		.uleb128 0x3
 1921 009e 08       		.uleb128 0x8
 1922 009f 3A       		.uleb128 0x3a
 1923 00a0 0B       		.uleb128 0xb
 1924 00a1 3B       		.uleb128 0x3b
 1925 00a2 0B       		.uleb128 0xb
 1926 00a3 49       		.uleb128 0x49
 1927 00a4 13       		.uleb128 0x13
 1928 00a5 02       		.uleb128 0x2
 1929 00a6 18       		.uleb128 0x18
 1930 00a7 00       		.byte	0
 1931 00a8 00       		.byte	0
 1932 00a9 0C       		.uleb128 0xc
 1933 00aa 34       		.uleb128 0x34
 1934 00ab 00       		.byte	0
 1935 00ac 03       		.uleb128 0x3
 1936 00ad 0E       		.uleb128 0xe
 1937 00ae 3A       		.uleb128 0x3a
 1938 00af 0B       		.uleb128 0xb
 1939 00b0 3B       		.uleb128 0x3b
 1940 00b1 0B       		.uleb128 0xb
 1941 00b2 49       		.uleb128 0x49
 1942 00b3 13       		.uleb128 0x13
 1943 00b4 02       		.uleb128 0x2
 1944 00b5 18       		.uleb128 0x18
 1945 00b6 00       		.byte	0
 1946 00b7 00       		.byte	0
 1947 00b8 0D       		.uleb128 0xd
 1948 00b9 2E       		.uleb128 0x2e
 1949 00ba 00       		.byte	0
 1950 00bb 3F       		.uleb128 0x3f
 1951 00bc 19       		.uleb128 0x19
 1952 00bd 03       		.uleb128 0x3
 1953 00be 0E       		.uleb128 0xe
 1954 00bf 3A       		.uleb128 0x3a
 1955 00c0 0B       		.uleb128 0xb
 1956 00c1 3B       		.uleb128 0x3b
 1957 00c2 0B       		.uleb128 0xb
 1958 00c3 27       		.uleb128 0x27
 1959 00c4 19       		.uleb128 0x19
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 43


 1960 00c5 11       		.uleb128 0x11
 1961 00c6 01       		.uleb128 0x1
 1962 00c7 12       		.uleb128 0x12
 1963 00c8 06       		.uleb128 0x6
 1964 00c9 40       		.uleb128 0x40
 1965 00ca 18       		.uleb128 0x18
 1966 00cb 9742     		.uleb128 0x2117
 1967 00cd 19       		.uleb128 0x19
 1968 00ce 00       		.byte	0
 1969 00cf 00       		.byte	0
 1970 00d0 0E       		.uleb128 0xe
 1971 00d1 2E       		.uleb128 0x2e
 1972 00d2 01       		.byte	0x1
 1973 00d3 3F       		.uleb128 0x3f
 1974 00d4 19       		.uleb128 0x19
 1975 00d5 03       		.uleb128 0x3
 1976 00d6 0E       		.uleb128 0xe
 1977 00d7 3A       		.uleb128 0x3a
 1978 00d8 0B       		.uleb128 0xb
 1979 00d9 3B       		.uleb128 0x3b
 1980 00da 0B       		.uleb128 0xb
 1981 00db 11       		.uleb128 0x11
 1982 00dc 01       		.uleb128 0x1
 1983 00dd 12       		.uleb128 0x12
 1984 00de 06       		.uleb128 0x6
 1985 00df 40       		.uleb128 0x40
 1986 00e0 18       		.uleb128 0x18
 1987 00e1 9642     		.uleb128 0x2116
 1988 00e3 19       		.uleb128 0x19
 1989 00e4 01       		.uleb128 0x1
 1990 00e5 13       		.uleb128 0x13
 1991 00e6 00       		.byte	0
 1992 00e7 00       		.byte	0
 1993 00e8 0F       		.uleb128 0xf
 1994 00e9 01       		.uleb128 0x1
 1995 00ea 01       		.byte	0x1
 1996 00eb 49       		.uleb128 0x49
 1997 00ec 13       		.uleb128 0x13
 1998 00ed 01       		.uleb128 0x1
 1999 00ee 13       		.uleb128 0x13
 2000 00ef 00       		.byte	0
 2001 00f0 00       		.byte	0
 2002 00f1 10       		.uleb128 0x10
 2003 00f2 21       		.uleb128 0x21
 2004 00f3 00       		.byte	0
 2005 00f4 49       		.uleb128 0x49
 2006 00f5 13       		.uleb128 0x13
 2007 00f6 2F       		.uleb128 0x2f
 2008 00f7 05       		.uleb128 0x5
 2009 00f8 00       		.byte	0
 2010 00f9 00       		.byte	0
 2011 00fa 11       		.uleb128 0x11
 2012 00fb 2E       		.uleb128 0x2e
 2013 00fc 00       		.byte	0
 2014 00fd 3F       		.uleb128 0x3f
 2015 00fe 19       		.uleb128 0x19
 2016 00ff 03       		.uleb128 0x3
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 44


 2017 0100 0E       		.uleb128 0xe
 2018 0101 3A       		.uleb128 0x3a
 2019 0102 0B       		.uleb128 0xb
 2020 0103 3B       		.uleb128 0x3b
 2021 0104 0B       		.uleb128 0xb
 2022 0105 27       		.uleb128 0x27
 2023 0106 19       		.uleb128 0x19
 2024 0107 11       		.uleb128 0x11
 2025 0108 01       		.uleb128 0x1
 2026 0109 12       		.uleb128 0x12
 2027 010a 06       		.uleb128 0x6
 2028 010b 40       		.uleb128 0x40
 2029 010c 18       		.uleb128 0x18
 2030 010d 9642     		.uleb128 0x2116
 2031 010f 19       		.uleb128 0x19
 2032 0110 00       		.byte	0
 2033 0111 00       		.byte	0
 2034 0112 12       		.uleb128 0x12
 2035 0113 2E       		.uleb128 0x2e
 2036 0114 01       		.byte	0x1
 2037 0115 3F       		.uleb128 0x3f
 2038 0116 19       		.uleb128 0x19
 2039 0117 03       		.uleb128 0x3
 2040 0118 0E       		.uleb128 0xe
 2041 0119 3A       		.uleb128 0x3a
 2042 011a 0B       		.uleb128 0xb
 2043 011b 3B       		.uleb128 0x3b
 2044 011c 0B       		.uleb128 0xb
 2045 011d 49       		.uleb128 0x49
 2046 011e 13       		.uleb128 0x13
 2047 011f 11       		.uleb128 0x11
 2048 0120 01       		.uleb128 0x1
 2049 0121 12       		.uleb128 0x12
 2050 0122 06       		.uleb128 0x6
 2051 0123 40       		.uleb128 0x40
 2052 0124 18       		.uleb128 0x18
 2053 0125 9642     		.uleb128 0x2116
 2054 0127 19       		.uleb128 0x19
 2055 0128 01       		.uleb128 0x1
 2056 0129 13       		.uleb128 0x13
 2057 012a 00       		.byte	0
 2058 012b 00       		.byte	0
 2059 012c 13       		.uleb128 0x13
 2060 012d 0B       		.uleb128 0xb
 2061 012e 01       		.byte	0x1
 2062 012f 11       		.uleb128 0x11
 2063 0130 01       		.uleb128 0x1
 2064 0131 12       		.uleb128 0x12
 2065 0132 06       		.uleb128 0x6
 2066 0133 00       		.byte	0
 2067 0134 00       		.byte	0
 2068 0135 14       		.uleb128 0x14
 2069 0136 34       		.uleb128 0x34
 2070 0137 00       		.byte	0
 2071 0138 03       		.uleb128 0x3
 2072 0139 0E       		.uleb128 0xe
 2073 013a 3A       		.uleb128 0x3a
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 45


 2074 013b 0B       		.uleb128 0xb
 2075 013c 3B       		.uleb128 0x3b
 2076 013d 05       		.uleb128 0x5
 2077 013e 49       		.uleb128 0x49
 2078 013f 13       		.uleb128 0x13
 2079 0140 02       		.uleb128 0x2
 2080 0141 18       		.uleb128 0x18
 2081 0142 00       		.byte	0
 2082 0143 00       		.byte	0
 2083 0144 15       		.uleb128 0x15
 2084 0145 2E       		.uleb128 0x2e
 2085 0146 01       		.byte	0x1
 2086 0147 3F       		.uleb128 0x3f
 2087 0148 19       		.uleb128 0x19
 2088 0149 03       		.uleb128 0x3
 2089 014a 0E       		.uleb128 0xe
 2090 014b 3A       		.uleb128 0x3a
 2091 014c 0B       		.uleb128 0xb
 2092 014d 3B       		.uleb128 0x3b
 2093 014e 05       		.uleb128 0x5
 2094 014f 27       		.uleb128 0x27
 2095 0150 19       		.uleb128 0x19
 2096 0151 11       		.uleb128 0x11
 2097 0152 01       		.uleb128 0x1
 2098 0153 12       		.uleb128 0x12
 2099 0154 06       		.uleb128 0x6
 2100 0155 40       		.uleb128 0x40
 2101 0156 18       		.uleb128 0x18
 2102 0157 9642     		.uleb128 0x2116
 2103 0159 19       		.uleb128 0x19
 2104 015a 01       		.uleb128 0x1
 2105 015b 13       		.uleb128 0x13
 2106 015c 00       		.byte	0
 2107 015d 00       		.byte	0
 2108 015e 16       		.uleb128 0x16
 2109 015f 05       		.uleb128 0x5
 2110 0160 00       		.byte	0
 2111 0161 03       		.uleb128 0x3
 2112 0162 08       		.uleb128 0x8
 2113 0163 3A       		.uleb128 0x3a
 2114 0164 0B       		.uleb128 0xb
 2115 0165 3B       		.uleb128 0x3b
 2116 0166 05       		.uleb128 0x5
 2117 0167 49       		.uleb128 0x49
 2118 0168 13       		.uleb128 0x13
 2119 0169 02       		.uleb128 0x2
 2120 016a 18       		.uleb128 0x18
 2121 016b 00       		.byte	0
 2122 016c 00       		.byte	0
 2123 016d 17       		.uleb128 0x17
 2124 016e 2E       		.uleb128 0x2e
 2125 016f 01       		.byte	0x1
 2126 0170 3F       		.uleb128 0x3f
 2127 0171 19       		.uleb128 0x19
 2128 0172 03       		.uleb128 0x3
 2129 0173 0E       		.uleb128 0xe
 2130 0174 3A       		.uleb128 0x3a
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 46


 2131 0175 0B       		.uleb128 0xb
 2132 0176 3B       		.uleb128 0x3b
 2133 0177 05       		.uleb128 0x5
 2134 0178 11       		.uleb128 0x11
 2135 0179 01       		.uleb128 0x1
 2136 017a 12       		.uleb128 0x12
 2137 017b 06       		.uleb128 0x6
 2138 017c 40       		.uleb128 0x40
 2139 017d 18       		.uleb128 0x18
 2140 017e 9642     		.uleb128 0x2116
 2141 0180 19       		.uleb128 0x19
 2142 0181 01       		.uleb128 0x1
 2143 0182 13       		.uleb128 0x13
 2144 0183 00       		.byte	0
 2145 0184 00       		.byte	0
 2146 0185 18       		.uleb128 0x18
 2147 0186 34       		.uleb128 0x34
 2148 0187 00       		.byte	0
 2149 0188 03       		.uleb128 0x3
 2150 0189 08       		.uleb128 0x8
 2151 018a 3A       		.uleb128 0x3a
 2152 018b 0B       		.uleb128 0xb
 2153 018c 3B       		.uleb128 0x3b
 2154 018d 05       		.uleb128 0x5
 2155 018e 49       		.uleb128 0x49
 2156 018f 13       		.uleb128 0x13
 2157 0190 02       		.uleb128 0x2
 2158 0191 18       		.uleb128 0x18
 2159 0192 00       		.byte	0
 2160 0193 00       		.byte	0
 2161 0194 19       		.uleb128 0x19
 2162 0195 35       		.uleb128 0x35
 2163 0196 00       		.byte	0
 2164 0197 49       		.uleb128 0x49
 2165 0198 13       		.uleb128 0x13
 2166 0199 00       		.byte	0
 2167 019a 00       		.byte	0
 2168 019b 1A       		.uleb128 0x1a
 2169 019c 34       		.uleb128 0x34
 2170 019d 00       		.byte	0
 2171 019e 03       		.uleb128 0x3
 2172 019f 0E       		.uleb128 0xe
 2173 01a0 3A       		.uleb128 0x3a
 2174 01a1 0B       		.uleb128 0xb
 2175 01a2 3B       		.uleb128 0x3b
 2176 01a3 05       		.uleb128 0x5
 2177 01a4 49       		.uleb128 0x49
 2178 01a5 13       		.uleb128 0x13
 2179 01a6 3F       		.uleb128 0x3f
 2180 01a7 19       		.uleb128 0x19
 2181 01a8 3C       		.uleb128 0x3c
 2182 01a9 19       		.uleb128 0x19
 2183 01aa 00       		.byte	0
 2184 01ab 00       		.byte	0
 2185 01ac 1B       		.uleb128 0x1b
 2186 01ad 34       		.uleb128 0x34
 2187 01ae 00       		.byte	0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 47


 2188 01af 03       		.uleb128 0x3
 2189 01b0 08       		.uleb128 0x8
 2190 01b1 3A       		.uleb128 0x3a
 2191 01b2 0B       		.uleb128 0xb
 2192 01b3 3B       		.uleb128 0x3b
 2193 01b4 0B       		.uleb128 0xb
 2194 01b5 49       		.uleb128 0x49
 2195 01b6 13       		.uleb128 0x13
 2196 01b7 3F       		.uleb128 0x3f
 2197 01b8 19       		.uleb128 0x19
 2198 01b9 02       		.uleb128 0x2
 2199 01ba 18       		.uleb128 0x18
 2200 01bb 00       		.byte	0
 2201 01bc 00       		.byte	0
 2202 01bd 1C       		.uleb128 0x1c
 2203 01be 34       		.uleb128 0x34
 2204 01bf 00       		.byte	0
 2205 01c0 03       		.uleb128 0x3
 2206 01c1 0E       		.uleb128 0xe
 2207 01c2 3A       		.uleb128 0x3a
 2208 01c3 0B       		.uleb128 0xb
 2209 01c4 3B       		.uleb128 0x3b
 2210 01c5 0B       		.uleb128 0xb
 2211 01c6 49       		.uleb128 0x49
 2212 01c7 13       		.uleb128 0x13
 2213 01c8 3F       		.uleb128 0x3f
 2214 01c9 19       		.uleb128 0x19
 2215 01ca 02       		.uleb128 0x2
 2216 01cb 18       		.uleb128 0x18
 2217 01cc 00       		.byte	0
 2218 01cd 00       		.byte	0
 2219 01ce 1D       		.uleb128 0x1d
 2220 01cf 21       		.uleb128 0x21
 2221 01d0 00       		.byte	0
 2222 01d1 49       		.uleb128 0x49
 2223 01d2 13       		.uleb128 0x13
 2224 01d3 2F       		.uleb128 0x2f
 2225 01d4 0B       		.uleb128 0xb
 2226 01d5 00       		.byte	0
 2227 01d6 00       		.byte	0
 2228 01d7 00       		.byte	0
 2229              		.section	.debug_aranges,"",%progbits
 2230 0000 84000000 		.4byte	0x84
 2231 0004 0200     		.2byte	0x2
 2232 0006 00000000 		.4byte	.Ldebug_info0
 2233 000a 04       		.byte	0x4
 2234 000b 00       		.byte	0
 2235 000c 0000     		.2byte	0
 2236 000e 0000     		.2byte	0
 2237 0010 00000000 		.4byte	.LFB64
 2238 0014 14000000 		.4byte	.LFE64-.LFB64
 2239 0018 00000000 		.4byte	.LFB65
 2240 001c 14000000 		.4byte	.LFE65-.LFB65
 2241 0020 00000000 		.4byte	.LFB66
 2242 0024 14000000 		.4byte	.LFE66-.LFB66
 2243 0028 00000000 		.4byte	.LFB67
 2244 002c 20000000 		.4byte	.LFE67-.LFB67
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 48


 2245 0030 00000000 		.4byte	.LFB68
 2246 0034 26000000 		.4byte	.LFE68-.LFB68
 2247 0038 00000000 		.4byte	.LFB69
 2248 003c 88000000 		.4byte	.LFE69-.LFB69
 2249 0040 00000000 		.4byte	.LFB70
 2250 0044 0C000000 		.4byte	.LFE70-.LFB70
 2251 0048 00000000 		.4byte	.LFB71
 2252 004c C0000000 		.4byte	.LFE71-.LFB71
 2253 0050 00000000 		.4byte	.LFB72
 2254 0054 2C000000 		.4byte	.LFE72-.LFB72
 2255 0058 00000000 		.4byte	.LFB73
 2256 005c 0C000000 		.4byte	.LFE73-.LFB73
 2257 0060 00000000 		.4byte	.LFB74
 2258 0064 DC000000 		.4byte	.LFE74-.LFB74
 2259 0068 00000000 		.4byte	.LFB75
 2260 006c 3E000000 		.4byte	.LFE75-.LFB75
 2261 0070 00000000 		.4byte	.LFB76
 2262 0074 26000000 		.4byte	.LFE76-.LFB76
 2263 0078 00000000 		.4byte	.LFB77
 2264 007c C8000000 		.4byte	.LFE77-.LFB77
 2265 0080 00000000 		.4byte	0
 2266 0084 00000000 		.4byte	0
 2267              		.section	.debug_ranges,"",%progbits
 2268              	.Ldebug_ranges0:
 2269 0000 00000000 		.4byte	.LFB64
 2270 0004 14000000 		.4byte	.LFE64
 2271 0008 00000000 		.4byte	.LFB65
 2272 000c 14000000 		.4byte	.LFE65
 2273 0010 00000000 		.4byte	.LFB66
 2274 0014 14000000 		.4byte	.LFE66
 2275 0018 00000000 		.4byte	.LFB67
 2276 001c 20000000 		.4byte	.LFE67
 2277 0020 00000000 		.4byte	.LFB68
 2278 0024 26000000 		.4byte	.LFE68
 2279 0028 00000000 		.4byte	.LFB69
 2280 002c 88000000 		.4byte	.LFE69
 2281 0030 00000000 		.4byte	.LFB70
 2282 0034 0C000000 		.4byte	.LFE70
 2283 0038 00000000 		.4byte	.LFB71
 2284 003c C0000000 		.4byte	.LFE71
 2285 0040 00000000 		.4byte	.LFB72
 2286 0044 2C000000 		.4byte	.LFE72
 2287 0048 00000000 		.4byte	.LFB73
 2288 004c 0C000000 		.4byte	.LFE73
 2289 0050 00000000 		.4byte	.LFB74
 2290 0054 DC000000 		.4byte	.LFE74
 2291 0058 00000000 		.4byte	.LFB75
 2292 005c 3E000000 		.4byte	.LFE75
 2293 0060 00000000 		.4byte	.LFB76
 2294 0064 26000000 		.4byte	.LFE76
 2295 0068 00000000 		.4byte	.LFB77
 2296 006c C8000000 		.4byte	.LFE77
 2297 0070 00000000 		.4byte	0
 2298 0074 00000000 		.4byte	0
 2299              		.section	.debug_line,"",%progbits
 2300              	.Ldebug_line0:
 2301 0000 D6020000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 49


 2301      02005601 
 2301      00000201 
 2301      FB0E0D00 
 2301      01010101 
 2302              	.LASF39:
 2303 0000 6D6F746F 		.ascii	"motorStop\000"
 2303      7253746F 
 2303      7000
 2304              	.LASF54:
 2305 000a 6973725F 		.ascii	"isr_TS_Interrupt_sample\000"
 2305      54535F49 
 2305      6E746572 
 2305      72757074 
 2305      5F73616D 
 2306              	.LASF65:
 2307 0022 74735F65 		.ascii	"ts_enc\000"
 2307      6E6300
 2308              	.LASF19:
 2309 0029 646F7562 		.ascii	"double\000"
 2309      6C6500
 2310              	.LASF74:
 2311 0030 666C6167 		.ascii	"flag_packet\000"
 2311      5F706163 
 2311      6B657400 
 2312              	.LASF58:
 2313 003c 75736250 		.ascii	"usbPutChar\000"
 2313      75744368 
 2313      617200
 2314              	.LASF87:
 2315 0047 636F756E 		.ascii	"counteoc\000"
 2315      74656F63 
 2315      00
 2316              	.LASF42:
 2317 0050 6973725F 		.ascii	"isr_eoc_Interrupt_test\000"
 2317      656F635F 
 2317      496E7465 
 2317      72727570 
 2317      745F7465 
 2318              	.LASF38:
 2319 0067 6D6F746F 		.ascii	"motorGoBackwards\000"
 2319      72476F42 
 2319      61636B77 
 2319      61726473 
 2319      00
 2320              	.LASF84:
 2321 0078 63686563 		.ascii	"checkLight\000"
 2321      6B4C6967 
 2321      687400
 2322              	.LASF33:
 2323 0083 67325F78 		.ascii	"g2_xpos\000"
 2323      706F7300 
 2324              	.LASF2:
 2325 008b 73686F72 		.ascii	"short int\000"
 2325      7420696E 
 2325      7400
 2326              	.LASF82:
 2327 0095 73797374 		.ascii	"system_state\000"
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 50


 2327      656D5F73 
 2327      74617465 
 2327      00
 2328              	.LASF10:
 2329 00a2 73697A65 		.ascii	"sizetype\000"
 2329      74797065 
 2329      00
 2330              	.LASF81:
 2331 00ab 75736242 		.ascii	"usbBuffer\000"
 2331      75666665 
 2331      7200
 2332              	.LASF89:
 2333 00b5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2333      43313120 
 2333      352E342E 
 2333      31203230 
 2333      31363036 
 2334 00e8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2334      20726576 
 2334      6973696F 
 2334      6E203233 
 2334      37373135 
 2335 011b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2335      66756E63 
 2335      74696F6E 
 2335      2D736563 
 2335      74696F6E 
 2336              	.LASF55:
 2337 0143 6D61696E 		.ascii	"main\000"
 2337      00
 2338              	.LASF43:
 2339 0148 76616C75 		.ascii	"valueQ3\000"
 2339      65513300 
 2340              	.LASF44:
 2341 0150 76616C75 		.ascii	"valueQ4\000"
 2341      65513400 
 2342              	.LASF45:
 2343 0158 76616C75 		.ascii	"valueQ5\000"
 2343      65513500 
 2344              	.LASF52:
 2345 0160 6D6F746F 		.ascii	"motorRun\000"
 2345      7252756E 
 2345      00
 2346              	.LASF85:
 2347 0169 6C696768 		.ascii	"lightState\000"
 2347      74537461 
 2347      746500
 2348              	.LASF15:
 2349 0174 75696E74 		.ascii	"uint16\000"
 2349      313600
 2350              	.LASF21:
 2351 017b 696E6465 		.ascii	"index\000"
 2351      7800
 2352              	.LASF17:
 2353 0181 696E7431 		.ascii	"int16\000"
 2353      3600
 2354              	.LASF14:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 51


 2355 0187 75696E74 		.ascii	"uint8\000"
 2355      3800
 2356              	.LASF91:
 2357 018d 5C5C6669 		.ascii	"\\\\files.auckland.ac.nz\\myhome\\Documents\\GitHub"
 2357      6C65732E 
 2357      6175636B 
 2357      6C616E64 
 2357      2E61632E 
 2358 01bb 5C70726F 		.ascii	"\\project-project_group_11\\COMPSYS 301\\psoc stude"
 2358      6A656374 
 2358      2D70726F 
 2358      6A656374 
 2358      5F67726F 
 2359 01eb 6E742070 		.ascii	"nt pack\\psoc student pack\\psoc_code_base\\CS301_C"
 2359      61636B5C 
 2359      70736F63 
 2359      20737475 
 2359      64656E74 
 2360 021b 6C617373 		.ascii	"lass.cydsn\000"
 2360      2E637964 
 2360      736E00
 2361              	.LASF83:
 2362 0226 6368616E 		.ascii	"changeMotor\000"
 2362      67654D6F 
 2362      746F7200 
 2363              	.LASF79:
 2364 0232 6C696E65 		.ascii	"line\000"
 2364      00
 2365              	.LASF18:
 2366 0237 666C6F61 		.ascii	"float\000"
 2366      7400
 2367              	.LASF53:
 2368 023d 6973725F 		.ascii	"isr_motor_interrupt_speed\000"
 2368      6D6F746F 
 2368      725F696E 
 2368      74657272 
 2368      7570745F 
 2369              	.LASF6:
 2370 0257 6C6F6E67 		.ascii	"long long int\000"
 2370      206C6F6E 
 2370      6720696E 
 2370      7400
 2371              	.LASF57:
 2372 0265 75736250 		.ascii	"usbPutString\000"
 2372      75745374 
 2372      72696E67 
 2372      00
 2373              	.LASF16:
 2374 0272 696E7438 		.ascii	"int8\000"
 2374      00
 2375              	.LASF70:
 2376 0277 666C6167 		.ascii	"flag_ts_update\000"
 2376      5F74735F 
 2376      75706461 
 2376      746500
 2377              	.LASF34:
 2378 0286 67325F79 		.ascii	"g2_ypos\000"
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 52


 2378      706F7300 
 2379              	.LASF28:
 2380 028e 67305F64 		.ascii	"g0_direction\000"
 2380      69726563 
 2380      74696F6E 
 2380      00
 2381              	.LASF25:
 2382 029b 67305F78 		.ascii	"g0_xpos\000"
 2382      706F7300 
 2383              	.LASF4:
 2384 02a3 6C6F6E67 		.ascii	"long int\000"
 2384      20696E74 
 2384      00
 2385              	.LASF46:
 2386 02ac 62656769 		.ascii	"beginningCountMotor1\000"
 2386      6E6E696E 
 2386      67436F75 
 2386      6E744D6F 
 2386      746F7231 
 2387              	.LASF47:
 2388 02c1 62656769 		.ascii	"beginningCountMotor2\000"
 2388      6E6E696E 
 2388      67436F75 
 2388      6E744D6F 
 2388      746F7232 
 2389              	.LASF50:
 2390 02d6 6D6F746F 		.ascii	"motor1String\000"
 2390      72315374 
 2390      72696E67 
 2390      00
 2391              	.LASF88:
 2392 02e3 70726F63 		.ascii	"processSensors\000"
 2392      65737353 
 2392      656E736F 
 2392      727300
 2393              	.LASF72:
 2394 02f2 666C6167 		.ascii	"flag_ts_display\000"
 2394      5F74735F 
 2394      64697370 
 2394      6C617900 
 2395              	.LASF73:
 2396 0302 666C6167 		.ascii	"flag_rx\000"
 2396      5F727800 
 2397              	.LASF49:
 2398 030a 656E6443 		.ascii	"endCountMotor1\000"
 2398      6F756E74 
 2398      4D6F746F 
 2398      723100
 2399              	.LASF48:
 2400 0319 656E6443 		.ascii	"endCountMotor2\000"
 2400      6F756E74 
 2400      4D6F746F 
 2400      723200
 2401              	.LASF80:
 2402 0328 656E7472 		.ascii	"entry\000"
 2402      7900
 2403              	.LASF9:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 53


 2404 032e 6C6F6E67 		.ascii	"long double\000"
 2404      20646F75 
 2404      626C6500 
 2405              	.LASF1:
 2406 033a 756E7369 		.ascii	"unsigned char\000"
 2406      676E6564 
 2406      20636861 
 2406      7200
 2407              	.LASF86:
 2408 0348 6C696768 		.ascii	"lightDetectedFront\000"
 2408      74446574 
 2408      65637465 
 2408      6446726F 
 2408      6E7400
 2409              	.LASF27:
 2410 035b 67305F73 		.ascii	"g0_speed\000"
 2410      70656564 
 2410      00
 2411              	.LASF76:
 2412 0364 64617461 		.ascii	"dataready_flag\000"
 2412      72656164 
 2412      795F666C 
 2412      616700
 2413              	.LASF0:
 2414 0373 7369676E 		.ascii	"signed char\000"
 2414      65642063 
 2414      68617200 
 2415              	.LASF7:
 2416 037f 6C6F6E67 		.ascii	"long long unsigned int\000"
 2416      206C6F6E 
 2416      6720756E 
 2416      7369676E 
 2416      65642069 
 2417              	.LASF8:
 2418 0396 756E7369 		.ascii	"unsigned int\000"
 2418      676E6564 
 2418      20696E74 
 2418      00
 2419              	.LASF75:
 2420 03a3 666C6167 		.ascii	"flag_KB_string\000"
 2420      5F4B425F 
 2420      73747269 
 2420      6E6700
 2421              	.LASF62:
 2422 03b2 75736242 		.ascii	"usbBufCount\000"
 2422      7566436F 
 2422      756E7400 
 2423              	.LASF35:
 2424 03be 67325F73 		.ascii	"g2_speed\000"
 2424      70656564 
 2424      00
 2425              	.LASF29:
 2426 03c7 67315F78 		.ascii	"g1_xpos\000"
 2426      706F7300 
 2427              	.LASF3:
 2428 03cf 73686F72 		.ascii	"short unsigned int\000"
 2428      7420756E 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 54


 2428      7369676E 
 2428      65642069 
 2428      6E7400
 2429              	.LASF92:
 2430 03e2 64617461 		.ascii	"data_main\000"
 2430      5F6D6169 
 2430      6E00
 2431              	.LASF11:
 2432 03ec 63686172 		.ascii	"char\000"
 2432      00
 2433              	.LASF22:
 2434 03f1 726F626F 		.ascii	"robot_xpos\000"
 2434      745F7870 
 2434      6F7300
 2435              	.LASF13:
 2436 03fc 696E7433 		.ascii	"int32_t\000"
 2436      325F7400 
 2437              	.LASF30:
 2438 0404 67315F79 		.ascii	"g1_ypos\000"
 2438      706F7300 
 2439              	.LASF36:
 2440 040c 67325F64 		.ascii	"g2_direction\000"
 2440      69726563 
 2440      74696F6E 
 2440      00
 2441              	.LASF31:
 2442 0419 67315F73 		.ascii	"g1_speed\000"
 2442      70656564 
 2442      00
 2443              	.LASF78:
 2444 0422 64697370 		.ascii	"displaystring\000"
 2444      6C617973 
 2444      7472696E 
 2444      6700
 2445              	.LASF71:
 2446 0430 666C6167 		.ascii	"flag_ts_speed\000"
 2446      5F74735F 
 2446      73706565 
 2446      6400
 2447              	.LASF90:
 2448 043e 6D61696E 		.ascii	"main.c\000"
 2448      2E6300
 2449              	.LASF5:
 2450 0445 6C6F6E67 		.ascii	"long unsigned int\000"
 2450      20756E73 
 2450      69676E65 
 2450      6420696E 
 2450      7400
 2451              	.LASF61:
 2452 0457 75736253 		.ascii	"usbStarted\000"
 2452      74617274 
 2452      656400
 2453              	.LASF67:
 2454 0462 74735F73 		.ascii	"ts_speed\000"
 2454      70656564 
 2454      00
 2455              	.LASF63:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 55


 2456 046b 636F756E 		.ascii	"count\000"
 2456      7400
 2457              	.LASF69:
 2458 0471 666C6167 		.ascii	"flag_ts_enc\000"
 2458      5F74735F 
 2458      656E6300 
 2459              	.LASF12:
 2460 047d 5F5F696E 		.ascii	"__int32_t\000"
 2460      7433325F 
 2460      7400
 2461              	.LASF40:
 2462 0487 6D6F746F 		.ascii	"motorTurnLeft\000"
 2462      72547572 
 2462      6E4C6566 
 2462      7400
 2463              	.LASF56:
 2464 0495 6E6F6E65 		.ascii	"noneOn\000"
 2464      4F6E00
 2465              	.LASF37:
 2466 049c 6D6F746F 		.ascii	"motorGoStraight\000"
 2466      72476F53 
 2466      74726169 
 2466      67687400 
 2467              	.LASF59:
 2468 04ac 6D6F746F 		.ascii	"motorCount\000"
 2468      72436F75 
 2468      6E7400
 2469              	.LASF26:
 2470 04b7 67305F79 		.ascii	"g0_ypos\000"
 2470      706F7300 
 2471              	.LASF68:
 2472 04bf 74735F64 		.ascii	"ts_display\000"
 2472      6973706C 
 2472      617900
 2473              	.LASF66:
 2474 04ca 74735F75 		.ascii	"ts_update\000"
 2474      70646174 
 2474      6500
 2475              	.LASF60:
 2476 04d4 68616E64 		.ascii	"handle_usb\000"
 2476      6C655F75 
 2476      736200
 2477              	.LASF77:
 2478 04df 666C6167 		.ascii	"flag_rf_transmission_active\000"
 2478      5F72665F 
 2478      7472616E 
 2478      736D6973 
 2478      73696F6E 
 2479              	.LASF23:
 2480 04fb 726F626F 		.ascii	"robot_ypos\000"
 2480      745F7970 
 2480      6F7300
 2481              	.LASF64:
 2482 0506 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2482      52784275 
 2482      66666572 
 2482      00
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccLHLOsO.s 			page 56


 2483              	.LASF51:
 2484 0513 6D6F746F 		.ascii	"motor2String\000"
 2484      72325374 
 2484      72696E67 
 2484      00
 2485              	.LASF32:
 2486 0520 67315F64 		.ascii	"g1_direction\000"
 2486      69726563 
 2486      74696F6E 
 2486      00
 2487              	.LASF41:
 2488 052d 6D6F746F 		.ascii	"motorTurnRight\000"
 2488      72547572 
 2488      6E526967 
 2488      687400
 2489              	.LASF20:
 2490 053c 72737369 		.ascii	"rssi\000"
 2490      00
 2491              	.LASF24:
 2492 0541 726F626F 		.ascii	"robot_orientation\000"
 2492      745F6F72 
 2492      69656E74 
 2492      6174696F 
 2492      6E00
 2493              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
