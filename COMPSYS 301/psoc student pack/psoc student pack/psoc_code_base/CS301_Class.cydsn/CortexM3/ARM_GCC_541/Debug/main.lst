ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.section	.text.motorGoStraight,"ax",%progbits
 107              		.align	2
 108              		.global	motorGoStraight
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 3


 109              		.thumb
 110              		.thumb_func
 111              		.type	motorGoStraight, %function
 112              	motorGoStraight:
 113              	.LFB64:
 114              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <stdbool.h>
  19:main.c        **** #include <string.h>
  20:main.c        **** #include <stdlib.h>
  21:main.c        **** #include <math.h>
  22:main.c        **** #include <project.h>
  23:main.c        **** //* ========================================
  24:main.c        **** #include "defines.h"
  25:main.c        **** #include "vars.h"
  26:main.c        **** #include "isr_eoc.h"
  27:main.c        **** //* ========================================
  28:main.c        **** void usbPutString(char *s);
  29:main.c        **** void usbPutChar(char c);
  30:main.c        **** void handle_usb();
  31:main.c        **** //* ========================================
  32:main.c        **** 
  33:main.c        **** 
  34:main.c        **** #define rota180 500 //turns
  35:main.c        **** #define rota90Left 250
  36:main.c        **** 
  37:main.c        **** #define moveSlow 50
  38:main.c        **** #define travelDist 400 // 14cm
  39:main.c        **** #define Q1CHANNEL 3
  40:main.c        **** #define Q2CHANNEL 5 
  41:main.c        **** #define Q3CHANNEL 0
  42:main.c        **** #define Q4CHANNEL 1
  43:main.c        **** #define Q5CHANNEL 2
  44:main.c        **** #define Q6CHANNEL 4
  45:main.c        **** 
  46:main.c        **** CY_ISR_PROTO(isr_eoc_Interrupt_test);
  47:main.c        **** CY_ISR_PROTO(isr_motor_interrupt_speed);
  48:main.c        **** CY_ISR_PROTO(isr_TS_interrupt_sample);
  49:main.c        **** int convertSensorBinary();
  50:main.c        **** int convertBackBinary();
  51:main.c        **** 
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 4


  52:main.c        **** void motorGoStraight(int x){
 115              		.loc 1 52 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 8
 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119 0000 80B5     		push	{r7, lr}
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 7, -8
 122              		.cfi_offset 14, -4
 123 0002 82B0     		sub	sp, sp, #8
 124              		.cfi_def_cfa_offset 16
 125 0004 00AF     		add	r7, sp, #0
 126              		.cfi_def_cfa_register 7
 127 0006 7860     		str	r0, [r7, #4]
  53:main.c        ****     ////PWM_1_WriteCompare(150); // left wheel near power switch is stronker than right wheel //150
  54:main.c        ****     //M1_IN2_Write(0);
  55:main.c        ****     PWM_1_WriteCompare(160+x);//200 //180 //160
 128              		.loc 1 55 0
 129 0008 7B68     		ldr	r3, [r7, #4]
 130 000a DBB2     		uxtb	r3, r3
 131 000c 603B     		subs	r3, r3, #96
 132 000e DBB2     		uxtb	r3, r3
 133 0010 1846     		mov	r0, r3
 134 0012 FFF7FEFF 		bl	PWM_1_WriteCompare
  56:main.c        ****     PWM_2_WriteCompare(93-x); //52 //72 //93
 135              		.loc 1 56 0
 136 0016 7B68     		ldr	r3, [r7, #4]
 137 0018 DBB2     		uxtb	r3, r3
 138 001a C3F15D03 		rsb	r3, r3, #93
 139 001e DBB2     		uxtb	r3, r3
 140 0020 1846     		mov	r0, r3
 141 0022 FFF7FEFF 		bl	PWM_2_WriteCompare
  57:main.c        **** }
 142              		.loc 1 57 0
 143 0026 00BF     		nop
 144 0028 0837     		adds	r7, r7, #8
 145              		.cfi_def_cfa_offset 8
 146 002a BD46     		mov	sp, r7
 147              		.cfi_def_cfa_register 13
 148              		@ sp needed
 149 002c 80BD     		pop	{r7, pc}
 150              		.cfi_endproc
 151              	.LFE64:
 152              		.size	motorGoStraight, .-motorGoStraight
 153 002e 00BF     		.section	.text.motorGoBackwards,"ax",%progbits
 154              		.align	2
 155              		.global	motorGoBackwards
 156              		.thumb
 157              		.thumb_func
 158              		.type	motorGoBackwards, %function
 159              	motorGoBackwards:
 160              	.LFB65:
  58:main.c        **** void motorGoBackwards(){
 161              		.loc 1 58 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 5


 165 0000 80B5     		push	{r7, lr}
 166              		.cfi_def_cfa_offset 8
 167              		.cfi_offset 7, -8
 168              		.cfi_offset 14, -4
 169 0002 00AF     		add	r7, sp, #0
 170              		.cfi_def_cfa_register 7
  59:main.c        ****     
  60:main.c        ****     //M1_IN2_Write(0);
  61:main.c        ****     PWM_1_WriteCompare(55); //55
 171              		.loc 1 61 0
 172 0004 3720     		movs	r0, #55
 173 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  62:main.c        ****     PWM_2_WriteCompare(201); //201
 174              		.loc 1 62 0
 175 000a C920     		movs	r0, #201
 176 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  63:main.c        **** }
 177              		.loc 1 63 0
 178 0010 00BF     		nop
 179 0012 80BD     		pop	{r7, pc}
 180              		.cfi_endproc
 181              	.LFE65:
 182              		.size	motorGoBackwards, .-motorGoBackwards
 183              		.section	.text.motorStop,"ax",%progbits
 184              		.align	2
 185              		.global	motorStop
 186              		.thumb
 187              		.thumb_func
 188              		.type	motorStop, %function
 189              	motorStop:
 190              	.LFB66:
  64:main.c        **** void motorStop(){
 191              		.loc 1 64 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 1, uses_anonymous_args = 0
 195 0000 80B5     		push	{r7, lr}
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 7, -8
 198              		.cfi_offset 14, -4
 199 0002 00AF     		add	r7, sp, #0
 200              		.cfi_def_cfa_register 7
  65:main.c        ****     PWM_1_WriteCompare(127); 
 201              		.loc 1 65 0
 202 0004 7F20     		movs	r0, #127
 203 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  66:main.c        ****     PWM_2_WriteCompare(127);
 204              		.loc 1 66 0
 205 000a 7F20     		movs	r0, #127
 206 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  67:main.c        **** }
 207              		.loc 1 67 0
 208 0010 00BF     		nop
 209 0012 80BD     		pop	{r7, pc}
 210              		.cfi_endproc
 211              	.LFE66:
 212              		.size	motorStop, .-motorStop
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 6


 213              		.section	.text.motorTurnLeft,"ax",%progbits
 214              		.align	2
 215              		.global	motorTurnLeft
 216              		.thumb
 217              		.thumb_func
 218              		.type	motorTurnLeft, %function
 219              	motorTurnLeft:
 220              	.LFB67:
  68:main.c        **** 
  69:main.c        **** void motorTurnLeft(uint8 x){
 221              		.loc 1 69 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 8
 224              		@ frame_needed = 1, uses_anonymous_args = 0
 225 0000 80B5     		push	{r7, lr}
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 7, -8
 228              		.cfi_offset 14, -4
 229 0002 82B0     		sub	sp, sp, #8
 230              		.cfi_def_cfa_offset 16
 231 0004 00AF     		add	r7, sp, #0
 232              		.cfi_def_cfa_register 7
 233 0006 0346     		mov	r3, r0
 234 0008 FB71     		strb	r3, [r7, #7]
  70:main.c        ****     // TO DO
  71:main.c        ****     
  72:main.c        ****     PWM_1_WriteCompare(127); //55
 235              		.loc 1 72 0
 236 000a 7F20     		movs	r0, #127
 237 000c FFF7FEFF 		bl	PWM_1_WriteCompare
  73:main.c        ****     PWM_2_WriteCompare(x); //201
 238              		.loc 1 73 0
 239 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 240 0012 1846     		mov	r0, r3
 241 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
  74:main.c        ****     
  75:main.c        ****     
  76:main.c        ****     
  77:main.c        ****     //255
  78:main.c        **** }
 242              		.loc 1 78 0
 243 0018 00BF     		nop
 244 001a 0837     		adds	r7, r7, #8
 245              		.cfi_def_cfa_offset 8
 246 001c BD46     		mov	sp, r7
 247              		.cfi_def_cfa_register 13
 248              		@ sp needed
 249 001e 80BD     		pop	{r7, pc}
 250              		.cfi_endproc
 251              	.LFE67:
 252              		.size	motorTurnLeft, .-motorTurnLeft
 253              		.section	.text.motorTurnRight,"ax",%progbits
 254              		.align	2
 255              		.global	motorTurnRight
 256              		.thumb
 257              		.thumb_func
 258              		.type	motorTurnRight, %function
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 7


 259              	motorTurnRight:
 260              	.LFB68:
  79:main.c        **** 
  80:main.c        **** void motorTurnRight(int x){
 261              		.loc 1 80 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 8
 264              		@ frame_needed = 1, uses_anonymous_args = 0
 265 0000 80B5     		push	{r7, lr}
 266              		.cfi_def_cfa_offset 8
 267              		.cfi_offset 7, -8
 268              		.cfi_offset 14, -4
 269 0002 82B0     		sub	sp, sp, #8
 270              		.cfi_def_cfa_offset 16
 271 0004 00AF     		add	r7, sp, #0
 272              		.cfi_def_cfa_register 7
 273 0006 7860     		str	r0, [r7, #4]
  81:main.c        ****     // TO DO
  82:main.c        ****     
  83:main.c        ****     PWM_1_WriteCompare(x);//200
 274              		.loc 1 83 0
 275 0008 7B68     		ldr	r3, [r7, #4]
 276 000a DBB2     		uxtb	r3, r3
 277 000c 1846     		mov	r0, r3
 278 000e FFF7FEFF 		bl	PWM_1_WriteCompare
  84:main.c        ****     PWM_2_WriteCompare(127); //50
 279              		.loc 1 84 0
 280 0012 7F20     		movs	r0, #127
 281 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
  85:main.c        **** 
  86:main.c        **** }
 282              		.loc 1 86 0
 283 0018 00BF     		nop
 284 001a 0837     		adds	r7, r7, #8
 285              		.cfi_def_cfa_offset 8
 286 001c BD46     		mov	sp, r7
 287              		.cfi_def_cfa_register 13
 288              		@ sp needed
 289 001e 80BD     		pop	{r7, pc}
 290              		.cfi_endproc
 291              	.LFE68:
 292              		.size	motorTurnRight, .-motorTurnRight
 293              		.section	.text.motorCircle,"ax",%progbits
 294              		.align	2
 295              		.global	motorCircle
 296              		.thumb
 297              		.thumb_func
 298              		.type	motorCircle, %function
 299              	motorCircle:
 300              	.LFB69:
  87:main.c        **** 
  88:main.c        **** 
  89:main.c        **** void motorCircle(uint8 x){
 301              		.loc 1 89 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 8
 304              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 8


 305 0000 80B5     		push	{r7, lr}
 306              		.cfi_def_cfa_offset 8
 307              		.cfi_offset 7, -8
 308              		.cfi_offset 14, -4
 309 0002 82B0     		sub	sp, sp, #8
 310              		.cfi_def_cfa_offset 16
 311 0004 00AF     		add	r7, sp, #0
 312              		.cfi_def_cfa_register 7
 313 0006 0346     		mov	r3, r0
 314 0008 FB71     		strb	r3, [r7, #7]
  90:main.c        ****     // TO DO
  91:main.c        ****     //positive value turns left
  92:main.c        ****     //negative value turns right
  93:main.c        ****     PWM_1_WriteCompare(127+x); //147
 315              		.loc 1 93 0
 316 000a FB79     		ldrb	r3, [r7, #7]
 317 000c 7F33     		adds	r3, r3, #127
 318 000e DBB2     		uxtb	r3, r3
 319 0010 1846     		mov	r0, r3
 320 0012 FFF7FEFF 		bl	PWM_1_WriteCompare
  94:main.c        ****     PWM_2_WriteCompare(127+x); //
 321              		.loc 1 94 0
 322 0016 FB79     		ldrb	r3, [r7, #7]
 323 0018 7F33     		adds	r3, r3, #127
 324 001a DBB2     		uxtb	r3, r3
 325 001c 1846     		mov	r0, r3
 326 001e FFF7FEFF 		bl	PWM_2_WriteCompare
  95:main.c        ****     
  96:main.c        ****     
  97:main.c        ****     
  98:main.c        ****     //255
  99:main.c        **** }
 327              		.loc 1 99 0
 328 0022 00BF     		nop
 329 0024 0837     		adds	r7, r7, #8
 330              		.cfi_def_cfa_offset 8
 331 0026 BD46     		mov	sp, r7
 332              		.cfi_def_cfa_register 13
 333              		@ sp needed
 334 0028 80BD     		pop	{r7, pc}
 335              		.cfi_endproc
 336              	.LFE69:
 337              		.size	motorCircle, .-motorCircle
 338              		.global	changeMotor
 339 002a 00BF     		.bss
 340 0012 0000     		.align	2
 341              		.type	changeMotor, %object
 342              		.size	changeMotor, 4
 343              	changeMotor:
 344 0014 00000000 		.space	4
 345              		.global	checkLight
 346              		.align	2
 347              		.type	checkLight, %object
 348              		.size	checkLight, 4
 349              	checkLight:
 350 0018 00000000 		.space	4
 351              		.global	lightState
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 9


 352              		.align	2
 353              		.type	lightState, %object
 354              		.size	lightState, 4
 355              	lightState:
 356 001c 00000000 		.space	4
 357              		.global	lightDetectedFront
 358              		.align	2
 359              		.type	lightDetectedFront, %object
 360              		.size	lightDetectedFront, 12
 361              	lightDetectedFront:
 362 0020 00000000 		.space	12
 362      00000000 
 362      00000000 
 363              		.global	lightDetectedBack
 364              		.align	2
 365              		.type	lightDetectedBack, %object
 366              		.size	lightDetectedBack, 12
 367              	lightDetectedBack:
 368 002c 00000000 		.space	12
 368      00000000 
 368      00000000 
 369              		.global	counteoc
 370              		.align	2
 371              		.type	counteoc, %object
 372              		.size	counteoc, 4
 373              	counteoc:
 374 0038 00000000 		.space	4
 375              		.global	processSensors
 376              		.align	2
 377              		.type	processSensors, %object
 378              		.size	processSensors, 4
 379              	processSensors:
 380 003c 00000000 		.space	4
 381              		.global	middle
 382              		.align	2
 383              		.type	middle, %object
 384              		.size	middle, 4
 385              	middle:
 386 0040 00000000 		.space	4
 387              		.section	.text.isr_eoc_Interrupt_test,"ax",%progbits
 388              		.align	2
 389              		.global	isr_eoc_Interrupt_test
 390              		.thumb
 391              		.thumb_func
 392              		.type	isr_eoc_Interrupt_test, %function
 393              	isr_eoc_Interrupt_test:
 394              	.LFB70:
 100:main.c        **** int changeMotor=0;
 101:main.c        **** int checkLight =0;
 102:main.c        **** int lightState=0;
 103:main.c        **** volatile int lightDetectedFront[3] = {0,0,0};
 104:main.c        **** volatile int lightDetectedBack[3] = {0,0,0};
 105:main.c        **** volatile int counteoc = 0;
 106:main.c        **** volatile int processSensors = 0;
 107:main.c        **** volatile int middle =0;
 108:main.c        **** CY_ISR(isr_eoc_Interrupt_test)
 109:main.c        **** {
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 10


 395              		.loc 1 109 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 16
 398              		@ frame_needed = 1, uses_anonymous_args = 0
 399 0000 80B5     		push	{r7, lr}
 400              		.cfi_def_cfa_offset 8
 401              		.cfi_offset 7, -8
 402              		.cfi_offset 14, -4
 403 0002 84B0     		sub	sp, sp, #16
 404              		.cfi_def_cfa_offset 24
 405 0004 00AF     		add	r7, sp, #0
 406              		.cfi_def_cfa_register 7
 110:main.c        ****     #ifdef isr_test_INTERRUPT_INTERRUPT_CALLBACK
 111:main.c        ****         isr_TS_Interrupt_InterruptCallback();
 112:main.c        ****     #endif /* isr_eoc_INTERRUPT_INTERRUPT_CALLBACK */ 
 113:main.c        **** 
 114:main.c        ****     /*  Place your Interrupt code here. */
 115:main.c        ****     /* `#START isr_eoc_Interrupt` */
 116:main.c        ****     int16 valueQ3 =  ADC_GetResult16(Q3CHANNEL);
 407              		.loc 1 116 0
 408 0006 0020     		movs	r0, #0
 409 0008 FFF7FEFF 		bl	ADC_GetResult16
 410 000c 0346     		mov	r3, r0
 411 000e FB81     		strh	r3, [r7, #14]	@ movhi
 117:main.c        ****     int16 valueQ4 =  ADC_GetResult16(Q4CHANNEL);
 412              		.loc 1 117 0
 413 0010 0120     		movs	r0, #1
 414 0012 FFF7FEFF 		bl	ADC_GetResult16
 415 0016 0346     		mov	r3, r0
 416 0018 BB81     		strh	r3, [r7, #12]	@ movhi
 118:main.c        ****     int16 valueQ5 =  ADC_GetResult16(Q5CHANNEL);
 417              		.loc 1 118 0
 418 001a 0220     		movs	r0, #2
 419 001c FFF7FEFF 		bl	ADC_GetResult16
 420 0020 0346     		mov	r3, r0
 421 0022 7B81     		strh	r3, [r7, #10]	@ movhi
 119:main.c        ****     
 120:main.c        ****     int16 valueQ1 =  ADC_GetResult16(Q1CHANNEL);
 422              		.loc 1 120 0
 423 0024 0320     		movs	r0, #3
 424 0026 FFF7FEFF 		bl	ADC_GetResult16
 425 002a 0346     		mov	r3, r0
 426 002c 3B81     		strh	r3, [r7, #8]	@ movhi
 121:main.c        ****     int16 valueQ2 =  ADC_GetResult16(Q2CHANNEL);
 427              		.loc 1 121 0
 428 002e 0520     		movs	r0, #5
 429 0030 FFF7FEFF 		bl	ADC_GetResult16
 430 0034 0346     		mov	r3, r0
 431 0036 FB80     		strh	r3, [r7, #6]	@ movhi
 122:main.c        ****     int16 valueQ6 =  ADC_GetResult16(Q6CHANNEL);
 432              		.loc 1 122 0
 433 0038 0420     		movs	r0, #4
 434 003a FFF7FEFF 		bl	ADC_GetResult16
 435 003e 0346     		mov	r3, r0
 436 0040 BB80     		strh	r3, [r7, #4]	@ movhi
 123:main.c        ****     
 124:main.c        ****     // get value from ADC then convert to DAC to send to external LEDs
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 11


 125:main.c        ****     if (counteoc < 10) {
 437              		.loc 1 125 0
 438 0042 234B     		ldr	r3, .L17
 439 0044 1B68     		ldr	r3, [r3]
 440 0046 092B     		cmp	r3, #9
 441 0048 3BDC     		bgt	.L8
 126:main.c        ****         //2211
 127:main.c        ****         if (valueQ3 >= 2211) {
 442              		.loc 1 127 0
 443 004a B7F90E30 		ldrsh	r3, [r7, #14]
 444 004e 40F6A202 		movw	r2, #2210
 445 0052 9342     		cmp	r3, r2
 446 0054 02DD     		ble	.L9
 128:main.c        ****         //set flag for white light detected
 129:main.c        ****         lightDetectedFront[0] = 1;
 447              		.loc 1 129 0
 448 0056 1F4B     		ldr	r3, .L17+4
 449 0058 0122     		movs	r2, #1
 450 005a 1A60     		str	r2, [r3]
 451              	.L9:
 130:main.c        ****         }
 131:main.c        ****         if (valueQ4 >= 2211) {
 452              		.loc 1 131 0
 453 005c B7F90C30 		ldrsh	r3, [r7, #12]
 454 0060 40F6A202 		movw	r2, #2210
 455 0064 9342     		cmp	r3, r2
 456 0066 02DD     		ble	.L10
 132:main.c        ****         //set flag for white light detected
 133:main.c        ****         lightDetectedFront[1] = 1;
 457              		.loc 1 133 0
 458 0068 1A4B     		ldr	r3, .L17+4
 459 006a 0122     		movs	r2, #1
 460 006c 5A60     		str	r2, [r3, #4]
 461              	.L10:
 134:main.c        ****         }
 135:main.c        ****     
 136:main.c        ****         if (valueQ5 >= 2211) {
 462              		.loc 1 136 0
 463 006e B7F90A30 		ldrsh	r3, [r7, #10]
 464 0072 40F6A202 		movw	r2, #2210
 465 0076 9342     		cmp	r3, r2
 466 0078 02DD     		ble	.L11
 137:main.c        ****         //set flag for white light detected
 138:main.c        ****         lightDetectedFront[2] = 1;
 467              		.loc 1 138 0
 468 007a 164B     		ldr	r3, .L17+4
 469 007c 0122     		movs	r2, #1
 470 007e 9A60     		str	r2, [r3, #8]
 471              	.L11:
 139:main.c        ****         }
 140:main.c        ****         
 141:main.c        ****         if (valueQ1 >= 2211) {
 472              		.loc 1 141 0
 473 0080 B7F90830 		ldrsh	r3, [r7, #8]
 474 0084 40F6A202 		movw	r2, #2210
 475 0088 9342     		cmp	r3, r2
 476 008a 02DD     		ble	.L12
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 12


 142:main.c        ****         //set flag for white light detected
 143:main.c        ****             lightDetectedBack[1] = 1;
 477              		.loc 1 143 0
 478 008c 124B     		ldr	r3, .L17+8
 479 008e 0122     		movs	r2, #1
 480 0090 5A60     		str	r2, [r3, #4]
 481              	.L12:
 144:main.c        ****         }
 145:main.c        ****         
 146:main.c        ****         if (valueQ2 >= 2211) {
 482              		.loc 1 146 0
 483 0092 B7F90630 		ldrsh	r3, [r7, #6]
 484 0096 40F6A202 		movw	r2, #2210
 485 009a 9342     		cmp	r3, r2
 486 009c 02DD     		ble	.L13
 147:main.c        ****         //set flag for white light detected
 148:main.c        ****             lightDetectedBack[2] = 1;
 487              		.loc 1 148 0
 488 009e 0E4B     		ldr	r3, .L17+8
 489 00a0 0122     		movs	r2, #1
 490 00a2 9A60     		str	r2, [r3, #8]
 491              	.L13:
 149:main.c        ****         }
 150:main.c        ****                 
 151:main.c        ****                 
 152:main.c        ****         if (valueQ6 >= 2211) {
 492              		.loc 1 152 0
 493 00a4 B7F90430 		ldrsh	r3, [r7, #4]
 494 00a8 40F6A202 		movw	r2, #2210
 495 00ac 9342     		cmp	r3, r2
 496 00ae 02DD     		ble	.L14
 153:main.c        ****         //set flag for white light detected
 154:main.c        ****             lightDetectedBack[0] = 1;
 497              		.loc 1 154 0
 498 00b0 094B     		ldr	r3, .L17+8
 499 00b2 0122     		movs	r2, #1
 500 00b4 1A60     		str	r2, [r3]
 501              	.L14:
 155:main.c        ****         }
 156:main.c        ****         
 157:main.c        ****         counteoc++;
 502              		.loc 1 157 0
 503 00b6 064B     		ldr	r3, .L17
 504 00b8 1B68     		ldr	r3, [r3]
 505 00ba 0133     		adds	r3, r3, #1
 506 00bc 044A     		ldr	r2, .L17
 507 00be 1360     		str	r3, [r2]
 158:main.c        ****     } else {
 159:main.c        ****         processSensors = 1;   
 160:main.c        ****        
 161:main.c        ****     }
 162:main.c        ****     /* `#END` */
 163:main.c        **** }
 508              		.loc 1 163 0
 509 00c0 02E0     		b	.L16
 510              	.L8:
 159:main.c        ****        
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 13


 511              		.loc 1 159 0
 512 00c2 064B     		ldr	r3, .L17+12
 513 00c4 0122     		movs	r2, #1
 514 00c6 1A60     		str	r2, [r3]
 515              	.L16:
 516              		.loc 1 163 0
 517 00c8 00BF     		nop
 518 00ca 1037     		adds	r7, r7, #16
 519              		.cfi_def_cfa_offset 8
 520 00cc BD46     		mov	sp, r7
 521              		.cfi_def_cfa_register 13
 522              		@ sp needed
 523 00ce 80BD     		pop	{r7, pc}
 524              	.L18:
 525              		.align	2
 526              	.L17:
 527 00d0 00000000 		.word	counteoc
 528 00d4 00000000 		.word	lightDetectedFront
 529 00d8 00000000 		.word	lightDetectedBack
 530 00dc 00000000 		.word	processSensors
 531              		.cfi_endproc
 532              	.LFE70:
 533              		.size	isr_eoc_Interrupt_test, .-isr_eoc_Interrupt_test
 534              		.bss
 535              	count:
 536 0044 00       		.space	1
 537              		.section	.text.isr_motor_interrupt_speed,"ax",%progbits
 538              		.align	2
 539              		.global	isr_motor_interrupt_speed
 540              		.thumb
 541              		.thumb_func
 542              		.type	isr_motor_interrupt_speed, %function
 543              	isr_motor_interrupt_speed:
 544              	.LFB71:
 164:main.c        **** // NEED TO INCREASE/DECREASE SPEED TOO
 165:main.c        **** // AND IMPLEMENT LIGHT SENSOR THINGS
 166:main.c        **** volatile static int8 count;
 167:main.c        **** CY_ISR(isr_motor_interrupt_speed)
 168:main.c        **** {
 545              		.loc 1 168 0
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 0
 548              		@ frame_needed = 1, uses_anonymous_args = 0
 549              		@ link register save eliminated.
 550 0000 80B4     		push	{r7}
 551              		.cfi_def_cfa_offset 4
 552              		.cfi_offset 7, -4
 553 0002 00AF     		add	r7, sp, #0
 554              		.cfi_def_cfa_register 7
 169:main.c        ****     #ifdef isr_motor_INTERRUPT_INTERRUPT_CALLBACK
 170:main.c        ****         isr_motor_Interrupt_InterruptCallback();
 171:main.c        ****     #endif /* isr_motor_INTERRUPT_INTERRUPT_CALLBACK */ 
 172:main.c        **** 
 173:main.c        ****     /*  Place your Interrupt code here. */
 174:main.c        ****     /* `#START isr_motor_Interrupt` */
 175:main.c        ****       /*int16 currCountMotor2 = QuadDec_M2_GetCounter();
 176:main.c        ****       int16 currCountMotor1 = QuadDec_M1_GetCounter();  
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 14


 177:main.c        ****       
 178:main.c        ****      speedMotor1 = (currCountMotor1 - prevcountMotor1) / 0.2;
 179:main.c        ****      speedMotor2 = (currCountMotor2 - prevcountMotor2) / 0.2;
 180:main.c        ****     
 181:main.c        ****       prevcountMotor1 = currCountMotor1;
 182:main.c        ****       prevcountMotor2 = currCountMotor2;*/
 183:main.c        ****     
 184:main.c        ****     /* `#END` */
 185:main.c        **** }
 555              		.loc 1 185 0
 556 0004 00BF     		nop
 557 0006 BD46     		mov	sp, r7
 558              		.cfi_def_cfa_register 13
 559              		@ sp needed
 560 0008 80BC     		pop	{r7}
 561              		.cfi_restore 7
 562              		.cfi_def_cfa_offset 0
 563 000a 7047     		bx	lr
 564              		.cfi_endproc
 565              	.LFE71:
 566              		.size	isr_motor_interrupt_speed, .-isr_motor_interrupt_speed
 567              		.section	.rodata
 568              		.align	2
 569              	.LC0:
 570 0000 4D6F746F 		.ascii	"Motor 1 - start count: %d, end count: %d \012\000"
 570      72203120 
 570      2D207374 
 570      61727420 
 570      636F756E 
 571 002b 00       		.align	2
 572              	.LC1:
 573 002c 4D6F746F 		.ascii	"Motor 2 - start count: %d, end count: %d \012\000"
 573      72203220 
 573      2D207374 
 573      61727420 
 573      636F756E 
 574              		.section	.text.motorCount,"ax",%progbits
 575              		.align	2
 576              		.global	motorCount
 577              		.thumb
 578              		.thumb_func
 579              		.type	motorCount, %function
 580              	motorCount:
 581              	.LFB72:
 186:main.c        **** void motorCount(){
 582              		.loc 1 186 0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 20008
 585              		@ frame_needed = 1, uses_anonymous_args = 0
 586 0000 80B5     		push	{r7, lr}
 587              		.cfi_def_cfa_offset 8
 588              		.cfi_offset 7, -8
 589              		.cfi_offset 14, -4
 590 0002 ADF59C4D 		sub	sp, sp, #19968
 591              		.cfi_def_cfa_offset 19976
 592 0006 8AB0     		sub	sp, sp, #40
 593              		.cfi_def_cfa_offset 20016
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 15


 594 0008 00AF     		add	r7, sp, #0
 595              		.cfi_def_cfa_register 7
 187:main.c        ****     int16 beginningCountMotor1 = 0;
 596              		.loc 1 187 0
 597 000a 0023     		movs	r3, #0
 598 000c 07F59C42 		add	r2, r7, #19968
 599 0010 02F12602 		add	r2, r2, #38
 600 0014 1380     		strh	r3, [r2]	@ movhi
 188:main.c        ****     int16 beginningCountMotor2 = 0;
 601              		.loc 1 188 0
 602 0016 0023     		movs	r3, #0
 603 0018 07F59C42 		add	r2, r7, #19968
 604 001c 02F12402 		add	r2, r2, #36
 605 0020 1380     		strh	r3, [r2]	@ movhi
 189:main.c        ****     int16 endCountMotor2 = QuadDec_M2_GetCounter();
 606              		.loc 1 189 0
 607 0022 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 608 0026 0346     		mov	r3, r0
 609 0028 07F59C42 		add	r2, r7, #19968
 610 002c 02F12202 		add	r2, r2, #34
 611 0030 1380     		strh	r3, [r2]	@ movhi
 190:main.c        ****     int16 endCountMotor1 = QuadDec_M1_GetCounter();
 612              		.loc 1 190 0
 613 0032 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 614 0036 0346     		mov	r3, r0
 615 0038 07F59C42 		add	r2, r7, #19968
 616 003c 02F12002 		add	r2, r2, #32
 617 0040 1380     		strh	r3, [r2]	@ movhi
 191:main.c        ****     char motor1String[10000]; 
 192:main.c        ****     sprintf(motor1String,"Motor 1 - start count: %d, end count: %d \n", beginningCountMotor1, endCo
 618              		.loc 1 192 0
 619 0042 07F59C43 		add	r3, r7, #19968
 620 0046 03F12603 		add	r3, r3, #38
 621 004a B3F90020 		ldrsh	r2, [r3]
 622 004e 07F59C43 		add	r3, r7, #19968
 623 0052 03F12003 		add	r3, r3, #32
 624 0056 B3F90030 		ldrsh	r3, [r3]
 625 005a 07F51C50 		add	r0, r7, #9984
 626 005e 00F12800 		add	r0, r0, #40
 627 0062 1838     		subs	r0, r0, #24
 628 0064 1449     		ldr	r1, .L21
 629 0066 FFF7FEFF 		bl	sprintf
 193:main.c        ****     char motor2String[10000];
 194:main.c        ****     sprintf(motor2String,"Motor 2 - start count: %d, end count: %d \n", beginningCountMotor2 , endC
 630              		.loc 1 194 0
 631 006a 07F59C43 		add	r3, r7, #19968
 632 006e 03F12403 		add	r3, r3, #36
 633 0072 B3F90020 		ldrsh	r2, [r3]
 634 0076 07F59C43 		add	r3, r7, #19968
 635 007a 03F12203 		add	r3, r3, #34
 636 007e B3F90030 		ldrsh	r3, [r3]
 637 0082 07F12800 		add	r0, r7, #40
 638 0086 2838     		subs	r0, r0, #40
 639 0088 0C49     		ldr	r1, .L21+4
 640 008a FFF7FEFF 		bl	sprintf
 195:main.c        ****     
 196:main.c        ****     usbPutString(motor1String);
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 16


 641              		.loc 1 196 0
 642 008e 07F51C53 		add	r3, r7, #9984
 643 0092 03F12803 		add	r3, r3, #40
 644 0096 183B     		subs	r3, r3, #24
 645 0098 1846     		mov	r0, r3
 646 009a FFF7FEFF 		bl	usbPutString
 197:main.c        ****     usbPutString(motor2String);
 647              		.loc 1 197 0
 648 009e 07F12803 		add	r3, r7, #40
 649 00a2 283B     		subs	r3, r3, #40
 650 00a4 1846     		mov	r0, r3
 651 00a6 FFF7FEFF 		bl	usbPutString
 198:main.c        **** 
 199:main.c        **** }
 652              		.loc 1 199 0
 653 00aa 00BF     		nop
 654 00ac 07F59C47 		add	r7, r7, #19968
 655 00b0 2837     		adds	r7, r7, #40
 656              		.cfi_def_cfa_offset 8
 657 00b2 BD46     		mov	sp, r7
 658              		.cfi_def_cfa_register 13
 659              		@ sp needed
 660 00b4 80BD     		pop	{r7, pc}
 661              	.L22:
 662 00b6 00BF     		.align	2
 663              	.L21:
 664 00b8 00000000 		.word	.LC0
 665 00bc 2C000000 		.word	.LC1
 666              		.cfi_endproc
 667              	.LFE72:
 668              		.size	motorCount, .-motorCount
 669              		.section	.text.motorRun,"ax",%progbits
 670              		.align	2
 671              		.global	motorRun
 672              		.thumb
 673              		.thumb_func
 674              		.type	motorRun, %function
 675              	motorRun:
 676              	.LFB73:
 200:main.c        **** 
 201:main.c        **** void motorRun(){
 677              		.loc 1 201 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681 0000 80B5     		push	{r7, lr}
 682              		.cfi_def_cfa_offset 8
 683              		.cfi_offset 7, -8
 684              		.cfi_offset 14, -4
 685 0002 00AF     		add	r7, sp, #0
 686              		.cfi_def_cfa_register 7
 202:main.c        ****     
 203:main.c        ****     
 204:main.c        ****     
 205:main.c        ****     PWM_1_Start();
 687              		.loc 1 205 0
 688 0004 FFF7FEFF 		bl	PWM_1_Start
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 17


 206:main.c        ****     PWM_2_Start();
 689              		.loc 1 206 0
 690 0008 FFF7FEFF 		bl	PWM_2_Start
 207:main.c        **** 
 208:main.c        **** 
 209:main.c        ****     motorStop();
 691              		.loc 1 209 0
 692 000c FFF7FEFF 		bl	motorStop
 210:main.c        ****     CyDelay(2000); // so we have time to set the robot up
 693              		.loc 1 210 0
 694 0010 4FF4FA60 		mov	r0, #2000
 695 0014 FFF7FEFF 		bl	CyDelay
 211:main.c        ****     motorGoStraight(0);
 696              		.loc 1 211 0
 697 0018 0020     		movs	r0, #0
 698 001a FFF7FEFF 		bl	motorGoStraight
 212:main.c        ****     CyDelay(2000);
 699              		.loc 1 212 0
 700 001e 4FF4FA60 		mov	r0, #2000
 701 0022 FFF7FEFF 		bl	CyDelay
 213:main.c        ****     motorStop();
 702              		.loc 1 213 0
 703 0026 FFF7FEFF 		bl	motorStop
 214:main.c        ****     
 215:main.c        ****     //motorGoBackwards();
 216:main.c        **** 
 217:main.c        ****     
 218:main.c        ****     //CyDelay(2000);
 219:main.c        ****  
 220:main.c        ****     //motorStop();
 221:main.c        ****     //motorCount();//checks count per second.
 222:main.c        **** 
 223:main.c        ****     
 224:main.c        **** }
 704              		.loc 1 224 0
 705 002a 00BF     		nop
 706 002c 80BD     		pop	{r7, pc}
 707              		.cfi_endproc
 708              	.LFE73:
 709              		.size	motorRun, .-motorRun
 710 002e 00BF     		.section	.text.isr_TS_Interrupt_sample,"ax",%progbits
 711              		.align	2
 712              		.global	isr_TS_Interrupt_sample
 713              		.thumb
 714              		.thumb_func
 715              		.type	isr_TS_Interrupt_sample, %function
 716              	isr_TS_Interrupt_sample:
 717              	.LFB74:
 225:main.c        **** CY_ISR(isr_TS_Interrupt_sample)
 226:main.c        **** {
 718              		.loc 1 226 0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 0
 721              		@ frame_needed = 1, uses_anonymous_args = 0
 722 0000 80B5     		push	{r7, lr}
 723              		.cfi_def_cfa_offset 8
 724              		.cfi_offset 7, -8
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 18


 725              		.cfi_offset 14, -4
 726 0002 00AF     		add	r7, sp, #0
 727              		.cfi_def_cfa_register 7
 227:main.c        ****     #ifdef isr_TS_INTERRUPT_INTERRUPT_CALLBACK
 228:main.c        ****         isr_TS_Interrupt_InterruptCallback();
 229:main.c        ****     #endif /* isr_TS_INTERRUPT_INTERRUPT_CALLBACK */ 
 230:main.c        ****         ADC_StartConvert();
 728              		.loc 1 230 0
 729 0004 FFF7FEFF 		bl	ADC_StartConvert
 231:main.c        ****     /*  Place your Interrupt code here. */
 232:main.c        ****     /* `#START isr_TS_Interrupt` */
 233:main.c        **** 
 234:main.c        ****     /* `#END` */
 235:main.c        **** }
 730              		.loc 1 235 0
 731 0008 00BF     		nop
 732 000a 80BD     		pop	{r7, pc}
 733              		.cfi_endproc
 734              	.LFE74:
 735              		.size	isr_TS_Interrupt_sample, .-isr_TS_Interrupt_sample
 736              		.section	.text.main,"ax",%progbits
 737              		.align	2
 738              		.global	main
 739              		.thumb
 740              		.thumb_func
 741              		.type	main, %function
 742              	main:
 743              	.LFB75:
 236:main.c        **** 
 237:main.c        **** 
 238:main.c        **** int main()
 239:main.c        **** {
 744              		.loc 1 239 0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 16
 747              		@ frame_needed = 1, uses_anonymous_args = 0
 748 0000 80B5     		push	{r7, lr}
 749              		.cfi_def_cfa_offset 8
 750              		.cfi_offset 7, -8
 751              		.cfi_offset 14, -4
 752 0002 84B0     		sub	sp, sp, #16
 753              		.cfi_def_cfa_offset 24
 754 0004 00AF     		add	r7, sp, #0
 755              		.cfi_def_cfa_register 7
 240:main.c        ****     
 241:main.c        **** 
 242:main.c        **** // --------------------------------    
 243:main.c        **** // ----- INITIALIZATIONS ----------
 244:main.c        ****     CYGlobalIntEnable;
 756              		.loc 1 244 0
 757              		.syntax unified
 758              	@ 244 "main.c" 1
 759 0006 62B6     		CPSIE   i
 760              	@ 0 "" 2
 245:main.c        ****     count  = 0;
 761              		.loc 1 245 0
 762              		.thumb
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 19


 763              		.syntax unified
 764 0008 574B     		ldr	r3, .L41
 765 000a 0022     		movs	r2, #0
 766 000c 1A70     		strb	r2, [r3]
 246:main.c        ****     
 247:main.c        ****     ADC_Start();
 767              		.loc 1 247 0
 768 000e FFF7FEFF 		bl	ADC_Start
 248:main.c        ****     Timer_TS_Start();
 769              		.loc 1 248 0
 770 0012 FFF7FEFF 		bl	Timer_TS_Start
 249:main.c        ****     Timer_Motor_Start();
 771              		.loc 1 249 0
 772 0016 FFF7FEFF 		bl	Timer_Motor_Start
 250:main.c        ****     QuadDec_M1_Start();
 773              		.loc 1 250 0
 774 001a FFF7FEFF 		bl	QuadDec_M1_Start
 251:main.c        ****     QuadDec_M2_Start(); //init the quadencoder,
 775              		.loc 1 251 0
 776 001e FFF7FEFF 		bl	QuadDec_M2_Start
 252:main.c        ****     //isr_motor_StartEx(isr_motor_interrupt_speed);
 253:main.c        ****     
 254:main.c        ****     isr_TS_StartEx(isr_TS_Interrupt_sample);
 777              		.loc 1 254 0
 778 0022 5248     		ldr	r0, .L41+4
 779 0024 FFF7FEFF 		bl	isr_TS_StartEx
 255:main.c        ****     isr_eoc_StartEx(isr_eoc_Interrupt_test);
 780              		.loc 1 255 0
 781 0028 5148     		ldr	r0, .L41+8
 782 002a FFF7FEFF 		bl	isr_eoc_StartEx
 256:main.c        ****     
 257:main.c        ****     
 258:main.c        ****     //ADC_StartConvert();
 259:main.c        ****     
 260:main.c        ****     PWM_1_Start();
 783              		.loc 1 260 0
 784 002e FFF7FEFF 		bl	PWM_1_Start
 261:main.c        ****     PWM_2_Start();
 785              		.loc 1 261 0
 786 0032 FFF7FEFF 		bl	PWM_2_Start
 262:main.c        ****     
 263:main.c        ****     LED_Write(0);
 787              		.loc 1 263 0
 788 0036 0020     		movs	r0, #0
 789 0038 FFF7FEFF 		bl	LED_Write
 264:main.c        ****     ///////IF NOT USINNG MOTOR RUN DO PWM START STUFF
 265:main.c        ****     // SO write compare is a measure of speed
 266:main.c        ****     // And Cy delay delays the running of the motor and duration that it travels
 267:main.c        ****     //look at motor RUn config above for more info.
 268:main.c        ****     motorStop();
 790              		.loc 1 268 0
 791 003c FFF7FEFF 		bl	motorStop
 269:main.c        ****     CyDelay(2000); // to prep PARTY PART!! WHOOP WHOOP
 792              		.loc 1 269 0
 793 0040 4FF4FA60 		mov	r0, #2000
 794 0044 FFF7FEFF 		bl	CyDelay
 270:main.c        ****   /*  while(QuadDec_M1_GetCounter()<travelDist){
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 20


 271:main.c        ****    // where counter is value we want it to stop at.
 272:main.c        ****         motorGoStraight();
 273:main.c        ****     
 274:main.c        ****     
 275:main.c        ****     }*/
 276:main.c        **** 
 277:main.c        ****     
 278:main.c        ****     //motorStop();
 279:main.c        ****    // CyDelay(2000); // so we have time to set the robot up
 280:main.c        ****     //motorTurnLeft();
 281:main.c        ****     //motorStop();
 282:main.c        ****     //motorCount();//checks count per second.
 283:main.c        ****      
 284:main.c        ****     
 285:main.c        ****     
 286:main.c        **** 
 287:main.c        ****     
 288:main.c        **** 
 289:main.c        ****     
 290:main.c        **** // ------USB SETUP ----------------    
 291:main.c        **** //#ifdef USE_USB    
 292:main.c        **** //    USBUART_Start(0,USBUART_5V_OPERATION);
 293:main.c        **** //#endif        
 294:main.c        **** //        
 295:main.c        **** //    RF_BT_SELECT_Write(0);
 296:main.c        **** //    motorCount();//checks count per second.
 297:main.c        ****  
 298:main.c        ****     int lastState=0;
 795              		.loc 1 298 0
 796 0048 0023     		movs	r3, #0
 797 004a FB60     		str	r3, [r7, #12]
 299:main.c        ****     //usbPutString(displaystring);
 300:main.c        ****   
 301:main.c        ****     while(QuadDec_M1_GetCounter()<travelDist)
 798              		.loc 1 301 0
 799 004c 7DE0     		b	.L26
 800              	.L38:
 302:main.c        ****     {
 303:main.c        ****         /* Place your application code here. */
 304:main.c        ****        
 305:main.c        ****         if (processSensors == 1) {
 801              		.loc 1 305 0
 802 004e 494B     		ldr	r3, .L41+12
 803 0050 1B68     		ldr	r3, [r3]
 804 0052 012B     		cmp	r3, #1
 805 0054 79D1     		bne	.L26
 806              	.LBB2:
 306:main.c        ****                    
 307:main.c        ****             int operation = convertSensorBinary();
 807              		.loc 1 307 0
 808 0056 FFF7FEFF 		bl	convertSensorBinary
 809 005a B860     		str	r0, [r7, #8]
 308:main.c        ****             int backOps = convertBackBinary();
 810              		.loc 1 308 0
 811 005c FFF7FEFF 		bl	convertBackBinary
 812 0060 7860     		str	r0, [r7, #4]
 309:main.c        **** 
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 21


 310:main.c        ****             switch(operation){
 813              		.loc 1 310 0
 814 0062 BB68     		ldr	r3, [r7, #8]
 815 0064 072B     		cmp	r3, #7
 816 0066 58D8     		bhi	.L27
 817 0068 01A2     		adr	r2, .L29
 818 006a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 819 006e 00BF     		.p2align 2
 820              	.L29:
 821 0070 13010000 		.word	.L28+1
 822 0074 D7000000 		.word	.L30+1
 823 0078 1B010000 		.word	.L27+1
 824 007c AD000000 		.word	.L31+1
 825 0080 F5000000 		.word	.L32+1
 826 0084 C9000000 		.word	.L33+1
 827 0088 BB000000 		.word	.L34+1
 828 008c 91000000 		.word	.L35+1
 829              		.p2align 1
 830              	.L35:
 311:main.c        ****             //where 1 is on white, 0 is on black.
 312:main.c        ****                 
 313:main.c        ****                 case 7: // 111 // all under white\\
 314:main.c        ****                     
 315:main.c        ****                 
 316:main.c        ****                     //check switch all back
 317:main.c        ****                    //if line not in back rotate and go crazy
 318:main.c        ****                     //check all leftback right back.
 319:main.c        ****                     
 320:main.c        ****                     
 321:main.c        ****                         //if(backOps == 3){//011
 322:main.c        ****                         //    motorTurnLeft(50);//decrease go fast used to be 50 by 6
 323:main.c        ****                             
 324:main.c        ****                             
 325:main.c        ****                         //}
 326:main.c        ****                         
 327:main.c        ****                         //else if(backOps == 6){//110
 328:main.c        ****                         //    motorTurnRight(200);//decrease go fast used to be 50 by 6
 329:main.c        ****                             
 330:main.c        ****                            
 331:main.c        ****                         //}else 
 332:main.c        ****                         if(backOps == 7){
 831              		.loc 1 332 0
 832 0090 7B68     		ldr	r3, [r7, #4]
 833 0092 072B     		cmp	r3, #7
 834 0094 03D1     		bne	.L36
 333:main.c        ****                             
 334:main.c        ****                              motorCircle(40);
 835              		.loc 1 334 0
 836 0096 2820     		movs	r0, #40
 837 0098 FFF7FEFF 		bl	motorCircle
 335:main.c        ****                             
 336:main.c        ****                         }
 337:main.c        ****                         
 338:main.c        ****                     
 339:main.c        ****                         else if(backOps == 5){
 340:main.c        ****                             motorGoStraight(0);
 341:main.c        ****                         }   
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 22


 342:main.c        ****                         break;
 838              		.loc 1 342 0
 839 009c 3CE0     		b	.L40
 840              	.L36:
 339:main.c        ****                             motorGoStraight(0);
 841              		.loc 1 339 0
 842 009e 7B68     		ldr	r3, [r7, #4]
 843 00a0 052B     		cmp	r3, #5
 844 00a2 39D1     		bne	.L40
 340:main.c        ****                         }   
 845              		.loc 1 340 0
 846 00a4 0020     		movs	r0, #0
 847 00a6 FFF7FEFF 		bl	motorGoStraight
 848              		.loc 1 342 0
 849 00aa 35E0     		b	.L40
 850              	.L31:
 343:main.c        ****                     
 344:main.c        ****                 case 3:// 0 1 1 // Q3 under black
 345:main.c        ****                     motorTurnLeft(50);//decrease go fast used to be 50 by 6
 851              		.loc 1 345 0
 852 00ac 3220     		movs	r0, #50
 853 00ae FFF7FEFF 		bl	motorTurnLeft
 346:main.c        ****                     LED_Write(1);
 854              		.loc 1 346 0
 855 00b2 0120     		movs	r0, #1
 856 00b4 FFF7FEFF 		bl	LED_Write
 347:main.c        ****                     break;    
 857              		.loc 1 347 0
 858 00b8 2FE0     		b	.L27
 859              	.L34:
 348:main.c        ****                     
 349:main.c        ****                 case 6:// 1 1 0 // Q5 under black  
 350:main.c        ****                     motorTurnRight(200);//increase 200 by 6
 860              		.loc 1 350 0
 861 00ba C820     		movs	r0, #200
 862 00bc FFF7FEFF 		bl	motorTurnRight
 351:main.c        ****                     LED_Write(1);
 863              		.loc 1 351 0
 864 00c0 0120     		movs	r0, #1
 865 00c2 FFF7FEFF 		bl	LED_Write
 352:main.c        ****                     break;
 866              		.loc 1 352 0
 867 00c6 28E0     		b	.L27
 868              	.L33:
 353:main.c        ****                     
 354:main.c        ****                 case 5:// 101 // Q4 under black
 355:main.c        ****                     motorGoStraight(0);
 869              		.loc 1 355 0
 870 00c8 0020     		movs	r0, #0
 871 00ca FFF7FEFF 		bl	motorGoStraight
 356:main.c        ****                     LED_Write(0);
 872              		.loc 1 356 0
 873 00ce 0020     		movs	r0, #0
 874 00d0 FFF7FEFF 		bl	LED_Write
 357:main.c        ****                     break;
 875              		.loc 1 357 0
 876 00d4 21E0     		b	.L27
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 23


 877              	.L30:
 358:main.c        ****                 case 1: // 001 --> left intersection
 359:main.c        ****                     lastState=1;
 878              		.loc 1 359 0
 879 00d6 0123     		movs	r3, #1
 880 00d8 FB60     		str	r3, [r7, #12]
 360:main.c        ****                     motorStop();
 881              		.loc 1 360 0
 882 00da FFF7FEFF 		bl	motorStop
 361:main.c        ****                     CyDelay(50);
 883              		.loc 1 361 0
 884 00de 3220     		movs	r0, #50
 885 00e0 FFF7FEFF 		bl	CyDelay
 362:main.c        ****                     motorTurnLeft(44);
 886              		.loc 1 362 0
 887 00e4 2C20     		movs	r0, #44
 888 00e6 FFF7FEFF 		bl	motorTurnLeft
 363:main.c        ****                     CyDelay(350);
 889              		.loc 1 363 0
 890 00ea 4FF4AF70 		mov	r0, #350
 891 00ee FFF7FEFF 		bl	CyDelay
 364:main.c        ****                     break;
 892              		.loc 1 364 0
 893 00f2 12E0     		b	.L27
 894              	.L32:
 365:main.c        ****                 case 4: // 100 --> right intersection
 366:main.c        ****                     lastState=2;
 895              		.loc 1 366 0
 896 00f4 0223     		movs	r3, #2
 897 00f6 FB60     		str	r3, [r7, #12]
 367:main.c        ****                     motorStop();
 898              		.loc 1 367 0
 899 00f8 FFF7FEFF 		bl	motorStop
 368:main.c        ****                     CyDelay(50);
 900              		.loc 1 368 0
 901 00fc 3220     		movs	r0, #50
 902 00fe FFF7FEFF 		bl	CyDelay
 369:main.c        ****                     motorTurnRight(206);
 903              		.loc 1 369 0
 904 0102 CE20     		movs	r0, #206
 905 0104 FFF7FEFF 		bl	motorTurnRight
 370:main.c        ****                     CyDelay(350);
 906              		.loc 1 370 0
 907 0108 4FF4AF70 		mov	r0, #350
 908 010c FFF7FEFF 		bl	CyDelay
 371:main.c        ****                     break;
 909              		.loc 1 371 0
 910 0110 03E0     		b	.L27
 911              	.L28:
 372:main.c        ****                     
 373:main.c        ****                 
 374:main.c        ****                 
 375:main.c        ****                 
 376:main.c        ****                     
 377:main.c        ****                 case 0: // 000 // ALL UNDER black
 378:main.c        ****                       
 379:main.c        ****                     motorStop();
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 24


 912              		.loc 1 379 0
 913 0112 FFF7FEFF 		bl	motorStop
 380:main.c        ****                     break;    
 914              		.loc 1 380 0
 915 0116 00E0     		b	.L27
 916              	.L40:
 342:main.c        ****                     
 917              		.loc 1 342 0
 918 0118 00BF     		nop
 919              	.L27:
 381:main.c        **** 
 382:main.c        ****                
 383:main.c        ****                 
 384:main.c        ****                
 385:main.c        ****             
 386:main.c        ****             }
 387:main.c        ****             
 388:main.c        ****             
 389:main.c        ****             
 390:main.c        ****             
 391:main.c        **** //            if(leftIntersection){
 392:main.c        **** //                motorTurnLeft(55);
 393:main.c        **** //            
 394:main.c        **** //            
 395:main.c        **** //                CyDelay(250);
 396:main.c        **** //            }
 397:main.c        **** //            
 398:main.c        **** //            if(rightIntersection){
 399:main.c        **** //                motorTurnRight(55);
 400:main.c        **** //                
 401:main.c        **** //                CyDelay(250);//small rotation need small time
 402:main.c        **** //            
 403:main.c        **** //            }
 404:main.c        ****             
 405:main.c        **** //            //Slight turns
 406:main.c        **** //            if(lightDetectedFront[0] == 1 && lightDetectedFront[1]==0){
 407:main.c        **** //                motorTurnRight(140);
 408:main.c        **** //                CyDelay(20);//small rotation need small time
 409:main.c        **** //            }
 410:main.c        **** //            
 411:main.c        **** //            if(lightDetectedFront[2] == 0 && lightDetectedFront[1]==1){
 412:main.c        **** //                motorTurnLeft(140);
 413:main.c        **** //                CyDelay(20);//small rotation need small time
 414:main.c        **** //            }
 415:main.c        **** 
 416:main.c        ****        
 417:main.c        ****             //reset variable.
 418:main.c        ****             processSensors = 0;
 920              		.loc 1 418 0
 921 011a 164B     		ldr	r3, .L41+12
 922 011c 0022     		movs	r2, #0
 923 011e 1A60     		str	r2, [r3]
 419:main.c        ****             //reset counter
 420:main.c        **** 
 421:main.c        ****              counteoc = 0;
 924              		.loc 1 421 0
 925 0120 154B     		ldr	r3, .L41+16
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 25


 926 0122 0022     		movs	r2, #0
 927 0124 1A60     		str	r2, [r3]
 422:main.c        ****             //reset flags for lightsensors because it checks every 10 iterations, adds delay/
 423:main.c        ****             lightDetectedFront[0] = 0;
 928              		.loc 1 423 0
 929 0126 154B     		ldr	r3, .L41+20
 930 0128 0022     		movs	r2, #0
 931 012a 1A60     		str	r2, [r3]
 424:main.c        ****             lightDetectedFront[1] = 0;
 932              		.loc 1 424 0
 933 012c 134B     		ldr	r3, .L41+20
 934 012e 0022     		movs	r2, #0
 935 0130 5A60     		str	r2, [r3, #4]
 425:main.c        ****             lightDetectedFront[2] = 0;
 936              		.loc 1 425 0
 937 0132 124B     		ldr	r3, .L41+20
 938 0134 0022     		movs	r2, #0
 939 0136 9A60     		str	r2, [r3, #8]
 426:main.c        ****             lightDetectedBack[0] = 0;
 940              		.loc 1 426 0
 941 0138 114B     		ldr	r3, .L41+24
 942 013a 0022     		movs	r2, #0
 943 013c 1A60     		str	r2, [r3]
 427:main.c        ****             lightDetectedBack[1] = 0;
 944              		.loc 1 427 0
 945 013e 104B     		ldr	r3, .L41+24
 946 0140 0022     		movs	r2, #0
 947 0142 5A60     		str	r2, [r3, #4]
 428:main.c        ****             lightDetectedBack[2] = 0;
 948              		.loc 1 428 0
 949 0144 0E4B     		ldr	r3, .L41+24
 950 0146 0022     		movs	r2, #0
 951 0148 9A60     		str	r2, [r3, #8]
 952              	.L26:
 953              	.LBE2:
 301:main.c        ****     {
 954              		.loc 1 301 0
 955 014a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 956 014e 0346     		mov	r3, r0
 957 0150 B3F5C87F 		cmp	r3, #400
 958 0154 FFF67BAF 		blt	.L38
 429:main.c        ****           
 430:main.c        ****         }
 431:main.c        ****         
 432:main.c        ****     }   
 433:main.c        ****     
 434:main.c        ****     motorStop();
 959              		.loc 1 434 0
 960 0158 FFF7FEFF 		bl	motorStop
 961 015c 0023     		movs	r3, #0
 435:main.c        **** }
 962              		.loc 1 435 0
 963 015e 1846     		mov	r0, r3
 964 0160 1037     		adds	r7, r7, #16
 965              		.cfi_def_cfa_offset 8
 966 0162 BD46     		mov	sp, r7
 967              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 26


 968              		@ sp needed
 969 0164 80BD     		pop	{r7, pc}
 970              	.L42:
 971 0166 00BF     		.align	2
 972              	.L41:
 973 0168 44000000 		.word	count
 974 016c 00000000 		.word	isr_TS_Interrupt_sample
 975 0170 00000000 		.word	isr_eoc_Interrupt_test
 976 0174 00000000 		.word	processSensors
 977 0178 00000000 		.word	counteoc
 978 017c 00000000 		.word	lightDetectedFront
 979 0180 00000000 		.word	lightDetectedBack
 980              		.cfi_endproc
 981              	.LFE75:
 982              		.size	main, .-main
 983              		.section	.text.convertBackBinary,"ax",%progbits
 984              		.align	2
 985              		.global	convertBackBinary
 986              		.thumb
 987              		.thumb_func
 988              		.type	convertBackBinary, %function
 989              	convertBackBinary:
 990              	.LFB76:
 436:main.c        **** 
 437:main.c        ****   
 438:main.c        **** 
 439:main.c        **** int convertBackBinary(){
 991              		.loc 1 439 0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 16
 994              		@ frame_needed = 1, uses_anonymous_args = 0
 995              		@ link register save eliminated.
 996 0000 80B4     		push	{r7}
 997              		.cfi_def_cfa_offset 4
 998              		.cfi_offset 7, -4
 999 0002 85B0     		sub	sp, sp, #20
 1000              		.cfi_def_cfa_offset 24
 1001 0004 00AF     		add	r7, sp, #0
 1002              		.cfi_def_cfa_register 7
 440:main.c        **** 
 441:main.c        ****     int value1=0;
 1003              		.loc 1 441 0
 1004 0006 0023     		movs	r3, #0
 1005 0008 FB60     		str	r3, [r7, #12]
 442:main.c        ****     int Q1 = lightDetectedBack[1] ;
 1006              		.loc 1 442 0
 1007 000a 104B     		ldr	r3, .L44
 1008 000c 5B68     		ldr	r3, [r3, #4]
 1009 000e BB60     		str	r3, [r7, #8]
 443:main.c        ****     int Q2 = lightDetectedBack[2];
 1010              		.loc 1 443 0
 1011 0010 0E4B     		ldr	r3, .L44
 1012 0012 9B68     		ldr	r3, [r3, #8]
 1013 0014 7B60     		str	r3, [r7, #4]
 444:main.c        ****     int Q6 =lightDetectedBack[0];
 1014              		.loc 1 444 0
 1015 0016 0D4B     		ldr	r3, .L44
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 27


 1016 0018 1B68     		ldr	r3, [r3]
 1017 001a 3B60     		str	r3, [r7]
 445:main.c        ****     value1 =  value1 + lightDetectedBack[1] *2;
 1018              		.loc 1 445 0
 1019 001c 0B4B     		ldr	r3, .L44
 1020 001e 5B68     		ldr	r3, [r3, #4]
 1021 0020 5B00     		lsls	r3, r3, #1
 1022 0022 FA68     		ldr	r2, [r7, #12]
 1023 0024 1344     		add	r3, r3, r2
 1024 0026 FB60     		str	r3, [r7, #12]
 446:main.c        ****     value1 = value1 +  lightDetectedBack[2] *4;
 1025              		.loc 1 446 0
 1026 0028 084B     		ldr	r3, .L44
 1027 002a 9B68     		ldr	r3, [r3, #8]
 1028 002c 9B00     		lsls	r3, r3, #2
 1029 002e FA68     		ldr	r2, [r7, #12]
 1030 0030 1344     		add	r3, r3, r2
 1031 0032 FB60     		str	r3, [r7, #12]
 447:main.c        ****     value1 = value1 + lightDetectedBack[0] *1;
 1032              		.loc 1 447 0
 1033 0034 054B     		ldr	r3, .L44
 1034 0036 1B68     		ldr	r3, [r3]
 1035 0038 FA68     		ldr	r2, [r7, #12]
 1036 003a 1344     		add	r3, r3, r2
 1037 003c FB60     		str	r3, [r7, #12]
 448:main.c        **** 
 449:main.c        **** 
 450:main.c        **** 
 451:main.c        **** }
 1038              		.loc 1 451 0
 1039 003e 00BF     		nop
 1040 0040 1846     		mov	r0, r3
 1041 0042 1437     		adds	r7, r7, #20
 1042              		.cfi_def_cfa_offset 4
 1043 0044 BD46     		mov	sp, r7
 1044              		.cfi_def_cfa_register 13
 1045              		@ sp needed
 1046 0046 80BC     		pop	{r7}
 1047              		.cfi_restore 7
 1048              		.cfi_def_cfa_offset 0
 1049 0048 7047     		bx	lr
 1050              	.L45:
 1051 004a 00BF     		.align	2
 1052              	.L44:
 1053 004c 00000000 		.word	lightDetectedBack
 1054              		.cfi_endproc
 1055              	.LFE76:
 1056              		.size	convertBackBinary, .-convertBackBinary
 1057              		.section	.text.convertSensorBinary,"ax",%progbits
 1058              		.align	2
 1059              		.global	convertSensorBinary
 1060              		.thumb
 1061              		.thumb_func
 1062              		.type	convertSensorBinary, %function
 1063              	convertSensorBinary:
 1064              	.LFB77:
 452:main.c        **** 
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 28


 453:main.c        **** int convertSensorBinary()
 454:main.c        **** {
 1065              		.loc 1 454 0
 1066              		.cfi_startproc
 1067              		@ args = 0, pretend = 0, frame = 16
 1068              		@ frame_needed = 1, uses_anonymous_args = 0
 1069              		@ link register save eliminated.
 1070 0000 80B4     		push	{r7}
 1071              		.cfi_def_cfa_offset 4
 1072              		.cfi_offset 7, -4
 1073 0002 85B0     		sub	sp, sp, #20
 1074              		.cfi_def_cfa_offset 24
 1075 0004 00AF     		add	r7, sp, #0
 1076              		.cfi_def_cfa_register 7
 455:main.c        ****    int value=0;
 1077              		.loc 1 455 0
 1078 0006 0023     		movs	r3, #0
 1079 0008 FB60     		str	r3, [r7, #12]
 456:main.c        ****   int Q3 = lightDetectedFront[0];
 1080              		.loc 1 456 0
 1081 000a 104B     		ldr	r3, .L48
 1082 000c 1B68     		ldr	r3, [r3]
 1083 000e BB60     		str	r3, [r7, #8]
 457:main.c        ****   int Q4 = lightDetectedFront[1];
 1084              		.loc 1 457 0
 1085 0010 0E4B     		ldr	r3, .L48
 1086 0012 5B68     		ldr	r3, [r3, #4]
 1087 0014 7B60     		str	r3, [r7, #4]
 458:main.c        ****    int Q5 = lightDetectedFront[2];
 1088              		.loc 1 458 0
 1089 0016 0D4B     		ldr	r3, .L48
 1090 0018 9B68     		ldr	r3, [r3, #8]
 1091 001a 3B60     		str	r3, [r7]
 459:main.c        ****   value=value + lightDetectedFront[0]*4;
 1092              		.loc 1 459 0
 1093 001c 0B4B     		ldr	r3, .L48
 1094 001e 1B68     		ldr	r3, [r3]
 1095 0020 9B00     		lsls	r3, r3, #2
 1096 0022 FA68     		ldr	r2, [r7, #12]
 1097 0024 1344     		add	r3, r3, r2
 1098 0026 FB60     		str	r3, [r7, #12]
 460:main.c        ****   value=value + lightDetectedFront[1]*2;
 1099              		.loc 1 460 0
 1100 0028 084B     		ldr	r3, .L48
 1101 002a 5B68     		ldr	r3, [r3, #4]
 1102 002c 5B00     		lsls	r3, r3, #1
 1103 002e FA68     		ldr	r2, [r7, #12]
 1104 0030 1344     		add	r3, r3, r2
 1105 0032 FB60     		str	r3, [r7, #12]
 461:main.c        ****   value=value + lightDetectedFront[2]*1;
 1106              		.loc 1 461 0
 1107 0034 054B     		ldr	r3, .L48
 1108 0036 9B68     		ldr	r3, [r3, #8]
 1109 0038 FA68     		ldr	r2, [r7, #12]
 1110 003a 1344     		add	r3, r3, r2
 1111 003c FB60     		str	r3, [r7, #12]
 462:main.c        ****     return value;
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 29


 1112              		.loc 1 462 0
 1113 003e FB68     		ldr	r3, [r7, #12]
 463:main.c        **** }
 1114              		.loc 1 463 0
 1115 0040 1846     		mov	r0, r3
 1116 0042 1437     		adds	r7, r7, #20
 1117              		.cfi_def_cfa_offset 4
 1118 0044 BD46     		mov	sp, r7
 1119              		.cfi_def_cfa_register 13
 1120              		@ sp needed
 1121 0046 80BC     		pop	{r7}
 1122              		.cfi_restore 7
 1123              		.cfi_def_cfa_offset 0
 1124 0048 7047     		bx	lr
 1125              	.L49:
 1126 004a 00BF     		.align	2
 1127              	.L48:
 1128 004c 00000000 		.word	lightDetectedFront
 1129              		.cfi_endproc
 1130              	.LFE77:
 1131              		.size	convertSensorBinary, .-convertSensorBinary
 1132              		.section	.text.usbPutString,"ax",%progbits
 1133              		.align	2
 1134              		.global	usbPutString
 1135              		.thumb
 1136              		.thumb_func
 1137              		.type	usbPutString, %function
 1138              	usbPutString:
 1139              	.LFB78:
 464:main.c        **** //* ========================================
 465:main.c        **** void usbPutString(char *s)
 466:main.c        **** {
 1140              		.loc 1 466 0
 1141              		.cfi_startproc
 1142              		@ args = 0, pretend = 0, frame = 8
 1143              		@ frame_needed = 1, uses_anonymous_args = 0
 1144 0000 80B5     		push	{r7, lr}
 1145              		.cfi_def_cfa_offset 8
 1146              		.cfi_offset 7, -8
 1147              		.cfi_offset 14, -4
 1148 0002 82B0     		sub	sp, sp, #8
 1149              		.cfi_def_cfa_offset 16
 1150 0004 00AF     		add	r7, sp, #0
 1151              		.cfi_def_cfa_register 7
 1152 0006 7860     		str	r0, [r7, #4]
 467:main.c        **** // !! Assumes that *s is a string with allocated space >=64 chars     
 468:main.c        **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 469:main.c        **** //  length to 62 char (63rd char is a '!')
 470:main.c        **** 
 471:main.c        **** #ifdef USE_USB     
 472:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1153              		.loc 1 472 0
 1154 0008 00BF     		nop
 1155              	.L51:
 1156              		.loc 1 472 0 is_stmt 0 discriminator 1
 1157 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 1158 000e 0346     		mov	r3, r0
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 30


 1159 0010 002B     		cmp	r3, #0
 1160 0012 FAD0     		beq	.L51
 473:main.c        ****     s[63]='\0';
 1161              		.loc 1 473 0 is_stmt 1
 1162 0014 7B68     		ldr	r3, [r7, #4]
 1163 0016 3F33     		adds	r3, r3, #63
 1164 0018 0022     		movs	r2, #0
 1165 001a 1A70     		strb	r2, [r3]
 474:main.c        ****     s[62]='!';
 1166              		.loc 1 474 0
 1167 001c 7B68     		ldr	r3, [r7, #4]
 1168 001e 3E33     		adds	r3, r3, #62
 1169 0020 2122     		movs	r2, #33
 1170 0022 1A70     		strb	r2, [r3]
 475:main.c        ****     USBUART_PutData((uint8*)s,strlen(s));
 1171              		.loc 1 475 0
 1172 0024 7868     		ldr	r0, [r7, #4]
 1173 0026 FFF7FEFF 		bl	strlen
 1174 002a 0346     		mov	r3, r0
 1175 002c 9BB2     		uxth	r3, r3
 1176 002e 1946     		mov	r1, r3
 1177 0030 7868     		ldr	r0, [r7, #4]
 1178 0032 FFF7FEFF 		bl	USBUART_PutData
 476:main.c        **** #endif
 477:main.c        **** }
 1179              		.loc 1 477 0
 1180 0036 00BF     		nop
 1181 0038 0837     		adds	r7, r7, #8
 1182              		.cfi_def_cfa_offset 8
 1183 003a BD46     		mov	sp, r7
 1184              		.cfi_def_cfa_register 13
 1185              		@ sp needed
 1186 003c 80BD     		pop	{r7, pc}
 1187              		.cfi_endproc
 1188              	.LFE78:
 1189              		.size	usbPutString, .-usbPutString
 1190 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 1191              		.align	2
 1192              		.global	usbPutChar
 1193              		.thumb
 1194              		.thumb_func
 1195              		.type	usbPutChar, %function
 1196              	usbPutChar:
 1197              	.LFB79:
 478:main.c        **** //* ========================================
 479:main.c        **** void usbPutChar(char c)
 480:main.c        **** {
 1198              		.loc 1 480 0
 1199              		.cfi_startproc
 1200              		@ args = 0, pretend = 0, frame = 8
 1201              		@ frame_needed = 1, uses_anonymous_args = 0
 1202 0000 80B5     		push	{r7, lr}
 1203              		.cfi_def_cfa_offset 8
 1204              		.cfi_offset 7, -8
 1205              		.cfi_offset 14, -4
 1206 0002 82B0     		sub	sp, sp, #8
 1207              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 31


 1208 0004 00AF     		add	r7, sp, #0
 1209              		.cfi_def_cfa_register 7
 1210 0006 0346     		mov	r3, r0
 1211 0008 FB71     		strb	r3, [r7, #7]
 481:main.c        **** #ifdef USE_USB     
 482:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1212              		.loc 1 482 0
 1213 000a 00BF     		nop
 1214              	.L53:
 1215              		.loc 1 482 0 is_stmt 0 discriminator 1
 1216 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 1217 0010 0346     		mov	r3, r0
 1218 0012 002B     		cmp	r3, #0
 1219 0014 FAD0     		beq	.L53
 483:main.c        ****     USBUART_PutChar(c);
 1220              		.loc 1 483 0 is_stmt 1
 1221 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1222 0018 1846     		mov	r0, r3
 1223 001a FFF7FEFF 		bl	USBUART_PutChar
 484:main.c        **** #endif    
 485:main.c        **** }
 1224              		.loc 1 485 0
 1225 001e 00BF     		nop
 1226 0020 0837     		adds	r7, r7, #8
 1227              		.cfi_def_cfa_offset 8
 1228 0022 BD46     		mov	sp, r7
 1229              		.cfi_def_cfa_register 13
 1230              		@ sp needed
 1231 0024 80BD     		pop	{r7, pc}
 1232              		.cfi_endproc
 1233              	.LFE79:
 1234              		.size	usbPutChar, .-usbPutChar
 1235 0026 00BF     		.section	.text.handle_usb,"ax",%progbits
 1236              		.align	2
 1237              		.global	handle_usb
 1238              		.thumb
 1239              		.thumb_func
 1240              		.type	handle_usb, %function
 1241              	handle_usb:
 1242              	.LFB80:
 486:main.c        **** //* ========================================
 487:main.c        **** void handle_usb()
 488:main.c        **** {
 1243              		.loc 1 488 0
 1244              		.cfi_startproc
 1245              		@ args = 0, pretend = 0, frame = 8
 1246              		@ frame_needed = 1, uses_anonymous_args = 0
 1247 0000 80B5     		push	{r7, lr}
 1248              		.cfi_def_cfa_offset 8
 1249              		.cfi_offset 7, -8
 1250              		.cfi_offset 14, -4
 1251 0002 82B0     		sub	sp, sp, #8
 1252              		.cfi_def_cfa_offset 16
 1253 0004 00AF     		add	r7, sp, #0
 1254              		.cfi_def_cfa_register 7
 489:main.c        ****     // handles input at terminal, echos it back to the terminal
 490:main.c        ****     // turn echo OFF, key emulation: only CR
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 32


 491:main.c        ****     // entered string is made available in 'line' and 'flag_KB_string' is set
 492:main.c        ****     
 493:main.c        ****     static uint8 usbStarted = FALSE;
 494:main.c        ****     static uint16 usbBufCount = 0;
 495:main.c        ****     uint8 c = 0; 
 1255              		.loc 1 495 0
 1256 0006 0023     		movs	r3, #0
 1257 0008 FB71     		strb	r3, [r7, #7]
 496:main.c        ****     
 497:main.c        **** 
 498:main.c        ****     if (!usbStarted)
 1258              		.loc 1 498 0
 1259 000a 2B4B     		ldr	r3, .L64
 1260 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1261 000e 002B     		cmp	r3, #0
 1262 0010 0AD1     		bne	.L55
 499:main.c        ****     {
 500:main.c        ****         if (USBUART_GetConfiguration())
 1263              		.loc 1 500 0
 1264 0012 FFF7FEFF 		bl	USBUART_GetConfiguration
 1265 0016 0346     		mov	r3, r0
 1266 0018 002B     		cmp	r3, #0
 1267 001a 49D0     		beq	.L63
 501:main.c        ****         {
 502:main.c        ****             USBUART_CDC_Init();
 1268              		.loc 1 502 0
 1269 001c FFF7FEFF 		bl	USBUART_CDC_Init
 503:main.c        ****             usbStarted = TRUE;
 1270              		.loc 1 503 0
 1271 0020 254B     		ldr	r3, .L64
 1272 0022 0122     		movs	r2, #1
 1273 0024 1A70     		strb	r2, [r3]
 504:main.c        ****         }
 505:main.c        ****     }
 506:main.c        ****     else
 507:main.c        ****     {
 508:main.c        ****         if (USBUART_DataIsReady() != 0)
 509:main.c        ****         {  
 510:main.c        ****             c = USBUART_GetChar();
 511:main.c        **** 
 512:main.c        ****             if ((c == 13) || (c == 10))
 513:main.c        ****             {
 514:main.c        **** //                if (usbBufCount > 0)
 515:main.c        ****                 {
 516:main.c        ****                     entry[usbBufCount]= '\0';
 517:main.c        ****                     strcpy(line,entry);
 518:main.c        ****                     usbBufCount = 0;
 519:main.c        ****                     flag_KB_string = 1;
 520:main.c        ****                 }
 521:main.c        ****             }
 522:main.c        ****             else 
 523:main.c        ****             {
 524:main.c        ****                 if (((c == CHAR_BACKSP) || (c == CHAR_DEL) ) && (usbBufCount > 0) )
 525:main.c        ****                     usbBufCount--;
 526:main.c        ****                 else
 527:main.c        ****                 {
 528:main.c        ****                     if (usbBufCount > (BUF_SIZE-2) ) // one less else strtok triggers a crash
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 33


 529:main.c        ****                     {
 530:main.c        ****                        USBUART_PutChar('!');        
 531:main.c        ****                     }
 532:main.c        ****                     else
 533:main.c        ****                         entry[usbBufCount++] = c;  
 534:main.c        ****                 }  
 535:main.c        ****             }
 536:main.c        ****         }
 537:main.c        ****     }    
 538:main.c        **** }
 1274              		.loc 1 538 0
 1275 0026 43E0     		b	.L63
 1276              	.L55:
 508:main.c        ****         {  
 1277              		.loc 1 508 0
 1278 0028 FFF7FEFF 		bl	USBUART_DataIsReady
 1279 002c 0346     		mov	r3, r0
 1280 002e 002B     		cmp	r3, #0
 1281 0030 3ED0     		beq	.L63
 510:main.c        **** 
 1282              		.loc 1 510 0
 1283 0032 FFF7FEFF 		bl	USBUART_GetChar
 1284 0036 0346     		mov	r3, r0
 1285 0038 FB71     		strb	r3, [r7, #7]
 512:main.c        ****             {
 1286              		.loc 1 512 0
 1287 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1288 003c 0D2B     		cmp	r3, #13
 1289 003e 02D0     		beq	.L58
 512:main.c        ****             {
 1290              		.loc 1 512 0 is_stmt 0 discriminator 1
 1291 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1292 0042 0A2B     		cmp	r3, #10
 1293 0044 10D1     		bne	.L59
 1294              	.L58:
 516:main.c        ****                     strcpy(line,entry);
 1295              		.loc 1 516 0 is_stmt 1
 1296 0046 1D4B     		ldr	r3, .L64+4
 1297 0048 1B88     		ldrh	r3, [r3]
 1298 004a 1A46     		mov	r2, r3
 1299 004c 1C4B     		ldr	r3, .L64+8
 1300 004e 0021     		movs	r1, #0
 1301 0050 9954     		strb	r1, [r3, r2]
 517:main.c        ****                     usbBufCount = 0;
 1302              		.loc 1 517 0
 1303 0052 1B49     		ldr	r1, .L64+8
 1304 0054 1B48     		ldr	r0, .L64+12
 1305 0056 FFF7FEFF 		bl	strcpy
 518:main.c        ****                     flag_KB_string = 1;
 1306              		.loc 1 518 0
 1307 005a 184B     		ldr	r3, .L64+4
 1308 005c 0022     		movs	r2, #0
 1309 005e 1A80     		strh	r2, [r3]	@ movhi
 519:main.c        ****                 }
 1310              		.loc 1 519 0
 1311 0060 194B     		ldr	r3, .L64+16
 1312 0062 0122     		movs	r2, #1
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 34


 1313 0064 1A70     		strb	r2, [r3]
 1314 0066 23E0     		b	.L57
 1315              	.L59:
 524:main.c        ****                     usbBufCount--;
 1316              		.loc 1 524 0
 1317 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1318 006a 082B     		cmp	r3, #8
 1319 006c 02D0     		beq	.L60
 524:main.c        ****                     usbBufCount--;
 1320              		.loc 1 524 0 is_stmt 0 discriminator 2
 1321 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1322 0070 7F2B     		cmp	r3, #127
 1323 0072 0AD1     		bne	.L61
 1324              	.L60:
 524:main.c        ****                     usbBufCount--;
 1325              		.loc 1 524 0 discriminator 3
 1326 0074 114B     		ldr	r3, .L64+4
 1327 0076 1B88     		ldrh	r3, [r3]
 1328 0078 002B     		cmp	r3, #0
 1329 007a 06D0     		beq	.L61
 525:main.c        ****                 else
 1330              		.loc 1 525 0 is_stmt 1
 1331 007c 0F4B     		ldr	r3, .L64+4
 1332 007e 1B88     		ldrh	r3, [r3]
 1333 0080 013B     		subs	r3, r3, #1
 1334 0082 9AB2     		uxth	r2, r3
 1335 0084 0D4B     		ldr	r3, .L64+4
 1336 0086 1A80     		strh	r2, [r3]	@ movhi
 1337 0088 12E0     		b	.L57
 1338              	.L61:
 528:main.c        ****                     {
 1339              		.loc 1 528 0
 1340 008a 0C4B     		ldr	r3, .L64+4
 1341 008c 1B88     		ldrh	r3, [r3]
 1342 008e 3E2B     		cmp	r3, #62
 1343 0090 03D9     		bls	.L62
 530:main.c        ****                     }
 1344              		.loc 1 530 0
 1345 0092 2120     		movs	r0, #33
 1346 0094 FFF7FEFF 		bl	USBUART_PutChar
 1347              		.loc 1 538 0
 1348 0098 0AE0     		b	.L63
 1349              	.L62:
 533:main.c        ****                 }  
 1350              		.loc 1 533 0
 1351 009a 084B     		ldr	r3, .L64+4
 1352 009c 1B88     		ldrh	r3, [r3]
 1353 009e 5A1C     		adds	r2, r3, #1
 1354 00a0 91B2     		uxth	r1, r2
 1355 00a2 064A     		ldr	r2, .L64+4
 1356 00a4 1180     		strh	r1, [r2]	@ movhi
 1357 00a6 1946     		mov	r1, r3
 1358 00a8 054A     		ldr	r2, .L64+8
 1359 00aa FB79     		ldrb	r3, [r7, #7]
 1360 00ac 5354     		strb	r3, [r2, r1]
 1361              		.loc 1 538 0
 1362 00ae FFE7     		b	.L63
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 35


 1363              	.L57:
 1364              	.L63:
 1365 00b0 00BF     		nop
 1366 00b2 0837     		adds	r7, r7, #8
 1367              		.cfi_def_cfa_offset 8
 1368 00b4 BD46     		mov	sp, r7
 1369              		.cfi_def_cfa_register 13
 1370              		@ sp needed
 1371 00b6 80BD     		pop	{r7, pc}
 1372              	.L65:
 1373              		.align	2
 1374              	.L64:
 1375 00b8 45000000 		.word	usbStarted.8813
 1376 00bc 46000000 		.word	usbBufCount.8814
 1377 00c0 00000000 		.word	entry
 1378 00c4 00000000 		.word	line
 1379 00c8 00000000 		.word	flag_KB_string
 1380              		.cfi_endproc
 1381              	.LFE80:
 1382              		.size	handle_usb, .-handle_usb
 1383              		.bss
 1384              	usbStarted.8813:
 1385 0045 00       		.space	1
 1386              		.align	1
 1387              	usbBufCount.8814:
 1388 0046 0000     		.space	2
 1389              		.text
 1390              	.Letext0:
 1391              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1392              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1393              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1394              		.file 5 "vars.h"
 1395              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1396              		.section	.debug_info,"",%progbits
 1397              	.Ldebug_info0:
 1398 0000 2F070000 		.4byte	0x72f
 1399 0004 0400     		.2byte	0x4
 1400 0006 00000000 		.4byte	.Ldebug_abbrev0
 1401 000a 04       		.byte	0x4
 1402 000b 01       		.uleb128 0x1
 1403 000c B5000000 		.4byte	.LASF101
 1404 0010 0C       		.byte	0xc
 1405 0011 B3040000 		.4byte	.LASF102
 1406 0015 AF010000 		.4byte	.LASF103
 1407 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1408 001d 00000000 		.4byte	0
 1409 0021 00000000 		.4byte	.Ldebug_line0
 1410 0025 02       		.uleb128 0x2
 1411 0026 01       		.byte	0x1
 1412 0027 06       		.byte	0x6
 1413 0028 AE030000 		.4byte	.LASF0
 1414 002c 02       		.uleb128 0x2
 1415 002d 01       		.byte	0x1
 1416 002e 08       		.byte	0x8
 1417 002f 75030000 		.4byte	.LASF1
 1418 0033 02       		.uleb128 0x2
 1419 0034 02       		.byte	0x2
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 36


 1420 0035 05       		.byte	0x5
 1421 0036 8B000000 		.4byte	.LASF2
 1422 003a 02       		.uleb128 0x2
 1423 003b 02       		.byte	0x2
 1424 003c 07       		.byte	0x7
 1425 003d 5F040000 		.4byte	.LASF3
 1426 0041 03       		.uleb128 0x3
 1427 0042 F2040000 		.4byte	.LASF12
 1428 0046 02       		.byte	0x2
 1429 0047 3F       		.byte	0x3f
 1430 0048 4C000000 		.4byte	0x4c
 1431 004c 02       		.uleb128 0x2
 1432 004d 04       		.byte	0x4
 1433 004e 05       		.byte	0x5
 1434 004f D2020000 		.4byte	.LASF4
 1435 0053 02       		.uleb128 0x2
 1436 0054 04       		.byte	0x4
 1437 0055 07       		.byte	0x7
 1438 0056 BA040000 		.4byte	.LASF5
 1439 005a 02       		.uleb128 0x2
 1440 005b 08       		.byte	0x8
 1441 005c 05       		.byte	0x5
 1442 005d 86020000 		.4byte	.LASF6
 1443 0061 02       		.uleb128 0x2
 1444 0062 08       		.byte	0x8
 1445 0063 07       		.byte	0x7
 1446 0064 BA030000 		.4byte	.LASF7
 1447 0068 04       		.uleb128 0x4
 1448 0069 04       		.byte	0x4
 1449 006a 05       		.byte	0x5
 1450 006b 696E7400 		.ascii	"int\000"
 1451 006f 02       		.uleb128 0x2
 1452 0070 04       		.byte	0x4
 1453 0071 07       		.byte	0x7
 1454 0072 DD030000 		.4byte	.LASF8
 1455 0076 02       		.uleb128 0x2
 1456 0077 08       		.byte	0x8
 1457 0078 04       		.byte	0x4
 1458 0079 62030000 		.4byte	.LASF9
 1459 007d 02       		.uleb128 0x2
 1460 007e 04       		.byte	0x4
 1461 007f 07       		.byte	0x7
 1462 0080 A2000000 		.4byte	.LASF10
 1463 0084 05       		.uleb128 0x5
 1464 0085 04       		.byte	0x4
 1465 0086 8A000000 		.4byte	0x8a
 1466 008a 02       		.uleb128 0x2
 1467 008b 01       		.byte	0x1
 1468 008c 08       		.byte	0x8
 1469 008d 32040000 		.4byte	.LASF11
 1470 0091 03       		.uleb128 0x3
 1471 0092 42040000 		.4byte	.LASF13
 1472 0096 03       		.byte	0x3
 1473 0097 2C       		.byte	0x2c
 1474 0098 41000000 		.4byte	0x41
 1475 009c 02       		.uleb128 0x2
 1476 009d 08       		.byte	0x8
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 37


 1477 009e 04       		.byte	0x4
 1478 009f 29000000 		.4byte	.LASF14
 1479 00a3 02       		.uleb128 0x2
 1480 00a4 04       		.byte	0x4
 1481 00a5 04       		.byte	0x4
 1482 00a6 66020000 		.4byte	.LASF15
 1483 00aa 06       		.uleb128 0x6
 1484 00ab A9010000 		.4byte	.LASF16
 1485 00af 04       		.byte	0x4
 1486 00b0 E401     		.2byte	0x1e4
 1487 00b2 2C000000 		.4byte	0x2c
 1488 00b6 06       		.uleb128 0x6
 1489 00b7 8C010000 		.4byte	.LASF17
 1490 00bb 04       		.byte	0x4
 1491 00bc E501     		.2byte	0x1e5
 1492 00be 3A000000 		.4byte	0x3a
 1493 00c2 06       		.uleb128 0x6
 1494 00c3 A1020000 		.4byte	.LASF18
 1495 00c7 04       		.byte	0x4
 1496 00c8 E701     		.2byte	0x1e7
 1497 00ca 25000000 		.4byte	0x25
 1498 00ce 06       		.uleb128 0x6
 1499 00cf A3010000 		.4byte	.LASF19
 1500 00d3 04       		.byte	0x4
 1501 00d4 E801     		.2byte	0x1e8
 1502 00d6 33000000 		.4byte	0x33
 1503 00da 07       		.uleb128 0x7
 1504 00db 99010000 		.4byte	.LASF104
 1505 00df 20       		.byte	0x20
 1506 00e0 05       		.byte	0x5
 1507 00e1 29       		.byte	0x29
 1508 00e2 B3010000 		.4byte	0x1b3
 1509 00e6 08       		.uleb128 0x8
 1510 00e7 C1050000 		.4byte	.LASF20
 1511 00eb 05       		.byte	0x5
 1512 00ec 2A       		.byte	0x2a
 1513 00ed C2000000 		.4byte	0xc2
 1514 00f1 00       		.byte	0
 1515 00f2 08       		.uleb128 0x8
 1516 00f3 93010000 		.4byte	.LASF21
 1517 00f7 05       		.byte	0x5
 1518 00f8 2B       		.byte	0x2b
 1519 00f9 AA000000 		.4byte	0xaa
 1520 00fd 01       		.byte	0x1
 1521 00fe 08       		.uleb128 0x8
 1522 00ff 37040000 		.4byte	.LASF22
 1523 0103 05       		.byte	0x5
 1524 0104 2C       		.byte	0x2c
 1525 0105 CE000000 		.4byte	0xce
 1526 0109 02       		.byte	0x2
 1527 010a 08       		.uleb128 0x8
 1528 010b 73050000 		.4byte	.LASF23
 1529 010f 05       		.byte	0x5
 1530 0110 2D       		.byte	0x2d
 1531 0111 CE000000 		.4byte	0xce
 1532 0115 04       		.byte	0x4
 1533 0116 08       		.uleb128 0x8
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 38


 1534 0117 C6050000 		.4byte	.LASF24
 1535 011b 05       		.byte	0x5
 1536 011c 2E       		.byte	0x2e
 1537 011d CE000000 		.4byte	0xce
 1538 0121 06       		.byte	0x6
 1539 0122 08       		.uleb128 0x8
 1540 0123 CA020000 		.4byte	.LASF25
 1541 0127 05       		.byte	0x5
 1542 0128 2F       		.byte	0x2f
 1543 0129 CE000000 		.4byte	0xce
 1544 012d 08       		.byte	0x8
 1545 012e 08       		.uleb128 0x8
 1546 012f 25050000 		.4byte	.LASF26
 1547 0133 05       		.byte	0x5
 1548 0134 30       		.byte	0x30
 1549 0135 CE000000 		.4byte	0xce
 1550 0139 0A       		.byte	0xa
 1551 013a 08       		.uleb128 0x8
 1552 013b 96030000 		.4byte	.LASF27
 1553 013f 05       		.byte	0x5
 1554 0140 31       		.byte	0x31
 1555 0141 CE000000 		.4byte	0xce
 1556 0145 0C       		.byte	0xc
 1557 0146 08       		.uleb128 0x8
 1558 0147 BD020000 		.4byte	.LASF28
 1559 014b 05       		.byte	0x5
 1560 014c 32       		.byte	0x32
 1561 014d CE000000 		.4byte	0xce
 1562 0151 0E       		.byte	0xe
 1563 0152 08       		.uleb128 0x8
 1564 0153 0E040000 		.4byte	.LASF29
 1565 0157 05       		.byte	0x5
 1566 0158 33       		.byte	0x33
 1567 0159 CE000000 		.4byte	0xce
 1568 015d 10       		.byte	0x10
 1569 015e 08       		.uleb128 0x8
 1570 015f 4A040000 		.4byte	.LASF30
 1571 0163 05       		.byte	0x5
 1572 0164 34       		.byte	0x34
 1573 0165 CE000000 		.4byte	0xce
 1574 0169 12       		.byte	0x12
 1575 016a 08       		.uleb128 0x8
 1576 016b 72040000 		.4byte	.LASF31
 1577 016f 05       		.byte	0x5
 1578 0170 35       		.byte	0x35
 1579 0171 CE000000 		.4byte	0xce
 1580 0175 14       		.byte	0x14
 1581 0176 08       		.uleb128 0x8
 1582 0177 9E050000 		.4byte	.LASF32
 1583 017b 05       		.byte	0x5
 1584 017c 36       		.byte	0x36
 1585 017d CE000000 		.4byte	0xce
 1586 0181 16       		.byte	0x16
 1587 0182 08       		.uleb128 0x8
 1588 0183 83000000 		.4byte	.LASF33
 1589 0187 05       		.byte	0x5
 1590 0188 37       		.byte	0x37
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 39


 1591 0189 CE000000 		.4byte	0xce
 1592 018d 18       		.byte	0x18
 1593 018e 08       		.uleb128 0x8
 1594 018f B5020000 		.4byte	.LASF34
 1595 0193 05       		.byte	0x5
 1596 0194 38       		.byte	0x38
 1597 0195 CE000000 		.4byte	0xce
 1598 0199 1A       		.byte	0x1a
 1599 019a 08       		.uleb128 0x8
 1600 019b 05040000 		.4byte	.LASF35
 1601 019f 05       		.byte	0x5
 1602 01a0 39       		.byte	0x39
 1603 01a1 CE000000 		.4byte	0xce
 1604 01a5 1C       		.byte	0x1c
 1605 01a6 08       		.uleb128 0x8
 1606 01a7 52040000 		.4byte	.LASF36
 1607 01ab 05       		.byte	0x5
 1608 01ac 3A       		.byte	0x3a
 1609 01ad CE000000 		.4byte	0xce
 1610 01b1 1E       		.byte	0x1e
 1611 01b2 00       		.byte	0
 1612 01b3 09       		.uleb128 0x9
 1613 01b4 0A050000 		.4byte	.LASF39
 1614 01b8 01       		.byte	0x1
 1615 01b9 34       		.byte	0x34
 1616 01ba 00000000 		.4byte	.LFB64
 1617 01be 2E000000 		.4byte	.LFE64-.LFB64
 1618 01c2 01       		.uleb128 0x1
 1619 01c3 9C       		.byte	0x9c
 1620 01c4 D5010000 		.4byte	0x1d5
 1621 01c8 0A       		.uleb128 0xa
 1622 01c9 7800     		.ascii	"x\000"
 1623 01cb 01       		.byte	0x1
 1624 01cc 34       		.byte	0x34
 1625 01cd 68000000 		.4byte	0x68
 1626 01d1 02       		.uleb128 0x2
 1627 01d2 91       		.byte	0x91
 1628 01d3 74       		.sleb128 -12
 1629 01d4 00       		.byte	0
 1630 01d5 0B       		.uleb128 0xb
 1631 01d6 67000000 		.4byte	.LASF37
 1632 01da 01       		.byte	0x1
 1633 01db 3A       		.byte	0x3a
 1634 01dc 00000000 		.4byte	.LFB65
 1635 01e0 14000000 		.4byte	.LFE65-.LFB65
 1636 01e4 01       		.uleb128 0x1
 1637 01e5 9C       		.byte	0x9c
 1638 01e6 0B       		.uleb128 0xb
 1639 01e7 00000000 		.4byte	.LASF38
 1640 01eb 01       		.byte	0x1
 1641 01ec 40       		.byte	0x40
 1642 01ed 00000000 		.4byte	.LFB66
 1643 01f1 14000000 		.4byte	.LFE66-.LFB66
 1644 01f5 01       		.uleb128 0x1
 1645 01f6 9C       		.byte	0x9c
 1646 01f7 09       		.uleb128 0x9
 1647 01f8 FC040000 		.4byte	.LASF40
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 40


 1648 01fc 01       		.byte	0x1
 1649 01fd 45       		.byte	0x45
 1650 01fe 00000000 		.4byte	.LFB67
 1651 0202 20000000 		.4byte	.LFE67-.LFB67
 1652 0206 01       		.uleb128 0x1
 1653 0207 9C       		.byte	0x9c
 1654 0208 19020000 		.4byte	0x219
 1655 020c 0A       		.uleb128 0xa
 1656 020d 7800     		.ascii	"x\000"
 1657 020f 01       		.byte	0x1
 1658 0210 45       		.byte	0x45
 1659 0211 AA000000 		.4byte	0xaa
 1660 0215 02       		.uleb128 0x2
 1661 0216 91       		.byte	0x91
 1662 0217 77       		.sleb128 -9
 1663 0218 00       		.byte	0
 1664 0219 09       		.uleb128 0x9
 1665 021a AB050000 		.4byte	.LASF41
 1666 021e 01       		.byte	0x1
 1667 021f 50       		.byte	0x50
 1668 0220 00000000 		.4byte	.LFB68
 1669 0224 20000000 		.4byte	.LFE68-.LFB68
 1670 0228 01       		.uleb128 0x1
 1671 0229 9C       		.byte	0x9c
 1672 022a 3B020000 		.4byte	0x23b
 1673 022e 0A       		.uleb128 0xa
 1674 022f 7800     		.ascii	"x\000"
 1675 0231 01       		.byte	0x1
 1676 0232 50       		.byte	0x50
 1677 0233 68000000 		.4byte	0x68
 1678 0237 02       		.uleb128 0x2
 1679 0238 91       		.byte	0x91
 1680 0239 74       		.sleb128 -12
 1681 023a 00       		.byte	0
 1682 023b 09       		.uleb128 0x9
 1683 023c D1030000 		.4byte	.LASF42
 1684 0240 01       		.byte	0x1
 1685 0241 59       		.byte	0x59
 1686 0242 00000000 		.4byte	.LFB69
 1687 0246 2A000000 		.4byte	.LFE69-.LFB69
 1688 024a 01       		.uleb128 0x1
 1689 024b 9C       		.byte	0x9c
 1690 024c 5D020000 		.4byte	0x25d
 1691 0250 0A       		.uleb128 0xa
 1692 0251 7800     		.ascii	"x\000"
 1693 0253 01       		.byte	0x1
 1694 0254 59       		.byte	0x59
 1695 0255 AA000000 		.4byte	0xaa
 1696 0259 02       		.uleb128 0x2
 1697 025a 91       		.byte	0x91
 1698 025b 77       		.sleb128 -9
 1699 025c 00       		.byte	0
 1700 025d 09       		.uleb128 0x9
 1701 025e 50000000 		.4byte	.LASF43
 1702 0262 01       		.byte	0x1
 1703 0263 6C       		.byte	0x6c
 1704 0264 00000000 		.4byte	.LFB70
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 41


 1705 0268 E0000000 		.4byte	.LFE70-.LFB70
 1706 026c 01       		.uleb128 0x1
 1707 026d 9C       		.byte	0x9c
 1708 026e C7020000 		.4byte	0x2c7
 1709 0272 0C       		.uleb128 0xc
 1710 0273 61010000 		.4byte	.LASF44
 1711 0277 01       		.byte	0x1
 1712 0278 74       		.byte	0x74
 1713 0279 CE000000 		.4byte	0xce
 1714 027d 02       		.uleb128 0x2
 1715 027e 91       		.byte	0x91
 1716 027f 76       		.sleb128 -10
 1717 0280 0C       		.uleb128 0xc
 1718 0281 69010000 		.4byte	.LASF45
 1719 0285 01       		.byte	0x1
 1720 0286 75       		.byte	0x75
 1721 0287 CE000000 		.4byte	0xce
 1722 028b 02       		.uleb128 0x2
 1723 028c 91       		.byte	0x91
 1724 028d 74       		.sleb128 -12
 1725 028e 0C       		.uleb128 0xc
 1726 028f 71010000 		.4byte	.LASF46
 1727 0293 01       		.byte	0x1
 1728 0294 76       		.byte	0x76
 1729 0295 CE000000 		.4byte	0xce
 1730 0299 02       		.uleb128 0x2
 1731 029a 91       		.byte	0x91
 1732 029b 72       		.sleb128 -14
 1733 029c 0C       		.uleb128 0xc
 1734 029d 51010000 		.4byte	.LASF47
 1735 02a1 01       		.byte	0x1
 1736 02a2 78       		.byte	0x78
 1737 02a3 CE000000 		.4byte	0xce
 1738 02a7 02       		.uleb128 0x2
 1739 02a8 91       		.byte	0x91
 1740 02a9 70       		.sleb128 -16
 1741 02aa 0C       		.uleb128 0xc
 1742 02ab 59010000 		.4byte	.LASF48
 1743 02af 01       		.byte	0x1
 1744 02b0 79       		.byte	0x79
 1745 02b1 CE000000 		.4byte	0xce
 1746 02b5 02       		.uleb128 0x2
 1747 02b6 91       		.byte	0x91
 1748 02b7 6E       		.sleb128 -18
 1749 02b8 0C       		.uleb128 0xc
 1750 02b9 79010000 		.4byte	.LASF49
 1751 02bd 01       		.byte	0x1
 1752 02be 7A       		.byte	0x7a
 1753 02bf CE000000 		.4byte	0xce
 1754 02c3 02       		.uleb128 0x2
 1755 02c4 91       		.byte	0x91
 1756 02c5 6C       		.sleb128 -20
 1757 02c6 00       		.byte	0
 1758 02c7 0D       		.uleb128 0xd
 1759 02c8 6C020000 		.4byte	.LASF57
 1760 02cc 01       		.byte	0x1
 1761 02cd A7       		.byte	0xa7
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 42


 1762 02ce 00000000 		.4byte	.LFB71
 1763 02d2 0C000000 		.4byte	.LFE71-.LFB71
 1764 02d6 01       		.uleb128 0x1
 1765 02d7 9C       		.byte	0x9c
 1766 02d8 0E       		.uleb128 0xe
 1767 02d9 1A050000 		.4byte	.LASF69
 1768 02dd 01       		.byte	0x1
 1769 02de BA       		.byte	0xba
 1770 02df 00000000 		.4byte	.LFB72
 1771 02e3 C0000000 		.4byte	.LFE72-.LFB72
 1772 02e7 01       		.uleb128 0x1
 1773 02e8 9C       		.byte	0x9c
 1774 02e9 46030000 		.4byte	0x346
 1775 02ed 0C       		.uleb128 0xc
 1776 02ee DB020000 		.4byte	.LASF50
 1777 02f2 01       		.byte	0x1
 1778 02f3 BB       		.byte	0xbb
 1779 02f4 CE000000 		.4byte	0xce
 1780 02f8 02       		.uleb128 0x2
 1781 02f9 91       		.byte	0x91
 1782 02fa 76       		.sleb128 -10
 1783 02fb 0C       		.uleb128 0xc
 1784 02fc F0020000 		.4byte	.LASF51
 1785 0300 01       		.byte	0x1
 1786 0301 BC       		.byte	0xbc
 1787 0302 CE000000 		.4byte	0xce
 1788 0306 02       		.uleb128 0x2
 1789 0307 91       		.byte	0x91
 1790 0308 74       		.sleb128 -12
 1791 0309 0C       		.uleb128 0xc
 1792 030a 4D030000 		.4byte	.LASF52
 1793 030e 01       		.byte	0x1
 1794 030f BD       		.byte	0xbd
 1795 0310 CE000000 		.4byte	0xce
 1796 0314 02       		.uleb128 0x2
 1797 0315 91       		.byte	0x91
 1798 0316 72       		.sleb128 -14
 1799 0317 0C       		.uleb128 0xc
 1800 0318 3E030000 		.4byte	.LASF53
 1801 031c 01       		.byte	0x1
 1802 031d BE       		.byte	0xbe
 1803 031e CE000000 		.4byte	0xce
 1804 0322 02       		.uleb128 0x2
 1805 0323 91       		.byte	0x91
 1806 0324 70       		.sleb128 -16
 1807 0325 0C       		.uleb128 0xc
 1808 0326 05030000 		.4byte	.LASF54
 1809 032a 01       		.byte	0x1
 1810 032b BF       		.byte	0xbf
 1811 032c 46030000 		.4byte	0x346
 1812 0330 04       		.uleb128 0x4
 1813 0331 91       		.byte	0x91
 1814 0332 E0B17F   		.sleb128 -10016
 1815 0335 0C       		.uleb128 0xc
 1816 0336 91050000 		.4byte	.LASF55
 1817 033a 01       		.byte	0x1
 1818 033b C1       		.byte	0xc1
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 43


 1819 033c 46030000 		.4byte	0x346
 1820 0340 04       		.uleb128 0x4
 1821 0341 91       		.byte	0x91
 1822 0342 D0E37E   		.sleb128 -20016
 1823 0345 00       		.byte	0
 1824 0346 0F       		.uleb128 0xf
 1825 0347 8A000000 		.4byte	0x8a
 1826 034b 57030000 		.4byte	0x357
 1827 034f 10       		.uleb128 0x10
 1828 0350 7D000000 		.4byte	0x7d
 1829 0354 0F27     		.2byte	0x270f
 1830 0356 00       		.byte	0
 1831 0357 0B       		.uleb128 0xb
 1832 0358 48010000 		.4byte	.LASF56
 1833 035c 01       		.byte	0x1
 1834 035d C9       		.byte	0xc9
 1835 035e 00000000 		.4byte	.LFB73
 1836 0362 2E000000 		.4byte	.LFE73-.LFB73
 1837 0366 01       		.uleb128 0x1
 1838 0367 9C       		.byte	0x9c
 1839 0368 11       		.uleb128 0x11
 1840 0369 0A000000 		.4byte	.LASF58
 1841 036d 01       		.byte	0x1
 1842 036e E1       		.byte	0xe1
 1843 036f 00000000 		.4byte	.LFB74
 1844 0373 0C000000 		.4byte	.LFE74-.LFB74
 1845 0377 01       		.uleb128 0x1
 1846 0378 9C       		.byte	0x9c
 1847 0379 12       		.uleb128 0x12
 1848 037a 43010000 		.4byte	.LASF59
 1849 037e 01       		.byte	0x1
 1850 037f EE       		.byte	0xee
 1851 0380 68000000 		.4byte	0x68
 1852 0384 00000000 		.4byte	.LFB75
 1853 0388 84010000 		.4byte	.LFE75-.LFB75
 1854 038c 01       		.uleb128 0x1
 1855 038d 9C       		.byte	0x9c
 1856 038e CA030000 		.4byte	0x3ca
 1857 0392 13       		.uleb128 0x13
 1858 0393 38050000 		.4byte	.LASF60
 1859 0397 01       		.byte	0x1
 1860 0398 2A01     		.2byte	0x12a
 1861 039a 68000000 		.4byte	0x68
 1862 039e 02       		.uleb128 0x2
 1863 039f 91       		.byte	0x91
 1864 03a0 74       		.sleb128 -12
 1865 03a1 14       		.uleb128 0x14
 1866 03a2 56000000 		.4byte	.LBB2
 1867 03a6 F4000000 		.4byte	.LBE2-.LBB2
 1868 03aa 13       		.uleb128 0x13
 1869 03ab 16040000 		.4byte	.LASF61
 1870 03af 01       		.byte	0x1
 1871 03b0 3301     		.2byte	0x133
 1872 03b2 68000000 		.4byte	0x68
 1873 03b6 02       		.uleb128 0x2
 1874 03b7 91       		.byte	0x91
 1875 03b8 70       		.sleb128 -16
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 44


 1876 03b9 13       		.uleb128 0x13
 1877 03ba 7B040000 		.4byte	.LASF62
 1878 03be 01       		.byte	0x1
 1879 03bf 3401     		.2byte	0x134
 1880 03c1 68000000 		.4byte	0x68
 1881 03c5 02       		.uleb128 0x2
 1882 03c6 91       		.byte	0x91
 1883 03c7 6C       		.sleb128 -20
 1884 03c8 00       		.byte	0
 1885 03c9 00       		.byte	0
 1886 03ca 15       		.uleb128 0x15
 1887 03cb 20040000 		.4byte	.LASF63
 1888 03cf 01       		.byte	0x1
 1889 03d0 B701     		.2byte	0x1b7
 1890 03d2 68000000 		.4byte	0x68
 1891 03d6 00000000 		.4byte	.LFB76
 1892 03da 50000000 		.4byte	.LFE76-.LFB76
 1893 03de 01       		.uleb128 0x1
 1894 03df 9C       		.byte	0x9c
 1895 03e0 1E040000 		.4byte	0x41e
 1896 03e4 13       		.uleb128 0x13
 1897 03e5 6E030000 		.4byte	.LASF64
 1898 03e9 01       		.byte	0x1
 1899 03ea B901     		.2byte	0x1b9
 1900 03ec 68000000 		.4byte	0x68
 1901 03f0 02       		.uleb128 0x2
 1902 03f1 91       		.byte	0x91
 1903 03f2 74       		.sleb128 -12
 1904 03f3 16       		.uleb128 0x16
 1905 03f4 513100   		.ascii	"Q1\000"
 1906 03f7 01       		.byte	0x1
 1907 03f8 BA01     		.2byte	0x1ba
 1908 03fa 68000000 		.4byte	0x68
 1909 03fe 02       		.uleb128 0x2
 1910 03ff 91       		.byte	0x91
 1911 0400 70       		.sleb128 -16
 1912 0401 16       		.uleb128 0x16
 1913 0402 513200   		.ascii	"Q2\000"
 1914 0405 01       		.byte	0x1
 1915 0406 BB01     		.2byte	0x1bb
 1916 0408 68000000 		.4byte	0x68
 1917 040c 02       		.uleb128 0x2
 1918 040d 91       		.byte	0x91
 1919 040e 6C       		.sleb128 -20
 1920 040f 16       		.uleb128 0x16
 1921 0410 513600   		.ascii	"Q6\000"
 1922 0413 01       		.byte	0x1
 1923 0414 BC01     		.2byte	0x1bc
 1924 0416 68000000 		.4byte	0x68
 1925 041a 02       		.uleb128 0x2
 1926 041b 91       		.byte	0x91
 1927 041c 68       		.sleb128 -24
 1928 041d 00       		.byte	0
 1929 041e 15       		.uleb128 0x15
 1930 041f 9F040000 		.4byte	.LASF65
 1931 0423 01       		.byte	0x1
 1932 0424 C501     		.2byte	0x1c5
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 45


 1933 0426 68000000 		.4byte	0x68
 1934 042a 00000000 		.4byte	.LFB77
 1935 042e 50000000 		.4byte	.LFE77-.LFB77
 1936 0432 01       		.uleb128 0x1
 1937 0433 9C       		.byte	0x9c
 1938 0434 72040000 		.4byte	0x472
 1939 0438 13       		.uleb128 0x13
 1940 0439 8B050000 		.4byte	.LASF66
 1941 043d 01       		.byte	0x1
 1942 043e C701     		.2byte	0x1c7
 1943 0440 68000000 		.4byte	0x68
 1944 0444 02       		.uleb128 0x2
 1945 0445 91       		.byte	0x91
 1946 0446 74       		.sleb128 -12
 1947 0447 16       		.uleb128 0x16
 1948 0448 513300   		.ascii	"Q3\000"
 1949 044b 01       		.byte	0x1
 1950 044c C801     		.2byte	0x1c8
 1951 044e 68000000 		.4byte	0x68
 1952 0452 02       		.uleb128 0x2
 1953 0453 91       		.byte	0x91
 1954 0454 70       		.sleb128 -16
 1955 0455 16       		.uleb128 0x16
 1956 0456 513400   		.ascii	"Q4\000"
 1957 0459 01       		.byte	0x1
 1958 045a C901     		.2byte	0x1c9
 1959 045c 68000000 		.4byte	0x68
 1960 0460 02       		.uleb128 0x2
 1961 0461 91       		.byte	0x91
 1962 0462 6C       		.sleb128 -20
 1963 0463 16       		.uleb128 0x16
 1964 0464 513500   		.ascii	"Q5\000"
 1965 0467 01       		.byte	0x1
 1966 0468 CA01     		.2byte	0x1ca
 1967 046a 68000000 		.4byte	0x68
 1968 046e 02       		.uleb128 0x2
 1969 046f 91       		.byte	0x91
 1970 0470 68       		.sleb128 -24
 1971 0471 00       		.byte	0
 1972 0472 17       		.uleb128 0x17
 1973 0473 94020000 		.4byte	.LASF67
 1974 0477 01       		.byte	0x1
 1975 0478 D101     		.2byte	0x1d1
 1976 047a 00000000 		.4byte	.LFB78
 1977 047e 3E000000 		.4byte	.LFE78-.LFB78
 1978 0482 01       		.uleb128 0x1
 1979 0483 9C       		.byte	0x9c
 1980 0484 96040000 		.4byte	0x496
 1981 0488 18       		.uleb128 0x18
 1982 0489 7300     		.ascii	"s\000"
 1983 048b 01       		.byte	0x1
 1984 048c D101     		.2byte	0x1d1
 1985 048e 84000000 		.4byte	0x84
 1986 0492 02       		.uleb128 0x2
 1987 0493 91       		.byte	0x91
 1988 0494 74       		.sleb128 -12
 1989 0495 00       		.byte	0
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 46


 1990 0496 17       		.uleb128 0x17
 1991 0497 3C000000 		.4byte	.LASF68
 1992 049b 01       		.byte	0x1
 1993 049c DF01     		.2byte	0x1df
 1994 049e 00000000 		.4byte	.LFB79
 1995 04a2 26000000 		.4byte	.LFE79-.LFB79
 1996 04a6 01       		.uleb128 0x1
 1997 04a7 9C       		.byte	0x9c
 1998 04a8 BA040000 		.4byte	0x4ba
 1999 04ac 18       		.uleb128 0x18
 2000 04ad 6300     		.ascii	"c\000"
 2001 04af 01       		.byte	0x1
 2002 04b0 DF01     		.2byte	0x1df
 2003 04b2 8A000000 		.4byte	0x8a
 2004 04b6 02       		.uleb128 0x2
 2005 04b7 91       		.byte	0x91
 2006 04b8 77       		.sleb128 -9
 2007 04b9 00       		.byte	0
 2008 04ba 19       		.uleb128 0x19
 2009 04bb 4C050000 		.4byte	.LASF70
 2010 04bf 01       		.byte	0x1
 2011 04c0 E701     		.2byte	0x1e7
 2012 04c2 00000000 		.4byte	.LFB80
 2013 04c6 CC000000 		.4byte	.LFE80-.LFB80
 2014 04ca 01       		.uleb128 0x1
 2015 04cb 9C       		.byte	0x9c
 2016 04cc 02050000 		.4byte	0x502
 2017 04d0 13       		.uleb128 0x13
 2018 04d1 CC040000 		.4byte	.LASF71
 2019 04d5 01       		.byte	0x1
 2020 04d6 ED01     		.2byte	0x1ed
 2021 04d8 AA000000 		.4byte	0xaa
 2022 04dc 05       		.uleb128 0x5
 2023 04dd 03       		.byte	0x3
 2024 04de 45000000 		.4byte	usbStarted.8813
 2025 04e2 13       		.uleb128 0x13
 2026 04e3 F9030000 		.4byte	.LASF72
 2027 04e7 01       		.byte	0x1
 2028 04e8 EE01     		.2byte	0x1ee
 2029 04ea B6000000 		.4byte	0xb6
 2030 04ee 05       		.uleb128 0x5
 2031 04ef 03       		.byte	0x3
 2032 04f0 46000000 		.4byte	usbBufCount.8814
 2033 04f4 16       		.uleb128 0x16
 2034 04f5 6300     		.ascii	"c\000"
 2035 04f7 01       		.byte	0x1
 2036 04f8 EF01     		.2byte	0x1ef
 2037 04fa AA000000 		.4byte	0xaa
 2038 04fe 02       		.uleb128 0x2
 2039 04ff 91       		.byte	0x91
 2040 0500 77       		.sleb128 -9
 2041 0501 00       		.byte	0
 2042 0502 0C       		.uleb128 0xc
 2043 0503 E0040000 		.4byte	.LASF73
 2044 0507 01       		.byte	0x1
 2045 0508 A6       		.byte	0xa6
 2046 0509 13050000 		.4byte	0x513
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 47


 2047 050d 05       		.uleb128 0x5
 2048 050e 03       		.byte	0x3
 2049 050f 44000000 		.4byte	count
 2050 0513 1A       		.uleb128 0x1a
 2051 0514 C2000000 		.4byte	0xc2
 2052 0518 1B       		.uleb128 0x1b
 2053 0519 7E050000 		.4byte	.LASF74
 2054 051d 06       		.byte	0x6
 2055 051e 1207     		.2byte	0x712
 2056 0520 24050000 		.4byte	0x524
 2057 0524 1A       		.uleb128 0x1a
 2058 0525 91000000 		.4byte	0x91
 2059 0529 1C       		.uleb128 0x1c
 2060 052a 747300   		.ascii	"ts\000"
 2061 052d 05       		.byte	0x5
 2062 052e 10       		.byte	0x10
 2063 052f AA000000 		.4byte	0xaa
 2064 0533 05       		.uleb128 0x5
 2065 0534 03       		.byte	0x3
 2066 0535 00000000 		.4byte	ts
 2067 0539 1D       		.uleb128 0x1d
 2068 053a 22000000 		.4byte	.LASF75
 2069 053e 05       		.byte	0x5
 2070 053f 11       		.byte	0x11
 2071 0540 B6000000 		.4byte	0xb6
 2072 0544 05       		.uleb128 0x5
 2073 0545 03       		.byte	0x3
 2074 0546 00000000 		.4byte	ts_enc
 2075 054a 1D       		.uleb128 0x1d
 2076 054b 42050000 		.4byte	.LASF76
 2077 054f 05       		.byte	0x5
 2078 0550 12       		.byte	0x12
 2079 0551 B6000000 		.4byte	0xb6
 2080 0555 05       		.uleb128 0x5
 2081 0556 03       		.byte	0x3
 2082 0557 00000000 		.4byte	ts_update
 2083 055b 1D       		.uleb128 0x1d
 2084 055c D7040000 		.4byte	.LASF77
 2085 0560 05       		.byte	0x5
 2086 0561 13       		.byte	0x13
 2087 0562 B6000000 		.4byte	0xb6
 2088 0566 05       		.uleb128 0x5
 2089 0567 03       		.byte	0x3
 2090 0568 00000000 		.4byte	ts_speed
 2091 056c 1D       		.uleb128 0x1d
 2092 056d 2D050000 		.4byte	.LASF78
 2093 0571 05       		.byte	0x5
 2094 0572 14       		.byte	0x14
 2095 0573 B6000000 		.4byte	0xb6
 2096 0577 05       		.uleb128 0x5
 2097 0578 03       		.byte	0x3
 2098 0579 00000000 		.4byte	ts_display
 2099 057d 1D       		.uleb128 0x1d
 2100 057e E6040000 		.4byte	.LASF79
 2101 0582 05       		.byte	0x5
 2102 0583 16       		.byte	0x16
 2103 0584 AA000000 		.4byte	0xaa
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 48


 2104 0588 05       		.uleb128 0x5
 2105 0589 03       		.byte	0x3
 2106 058a 00000000 		.4byte	flag_ts_enc
 2107 058e 1D       		.uleb128 0x1d
 2108 058f A6020000 		.4byte	.LASF80
 2109 0593 05       		.byte	0x5
 2110 0594 17       		.byte	0x17
 2111 0595 AA000000 		.4byte	0xaa
 2112 0599 05       		.uleb128 0x5
 2113 059a 03       		.byte	0x3
 2114 059b 00000000 		.4byte	flag_ts_update
 2115 059f 1D       		.uleb128 0x1d
 2116 05a0 91040000 		.4byte	.LASF81
 2117 05a4 05       		.byte	0x5
 2118 05a5 18       		.byte	0x18
 2119 05a6 AA000000 		.4byte	0xaa
 2120 05aa 05       		.uleb128 0x5
 2121 05ab 03       		.byte	0x3
 2122 05ac 00000000 		.4byte	flag_ts_speed
 2123 05b0 1D       		.uleb128 0x1d
 2124 05b1 26030000 		.4byte	.LASF82
 2125 05b5 05       		.byte	0x5
 2126 05b6 19       		.byte	0x19
 2127 05b7 AA000000 		.4byte	0xaa
 2128 05bb 05       		.uleb128 0x5
 2129 05bc 03       		.byte	0x3
 2130 05bd 00000000 		.4byte	flag_ts_display
 2131 05c1 1D       		.uleb128 0x1d
 2132 05c2 36030000 		.4byte	.LASF83
 2133 05c6 05       		.byte	0x5
 2134 05c7 1C       		.byte	0x1c
 2135 05c8 AA000000 		.4byte	0xaa
 2136 05cc 05       		.uleb128 0x5
 2137 05cd 03       		.byte	0x3
 2138 05ce 00000000 		.4byte	flag_rx
 2139 05d2 1D       		.uleb128 0x1d
 2140 05d3 30000000 		.4byte	.LASF84
 2141 05d7 05       		.byte	0x5
 2142 05d8 1D       		.byte	0x1d
 2143 05d9 AA000000 		.4byte	0xaa
 2144 05dd 05       		.uleb128 0x5
 2145 05de 03       		.byte	0x3
 2146 05df 00000000 		.4byte	flag_packet
 2147 05e3 1D       		.uleb128 0x1d
 2148 05e4 EA030000 		.4byte	.LASF85
 2149 05e8 05       		.byte	0x5
 2150 05e9 1E       		.byte	0x1e
 2151 05ea AA000000 		.4byte	0xaa
 2152 05ee 05       		.uleb128 0x5
 2153 05ef 03       		.byte	0x3
 2154 05f0 00000000 		.4byte	flag_KB_string
 2155 05f4 1D       		.uleb128 0x1d
 2156 05f5 9F030000 		.4byte	.LASF86
 2157 05f9 05       		.byte	0x5
 2158 05fa 20       		.byte	0x20
 2159 05fb AA000000 		.4byte	0xaa
 2160 05ff 05       		.uleb128 0x5
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 49


 2161 0600 03       		.byte	0x3
 2162 0601 00000000 		.4byte	dataready_flag
 2163 0605 1D       		.uleb128 0x1d
 2164 0606 57050000 		.4byte	.LASF87
 2165 060a 05       		.byte	0x5
 2166 060b 22       		.byte	0x22
 2167 060c AA000000 		.4byte	0xaa
 2168 0610 05       		.uleb128 0x5
 2169 0611 03       		.byte	0x3
 2170 0612 00000000 		.4byte	flag_rf_transmission_active
 2171 0616 0F       		.uleb128 0xf
 2172 0617 8A000000 		.4byte	0x8a
 2173 061b 26060000 		.4byte	0x626
 2174 061f 1E       		.uleb128 0x1e
 2175 0620 7D000000 		.4byte	0x7d
 2176 0624 3F       		.byte	0x3f
 2177 0625 00       		.byte	0
 2178 0626 1D       		.uleb128 0x1d
 2179 0627 83040000 		.4byte	.LASF88
 2180 062b 05       		.byte	0x5
 2181 062c 25       		.byte	0x25
 2182 062d 16060000 		.4byte	0x616
 2183 0631 05       		.uleb128 0x5
 2184 0632 03       		.byte	0x3
 2185 0633 00000000 		.4byte	displaystring
 2186 0637 1D       		.uleb128 0x1d
 2187 0638 21030000 		.4byte	.LASF89
 2188 063c 05       		.byte	0x5
 2189 063d 26       		.byte	0x26
 2190 063e 16060000 		.4byte	0x616
 2191 0642 05       		.uleb128 0x5
 2192 0643 03       		.byte	0x3
 2193 0644 00000000 		.4byte	line
 2194 0648 1D       		.uleb128 0x1d
 2195 0649 5C030000 		.4byte	.LASF90
 2196 064d 05       		.byte	0x5
 2197 064e 26       		.byte	0x26
 2198 064f 16060000 		.4byte	0x616
 2199 0653 05       		.uleb128 0x5
 2200 0654 03       		.byte	0x3
 2201 0655 00000000 		.4byte	entry
 2202 0659 0F       		.uleb128 0xf
 2203 065a AA000000 		.4byte	0xaa
 2204 065e 69060000 		.4byte	0x669
 2205 0662 1E       		.uleb128 0x1e
 2206 0663 7D000000 		.4byte	0x7d
 2207 0667 3F       		.byte	0x3f
 2208 0668 00       		.byte	0
 2209 0669 1D       		.uleb128 0x1d
 2210 066a AB000000 		.4byte	.LASF91
 2211 066e 05       		.byte	0x5
 2212 066f 27       		.byte	0x27
 2213 0670 59060000 		.4byte	0x659
 2214 0674 05       		.uleb128 0x5
 2215 0675 03       		.byte	0x3
 2216 0676 00000000 		.4byte	usbBuffer
 2217 067a 1D       		.uleb128 0x1d
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 50


 2218 067b 95000000 		.4byte	.LASF92
 2219 067f 05       		.byte	0x5
 2220 0680 3C       		.byte	0x3c
 2221 0681 DA000000 		.4byte	0xda
 2222 0685 05       		.uleb128 0x5
 2223 0686 03       		.byte	0x3
 2224 0687 00000000 		.4byte	system_state
 2225 068b 1D       		.uleb128 0x1d
 2226 068c 48020000 		.4byte	.LASF93
 2227 0690 01       		.byte	0x1
 2228 0691 64       		.byte	0x64
 2229 0692 68000000 		.4byte	0x68
 2230 0696 05       		.uleb128 0x5
 2231 0697 03       		.byte	0x3
 2232 0698 00000000 		.4byte	changeMotor
 2233 069c 1D       		.uleb128 0x1d
 2234 069d 78000000 		.4byte	.LASF94
 2235 06a1 01       		.byte	0x1
 2236 06a2 65       		.byte	0x65
 2237 06a3 68000000 		.4byte	0x68
 2238 06a7 05       		.uleb128 0x5
 2239 06a8 03       		.byte	0x3
 2240 06a9 00000000 		.4byte	checkLight
 2241 06ad 1D       		.uleb128 0x1d
 2242 06ae 81010000 		.4byte	.LASF95
 2243 06b2 01       		.byte	0x1
 2244 06b3 66       		.byte	0x66
 2245 06b4 68000000 		.4byte	0x68
 2246 06b8 05       		.uleb128 0x5
 2247 06b9 03       		.byte	0x3
 2248 06ba 00000000 		.4byte	lightState
 2249 06be 0F       		.uleb128 0xf
 2250 06bf CE060000 		.4byte	0x6ce
 2251 06c3 CE060000 		.4byte	0x6ce
 2252 06c7 1E       		.uleb128 0x1e
 2253 06c8 7D000000 		.4byte	0x7d
 2254 06cc 02       		.byte	0x2
 2255 06cd 00       		.byte	0
 2256 06ce 1A       		.uleb128 0x1a
 2257 06cf 68000000 		.4byte	0x68
 2258 06d3 1D       		.uleb128 0x1d
 2259 06d4 83030000 		.4byte	.LASF96
 2260 06d8 01       		.byte	0x1
 2261 06d9 67       		.byte	0x67
 2262 06da E4060000 		.4byte	0x6e4
 2263 06de 05       		.uleb128 0x5
 2264 06df 03       		.byte	0x3
 2265 06e0 00000000 		.4byte	lightDetectedFront
 2266 06e4 1A       		.uleb128 0x1a
 2267 06e5 BE060000 		.4byte	0x6be
 2268 06e9 1D       		.uleb128 0x1d
 2269 06ea 54020000 		.4byte	.LASF97
 2270 06ee 01       		.byte	0x1
 2271 06ef 68       		.byte	0x68
 2272 06f0 FA060000 		.4byte	0x6fa
 2273 06f4 05       		.uleb128 0x5
 2274 06f5 03       		.byte	0x3
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 51


 2275 06f6 00000000 		.4byte	lightDetectedBack
 2276 06fa 1A       		.uleb128 0x1a
 2277 06fb BE060000 		.4byte	0x6be
 2278 06ff 1D       		.uleb128 0x1d
 2279 0700 47000000 		.4byte	.LASF98
 2280 0704 01       		.byte	0x1
 2281 0705 69       		.byte	0x69
 2282 0706 CE060000 		.4byte	0x6ce
 2283 070a 05       		.uleb128 0x5
 2284 070b 03       		.byte	0x3
 2285 070c 00000000 		.4byte	counteoc
 2286 0710 1D       		.uleb128 0x1d
 2287 0711 12030000 		.4byte	.LASF99
 2288 0715 01       		.byte	0x1
 2289 0716 6A       		.byte	0x6a
 2290 0717 CE060000 		.4byte	0x6ce
 2291 071b 05       		.uleb128 0x5
 2292 071c 03       		.byte	0x3
 2293 071d 00000000 		.4byte	processSensors
 2294 0721 1D       		.uleb128 0x1d
 2295 0722 BA050000 		.4byte	.LASF100
 2296 0726 01       		.byte	0x1
 2297 0727 6B       		.byte	0x6b
 2298 0728 CE060000 		.4byte	0x6ce
 2299 072c 05       		.uleb128 0x5
 2300 072d 03       		.byte	0x3
 2301 072e 00000000 		.4byte	middle
 2302 0732 00       		.byte	0
 2303              		.section	.debug_abbrev,"",%progbits
 2304              	.Ldebug_abbrev0:
 2305 0000 01       		.uleb128 0x1
 2306 0001 11       		.uleb128 0x11
 2307 0002 01       		.byte	0x1
 2308 0003 25       		.uleb128 0x25
 2309 0004 0E       		.uleb128 0xe
 2310 0005 13       		.uleb128 0x13
 2311 0006 0B       		.uleb128 0xb
 2312 0007 03       		.uleb128 0x3
 2313 0008 0E       		.uleb128 0xe
 2314 0009 1B       		.uleb128 0x1b
 2315 000a 0E       		.uleb128 0xe
 2316 000b 55       		.uleb128 0x55
 2317 000c 17       		.uleb128 0x17
 2318 000d 11       		.uleb128 0x11
 2319 000e 01       		.uleb128 0x1
 2320 000f 10       		.uleb128 0x10
 2321 0010 17       		.uleb128 0x17
 2322 0011 00       		.byte	0
 2323 0012 00       		.byte	0
 2324 0013 02       		.uleb128 0x2
 2325 0014 24       		.uleb128 0x24
 2326 0015 00       		.byte	0
 2327 0016 0B       		.uleb128 0xb
 2328 0017 0B       		.uleb128 0xb
 2329 0018 3E       		.uleb128 0x3e
 2330 0019 0B       		.uleb128 0xb
 2331 001a 03       		.uleb128 0x3
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 52


 2332 001b 0E       		.uleb128 0xe
 2333 001c 00       		.byte	0
 2334 001d 00       		.byte	0
 2335 001e 03       		.uleb128 0x3
 2336 001f 16       		.uleb128 0x16
 2337 0020 00       		.byte	0
 2338 0021 03       		.uleb128 0x3
 2339 0022 0E       		.uleb128 0xe
 2340 0023 3A       		.uleb128 0x3a
 2341 0024 0B       		.uleb128 0xb
 2342 0025 3B       		.uleb128 0x3b
 2343 0026 0B       		.uleb128 0xb
 2344 0027 49       		.uleb128 0x49
 2345 0028 13       		.uleb128 0x13
 2346 0029 00       		.byte	0
 2347 002a 00       		.byte	0
 2348 002b 04       		.uleb128 0x4
 2349 002c 24       		.uleb128 0x24
 2350 002d 00       		.byte	0
 2351 002e 0B       		.uleb128 0xb
 2352 002f 0B       		.uleb128 0xb
 2353 0030 3E       		.uleb128 0x3e
 2354 0031 0B       		.uleb128 0xb
 2355 0032 03       		.uleb128 0x3
 2356 0033 08       		.uleb128 0x8
 2357 0034 00       		.byte	0
 2358 0035 00       		.byte	0
 2359 0036 05       		.uleb128 0x5
 2360 0037 0F       		.uleb128 0xf
 2361 0038 00       		.byte	0
 2362 0039 0B       		.uleb128 0xb
 2363 003a 0B       		.uleb128 0xb
 2364 003b 49       		.uleb128 0x49
 2365 003c 13       		.uleb128 0x13
 2366 003d 00       		.byte	0
 2367 003e 00       		.byte	0
 2368 003f 06       		.uleb128 0x6
 2369 0040 16       		.uleb128 0x16
 2370 0041 00       		.byte	0
 2371 0042 03       		.uleb128 0x3
 2372 0043 0E       		.uleb128 0xe
 2373 0044 3A       		.uleb128 0x3a
 2374 0045 0B       		.uleb128 0xb
 2375 0046 3B       		.uleb128 0x3b
 2376 0047 05       		.uleb128 0x5
 2377 0048 49       		.uleb128 0x49
 2378 0049 13       		.uleb128 0x13
 2379 004a 00       		.byte	0
 2380 004b 00       		.byte	0
 2381 004c 07       		.uleb128 0x7
 2382 004d 13       		.uleb128 0x13
 2383 004e 01       		.byte	0x1
 2384 004f 03       		.uleb128 0x3
 2385 0050 0E       		.uleb128 0xe
 2386 0051 0B       		.uleb128 0xb
 2387 0052 0B       		.uleb128 0xb
 2388 0053 3A       		.uleb128 0x3a
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 53


 2389 0054 0B       		.uleb128 0xb
 2390 0055 3B       		.uleb128 0x3b
 2391 0056 0B       		.uleb128 0xb
 2392 0057 01       		.uleb128 0x1
 2393 0058 13       		.uleb128 0x13
 2394 0059 00       		.byte	0
 2395 005a 00       		.byte	0
 2396 005b 08       		.uleb128 0x8
 2397 005c 0D       		.uleb128 0xd
 2398 005d 00       		.byte	0
 2399 005e 03       		.uleb128 0x3
 2400 005f 0E       		.uleb128 0xe
 2401 0060 3A       		.uleb128 0x3a
 2402 0061 0B       		.uleb128 0xb
 2403 0062 3B       		.uleb128 0x3b
 2404 0063 0B       		.uleb128 0xb
 2405 0064 49       		.uleb128 0x49
 2406 0065 13       		.uleb128 0x13
 2407 0066 38       		.uleb128 0x38
 2408 0067 0B       		.uleb128 0xb
 2409 0068 00       		.byte	0
 2410 0069 00       		.byte	0
 2411 006a 09       		.uleb128 0x9
 2412 006b 2E       		.uleb128 0x2e
 2413 006c 01       		.byte	0x1
 2414 006d 3F       		.uleb128 0x3f
 2415 006e 19       		.uleb128 0x19
 2416 006f 03       		.uleb128 0x3
 2417 0070 0E       		.uleb128 0xe
 2418 0071 3A       		.uleb128 0x3a
 2419 0072 0B       		.uleb128 0xb
 2420 0073 3B       		.uleb128 0x3b
 2421 0074 0B       		.uleb128 0xb
 2422 0075 27       		.uleb128 0x27
 2423 0076 19       		.uleb128 0x19
 2424 0077 11       		.uleb128 0x11
 2425 0078 01       		.uleb128 0x1
 2426 0079 12       		.uleb128 0x12
 2427 007a 06       		.uleb128 0x6
 2428 007b 40       		.uleb128 0x40
 2429 007c 18       		.uleb128 0x18
 2430 007d 9642     		.uleb128 0x2116
 2431 007f 19       		.uleb128 0x19
 2432 0080 01       		.uleb128 0x1
 2433 0081 13       		.uleb128 0x13
 2434 0082 00       		.byte	0
 2435 0083 00       		.byte	0
 2436 0084 0A       		.uleb128 0xa
 2437 0085 05       		.uleb128 0x5
 2438 0086 00       		.byte	0
 2439 0087 03       		.uleb128 0x3
 2440 0088 08       		.uleb128 0x8
 2441 0089 3A       		.uleb128 0x3a
 2442 008a 0B       		.uleb128 0xb
 2443 008b 3B       		.uleb128 0x3b
 2444 008c 0B       		.uleb128 0xb
 2445 008d 49       		.uleb128 0x49
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 54


 2446 008e 13       		.uleb128 0x13
 2447 008f 02       		.uleb128 0x2
 2448 0090 18       		.uleb128 0x18
 2449 0091 00       		.byte	0
 2450 0092 00       		.byte	0
 2451 0093 0B       		.uleb128 0xb
 2452 0094 2E       		.uleb128 0x2e
 2453 0095 00       		.byte	0
 2454 0096 3F       		.uleb128 0x3f
 2455 0097 19       		.uleb128 0x19
 2456 0098 03       		.uleb128 0x3
 2457 0099 0E       		.uleb128 0xe
 2458 009a 3A       		.uleb128 0x3a
 2459 009b 0B       		.uleb128 0xb
 2460 009c 3B       		.uleb128 0x3b
 2461 009d 0B       		.uleb128 0xb
 2462 009e 11       		.uleb128 0x11
 2463 009f 01       		.uleb128 0x1
 2464 00a0 12       		.uleb128 0x12
 2465 00a1 06       		.uleb128 0x6
 2466 00a2 40       		.uleb128 0x40
 2467 00a3 18       		.uleb128 0x18
 2468 00a4 9642     		.uleb128 0x2116
 2469 00a6 19       		.uleb128 0x19
 2470 00a7 00       		.byte	0
 2471 00a8 00       		.byte	0
 2472 00a9 0C       		.uleb128 0xc
 2473 00aa 34       		.uleb128 0x34
 2474 00ab 00       		.byte	0
 2475 00ac 03       		.uleb128 0x3
 2476 00ad 0E       		.uleb128 0xe
 2477 00ae 3A       		.uleb128 0x3a
 2478 00af 0B       		.uleb128 0xb
 2479 00b0 3B       		.uleb128 0x3b
 2480 00b1 0B       		.uleb128 0xb
 2481 00b2 49       		.uleb128 0x49
 2482 00b3 13       		.uleb128 0x13
 2483 00b4 02       		.uleb128 0x2
 2484 00b5 18       		.uleb128 0x18
 2485 00b6 00       		.byte	0
 2486 00b7 00       		.byte	0
 2487 00b8 0D       		.uleb128 0xd
 2488 00b9 2E       		.uleb128 0x2e
 2489 00ba 00       		.byte	0
 2490 00bb 3F       		.uleb128 0x3f
 2491 00bc 19       		.uleb128 0x19
 2492 00bd 03       		.uleb128 0x3
 2493 00be 0E       		.uleb128 0xe
 2494 00bf 3A       		.uleb128 0x3a
 2495 00c0 0B       		.uleb128 0xb
 2496 00c1 3B       		.uleb128 0x3b
 2497 00c2 0B       		.uleb128 0xb
 2498 00c3 27       		.uleb128 0x27
 2499 00c4 19       		.uleb128 0x19
 2500 00c5 11       		.uleb128 0x11
 2501 00c6 01       		.uleb128 0x1
 2502 00c7 12       		.uleb128 0x12
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 55


 2503 00c8 06       		.uleb128 0x6
 2504 00c9 40       		.uleb128 0x40
 2505 00ca 18       		.uleb128 0x18
 2506 00cb 9742     		.uleb128 0x2117
 2507 00cd 19       		.uleb128 0x19
 2508 00ce 00       		.byte	0
 2509 00cf 00       		.byte	0
 2510 00d0 0E       		.uleb128 0xe
 2511 00d1 2E       		.uleb128 0x2e
 2512 00d2 01       		.byte	0x1
 2513 00d3 3F       		.uleb128 0x3f
 2514 00d4 19       		.uleb128 0x19
 2515 00d5 03       		.uleb128 0x3
 2516 00d6 0E       		.uleb128 0xe
 2517 00d7 3A       		.uleb128 0x3a
 2518 00d8 0B       		.uleb128 0xb
 2519 00d9 3B       		.uleb128 0x3b
 2520 00da 0B       		.uleb128 0xb
 2521 00db 11       		.uleb128 0x11
 2522 00dc 01       		.uleb128 0x1
 2523 00dd 12       		.uleb128 0x12
 2524 00de 06       		.uleb128 0x6
 2525 00df 40       		.uleb128 0x40
 2526 00e0 18       		.uleb128 0x18
 2527 00e1 9642     		.uleb128 0x2116
 2528 00e3 19       		.uleb128 0x19
 2529 00e4 01       		.uleb128 0x1
 2530 00e5 13       		.uleb128 0x13
 2531 00e6 00       		.byte	0
 2532 00e7 00       		.byte	0
 2533 00e8 0F       		.uleb128 0xf
 2534 00e9 01       		.uleb128 0x1
 2535 00ea 01       		.byte	0x1
 2536 00eb 49       		.uleb128 0x49
 2537 00ec 13       		.uleb128 0x13
 2538 00ed 01       		.uleb128 0x1
 2539 00ee 13       		.uleb128 0x13
 2540 00ef 00       		.byte	0
 2541 00f0 00       		.byte	0
 2542 00f1 10       		.uleb128 0x10
 2543 00f2 21       		.uleb128 0x21
 2544 00f3 00       		.byte	0
 2545 00f4 49       		.uleb128 0x49
 2546 00f5 13       		.uleb128 0x13
 2547 00f6 2F       		.uleb128 0x2f
 2548 00f7 05       		.uleb128 0x5
 2549 00f8 00       		.byte	0
 2550 00f9 00       		.byte	0
 2551 00fa 11       		.uleb128 0x11
 2552 00fb 2E       		.uleb128 0x2e
 2553 00fc 00       		.byte	0
 2554 00fd 3F       		.uleb128 0x3f
 2555 00fe 19       		.uleb128 0x19
 2556 00ff 03       		.uleb128 0x3
 2557 0100 0E       		.uleb128 0xe
 2558 0101 3A       		.uleb128 0x3a
 2559 0102 0B       		.uleb128 0xb
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 56


 2560 0103 3B       		.uleb128 0x3b
 2561 0104 0B       		.uleb128 0xb
 2562 0105 27       		.uleb128 0x27
 2563 0106 19       		.uleb128 0x19
 2564 0107 11       		.uleb128 0x11
 2565 0108 01       		.uleb128 0x1
 2566 0109 12       		.uleb128 0x12
 2567 010a 06       		.uleb128 0x6
 2568 010b 40       		.uleb128 0x40
 2569 010c 18       		.uleb128 0x18
 2570 010d 9642     		.uleb128 0x2116
 2571 010f 19       		.uleb128 0x19
 2572 0110 00       		.byte	0
 2573 0111 00       		.byte	0
 2574 0112 12       		.uleb128 0x12
 2575 0113 2E       		.uleb128 0x2e
 2576 0114 01       		.byte	0x1
 2577 0115 3F       		.uleb128 0x3f
 2578 0116 19       		.uleb128 0x19
 2579 0117 03       		.uleb128 0x3
 2580 0118 0E       		.uleb128 0xe
 2581 0119 3A       		.uleb128 0x3a
 2582 011a 0B       		.uleb128 0xb
 2583 011b 3B       		.uleb128 0x3b
 2584 011c 0B       		.uleb128 0xb
 2585 011d 49       		.uleb128 0x49
 2586 011e 13       		.uleb128 0x13
 2587 011f 11       		.uleb128 0x11
 2588 0120 01       		.uleb128 0x1
 2589 0121 12       		.uleb128 0x12
 2590 0122 06       		.uleb128 0x6
 2591 0123 40       		.uleb128 0x40
 2592 0124 18       		.uleb128 0x18
 2593 0125 9642     		.uleb128 0x2116
 2594 0127 19       		.uleb128 0x19
 2595 0128 01       		.uleb128 0x1
 2596 0129 13       		.uleb128 0x13
 2597 012a 00       		.byte	0
 2598 012b 00       		.byte	0
 2599 012c 13       		.uleb128 0x13
 2600 012d 34       		.uleb128 0x34
 2601 012e 00       		.byte	0
 2602 012f 03       		.uleb128 0x3
 2603 0130 0E       		.uleb128 0xe
 2604 0131 3A       		.uleb128 0x3a
 2605 0132 0B       		.uleb128 0xb
 2606 0133 3B       		.uleb128 0x3b
 2607 0134 05       		.uleb128 0x5
 2608 0135 49       		.uleb128 0x49
 2609 0136 13       		.uleb128 0x13
 2610 0137 02       		.uleb128 0x2
 2611 0138 18       		.uleb128 0x18
 2612 0139 00       		.byte	0
 2613 013a 00       		.byte	0
 2614 013b 14       		.uleb128 0x14
 2615 013c 0B       		.uleb128 0xb
 2616 013d 01       		.byte	0x1
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 57


 2617 013e 11       		.uleb128 0x11
 2618 013f 01       		.uleb128 0x1
 2619 0140 12       		.uleb128 0x12
 2620 0141 06       		.uleb128 0x6
 2621 0142 00       		.byte	0
 2622 0143 00       		.byte	0
 2623 0144 15       		.uleb128 0x15
 2624 0145 2E       		.uleb128 0x2e
 2625 0146 01       		.byte	0x1
 2626 0147 3F       		.uleb128 0x3f
 2627 0148 19       		.uleb128 0x19
 2628 0149 03       		.uleb128 0x3
 2629 014a 0E       		.uleb128 0xe
 2630 014b 3A       		.uleb128 0x3a
 2631 014c 0B       		.uleb128 0xb
 2632 014d 3B       		.uleb128 0x3b
 2633 014e 05       		.uleb128 0x5
 2634 014f 49       		.uleb128 0x49
 2635 0150 13       		.uleb128 0x13
 2636 0151 11       		.uleb128 0x11
 2637 0152 01       		.uleb128 0x1
 2638 0153 12       		.uleb128 0x12
 2639 0154 06       		.uleb128 0x6
 2640 0155 40       		.uleb128 0x40
 2641 0156 18       		.uleb128 0x18
 2642 0157 9742     		.uleb128 0x2117
 2643 0159 19       		.uleb128 0x19
 2644 015a 01       		.uleb128 0x1
 2645 015b 13       		.uleb128 0x13
 2646 015c 00       		.byte	0
 2647 015d 00       		.byte	0
 2648 015e 16       		.uleb128 0x16
 2649 015f 34       		.uleb128 0x34
 2650 0160 00       		.byte	0
 2651 0161 03       		.uleb128 0x3
 2652 0162 08       		.uleb128 0x8
 2653 0163 3A       		.uleb128 0x3a
 2654 0164 0B       		.uleb128 0xb
 2655 0165 3B       		.uleb128 0x3b
 2656 0166 05       		.uleb128 0x5
 2657 0167 49       		.uleb128 0x49
 2658 0168 13       		.uleb128 0x13
 2659 0169 02       		.uleb128 0x2
 2660 016a 18       		.uleb128 0x18
 2661 016b 00       		.byte	0
 2662 016c 00       		.byte	0
 2663 016d 17       		.uleb128 0x17
 2664 016e 2E       		.uleb128 0x2e
 2665 016f 01       		.byte	0x1
 2666 0170 3F       		.uleb128 0x3f
 2667 0171 19       		.uleb128 0x19
 2668 0172 03       		.uleb128 0x3
 2669 0173 0E       		.uleb128 0xe
 2670 0174 3A       		.uleb128 0x3a
 2671 0175 0B       		.uleb128 0xb
 2672 0176 3B       		.uleb128 0x3b
 2673 0177 05       		.uleb128 0x5
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 58


 2674 0178 27       		.uleb128 0x27
 2675 0179 19       		.uleb128 0x19
 2676 017a 11       		.uleb128 0x11
 2677 017b 01       		.uleb128 0x1
 2678 017c 12       		.uleb128 0x12
 2679 017d 06       		.uleb128 0x6
 2680 017e 40       		.uleb128 0x40
 2681 017f 18       		.uleb128 0x18
 2682 0180 9642     		.uleb128 0x2116
 2683 0182 19       		.uleb128 0x19
 2684 0183 01       		.uleb128 0x1
 2685 0184 13       		.uleb128 0x13
 2686 0185 00       		.byte	0
 2687 0186 00       		.byte	0
 2688 0187 18       		.uleb128 0x18
 2689 0188 05       		.uleb128 0x5
 2690 0189 00       		.byte	0
 2691 018a 03       		.uleb128 0x3
 2692 018b 08       		.uleb128 0x8
 2693 018c 3A       		.uleb128 0x3a
 2694 018d 0B       		.uleb128 0xb
 2695 018e 3B       		.uleb128 0x3b
 2696 018f 05       		.uleb128 0x5
 2697 0190 49       		.uleb128 0x49
 2698 0191 13       		.uleb128 0x13
 2699 0192 02       		.uleb128 0x2
 2700 0193 18       		.uleb128 0x18
 2701 0194 00       		.byte	0
 2702 0195 00       		.byte	0
 2703 0196 19       		.uleb128 0x19
 2704 0197 2E       		.uleb128 0x2e
 2705 0198 01       		.byte	0x1
 2706 0199 3F       		.uleb128 0x3f
 2707 019a 19       		.uleb128 0x19
 2708 019b 03       		.uleb128 0x3
 2709 019c 0E       		.uleb128 0xe
 2710 019d 3A       		.uleb128 0x3a
 2711 019e 0B       		.uleb128 0xb
 2712 019f 3B       		.uleb128 0x3b
 2713 01a0 05       		.uleb128 0x5
 2714 01a1 11       		.uleb128 0x11
 2715 01a2 01       		.uleb128 0x1
 2716 01a3 12       		.uleb128 0x12
 2717 01a4 06       		.uleb128 0x6
 2718 01a5 40       		.uleb128 0x40
 2719 01a6 18       		.uleb128 0x18
 2720 01a7 9642     		.uleb128 0x2116
 2721 01a9 19       		.uleb128 0x19
 2722 01aa 01       		.uleb128 0x1
 2723 01ab 13       		.uleb128 0x13
 2724 01ac 00       		.byte	0
 2725 01ad 00       		.byte	0
 2726 01ae 1A       		.uleb128 0x1a
 2727 01af 35       		.uleb128 0x35
 2728 01b0 00       		.byte	0
 2729 01b1 49       		.uleb128 0x49
 2730 01b2 13       		.uleb128 0x13
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 59


 2731 01b3 00       		.byte	0
 2732 01b4 00       		.byte	0
 2733 01b5 1B       		.uleb128 0x1b
 2734 01b6 34       		.uleb128 0x34
 2735 01b7 00       		.byte	0
 2736 01b8 03       		.uleb128 0x3
 2737 01b9 0E       		.uleb128 0xe
 2738 01ba 3A       		.uleb128 0x3a
 2739 01bb 0B       		.uleb128 0xb
 2740 01bc 3B       		.uleb128 0x3b
 2741 01bd 05       		.uleb128 0x5
 2742 01be 49       		.uleb128 0x49
 2743 01bf 13       		.uleb128 0x13
 2744 01c0 3F       		.uleb128 0x3f
 2745 01c1 19       		.uleb128 0x19
 2746 01c2 3C       		.uleb128 0x3c
 2747 01c3 19       		.uleb128 0x19
 2748 01c4 00       		.byte	0
 2749 01c5 00       		.byte	0
 2750 01c6 1C       		.uleb128 0x1c
 2751 01c7 34       		.uleb128 0x34
 2752 01c8 00       		.byte	0
 2753 01c9 03       		.uleb128 0x3
 2754 01ca 08       		.uleb128 0x8
 2755 01cb 3A       		.uleb128 0x3a
 2756 01cc 0B       		.uleb128 0xb
 2757 01cd 3B       		.uleb128 0x3b
 2758 01ce 0B       		.uleb128 0xb
 2759 01cf 49       		.uleb128 0x49
 2760 01d0 13       		.uleb128 0x13
 2761 01d1 3F       		.uleb128 0x3f
 2762 01d2 19       		.uleb128 0x19
 2763 01d3 02       		.uleb128 0x2
 2764 01d4 18       		.uleb128 0x18
 2765 01d5 00       		.byte	0
 2766 01d6 00       		.byte	0
 2767 01d7 1D       		.uleb128 0x1d
 2768 01d8 34       		.uleb128 0x34
 2769 01d9 00       		.byte	0
 2770 01da 03       		.uleb128 0x3
 2771 01db 0E       		.uleb128 0xe
 2772 01dc 3A       		.uleb128 0x3a
 2773 01dd 0B       		.uleb128 0xb
 2774 01de 3B       		.uleb128 0x3b
 2775 01df 0B       		.uleb128 0xb
 2776 01e0 49       		.uleb128 0x49
 2777 01e1 13       		.uleb128 0x13
 2778 01e2 3F       		.uleb128 0x3f
 2779 01e3 19       		.uleb128 0x19
 2780 01e4 02       		.uleb128 0x2
 2781 01e5 18       		.uleb128 0x18
 2782 01e6 00       		.byte	0
 2783 01e7 00       		.byte	0
 2784 01e8 1E       		.uleb128 0x1e
 2785 01e9 21       		.uleb128 0x21
 2786 01ea 00       		.byte	0
 2787 01eb 49       		.uleb128 0x49
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 60


 2788 01ec 13       		.uleb128 0x13
 2789 01ed 2F       		.uleb128 0x2f
 2790 01ee 0B       		.uleb128 0xb
 2791 01ef 00       		.byte	0
 2792 01f0 00       		.byte	0
 2793 01f1 00       		.byte	0
 2794              		.section	.debug_aranges,"",%progbits
 2795 0000 9C000000 		.4byte	0x9c
 2796 0004 0200     		.2byte	0x2
 2797 0006 00000000 		.4byte	.Ldebug_info0
 2798 000a 04       		.byte	0x4
 2799 000b 00       		.byte	0
 2800 000c 0000     		.2byte	0
 2801 000e 0000     		.2byte	0
 2802 0010 00000000 		.4byte	.LFB64
 2803 0014 2E000000 		.4byte	.LFE64-.LFB64
 2804 0018 00000000 		.4byte	.LFB65
 2805 001c 14000000 		.4byte	.LFE65-.LFB65
 2806 0020 00000000 		.4byte	.LFB66
 2807 0024 14000000 		.4byte	.LFE66-.LFB66
 2808 0028 00000000 		.4byte	.LFB67
 2809 002c 20000000 		.4byte	.LFE67-.LFB67
 2810 0030 00000000 		.4byte	.LFB68
 2811 0034 20000000 		.4byte	.LFE68-.LFB68
 2812 0038 00000000 		.4byte	.LFB69
 2813 003c 2A000000 		.4byte	.LFE69-.LFB69
 2814 0040 00000000 		.4byte	.LFB70
 2815 0044 E0000000 		.4byte	.LFE70-.LFB70
 2816 0048 00000000 		.4byte	.LFB71
 2817 004c 0C000000 		.4byte	.LFE71-.LFB71
 2818 0050 00000000 		.4byte	.LFB72
 2819 0054 C0000000 		.4byte	.LFE72-.LFB72
 2820 0058 00000000 		.4byte	.LFB73
 2821 005c 2E000000 		.4byte	.LFE73-.LFB73
 2822 0060 00000000 		.4byte	.LFB74
 2823 0064 0C000000 		.4byte	.LFE74-.LFB74
 2824 0068 00000000 		.4byte	.LFB75
 2825 006c 84010000 		.4byte	.LFE75-.LFB75
 2826 0070 00000000 		.4byte	.LFB76
 2827 0074 50000000 		.4byte	.LFE76-.LFB76
 2828 0078 00000000 		.4byte	.LFB77
 2829 007c 50000000 		.4byte	.LFE77-.LFB77
 2830 0080 00000000 		.4byte	.LFB78
 2831 0084 3E000000 		.4byte	.LFE78-.LFB78
 2832 0088 00000000 		.4byte	.LFB79
 2833 008c 26000000 		.4byte	.LFE79-.LFB79
 2834 0090 00000000 		.4byte	.LFB80
 2835 0094 CC000000 		.4byte	.LFE80-.LFB80
 2836 0098 00000000 		.4byte	0
 2837 009c 00000000 		.4byte	0
 2838              		.section	.debug_ranges,"",%progbits
 2839              	.Ldebug_ranges0:
 2840 0000 00000000 		.4byte	.LFB64
 2841 0004 2E000000 		.4byte	.LFE64
 2842 0008 00000000 		.4byte	.LFB65
 2843 000c 14000000 		.4byte	.LFE65
 2844 0010 00000000 		.4byte	.LFB66
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 61


 2845 0014 14000000 		.4byte	.LFE66
 2846 0018 00000000 		.4byte	.LFB67
 2847 001c 20000000 		.4byte	.LFE67
 2848 0020 00000000 		.4byte	.LFB68
 2849 0024 20000000 		.4byte	.LFE68
 2850 0028 00000000 		.4byte	.LFB69
 2851 002c 2A000000 		.4byte	.LFE69
 2852 0030 00000000 		.4byte	.LFB70
 2853 0034 E0000000 		.4byte	.LFE70
 2854 0038 00000000 		.4byte	.LFB71
 2855 003c 0C000000 		.4byte	.LFE71
 2856 0040 00000000 		.4byte	.LFB72
 2857 0044 C0000000 		.4byte	.LFE72
 2858 0048 00000000 		.4byte	.LFB73
 2859 004c 2E000000 		.4byte	.LFE73
 2860 0050 00000000 		.4byte	.LFB74
 2861 0054 0C000000 		.4byte	.LFE74
 2862 0058 00000000 		.4byte	.LFB75
 2863 005c 84010000 		.4byte	.LFE75
 2864 0060 00000000 		.4byte	.LFB76
 2865 0064 50000000 		.4byte	.LFE76
 2866 0068 00000000 		.4byte	.LFB77
 2867 006c 50000000 		.4byte	.LFE77
 2868 0070 00000000 		.4byte	.LFB78
 2869 0074 3E000000 		.4byte	.LFE78
 2870 0078 00000000 		.4byte	.LFB79
 2871 007c 26000000 		.4byte	.LFE79
 2872 0080 00000000 		.4byte	.LFB80
 2873 0084 CC000000 		.4byte	.LFE80
 2874 0088 00000000 		.4byte	0
 2875 008c 00000000 		.4byte	0
 2876              		.section	.debug_line,"",%progbits
 2877              	.Ldebug_line0:
 2878 0000 4B030000 		.section	.debug_str,"MS",%progbits,1
 2878      02005601 
 2878      00000201 
 2878      FB0E0D00 
 2878      01010101 
 2879              	.LASF38:
 2880 0000 6D6F746F 		.ascii	"motorStop\000"
 2880      7253746F 
 2880      7000
 2881              	.LASF58:
 2882 000a 6973725F 		.ascii	"isr_TS_Interrupt_sample\000"
 2882      54535F49 
 2882      6E746572 
 2882      72757074 
 2882      5F73616D 
 2883              	.LASF75:
 2884 0022 74735F65 		.ascii	"ts_enc\000"
 2884      6E6300
 2885              	.LASF14:
 2886 0029 646F7562 		.ascii	"double\000"
 2886      6C6500
 2887              	.LASF84:
 2888 0030 666C6167 		.ascii	"flag_packet\000"
 2888      5F706163 
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 62


 2888      6B657400 
 2889              	.LASF68:
 2890 003c 75736250 		.ascii	"usbPutChar\000"
 2890      75744368 
 2890      617200
 2891              	.LASF98:
 2892 0047 636F756E 		.ascii	"counteoc\000"
 2892      74656F63 
 2892      00
 2893              	.LASF43:
 2894 0050 6973725F 		.ascii	"isr_eoc_Interrupt_test\000"
 2894      656F635F 
 2894      496E7465 
 2894      72727570 
 2894      745F7465 
 2895              	.LASF37:
 2896 0067 6D6F746F 		.ascii	"motorGoBackwards\000"
 2896      72476F42 
 2896      61636B77 
 2896      61726473 
 2896      00
 2897              	.LASF94:
 2898 0078 63686563 		.ascii	"checkLight\000"
 2898      6B4C6967 
 2898      687400
 2899              	.LASF33:
 2900 0083 67325F78 		.ascii	"g2_xpos\000"
 2900      706F7300 
 2901              	.LASF2:
 2902 008b 73686F72 		.ascii	"short int\000"
 2902      7420696E 
 2902      7400
 2903              	.LASF92:
 2904 0095 73797374 		.ascii	"system_state\000"
 2904      656D5F73 
 2904      74617465 
 2904      00
 2905              	.LASF10:
 2906 00a2 73697A65 		.ascii	"sizetype\000"
 2906      74797065 
 2906      00
 2907              	.LASF91:
 2908 00ab 75736242 		.ascii	"usbBuffer\000"
 2908      75666665 
 2908      7200
 2909              	.LASF101:
 2910 00b5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2910      43313120 
 2910      352E342E 
 2910      31203230 
 2910      31363036 
 2911 00e8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2911      20726576 
 2911      6973696F 
 2911      6E203233 
 2911      37373135 
 2912 011b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 63


 2912      66756E63 
 2912      74696F6E 
 2912      2D736563 
 2912      74696F6E 
 2913              	.LASF59:
 2914 0143 6D61696E 		.ascii	"main\000"
 2914      00
 2915              	.LASF56:
 2916 0148 6D6F746F 		.ascii	"motorRun\000"
 2916      7252756E 
 2916      00
 2917              	.LASF47:
 2918 0151 76616C75 		.ascii	"valueQ1\000"
 2918      65513100 
 2919              	.LASF48:
 2920 0159 76616C75 		.ascii	"valueQ2\000"
 2920      65513200 
 2921              	.LASF44:
 2922 0161 76616C75 		.ascii	"valueQ3\000"
 2922      65513300 
 2923              	.LASF45:
 2924 0169 76616C75 		.ascii	"valueQ4\000"
 2924      65513400 
 2925              	.LASF46:
 2926 0171 76616C75 		.ascii	"valueQ5\000"
 2926      65513500 
 2927              	.LASF49:
 2928 0179 76616C75 		.ascii	"valueQ6\000"
 2928      65513600 
 2929              	.LASF95:
 2930 0181 6C696768 		.ascii	"lightState\000"
 2930      74537461 
 2930      746500
 2931              	.LASF17:
 2932 018c 75696E74 		.ascii	"uint16\000"
 2932      313600
 2933              	.LASF21:
 2934 0193 696E6465 		.ascii	"index\000"
 2934      7800
 2935              	.LASF104:
 2936 0199 64617461 		.ascii	"data_main\000"
 2936      5F6D6169 
 2936      6E00
 2937              	.LASF19:
 2938 01a3 696E7431 		.ascii	"int16\000"
 2938      3600
 2939              	.LASF16:
 2940 01a9 75696E74 		.ascii	"uint8\000"
 2940      3800
 2941              	.LASF103:
 2942 01af 5C5C6669 		.ascii	"\\\\files.auckland.ac.nz\\myhome\\Documents\\GitHub"
 2942      6C65732E 
 2942      6175636B 
 2942      6C616E64 
 2942      2E61632E 
 2943 01dd 5C70726F 		.ascii	"\\project-project_group_11\\COMPSYS 301\\psoc stude"
 2943      6A656374 
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 64


 2943      2D70726F 
 2943      6A656374 
 2943      5F67726F 
 2944 020d 6E742070 		.ascii	"nt pack\\psoc student pack\\psoc_code_base\\CS301_C"
 2944      61636B5C 
 2944      70736F63 
 2944      20737475 
 2944      64656E74 
 2945 023d 6C617373 		.ascii	"lass.cydsn\000"
 2945      2E637964 
 2945      736E00
 2946              	.LASF93:
 2947 0248 6368616E 		.ascii	"changeMotor\000"
 2947      67654D6F 
 2947      746F7200 
 2948              	.LASF97:
 2949 0254 6C696768 		.ascii	"lightDetectedBack\000"
 2949      74446574 
 2949      65637465 
 2949      64426163 
 2949      6B00
 2950              	.LASF15:
 2951 0266 666C6F61 		.ascii	"float\000"
 2951      7400
 2952              	.LASF57:
 2953 026c 6973725F 		.ascii	"isr_motor_interrupt_speed\000"
 2953      6D6F746F 
 2953      725F696E 
 2953      74657272 
 2953      7570745F 
 2954              	.LASF6:
 2955 0286 6C6F6E67 		.ascii	"long long int\000"
 2955      206C6F6E 
 2955      6720696E 
 2955      7400
 2956              	.LASF67:
 2957 0294 75736250 		.ascii	"usbPutString\000"
 2957      75745374 
 2957      72696E67 
 2957      00
 2958              	.LASF18:
 2959 02a1 696E7438 		.ascii	"int8\000"
 2959      00
 2960              	.LASF80:
 2961 02a6 666C6167 		.ascii	"flag_ts_update\000"
 2961      5F74735F 
 2961      75706461 
 2961      746500
 2962              	.LASF34:
 2963 02b5 67325F79 		.ascii	"g2_ypos\000"
 2963      706F7300 
 2964              	.LASF28:
 2965 02bd 67305F64 		.ascii	"g0_direction\000"
 2965      69726563 
 2965      74696F6E 
 2965      00
 2966              	.LASF25:
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 65


 2967 02ca 67305F78 		.ascii	"g0_xpos\000"
 2967      706F7300 
 2968              	.LASF4:
 2969 02d2 6C6F6E67 		.ascii	"long int\000"
 2969      20696E74 
 2969      00
 2970              	.LASF50:
 2971 02db 62656769 		.ascii	"beginningCountMotor1\000"
 2971      6E6E696E 
 2971      67436F75 
 2971      6E744D6F 
 2971      746F7231 
 2972              	.LASF51:
 2973 02f0 62656769 		.ascii	"beginningCountMotor2\000"
 2973      6E6E696E 
 2973      67436F75 
 2973      6E744D6F 
 2973      746F7232 
 2974              	.LASF54:
 2975 0305 6D6F746F 		.ascii	"motor1String\000"
 2975      72315374 
 2975      72696E67 
 2975      00
 2976              	.LASF99:
 2977 0312 70726F63 		.ascii	"processSensors\000"
 2977      65737353 
 2977      656E736F 
 2977      727300
 2978              	.LASF89:
 2979 0321 6C696E65 		.ascii	"line\000"
 2979      00
 2980              	.LASF82:
 2981 0326 666C6167 		.ascii	"flag_ts_display\000"
 2981      5F74735F 
 2981      64697370 
 2981      6C617900 
 2982              	.LASF83:
 2983 0336 666C6167 		.ascii	"flag_rx\000"
 2983      5F727800 
 2984              	.LASF53:
 2985 033e 656E6443 		.ascii	"endCountMotor1\000"
 2985      6F756E74 
 2985      4D6F746F 
 2985      723100
 2986              	.LASF52:
 2987 034d 656E6443 		.ascii	"endCountMotor2\000"
 2987      6F756E74 
 2987      4D6F746F 
 2987      723200
 2988              	.LASF90:
 2989 035c 656E7472 		.ascii	"entry\000"
 2989      7900
 2990              	.LASF9:
 2991 0362 6C6F6E67 		.ascii	"long double\000"
 2991      20646F75 
 2991      626C6500 
 2992              	.LASF64:
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 66


 2993 036e 76616C75 		.ascii	"value1\000"
 2993      653100
 2994              	.LASF1:
 2995 0375 756E7369 		.ascii	"unsigned char\000"
 2995      676E6564 
 2995      20636861 
 2995      7200
 2996              	.LASF96:
 2997 0383 6C696768 		.ascii	"lightDetectedFront\000"
 2997      74446574 
 2997      65637465 
 2997      6446726F 
 2997      6E7400
 2998              	.LASF27:
 2999 0396 67305F73 		.ascii	"g0_speed\000"
 2999      70656564 
 2999      00
 3000              	.LASF86:
 3001 039f 64617461 		.ascii	"dataready_flag\000"
 3001      72656164 
 3001      795F666C 
 3001      616700
 3002              	.LASF0:
 3003 03ae 7369676E 		.ascii	"signed char\000"
 3003      65642063 
 3003      68617200 
 3004              	.LASF7:
 3005 03ba 6C6F6E67 		.ascii	"long long unsigned int\000"
 3005      206C6F6E 
 3005      6720756E 
 3005      7369676E 
 3005      65642069 
 3006              	.LASF42:
 3007 03d1 6D6F746F 		.ascii	"motorCircle\000"
 3007      72436972 
 3007      636C6500 
 3008              	.LASF8:
 3009 03dd 756E7369 		.ascii	"unsigned int\000"
 3009      676E6564 
 3009      20696E74 
 3009      00
 3010              	.LASF85:
 3011 03ea 666C6167 		.ascii	"flag_KB_string\000"
 3011      5F4B425F 
 3011      73747269 
 3011      6E6700
 3012              	.LASF72:
 3013 03f9 75736242 		.ascii	"usbBufCount\000"
 3013      7566436F 
 3013      756E7400 
 3014              	.LASF35:
 3015 0405 67325F73 		.ascii	"g2_speed\000"
 3015      70656564 
 3015      00
 3016              	.LASF29:
 3017 040e 67315F78 		.ascii	"g1_xpos\000"
 3017      706F7300 
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 67


 3018              	.LASF61:
 3019 0416 6F706572 		.ascii	"operation\000"
 3019      6174696F 
 3019      6E00
 3020              	.LASF63:
 3021 0420 636F6E76 		.ascii	"convertBackBinary\000"
 3021      65727442 
 3021      61636B42 
 3021      696E6172 
 3021      7900
 3022              	.LASF11:
 3023 0432 63686172 		.ascii	"char\000"
 3023      00
 3024              	.LASF22:
 3025 0437 726F626F 		.ascii	"robot_xpos\000"
 3025      745F7870 
 3025      6F7300
 3026              	.LASF13:
 3027 0442 696E7433 		.ascii	"int32_t\000"
 3027      325F7400 
 3028              	.LASF30:
 3029 044a 67315F79 		.ascii	"g1_ypos\000"
 3029      706F7300 
 3030              	.LASF36:
 3031 0452 67325F64 		.ascii	"g2_direction\000"
 3031      69726563 
 3031      74696F6E 
 3031      00
 3032              	.LASF3:
 3033 045f 73686F72 		.ascii	"short unsigned int\000"
 3033      7420756E 
 3033      7369676E 
 3033      65642069 
 3033      6E7400
 3034              	.LASF31:
 3035 0472 67315F73 		.ascii	"g1_speed\000"
 3035      70656564 
 3035      00
 3036              	.LASF62:
 3037 047b 6261636B 		.ascii	"backOps\000"
 3037      4F707300 
 3038              	.LASF88:
 3039 0483 64697370 		.ascii	"displaystring\000"
 3039      6C617973 
 3039      7472696E 
 3039      6700
 3040              	.LASF81:
 3041 0491 666C6167 		.ascii	"flag_ts_speed\000"
 3041      5F74735F 
 3041      73706565 
 3041      6400
 3042              	.LASF65:
 3043 049f 636F6E76 		.ascii	"convertSensorBinary\000"
 3043      65727453 
 3043      656E736F 
 3043      7242696E 
 3043      61727900 
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 68


 3044              	.LASF102:
 3045 04b3 6D61696E 		.ascii	"main.c\000"
 3045      2E6300
 3046              	.LASF5:
 3047 04ba 6C6F6E67 		.ascii	"long unsigned int\000"
 3047      20756E73 
 3047      69676E65 
 3047      6420696E 
 3047      7400
 3048              	.LASF71:
 3049 04cc 75736253 		.ascii	"usbStarted\000"
 3049      74617274 
 3049      656400
 3050              	.LASF77:
 3051 04d7 74735F73 		.ascii	"ts_speed\000"
 3051      70656564 
 3051      00
 3052              	.LASF73:
 3053 04e0 636F756E 		.ascii	"count\000"
 3053      7400
 3054              	.LASF79:
 3055 04e6 666C6167 		.ascii	"flag_ts_enc\000"
 3055      5F74735F 
 3055      656E6300 
 3056              	.LASF12:
 3057 04f2 5F5F696E 		.ascii	"__int32_t\000"
 3057      7433325F 
 3057      7400
 3058              	.LASF40:
 3059 04fc 6D6F746F 		.ascii	"motorTurnLeft\000"
 3059      72547572 
 3059      6E4C6566 
 3059      7400
 3060              	.LASF39:
 3061 050a 6D6F746F 		.ascii	"motorGoStraight\000"
 3061      72476F53 
 3061      74726169 
 3061      67687400 
 3062              	.LASF69:
 3063 051a 6D6F746F 		.ascii	"motorCount\000"
 3063      72436F75 
 3063      6E7400
 3064              	.LASF26:
 3065 0525 67305F79 		.ascii	"g0_ypos\000"
 3065      706F7300 
 3066              	.LASF78:
 3067 052d 74735F64 		.ascii	"ts_display\000"
 3067      6973706C 
 3067      617900
 3068              	.LASF60:
 3069 0538 6C617374 		.ascii	"lastState\000"
 3069      53746174 
 3069      6500
 3070              	.LASF76:
 3071 0542 74735F75 		.ascii	"ts_update\000"
 3071      70646174 
 3071      6500
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccNQN3a4.s 			page 69


 3072              	.LASF70:
 3073 054c 68616E64 		.ascii	"handle_usb\000"
 3073      6C655F75 
 3073      736200
 3074              	.LASF87:
 3075 0557 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3075      5F72665F 
 3075      7472616E 
 3075      736D6973 
 3075      73696F6E 
 3076              	.LASF23:
 3077 0573 726F626F 		.ascii	"robot_ypos\000"
 3077      745F7970 
 3077      6F7300
 3078              	.LASF74:
 3079 057e 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3079      52784275 
 3079      66666572 
 3079      00
 3080              	.LASF66:
 3081 058b 76616C75 		.ascii	"value\000"
 3081      6500
 3082              	.LASF55:
 3083 0591 6D6F746F 		.ascii	"motor2String\000"
 3083      72325374 
 3083      72696E67 
 3083      00
 3084              	.LASF32:
 3085 059e 67315F64 		.ascii	"g1_direction\000"
 3085      69726563 
 3085      74696F6E 
 3085      00
 3086              	.LASF41:
 3087 05ab 6D6F746F 		.ascii	"motorTurnRight\000"
 3087      72547572 
 3087      6E526967 
 3087      687400
 3088              	.LASF100:
 3089 05ba 6D696464 		.ascii	"middle\000"
 3089      6C6500
 3090              	.LASF20:
 3091 05c1 72737369 		.ascii	"rssi\000"
 3091      00
 3092              	.LASF24:
 3093 05c6 726F626F 		.ascii	"robot_orientation\000"
 3093      745F6F72 
 3093      69656E74 
 3093      6174696F 
 3093      6E00
 3094              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
