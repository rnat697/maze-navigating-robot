ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.section	.text.motorGoStraight,"ax",%progbits
 107              		.align	2
 108              		.global	motorGoStraight
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 3


 109              		.thumb
 110              		.thumb_func
 111              		.type	motorGoStraight, %function
 112              	motorGoStraight:
 113              	.LFB64:
 114              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <stdbool.h>
  19:main.c        **** #include <string.h>
  20:main.c        **** #include <stdlib.h>
  21:main.c        **** #include <math.h>
  22:main.c        **** #include <project.h>
  23:main.c        **** //* ========================================
  24:main.c        **** #include "defines.h"
  25:main.c        **** #include "vars.h"
  26:main.c        **** #include "isr_eoc.h"
  27:main.c        **** //* ========================================
  28:main.c        **** void usbPutString(char *s);
  29:main.c        **** void usbPutChar(char c);
  30:main.c        **** void handle_usb();
  31:main.c        **** //* ========================================
  32:main.c        **** 
  33:main.c        **** 
  34:main.c        **** #define rota180 500 //turns
  35:main.c        **** #define rota90Left 250
  36:main.c        **** 
  37:main.c        **** #define moveSlow 50
  38:main.c        **** #define travelDist 326 // how
  39:main.c        **** #define Q1CHANNEL 3
  40:main.c        **** #define Q2CHANNEL 5 
  41:main.c        **** #define Q3CHANNEL 0
  42:main.c        **** #define Q4CHANNEL 1
  43:main.c        **** #define Q5CHANNEL 2
  44:main.c        **** #define Q6CHANNEL 4
  45:main.c        **** 
  46:main.c        **** CY_ISR_PROTO(isr_eoc_Interrupt_test);
  47:main.c        **** CY_ISR_PROTO(isr_motor_interrupt_speed);
  48:main.c        **** CY_ISR_PROTO(isr_TS_interrupt_sample);
  49:main.c        **** int convertSensorBinary();
  50:main.c        **** int convertBackBinary();
  51:main.c        **** 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 4


  52:main.c        **** void motorGoStraight(){
 115              		.loc 1 52 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119 0000 80B5     		push	{r7, lr}
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 7, -8
 122              		.cfi_offset 14, -4
 123 0002 00AF     		add	r7, sp, #0
 124              		.cfi_def_cfa_register 7
  53:main.c        ****     ////PWM_1_WriteCompare(150); // left wheel near power switch is stronker than right wheel //150
  54:main.c        ****     //M1_IN2_Write(0);
  55:main.c        ****     PWM_1_WriteCompare(160);//200 //180 //160
 125              		.loc 1 55 0
 126 0004 A020     		movs	r0, #160
 127 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  56:main.c        ****     PWM_2_WriteCompare(93); //52 //72 //93
 128              		.loc 1 56 0
 129 000a 5D20     		movs	r0, #93
 130 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  57:main.c        **** }
 131              		.loc 1 57 0
 132 0010 00BF     		nop
 133 0012 80BD     		pop	{r7, pc}
 134              		.cfi_endproc
 135              	.LFE64:
 136              		.size	motorGoStraight, .-motorGoStraight
 137              		.section	.text.motorSetSpeed,"ax",%progbits
 138              		.align	2
 139              		.global	motorSetSpeed
 140              		.thumb
 141              		.thumb_func
 142              		.type	motorSetSpeed, %function
 143              	motorSetSpeed:
 144              	.LFB65:
  58:main.c        **** void motorSetSpeed(int x){
 145              		.loc 1 58 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 8
 148              		@ frame_needed = 1, uses_anonymous_args = 0
 149 0000 80B5     		push	{r7, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 82B0     		sub	sp, sp, #8
 154              		.cfi_def_cfa_offset 16
 155 0004 00AF     		add	r7, sp, #0
 156              		.cfi_def_cfa_register 7
 157 0006 7860     		str	r0, [r7, #4]
  59:main.c        ****     ////PWM_1_WriteCompare(150); // left wheel near power switch is stronker than right wheel //150
  60:main.c        ****     //M1_IN2_Write(0);
  61:main.c        ****     
  62:main.c        ****     //fastest speed
  63:main.c        ****     PWM_1_WriteCompare(200+x);//200 //180 //160
 158              		.loc 1 63 0
 159 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 5


 160 000a DBB2     		uxtb	r3, r3
 161 000c 383B     		subs	r3, r3, #56
 162 000e DBB2     		uxtb	r3, r3
 163 0010 1846     		mov	r0, r3
 164 0012 FFF7FEFF 		bl	PWM_1_WriteCompare
  64:main.c        ****     PWM_2_WriteCompare(52-x); //52 //72 //93
 165              		.loc 1 64 0
 166 0016 7B68     		ldr	r3, [r7, #4]
 167 0018 DBB2     		uxtb	r3, r3
 168 001a C3F13403 		rsb	r3, r3, #52
 169 001e DBB2     		uxtb	r3, r3
 170 0020 1846     		mov	r0, r3
 171 0022 FFF7FEFF 		bl	PWM_2_WriteCompare
  65:main.c        **** }
 172              		.loc 1 65 0
 173 0026 00BF     		nop
 174 0028 0837     		adds	r7, r7, #8
 175              		.cfi_def_cfa_offset 8
 176 002a BD46     		mov	sp, r7
 177              		.cfi_def_cfa_register 13
 178              		@ sp needed
 179 002c 80BD     		pop	{r7, pc}
 180              		.cfi_endproc
 181              	.LFE65:
 182              		.size	motorSetSpeed, .-motorSetSpeed
 183 002e 00BF     		.section	.text.motorGoBackwards,"ax",%progbits
 184              		.align	2
 185              		.global	motorGoBackwards
 186              		.thumb
 187              		.thumb_func
 188              		.type	motorGoBackwards, %function
 189              	motorGoBackwards:
 190              	.LFB66:
  66:main.c        **** void motorGoBackwards(){
 191              		.loc 1 66 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 1, uses_anonymous_args = 0
 195 0000 80B5     		push	{r7, lr}
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 7, -8
 198              		.cfi_offset 14, -4
 199 0002 00AF     		add	r7, sp, #0
 200              		.cfi_def_cfa_register 7
  67:main.c        ****     
  68:main.c        ****     //M1_IN2_Write(0);
  69:main.c        ****     PWM_1_WriteCompare(55); //55
 201              		.loc 1 69 0
 202 0004 3720     		movs	r0, #55
 203 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  70:main.c        ****     PWM_2_WriteCompare(201); //201
 204              		.loc 1 70 0
 205 000a C920     		movs	r0, #201
 206 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  71:main.c        **** }
 207              		.loc 1 71 0
 208 0010 00BF     		nop
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 6


 209 0012 80BD     		pop	{r7, pc}
 210              		.cfi_endproc
 211              	.LFE66:
 212              		.size	motorGoBackwards, .-motorGoBackwards
 213              		.section	.text.motorStop,"ax",%progbits
 214              		.align	2
 215              		.global	motorStop
 216              		.thumb
 217              		.thumb_func
 218              		.type	motorStop, %function
 219              	motorStop:
 220              	.LFB67:
  72:main.c        **** void motorStop(){
 221              		.loc 1 72 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 1, uses_anonymous_args = 0
 225 0000 80B5     		push	{r7, lr}
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 7, -8
 228              		.cfi_offset 14, -4
 229 0002 00AF     		add	r7, sp, #0
 230              		.cfi_def_cfa_register 7
  73:main.c        ****     PWM_1_WriteCompare(127); 
 231              		.loc 1 73 0
 232 0004 7F20     		movs	r0, #127
 233 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  74:main.c        ****     PWM_2_WriteCompare(127);
 234              		.loc 1 74 0
 235 000a 7F20     		movs	r0, #127
 236 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  75:main.c        **** }
 237              		.loc 1 75 0
 238 0010 00BF     		nop
 239 0012 80BD     		pop	{r7, pc}
 240              		.cfi_endproc
 241              	.LFE67:
 242              		.size	motorStop, .-motorStop
 243              		.section	.text.motorTurnLeft,"ax",%progbits
 244              		.align	2
 245              		.global	motorTurnLeft
 246              		.thumb
 247              		.thumb_func
 248              		.type	motorTurnLeft, %function
 249              	motorTurnLeft:
 250              	.LFB68:
  76:main.c        **** 
  77:main.c        **** void motorTurnLeft(uint8 x){
 251              		.loc 1 77 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 8
 254              		@ frame_needed = 1, uses_anonymous_args = 0
 255 0000 80B5     		push	{r7, lr}
 256              		.cfi_def_cfa_offset 8
 257              		.cfi_offset 7, -8
 258              		.cfi_offset 14, -4
 259 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 7


 260              		.cfi_def_cfa_offset 16
 261 0004 00AF     		add	r7, sp, #0
 262              		.cfi_def_cfa_register 7
 263 0006 0346     		mov	r3, r0
 264 0008 FB71     		strb	r3, [r7, #7]
  78:main.c        ****     // TO DO
  79:main.c        ****     
  80:main.c        ****     PWM_1_WriteCompare(127); //55
 265              		.loc 1 80 0
 266 000a 7F20     		movs	r0, #127
 267 000c FFF7FEFF 		bl	PWM_1_WriteCompare
  81:main.c        ****     PWM_2_WriteCompare(x); //201
 268              		.loc 1 81 0
 269 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 270 0012 1846     		mov	r0, r3
 271 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
  82:main.c        ****     
  83:main.c        ****     
  84:main.c        ****     
  85:main.c        ****     //255
  86:main.c        **** }
 272              		.loc 1 86 0
 273 0018 00BF     		nop
 274 001a 0837     		adds	r7, r7, #8
 275              		.cfi_def_cfa_offset 8
 276 001c BD46     		mov	sp, r7
 277              		.cfi_def_cfa_register 13
 278              		@ sp needed
 279 001e 80BD     		pop	{r7, pc}
 280              		.cfi_endproc
 281              	.LFE68:
 282              		.size	motorTurnLeft, .-motorTurnLeft
 283              		.section	.text.motorTurnRight,"ax",%progbits
 284              		.align	2
 285              		.global	motorTurnRight
 286              		.thumb
 287              		.thumb_func
 288              		.type	motorTurnRight, %function
 289              	motorTurnRight:
 290              	.LFB69:
  87:main.c        **** 
  88:main.c        **** void motorTurnRight(int x){
 291              		.loc 1 88 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 8
 294              		@ frame_needed = 1, uses_anonymous_args = 0
 295 0000 80B5     		push	{r7, lr}
 296              		.cfi_def_cfa_offset 8
 297              		.cfi_offset 7, -8
 298              		.cfi_offset 14, -4
 299 0002 82B0     		sub	sp, sp, #8
 300              		.cfi_def_cfa_offset 16
 301 0004 00AF     		add	r7, sp, #0
 302              		.cfi_def_cfa_register 7
 303 0006 7860     		str	r0, [r7, #4]
  89:main.c        ****     // TO DO
  90:main.c        ****     
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 8


  91:main.c        ****     PWM_1_WriteCompare(x);//200
 304              		.loc 1 91 0
 305 0008 7B68     		ldr	r3, [r7, #4]
 306 000a DBB2     		uxtb	r3, r3
 307 000c 1846     		mov	r0, r3
 308 000e FFF7FEFF 		bl	PWM_1_WriteCompare
  92:main.c        ****     PWM_2_WriteCompare(127); //50
 309              		.loc 1 92 0
 310 0012 7F20     		movs	r0, #127
 311 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
  93:main.c        **** 
  94:main.c        **** }
 312              		.loc 1 94 0
 313 0018 00BF     		nop
 314 001a 0837     		adds	r7, r7, #8
 315              		.cfi_def_cfa_offset 8
 316 001c BD46     		mov	sp, r7
 317              		.cfi_def_cfa_register 13
 318              		@ sp needed
 319 001e 80BD     		pop	{r7, pc}
 320              		.cfi_endproc
 321              	.LFE69:
 322              		.size	motorTurnRight, .-motorTurnRight
 323              		.section	.text.motorCircle,"ax",%progbits
 324              		.align	2
 325              		.global	motorCircle
 326              		.thumb
 327              		.thumb_func
 328              		.type	motorCircle, %function
 329              	motorCircle:
 330              	.LFB70:
  95:main.c        **** 
  96:main.c        **** 
  97:main.c        **** void motorCircle(uint8 x){
 331              		.loc 1 97 0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 8
 334              		@ frame_needed = 1, uses_anonymous_args = 0
 335 0000 80B5     		push	{r7, lr}
 336              		.cfi_def_cfa_offset 8
 337              		.cfi_offset 7, -8
 338              		.cfi_offset 14, -4
 339 0002 82B0     		sub	sp, sp, #8
 340              		.cfi_def_cfa_offset 16
 341 0004 00AF     		add	r7, sp, #0
 342              		.cfi_def_cfa_register 7
 343 0006 0346     		mov	r3, r0
 344 0008 FB71     		strb	r3, [r7, #7]
  98:main.c        ****     // TO DO
  99:main.c        ****     //positive value turns left
 100:main.c        ****     //negative value turns right
 101:main.c        ****     PWM_1_WriteCompare(127+x); //147
 345              		.loc 1 101 0
 346 000a FB79     		ldrb	r3, [r7, #7]
 347 000c 7F33     		adds	r3, r3, #127
 348 000e DBB2     		uxtb	r3, r3
 349 0010 1846     		mov	r0, r3
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 9


 350 0012 FFF7FEFF 		bl	PWM_1_WriteCompare
 102:main.c        ****     PWM_2_WriteCompare(127+x); //
 351              		.loc 1 102 0
 352 0016 FB79     		ldrb	r3, [r7, #7]
 353 0018 7F33     		adds	r3, r3, #127
 354 001a DBB2     		uxtb	r3, r3
 355 001c 1846     		mov	r0, r3
 356 001e FFF7FEFF 		bl	PWM_2_WriteCompare
 103:main.c        ****     
 104:main.c        ****     
 105:main.c        ****     
 106:main.c        ****     //255
 107:main.c        **** }
 357              		.loc 1 107 0
 358 0022 00BF     		nop
 359 0024 0837     		adds	r7, r7, #8
 360              		.cfi_def_cfa_offset 8
 361 0026 BD46     		mov	sp, r7
 362              		.cfi_def_cfa_register 13
 363              		@ sp needed
 364 0028 80BD     		pop	{r7, pc}
 365              		.cfi_endproc
 366              	.LFE70:
 367              		.size	motorCircle, .-motorCircle
 368              		.global	changeMotor
 369 002a 00BF     		.bss
 370 0012 0000     		.align	2
 371              		.type	changeMotor, %object
 372              		.size	changeMotor, 4
 373              	changeMotor:
 374 0014 00000000 		.space	4
 375              		.global	checkLight
 376              		.align	2
 377              		.type	checkLight, %object
 378              		.size	checkLight, 4
 379              	checkLight:
 380 0018 00000000 		.space	4
 381              		.global	lightState
 382              		.align	2
 383              		.type	lightState, %object
 384              		.size	lightState, 4
 385              	lightState:
 386 001c 00000000 		.space	4
 387              		.global	lightDetectedFront
 388              		.align	2
 389              		.type	lightDetectedFront, %object
 390              		.size	lightDetectedFront, 12
 391              	lightDetectedFront:
 392 0020 00000000 		.space	12
 392      00000000 
 392      00000000 
 393              		.global	lightDetectedBack
 394              		.align	2
 395              		.type	lightDetectedBack, %object
 396              		.size	lightDetectedBack, 12
 397              	lightDetectedBack:
 398 002c 00000000 		.space	12
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 10


 398      00000000 
 398      00000000 
 399              		.global	counteoc
 400              		.align	2
 401              		.type	counteoc, %object
 402              		.size	counteoc, 4
 403              	counteoc:
 404 0038 00000000 		.space	4
 405              		.global	processSensors
 406              		.align	2
 407              		.type	processSensors, %object
 408              		.size	processSensors, 4
 409              	processSensors:
 410 003c 00000000 		.space	4
 411              		.global	middle
 412              		.align	2
 413              		.type	middle, %object
 414              		.size	middle, 4
 415              	middle:
 416 0040 00000000 		.space	4
 417              		.section	.text.isr_eoc_Interrupt_test,"ax",%progbits
 418              		.align	2
 419              		.global	isr_eoc_Interrupt_test
 420              		.thumb
 421              		.thumb_func
 422              		.type	isr_eoc_Interrupt_test, %function
 423              	isr_eoc_Interrupt_test:
 424              	.LFB71:
 108:main.c        **** int changeMotor=0;
 109:main.c        **** int checkLight =0;
 110:main.c        **** int lightState=0;
 111:main.c        **** volatile int lightDetectedFront[3] = {0,0,0};
 112:main.c        **** volatile int lightDetectedBack[3] = {0,0,0};
 113:main.c        **** volatile int counteoc = 0;
 114:main.c        **** volatile int processSensors = 0;
 115:main.c        **** volatile int middle =0;
 116:main.c        **** CY_ISR(isr_eoc_Interrupt_test)
 117:main.c        **** {
 425              		.loc 1 117 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 16
 428              		@ frame_needed = 1, uses_anonymous_args = 0
 429 0000 80B5     		push	{r7, lr}
 430              		.cfi_def_cfa_offset 8
 431              		.cfi_offset 7, -8
 432              		.cfi_offset 14, -4
 433 0002 84B0     		sub	sp, sp, #16
 434              		.cfi_def_cfa_offset 24
 435 0004 00AF     		add	r7, sp, #0
 436              		.cfi_def_cfa_register 7
 118:main.c        ****     #ifdef isr_test_INTERRUPT_INTERRUPT_CALLBACK
 119:main.c        ****         isr_TS_Interrupt_InterruptCallback();
 120:main.c        ****     #endif /* isr_eoc_INTERRUPT_INTERRUPT_CALLBACK */ 
 121:main.c        **** 
 122:main.c        ****     /*  Place your Interrupt code here. */
 123:main.c        ****     /* `#START isr_eoc_Interrupt` */
 124:main.c        ****     int16 valueQ3 =  ADC_GetResult16(Q3CHANNEL);
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 11


 437              		.loc 1 124 0
 438 0006 0020     		movs	r0, #0
 439 0008 FFF7FEFF 		bl	ADC_GetResult16
 440 000c 0346     		mov	r3, r0
 441 000e FB81     		strh	r3, [r7, #14]	@ movhi
 125:main.c        ****     int16 valueQ4 =  ADC_GetResult16(Q4CHANNEL);
 442              		.loc 1 125 0
 443 0010 0120     		movs	r0, #1
 444 0012 FFF7FEFF 		bl	ADC_GetResult16
 445 0016 0346     		mov	r3, r0
 446 0018 BB81     		strh	r3, [r7, #12]	@ movhi
 126:main.c        ****     int16 valueQ5 =  ADC_GetResult16(Q5CHANNEL);
 447              		.loc 1 126 0
 448 001a 0220     		movs	r0, #2
 449 001c FFF7FEFF 		bl	ADC_GetResult16
 450 0020 0346     		mov	r3, r0
 451 0022 7B81     		strh	r3, [r7, #10]	@ movhi
 127:main.c        ****     
 128:main.c        ****     int16 valueQ1 =  ADC_GetResult16(Q1CHANNEL);
 452              		.loc 1 128 0
 453 0024 0320     		movs	r0, #3
 454 0026 FFF7FEFF 		bl	ADC_GetResult16
 455 002a 0346     		mov	r3, r0
 456 002c 3B81     		strh	r3, [r7, #8]	@ movhi
 129:main.c        ****     int16 valueQ2 =  ADC_GetResult16(Q2CHANNEL);
 457              		.loc 1 129 0
 458 002e 0520     		movs	r0, #5
 459 0030 FFF7FEFF 		bl	ADC_GetResult16
 460 0034 0346     		mov	r3, r0
 461 0036 FB80     		strh	r3, [r7, #6]	@ movhi
 130:main.c        ****     int16 valueQ6 =  ADC_GetResult16(Q6CHANNEL);
 462              		.loc 1 130 0
 463 0038 0420     		movs	r0, #4
 464 003a FFF7FEFF 		bl	ADC_GetResult16
 465 003e 0346     		mov	r3, r0
 466 0040 BB80     		strh	r3, [r7, #4]	@ movhi
 131:main.c        ****     
 132:main.c        ****     // get value from ADC then convert to DAC to send to external LEDs
 133:main.c        ****     if (counteoc < 10) {
 467              		.loc 1 133 0
 468 0042 234B     		ldr	r3, .L18
 469 0044 1B68     		ldr	r3, [r3]
 470 0046 092B     		cmp	r3, #9
 471 0048 3BDC     		bgt	.L9
 134:main.c        ****         //2211
 135:main.c        ****         if (valueQ3 >= 2211) {
 472              		.loc 1 135 0
 473 004a B7F90E30 		ldrsh	r3, [r7, #14]
 474 004e 40F6A202 		movw	r2, #2210
 475 0052 9342     		cmp	r3, r2
 476 0054 02DD     		ble	.L10
 136:main.c        ****         //set flag for white light detected
 137:main.c        ****         lightDetectedFront[0] = 1;
 477              		.loc 1 137 0
 478 0056 1F4B     		ldr	r3, .L18+4
 479 0058 0122     		movs	r2, #1
 480 005a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 12


 481              	.L10:
 138:main.c        ****         }
 139:main.c        ****         if (valueQ4 >= 2211) {
 482              		.loc 1 139 0
 483 005c B7F90C30 		ldrsh	r3, [r7, #12]
 484 0060 40F6A202 		movw	r2, #2210
 485 0064 9342     		cmp	r3, r2
 486 0066 02DD     		ble	.L11
 140:main.c        ****         //set flag for white light detected
 141:main.c        ****         lightDetectedFront[1] = 1;
 487              		.loc 1 141 0
 488 0068 1A4B     		ldr	r3, .L18+4
 489 006a 0122     		movs	r2, #1
 490 006c 5A60     		str	r2, [r3, #4]
 491              	.L11:
 142:main.c        ****         }
 143:main.c        ****     
 144:main.c        ****         if (valueQ5 >= 2211) {
 492              		.loc 1 144 0
 493 006e B7F90A30 		ldrsh	r3, [r7, #10]
 494 0072 40F6A202 		movw	r2, #2210
 495 0076 9342     		cmp	r3, r2
 496 0078 02DD     		ble	.L12
 145:main.c        ****         //set flag for white light detected
 146:main.c        ****         lightDetectedFront[2] = 1;
 497              		.loc 1 146 0
 498 007a 164B     		ldr	r3, .L18+4
 499 007c 0122     		movs	r2, #1
 500 007e 9A60     		str	r2, [r3, #8]
 501              	.L12:
 147:main.c        ****         }
 148:main.c        ****         
 149:main.c        ****         if (valueQ1 >= 2211) {
 502              		.loc 1 149 0
 503 0080 B7F90830 		ldrsh	r3, [r7, #8]
 504 0084 40F6A202 		movw	r2, #2210
 505 0088 9342     		cmp	r3, r2
 506 008a 02DD     		ble	.L13
 150:main.c        ****         //set flag for white light detected
 151:main.c        ****             lightDetectedBack[1] = 1;
 507              		.loc 1 151 0
 508 008c 124B     		ldr	r3, .L18+8
 509 008e 0122     		movs	r2, #1
 510 0090 5A60     		str	r2, [r3, #4]
 511              	.L13:
 152:main.c        ****         }
 153:main.c        ****         
 154:main.c        ****         if (valueQ2 >= 2211) {
 512              		.loc 1 154 0
 513 0092 B7F90630 		ldrsh	r3, [r7, #6]
 514 0096 40F6A202 		movw	r2, #2210
 515 009a 9342     		cmp	r3, r2
 516 009c 02DD     		ble	.L14
 155:main.c        ****         //set flag for white light detected
 156:main.c        ****             lightDetectedBack[2] = 1;
 517              		.loc 1 156 0
 518 009e 0E4B     		ldr	r3, .L18+8
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 13


 519 00a0 0122     		movs	r2, #1
 520 00a2 9A60     		str	r2, [r3, #8]
 521              	.L14:
 157:main.c        ****         }
 158:main.c        ****                 
 159:main.c        ****                 
 160:main.c        ****         if (valueQ6 >= 2211) {
 522              		.loc 1 160 0
 523 00a4 B7F90430 		ldrsh	r3, [r7, #4]
 524 00a8 40F6A202 		movw	r2, #2210
 525 00ac 9342     		cmp	r3, r2
 526 00ae 02DD     		ble	.L15
 161:main.c        ****         //set flag for white light detected
 162:main.c        ****             lightDetectedBack[0] = 1;
 527              		.loc 1 162 0
 528 00b0 094B     		ldr	r3, .L18+8
 529 00b2 0122     		movs	r2, #1
 530 00b4 1A60     		str	r2, [r3]
 531              	.L15:
 163:main.c        ****         }
 164:main.c        ****         
 165:main.c        ****         counteoc++;
 532              		.loc 1 165 0
 533 00b6 064B     		ldr	r3, .L18
 534 00b8 1B68     		ldr	r3, [r3]
 535 00ba 0133     		adds	r3, r3, #1
 536 00bc 044A     		ldr	r2, .L18
 537 00be 1360     		str	r3, [r2]
 166:main.c        ****     } else {
 167:main.c        ****         processSensors = 1;   
 168:main.c        ****        
 169:main.c        ****     }
 170:main.c        ****     /* `#END` */
 171:main.c        **** }
 538              		.loc 1 171 0
 539 00c0 02E0     		b	.L17
 540              	.L9:
 167:main.c        ****        
 541              		.loc 1 167 0
 542 00c2 064B     		ldr	r3, .L18+12
 543 00c4 0122     		movs	r2, #1
 544 00c6 1A60     		str	r2, [r3]
 545              	.L17:
 546              		.loc 1 171 0
 547 00c8 00BF     		nop
 548 00ca 1037     		adds	r7, r7, #16
 549              		.cfi_def_cfa_offset 8
 550 00cc BD46     		mov	sp, r7
 551              		.cfi_def_cfa_register 13
 552              		@ sp needed
 553 00ce 80BD     		pop	{r7, pc}
 554              	.L19:
 555              		.align	2
 556              	.L18:
 557 00d0 00000000 		.word	counteoc
 558 00d4 00000000 		.word	lightDetectedFront
 559 00d8 00000000 		.word	lightDetectedBack
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 14


 560 00dc 00000000 		.word	processSensors
 561              		.cfi_endproc
 562              	.LFE71:
 563              		.size	isr_eoc_Interrupt_test, .-isr_eoc_Interrupt_test
 564              		.bss
 565              	count:
 566 0044 00       		.space	1
 567              		.section	.text.isr_motor_interrupt_speed,"ax",%progbits
 568              		.align	2
 569              		.global	isr_motor_interrupt_speed
 570              		.thumb
 571              		.thumb_func
 572              		.type	isr_motor_interrupt_speed, %function
 573              	isr_motor_interrupt_speed:
 574              	.LFB72:
 172:main.c        **** // NEED TO INCREASE/DECREASE SPEED TOO
 173:main.c        **** // AND IMPLEMENT LIGHT SENSOR THINGS
 174:main.c        **** volatile static int8 count;
 175:main.c        **** CY_ISR(isr_motor_interrupt_speed)
 176:main.c        **** {
 575              		.loc 1 176 0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 1, uses_anonymous_args = 0
 579              		@ link register save eliminated.
 580 0000 80B4     		push	{r7}
 581              		.cfi_def_cfa_offset 4
 582              		.cfi_offset 7, -4
 583 0002 00AF     		add	r7, sp, #0
 584              		.cfi_def_cfa_register 7
 177:main.c        ****     #ifdef isr_motor_INTERRUPT_INTERRUPT_CALLBACK
 178:main.c        ****         isr_motor_Interrupt_InterruptCallback();
 179:main.c        ****     #endif /* isr_motor_INTERRUPT_INTERRUPT_CALLBACK */ 
 180:main.c        **** 
 181:main.c        ****     /*  Place your Interrupt code here. */
 182:main.c        ****     /* `#START isr_motor_Interrupt` */
 183:main.c        ****       /*int16 currCountMotor2 = QuadDec_M2_GetCounter();
 184:main.c        ****       int16 currCountMotor1 = QuadDec_M1_GetCounter();  
 185:main.c        ****       
 186:main.c        ****      speedMotor1 = (currCountMotor1 - prevcountMotor1) / 0.2;
 187:main.c        ****      speedMotor2 = (currCountMotor2 - prevcountMotor2) / 0.2;
 188:main.c        ****     
 189:main.c        ****       prevcountMotor1 = currCountMotor1;
 190:main.c        ****       prevcountMotor2 = currCountMotor2;*/
 191:main.c        ****     
 192:main.c        ****     /* `#END` */
 193:main.c        **** }
 585              		.loc 1 193 0
 586 0004 00BF     		nop
 587 0006 BD46     		mov	sp, r7
 588              		.cfi_def_cfa_register 13
 589              		@ sp needed
 590 0008 80BC     		pop	{r7}
 591              		.cfi_restore 7
 592              		.cfi_def_cfa_offset 0
 593 000a 7047     		bx	lr
 594              		.cfi_endproc
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 15


 595              	.LFE72:
 596              		.size	isr_motor_interrupt_speed, .-isr_motor_interrupt_speed
 597              		.section	.rodata
 598              		.align	2
 599              	.LC0:
 600 0000 4D6F746F 		.ascii	"Motor 1 - start count: %d, end count: %d \012\000"
 600      72203120 
 600      2D207374 
 600      61727420 
 600      636F756E 
 601 002b 00       		.align	2
 602              	.LC1:
 603 002c 4D6F746F 		.ascii	"Motor 2 - start count: %d, end count: %d \012\000"
 603      72203220 
 603      2D207374 
 603      61727420 
 603      636F756E 
 604              		.section	.text.motorCount,"ax",%progbits
 605              		.align	2
 606              		.global	motorCount
 607              		.thumb
 608              		.thumb_func
 609              		.type	motorCount, %function
 610              	motorCount:
 611              	.LFB73:
 194:main.c        **** void motorCount(){
 612              		.loc 1 194 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 20008
 615              		@ frame_needed = 1, uses_anonymous_args = 0
 616 0000 80B5     		push	{r7, lr}
 617              		.cfi_def_cfa_offset 8
 618              		.cfi_offset 7, -8
 619              		.cfi_offset 14, -4
 620 0002 ADF59C4D 		sub	sp, sp, #19968
 621              		.cfi_def_cfa_offset 19976
 622 0006 8AB0     		sub	sp, sp, #40
 623              		.cfi_def_cfa_offset 20016
 624 0008 00AF     		add	r7, sp, #0
 625              		.cfi_def_cfa_register 7
 195:main.c        ****     int16 beginningCountMotor1 = 0;
 626              		.loc 1 195 0
 627 000a 0023     		movs	r3, #0
 628 000c 07F59C42 		add	r2, r7, #19968
 629 0010 02F12602 		add	r2, r2, #38
 630 0014 1380     		strh	r3, [r2]	@ movhi
 196:main.c        ****     int16 beginningCountMotor2 = 0;
 631              		.loc 1 196 0
 632 0016 0023     		movs	r3, #0
 633 0018 07F59C42 		add	r2, r7, #19968
 634 001c 02F12402 		add	r2, r2, #36
 635 0020 1380     		strh	r3, [r2]	@ movhi
 197:main.c        ****     int16 endCountMotor2 = QuadDec_M2_GetCounter();
 636              		.loc 1 197 0
 637 0022 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 638 0026 0346     		mov	r3, r0
 639 0028 07F59C42 		add	r2, r7, #19968
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 16


 640 002c 02F12202 		add	r2, r2, #34
 641 0030 1380     		strh	r3, [r2]	@ movhi
 198:main.c        ****     int16 endCountMotor1 = QuadDec_M1_GetCounter();
 642              		.loc 1 198 0
 643 0032 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 644 0036 0346     		mov	r3, r0
 645 0038 07F59C42 		add	r2, r7, #19968
 646 003c 02F12002 		add	r2, r2, #32
 647 0040 1380     		strh	r3, [r2]	@ movhi
 199:main.c        ****     char motor1String[10000]; 
 200:main.c        ****     sprintf(motor1String,"Motor 1 - start count: %d, end count: %d \n", beginningCountMotor1, endCo
 648              		.loc 1 200 0
 649 0042 07F59C43 		add	r3, r7, #19968
 650 0046 03F12603 		add	r3, r3, #38
 651 004a B3F90020 		ldrsh	r2, [r3]
 652 004e 07F59C43 		add	r3, r7, #19968
 653 0052 03F12003 		add	r3, r3, #32
 654 0056 B3F90030 		ldrsh	r3, [r3]
 655 005a 07F51C50 		add	r0, r7, #9984
 656 005e 00F12800 		add	r0, r0, #40
 657 0062 1838     		subs	r0, r0, #24
 658 0064 1449     		ldr	r1, .L22
 659 0066 FFF7FEFF 		bl	sprintf
 201:main.c        ****     char motor2String[10000];
 202:main.c        ****     sprintf(motor2String,"Motor 2 - start count: %d, end count: %d \n", beginningCountMotor2 , endC
 660              		.loc 1 202 0
 661 006a 07F59C43 		add	r3, r7, #19968
 662 006e 03F12403 		add	r3, r3, #36
 663 0072 B3F90020 		ldrsh	r2, [r3]
 664 0076 07F59C43 		add	r3, r7, #19968
 665 007a 03F12203 		add	r3, r3, #34
 666 007e B3F90030 		ldrsh	r3, [r3]
 667 0082 07F12800 		add	r0, r7, #40
 668 0086 2838     		subs	r0, r0, #40
 669 0088 0C49     		ldr	r1, .L22+4
 670 008a FFF7FEFF 		bl	sprintf
 203:main.c        ****     
 204:main.c        ****     usbPutString(motor1String);
 671              		.loc 1 204 0
 672 008e 07F51C53 		add	r3, r7, #9984
 673 0092 03F12803 		add	r3, r3, #40
 674 0096 183B     		subs	r3, r3, #24
 675 0098 1846     		mov	r0, r3
 676 009a FFF7FEFF 		bl	usbPutString
 205:main.c        ****     usbPutString(motor2String);
 677              		.loc 1 205 0
 678 009e 07F12803 		add	r3, r7, #40
 679 00a2 283B     		subs	r3, r3, #40
 680 00a4 1846     		mov	r0, r3
 681 00a6 FFF7FEFF 		bl	usbPutString
 206:main.c        **** 
 207:main.c        **** }
 682              		.loc 1 207 0
 683 00aa 00BF     		nop
 684 00ac 07F59C47 		add	r7, r7, #19968
 685 00b0 2837     		adds	r7, r7, #40
 686              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 17


 687 00b2 BD46     		mov	sp, r7
 688              		.cfi_def_cfa_register 13
 689              		@ sp needed
 690 00b4 80BD     		pop	{r7, pc}
 691              	.L23:
 692 00b6 00BF     		.align	2
 693              	.L22:
 694 00b8 00000000 		.word	.LC0
 695 00bc 2C000000 		.word	.LC1
 696              		.cfi_endproc
 697              	.LFE73:
 698              		.size	motorCount, .-motorCount
 699              		.section	.text.motorRun,"ax",%progbits
 700              		.align	2
 701              		.global	motorRun
 702              		.thumb
 703              		.thumb_func
 704              		.type	motorRun, %function
 705              	motorRun:
 706              	.LFB74:
 208:main.c        **** 
 209:main.c        **** void motorRun(int x){
 707              		.loc 1 209 0
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 8
 710              		@ frame_needed = 1, uses_anonymous_args = 0
 711 0000 80B5     		push	{r7, lr}
 712              		.cfi_def_cfa_offset 8
 713              		.cfi_offset 7, -8
 714              		.cfi_offset 14, -4
 715 0002 82B0     		sub	sp, sp, #8
 716              		.cfi_def_cfa_offset 16
 717 0004 00AF     		add	r7, sp, #0
 718              		.cfi_def_cfa_register 7
 719 0006 7860     		str	r0, [r7, #4]
 210:main.c        ****     
 211:main.c        ****     
 212:main.c        ****     
 213:main.c        ****     //PWM_1_Start();
 214:main.c        ****     //PWM_2_Start();
 215:main.c        **** 
 216:main.c        **** 
 217:main.c        ****     //motorStop();
 218:main.c        ****     //CyDelay(time); // so we have time to set the robot up
 219:main.c        ****     motorSetSpeed(x);
 720              		.loc 1 219 0
 721 0008 7868     		ldr	r0, [r7, #4]
 722 000a FFF7FEFF 		bl	motorSetSpeed
 220:main.c        ****     //CyDelay(time);
 221:main.c        ****     motorStop();
 723              		.loc 1 221 0
 724 000e FFF7FEFF 		bl	motorStop
 222:main.c        ****     
 223:main.c        ****     //motorGoBackwards();
 224:main.c        **** 
 225:main.c        ****     
 226:main.c        ****     //CyDelay(2000);
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 18


 227:main.c        ****  
 228:main.c        ****     //motorStop();
 229:main.c        ****     //motorCount();//checks count per second.
 230:main.c        **** 
 231:main.c        ****     
 232:main.c        **** }
 725              		.loc 1 232 0
 726 0012 00BF     		nop
 727 0014 0837     		adds	r7, r7, #8
 728              		.cfi_def_cfa_offset 8
 729 0016 BD46     		mov	sp, r7
 730              		.cfi_def_cfa_register 13
 731              		@ sp needed
 732 0018 80BD     		pop	{r7, pc}
 733              		.cfi_endproc
 734              	.LFE74:
 735              		.size	motorRun, .-motorRun
 736 001a 00BF     		.section	.text.isr_TS_Interrupt_sample,"ax",%progbits
 737              		.align	2
 738              		.global	isr_TS_Interrupt_sample
 739              		.thumb
 740              		.thumb_func
 741              		.type	isr_TS_Interrupt_sample, %function
 742              	isr_TS_Interrupt_sample:
 743              	.LFB75:
 233:main.c        **** CY_ISR(isr_TS_Interrupt_sample)
 234:main.c        **** {
 744              		.loc 1 234 0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 1, uses_anonymous_args = 0
 748 0000 80B5     		push	{r7, lr}
 749              		.cfi_def_cfa_offset 8
 750              		.cfi_offset 7, -8
 751              		.cfi_offset 14, -4
 752 0002 00AF     		add	r7, sp, #0
 753              		.cfi_def_cfa_register 7
 235:main.c        ****     #ifdef isr_TS_INTERRUPT_INTERRUPT_CALLBACK
 236:main.c        ****         isr_TS_Interrupt_InterruptCallback();
 237:main.c        ****     #endif /* isr_TS_INTERRUPT_INTERRUPT_CALLBACK */ 
 238:main.c        ****         ADC_StartConvert();
 754              		.loc 1 238 0
 755 0004 FFF7FEFF 		bl	ADC_StartConvert
 239:main.c        ****     /*  Place your Interrupt code here. */
 240:main.c        ****     /* `#START isr_TS_Interrupt` */
 241:main.c        **** 
 242:main.c        ****     /* `#END` */
 243:main.c        **** }
 756              		.loc 1 243 0
 757 0008 00BF     		nop
 758 000a 80BD     		pop	{r7, pc}
 759              		.cfi_endproc
 760              	.LFE75:
 761              		.size	isr_TS_Interrupt_sample, .-isr_TS_Interrupt_sample
 762              		.section	.text.main,"ax",%progbits
 763              		.align	2
 764              		.global	main
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 19


 765              		.thumb
 766              		.thumb_func
 767              		.type	main, %function
 768              	main:
 769              	.LFB76:
 244:main.c        **** 
 245:main.c        **** 
 246:main.c        **** int main()
 247:main.c        **** {
 770              		.loc 1 247 0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 16
 773              		@ frame_needed = 1, uses_anonymous_args = 0
 774 0000 80B5     		push	{r7, lr}
 775              		.cfi_def_cfa_offset 8
 776              		.cfi_offset 7, -8
 777              		.cfi_offset 14, -4
 778 0002 84B0     		sub	sp, sp, #16
 779              		.cfi_def_cfa_offset 24
 780 0004 00AF     		add	r7, sp, #0
 781              		.cfi_def_cfa_register 7
 248:main.c        ****     
 249:main.c        **** 
 250:main.c        **** // --------------------------------    
 251:main.c        **** // ----- INITIALIZATIONS ----------
 252:main.c        ****     CYGlobalIntEnable;
 782              		.loc 1 252 0
 783              		.syntax unified
 784              	@ 252 "main.c" 1
 785 0006 62B6     		CPSIE   i
 786              	@ 0 "" 2
 253:main.c        ****     count  = 0;
 787              		.loc 1 253 0
 788              		.thumb
 789              		.syntax unified
 790 0008 384B     		ldr	r3, .L34
 791 000a 0022     		movs	r2, #0
 792 000c 1A70     		strb	r2, [r3]
 254:main.c        ****     
 255:main.c        ****     ADC_Start();
 793              		.loc 1 255 0
 794 000e FFF7FEFF 		bl	ADC_Start
 256:main.c        ****     Timer_TS_Start();
 795              		.loc 1 256 0
 796 0012 FFF7FEFF 		bl	Timer_TS_Start
 257:main.c        ****     Timer_Motor_Start();
 797              		.loc 1 257 0
 798 0016 FFF7FEFF 		bl	Timer_Motor_Start
 258:main.c        ****     QuadDec_M1_Start();
 799              		.loc 1 258 0
 800 001a FFF7FEFF 		bl	QuadDec_M1_Start
 259:main.c        ****     QuadDec_M2_Start(); //init the quadencoder,
 801              		.loc 1 259 0
 802 001e FFF7FEFF 		bl	QuadDec_M2_Start
 260:main.c        ****     //isr_motor_StartEx(isr_motor_interrupt_speed);
 261:main.c        ****     
 262:main.c        ****     isr_TS_StartEx(isr_TS_Interrupt_sample);
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 20


 803              		.loc 1 262 0
 804 0022 3348     		ldr	r0, .L34+4
 805 0024 FFF7FEFF 		bl	isr_TS_StartEx
 263:main.c        ****     isr_eoc_StartEx(isr_eoc_Interrupt_test);
 806              		.loc 1 263 0
 807 0028 3248     		ldr	r0, .L34+8
 808 002a FFF7FEFF 		bl	isr_eoc_StartEx
 264:main.c        ****     
 265:main.c        ****     
 266:main.c        ****     //ADC_StartConvert();
 267:main.c        ****     
 268:main.c        ****     PWM_1_Start();
 809              		.loc 1 268 0
 810 002e FFF7FEFF 		bl	PWM_1_Start
 269:main.c        ****     PWM_2_Start();
 811              		.loc 1 269 0
 812 0032 FFF7FEFF 		bl	PWM_2_Start
 270:main.c        ****     LED_Write(0);
 813              		.loc 1 270 0
 814 0036 0020     		movs	r0, #0
 815 0038 FFF7FEFF 		bl	LED_Write
 271:main.c        ****     motorStop();
 816              		.loc 1 271 0
 817 003c FFF7FEFF 		bl	motorStop
 272:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION)   ; 
 818              		.loc 1 272 0
 819 0040 0121     		movs	r1, #1
 820 0042 0020     		movs	r0, #0
 821 0044 FFF7FEFF 		bl	USBUART_Start
 273:main.c        ****     ////////////////////////////////
 274:main.c        ****     
 275:main.c        ****     // Speed//
 276:main.c        ****     //int speed = -33;
 277:main.c        ****     //int time = 2000;
 278:main.c        ****    // motorRun(speed,time);
 279:main.c        **** 
 280:main.c        ****     /////////////////////////////////////////////
 281:main.c        ****     int lastState=0;
 822              		.loc 1 281 0
 823 0048 0023     		movs	r3, #0
 824 004a FB60     		str	r3, [r7, #12]
 282:main.c        ****     //usbPutString(displaystring);
 283:main.c        ****      //87cm motor 1 945, motor2 -958. 2seconds.
 284:main.c        ****     //10.8 counts per cm for distance.
 285:main.c        ****    //for speed,43.5cm/s 
 286:main.c        ****     
 287:main.c        **** //    
 288:main.c        **** //       //distance
 289:main.c        ****  int travelDis = 1740;//10.8 * travelDis
 825              		.loc 1 289 0
 826 004c 40F2CC63 		movw	r3, #1740
 827 0050 BB60     		str	r3, [r7, #8]
 290:main.c        ****   while(QuadDec_M1_GetCounter()<travelDis){
 828              		.loc 1 290 0
 829 0052 3BE0     		b	.L27
 830              	.L32:
 291:main.c        ****         if (processSensors == 1) {
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 21


 831              		.loc 1 291 0
 832 0054 284B     		ldr	r3, .L34+12
 833 0056 1B68     		ldr	r3, [r3]
 834 0058 012B     		cmp	r3, #1
 835 005a 37D1     		bne	.L27
 836              	.LBB2:
 292:main.c        ****     
 293:main.c        ****             int operation = convertSensorBinary();
 837              		.loc 1 293 0
 838 005c FFF7FEFF 		bl	convertSensorBinary
 839 0060 7860     		str	r0, [r7, #4]
 294:main.c        ****             
 295:main.c        ****     
 296:main.c        ****             switch(operation){
 840              		.loc 1 296 0
 841 0062 7B68     		ldr	r3, [r7, #4]
 842 0064 052B     		cmp	r3, #5
 843 0066 11D0     		beq	.L29
 844 0068 062B     		cmp	r3, #6
 845 006a 08D0     		beq	.L30
 846 006c 032B     		cmp	r3, #3
 847 006e 15D1     		bne	.L28
 297:main.c        ****                 case 3:// 0 1 1 // Q3 under black
 298:main.c        ****                     motorTurnLeft(50);//decrease go fast used to be 50 by 6
 848              		.loc 1 298 0
 849 0070 3220     		movs	r0, #50
 850 0072 FFF7FEFF 		bl	motorTurnLeft
 299:main.c        ****                     LED_Write(1);
 851              		.loc 1 299 0
 852 0076 0120     		movs	r0, #1
 853 0078 FFF7FEFF 		bl	LED_Write
 300:main.c        ****                     break;    
 854              		.loc 1 300 0
 855 007c 0EE0     		b	.L28
 856              	.L30:
 301:main.c        ****                     
 302:main.c        ****                 case 6:// 1 1 0 // Q5 under black  
 303:main.c        ****                     motorTurnRight(200);//increase 200 by 6
 857              		.loc 1 303 0
 858 007e C820     		movs	r0, #200
 859 0080 FFF7FEFF 		bl	motorTurnRight
 304:main.c        ****                     LED_Write(1);
 860              		.loc 1 304 0
 861 0084 0120     		movs	r0, #1
 862 0086 FFF7FEFF 		bl	LED_Write
 305:main.c        ****                     break;
 863              		.loc 1 305 0
 864 008a 07E0     		b	.L28
 865              	.L29:
 306:main.c        ****                     
 307:main.c        ****                 case 5:// 101 // Q4 under black
 308:main.c        ****                     motorSetSpeed(-7); //-40 is original
 866              		.loc 1 308 0
 867 008c 6FF00600 		mvn	r0, #6
 868 0090 FFF7FEFF 		bl	motorSetSpeed
 309:main.c        ****                     LED_Write(0);
 869              		.loc 1 309 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 22


 870 0094 0020     		movs	r0, #0
 871 0096 FFF7FEFF 		bl	LED_Write
 310:main.c        ****                     break;
 872              		.loc 1 310 0
 873 009a 00BF     		nop
 874              	.L28:
 311:main.c        ****             }
 312:main.c        ****              processSensors = 0;
 875              		.loc 1 312 0
 876 009c 164B     		ldr	r3, .L34+12
 877 009e 0022     		movs	r2, #0
 878 00a0 1A60     		str	r2, [r3]
 313:main.c        ****             //reset counter
 314:main.c        **** 
 315:main.c        ****             counteoc = 0;
 879              		.loc 1 315 0
 880 00a2 164B     		ldr	r3, .L34+16
 881 00a4 0022     		movs	r2, #0
 882 00a6 1A60     		str	r2, [r3]
 316:main.c        ****             //reset flags for lightsensors because it checks every 10 iterations, adds delay/
 317:main.c        ****             lightDetectedFront[0] = 0;
 883              		.loc 1 317 0
 884 00a8 154B     		ldr	r3, .L34+20
 885 00aa 0022     		movs	r2, #0
 886 00ac 1A60     		str	r2, [r3]
 318:main.c        ****             lightDetectedFront[1] = 0;
 887              		.loc 1 318 0
 888 00ae 144B     		ldr	r3, .L34+20
 889 00b0 0022     		movs	r2, #0
 890 00b2 5A60     		str	r2, [r3, #4]
 319:main.c        ****             lightDetectedFront[2] = 0;
 891              		.loc 1 319 0
 892 00b4 124B     		ldr	r3, .L34+20
 893 00b6 0022     		movs	r2, #0
 894 00b8 9A60     		str	r2, [r3, #8]
 320:main.c        ****             lightDetectedBack[0] = 0;
 895              		.loc 1 320 0
 896 00ba 124B     		ldr	r3, .L34+24
 897 00bc 0022     		movs	r2, #0
 898 00be 1A60     		str	r2, [r3]
 321:main.c        ****             lightDetectedBack[1] = 0;
 899              		.loc 1 321 0
 900 00c0 104B     		ldr	r3, .L34+24
 901 00c2 0022     		movs	r2, #0
 902 00c4 5A60     		str	r2, [r3, #4]
 322:main.c        ****             lightDetectedBack[2] = 0;
 903              		.loc 1 322 0
 904 00c6 0F4B     		ldr	r3, .L34+24
 905 00c8 0022     		movs	r2, #0
 906 00ca 9A60     		str	r2, [r3, #8]
 907              	.L27:
 908              	.LBE2:
 290:main.c        ****         if (processSensors == 1) {
 909              		.loc 1 290 0
 910 00cc FFF7FEFF 		bl	QuadDec_M1_GetCounter
 911 00d0 0346     		mov	r3, r0
 912 00d2 1A46     		mov	r2, r3
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 23


 913 00d4 BB68     		ldr	r3, [r7, #8]
 914 00d6 9A42     		cmp	r2, r3
 915 00d8 BCDB     		blt	.L32
 323:main.c        ****           
 324:main.c        ****             
 325:main.c        ****     
 326:main.c        ****         }
 327:main.c        ****     }
 328:main.c        ****     motorStop();
 916              		.loc 1 328 0
 917 00da FFF7FEFF 		bl	motorStop
 329:main.c        ****     motorCount();
 918              		.loc 1 329 0
 919 00de FFF7FEFF 		bl	motorCount
 920 00e2 0023     		movs	r3, #0
 330:main.c        ****     
 331:main.c        ****     /// End here
 332:main.c        ****     
 333:main.c        ****     
 334:main.c        ****     
 335:main.c        ****     
 336:main.c        ****     
 337:main.c        ****     
 338:main.c        ****     
 339:main.c        ****    ///////////////////////////////////////// LINE TRACKING////////
 340:main.c        ****     
 341:main.c        **** //    while(1)
 342:main.c        **** //    {
 343:main.c        **** //        /* Place your application code here. */
 344:main.c        **** //       
 345:main.c        **** //        if (processSensors == 1) {
 346:main.c        **** //                   
 347:main.c        **** //            int operation = convertSensorBinary();
 348:main.c        **** //            int backOps = convertBackBinary();
 349:main.c        **** //
 350:main.c        **** //            switch(operation){
 351:main.c        **** //            //where 1 is on white, 0 is on black.
 352:main.c        **** //                
 353:main.c        **** //                case 7: // 111 // all under white\\
 354:main.c        **** //                    
 355:main.c        **** //                
 356:main.c        **** //              
 357:main.c        **** //                        if(backOps == 7){
 358:main.c        **** //                            
 359:main.c        **** //                             motorCircle(40);
 360:main.c        **** //                            
 361:main.c        **** //                        }
 362:main.c        **** //                        
 363:main.c        **** //                    
 364:main.c        **** //                        else if(backOps == 5){
 365:main.c        **** //                            motorGoStraight();
 366:main.c        **** //                        }   
 367:main.c        **** //                        break;
 368:main.c        **** //                    
 369:main.c        **** //                case 3:// 0 1 1 // Q3 under black
 370:main.c        **** //                    motorTurnLeft(50);//decrease go fast used to be 50 by 6
 371:main.c        **** //                    LED_Write(1);
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 24


 372:main.c        **** //                    break;    
 373:main.c        **** //                    
 374:main.c        **** //                case 6:// 1 1 0 // Q5 under black  
 375:main.c        **** //                    motorTurnRight(200);//increase 200 by 6
 376:main.c        **** //                    LED_Write(1);
 377:main.c        **** //                    break;
 378:main.c        **** //                    
 379:main.c        **** //                case 5:// 101 // Q4 under black
 380:main.c        **** //                    motorGoStraight();
 381:main.c        **** //                    LED_Write(0);
 382:main.c        **** //                    break;
 383:main.c        **** //                case 1: // 001 --> left intersection
 384:main.c        **** //                    //lastState=1;
 385:main.c        **** //                    motorStop();
 386:main.c        **** //                    CyDelay(50);
 387:main.c        **** //                    motorTurnLeft(44);
 388:main.c        **** //                    CyDelay(350);
 389:main.c        **** //                    break;
 390:main.c        **** //                case 4: // 100 --> right intersection
 391:main.c        **** //                   // lastState=2;
 392:main.c        **** //                    motorStop();
 393:main.c        **** //                    CyDelay(50);
 394:main.c        **** //                    motorTurnRight(206);
 395:main.c        **** //                    CyDelay(350);
 396:main.c        **** //                    break;
 397:main.c        **** //                    
 398:main.c        **** //                
 399:main.c        **** //                
 400:main.c        **** //                
 401:main.c        **** //                    
 402:main.c        **** //                case 0: // 000 // ALL UNDER black
 403:main.c        **** //                      
 404:main.c        **** //                    motorStop();
 405:main.c        **** //                    break;    
 406:main.c        **** //
 407:main.c        **** //               
 408:main.c        **** //                
 409:main.c        **** //               
 410:main.c        **** //            
 411:main.c        **** //            }
 412:main.c        **** //            
 413:main.c        **** //        
 414:main.c        **** //
 415:main.c        **** //       
 416:main.c        **** //            //reset variable.
 417:main.c        **** //            processSensors = 0;
 418:main.c        **** //            //reset counter
 419:main.c        **** //
 420:main.c        **** //             counteoc = 0;
 421:main.c        **** //            //reset flags for lightsensors because it checks every 10 iterations, adds delay/
 422:main.c        **** //            lightDetectedFront[0] = 0;
 423:main.c        **** //            lightDetectedFront[1] = 0;
 424:main.c        **** //            lightDetectedFront[2] = 0;
 425:main.c        **** //            lightDetectedBack[0] = 0;
 426:main.c        **** //            lightDetectedBack[1] = 0;
 427:main.c        **** //            lightDetectedBack[2] = 0;
 428:main.c        **** //          
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 25


 429:main.c        **** //        }
 430:main.c        **** //        
 431:main.c        **** //    }   
 432:main.c        ****     
 433:main.c        **** //////////////////////////////////////
 434:main.c        **** }
 921              		.loc 1 434 0
 922 00e4 1846     		mov	r0, r3
 923 00e6 1037     		adds	r7, r7, #16
 924              		.cfi_def_cfa_offset 8
 925 00e8 BD46     		mov	sp, r7
 926              		.cfi_def_cfa_register 13
 927              		@ sp needed
 928 00ea 80BD     		pop	{r7, pc}
 929              	.L35:
 930              		.align	2
 931              	.L34:
 932 00ec 44000000 		.word	count
 933 00f0 00000000 		.word	isr_TS_Interrupt_sample
 934 00f4 00000000 		.word	isr_eoc_Interrupt_test
 935 00f8 00000000 		.word	processSensors
 936 00fc 00000000 		.word	counteoc
 937 0100 00000000 		.word	lightDetectedFront
 938 0104 00000000 		.word	lightDetectedBack
 939              		.cfi_endproc
 940              	.LFE76:
 941              		.size	main, .-main
 942              		.section	.text.convertBackBinary,"ax",%progbits
 943              		.align	2
 944              		.global	convertBackBinary
 945              		.thumb
 946              		.thumb_func
 947              		.type	convertBackBinary, %function
 948              	convertBackBinary:
 949              	.LFB77:
 435:main.c        **** 
 436:main.c        ****   
 437:main.c        **** 
 438:main.c        **** int convertBackBinary(){
 950              		.loc 1 438 0
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 16
 953              		@ frame_needed = 1, uses_anonymous_args = 0
 954              		@ link register save eliminated.
 955 0000 80B4     		push	{r7}
 956              		.cfi_def_cfa_offset 4
 957              		.cfi_offset 7, -4
 958 0002 85B0     		sub	sp, sp, #20
 959              		.cfi_def_cfa_offset 24
 960 0004 00AF     		add	r7, sp, #0
 961              		.cfi_def_cfa_register 7
 439:main.c        **** 
 440:main.c        ****     int value1=0;
 962              		.loc 1 440 0
 963 0006 0023     		movs	r3, #0
 964 0008 FB60     		str	r3, [r7, #12]
 441:main.c        ****     int Q1 = lightDetectedBack[1] ;
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 26


 965              		.loc 1 441 0
 966 000a 104B     		ldr	r3, .L38
 967 000c 5B68     		ldr	r3, [r3, #4]
 968 000e BB60     		str	r3, [r7, #8]
 442:main.c        ****     int Q2 = lightDetectedBack[2];
 969              		.loc 1 442 0
 970 0010 0E4B     		ldr	r3, .L38
 971 0012 9B68     		ldr	r3, [r3, #8]
 972 0014 7B60     		str	r3, [r7, #4]
 443:main.c        ****     int Q6 =lightDetectedBack[0];
 973              		.loc 1 443 0
 974 0016 0D4B     		ldr	r3, .L38
 975 0018 1B68     		ldr	r3, [r3]
 976 001a 3B60     		str	r3, [r7]
 444:main.c        ****     value1 =  value1 + lightDetectedBack[1] *2;
 977              		.loc 1 444 0
 978 001c 0B4B     		ldr	r3, .L38
 979 001e 5B68     		ldr	r3, [r3, #4]
 980 0020 5B00     		lsls	r3, r3, #1
 981 0022 FA68     		ldr	r2, [r7, #12]
 982 0024 1344     		add	r3, r3, r2
 983 0026 FB60     		str	r3, [r7, #12]
 445:main.c        ****     value1 = value1 +  lightDetectedBack[2] *4;
 984              		.loc 1 445 0
 985 0028 084B     		ldr	r3, .L38
 986 002a 9B68     		ldr	r3, [r3, #8]
 987 002c 9B00     		lsls	r3, r3, #2
 988 002e FA68     		ldr	r2, [r7, #12]
 989 0030 1344     		add	r3, r3, r2
 990 0032 FB60     		str	r3, [r7, #12]
 446:main.c        ****     value1 = value1 + lightDetectedBack[0] *1;
 991              		.loc 1 446 0
 992 0034 054B     		ldr	r3, .L38
 993 0036 1B68     		ldr	r3, [r3]
 994 0038 FA68     		ldr	r2, [r7, #12]
 995 003a 1344     		add	r3, r3, r2
 996 003c FB60     		str	r3, [r7, #12]
 447:main.c        **** 
 448:main.c        ****     return value1;
 997              		.loc 1 448 0
 998 003e FB68     		ldr	r3, [r7, #12]
 449:main.c        **** 
 450:main.c        **** }
 999              		.loc 1 450 0
 1000 0040 1846     		mov	r0, r3
 1001 0042 1437     		adds	r7, r7, #20
 1002              		.cfi_def_cfa_offset 4
 1003 0044 BD46     		mov	sp, r7
 1004              		.cfi_def_cfa_register 13
 1005              		@ sp needed
 1006 0046 80BC     		pop	{r7}
 1007              		.cfi_restore 7
 1008              		.cfi_def_cfa_offset 0
 1009 0048 7047     		bx	lr
 1010              	.L39:
 1011 004a 00BF     		.align	2
 1012              	.L38:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 27


 1013 004c 00000000 		.word	lightDetectedBack
 1014              		.cfi_endproc
 1015              	.LFE77:
 1016              		.size	convertBackBinary, .-convertBackBinary
 1017              		.section	.text.convertSensorBinary,"ax",%progbits
 1018              		.align	2
 1019              		.global	convertSensorBinary
 1020              		.thumb
 1021              		.thumb_func
 1022              		.type	convertSensorBinary, %function
 1023              	convertSensorBinary:
 1024              	.LFB78:
 451:main.c        **** 
 452:main.c        **** int convertSensorBinary()
 453:main.c        **** {
 1025              		.loc 1 453 0
 1026              		.cfi_startproc
 1027              		@ args = 0, pretend = 0, frame = 16
 1028              		@ frame_needed = 1, uses_anonymous_args = 0
 1029              		@ link register save eliminated.
 1030 0000 80B4     		push	{r7}
 1031              		.cfi_def_cfa_offset 4
 1032              		.cfi_offset 7, -4
 1033 0002 85B0     		sub	sp, sp, #20
 1034              		.cfi_def_cfa_offset 24
 1035 0004 00AF     		add	r7, sp, #0
 1036              		.cfi_def_cfa_register 7
 454:main.c        ****    int value=0;
 1037              		.loc 1 454 0
 1038 0006 0023     		movs	r3, #0
 1039 0008 FB60     		str	r3, [r7, #12]
 455:main.c        ****   int Q3 = lightDetectedFront[0];
 1040              		.loc 1 455 0
 1041 000a 104B     		ldr	r3, .L42
 1042 000c 1B68     		ldr	r3, [r3]
 1043 000e BB60     		str	r3, [r7, #8]
 456:main.c        ****   int Q4 = lightDetectedFront[1];
 1044              		.loc 1 456 0
 1045 0010 0E4B     		ldr	r3, .L42
 1046 0012 5B68     		ldr	r3, [r3, #4]
 1047 0014 7B60     		str	r3, [r7, #4]
 457:main.c        ****    int Q5 = lightDetectedFront[2];
 1048              		.loc 1 457 0
 1049 0016 0D4B     		ldr	r3, .L42
 1050 0018 9B68     		ldr	r3, [r3, #8]
 1051 001a 3B60     		str	r3, [r7]
 458:main.c        ****   value=value + lightDetectedFront[0]*4;
 1052              		.loc 1 458 0
 1053 001c 0B4B     		ldr	r3, .L42
 1054 001e 1B68     		ldr	r3, [r3]
 1055 0020 9B00     		lsls	r3, r3, #2
 1056 0022 FA68     		ldr	r2, [r7, #12]
 1057 0024 1344     		add	r3, r3, r2
 1058 0026 FB60     		str	r3, [r7, #12]
 459:main.c        ****   value=value + lightDetectedFront[1]*2;
 1059              		.loc 1 459 0
 1060 0028 084B     		ldr	r3, .L42
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 28


 1061 002a 5B68     		ldr	r3, [r3, #4]
 1062 002c 5B00     		lsls	r3, r3, #1
 1063 002e FA68     		ldr	r2, [r7, #12]
 1064 0030 1344     		add	r3, r3, r2
 1065 0032 FB60     		str	r3, [r7, #12]
 460:main.c        ****   value=value + lightDetectedFront[2]*1;
 1066              		.loc 1 460 0
 1067 0034 054B     		ldr	r3, .L42
 1068 0036 9B68     		ldr	r3, [r3, #8]
 1069 0038 FA68     		ldr	r2, [r7, #12]
 1070 003a 1344     		add	r3, r3, r2
 1071 003c FB60     		str	r3, [r7, #12]
 461:main.c        ****     return value;
 1072              		.loc 1 461 0
 1073 003e FB68     		ldr	r3, [r7, #12]
 462:main.c        **** }
 1074              		.loc 1 462 0
 1075 0040 1846     		mov	r0, r3
 1076 0042 1437     		adds	r7, r7, #20
 1077              		.cfi_def_cfa_offset 4
 1078 0044 BD46     		mov	sp, r7
 1079              		.cfi_def_cfa_register 13
 1080              		@ sp needed
 1081 0046 80BC     		pop	{r7}
 1082              		.cfi_restore 7
 1083              		.cfi_def_cfa_offset 0
 1084 0048 7047     		bx	lr
 1085              	.L43:
 1086 004a 00BF     		.align	2
 1087              	.L42:
 1088 004c 00000000 		.word	lightDetectedFront
 1089              		.cfi_endproc
 1090              	.LFE78:
 1091              		.size	convertSensorBinary, .-convertSensorBinary
 1092              		.section	.text.usbPutString,"ax",%progbits
 1093              		.align	2
 1094              		.global	usbPutString
 1095              		.thumb
 1096              		.thumb_func
 1097              		.type	usbPutString, %function
 1098              	usbPutString:
 1099              	.LFB79:
 463:main.c        **** //* ========================================
 464:main.c        **** void usbPutString(char *s)
 465:main.c        **** {
 1100              		.loc 1 465 0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 8
 1103              		@ frame_needed = 1, uses_anonymous_args = 0
 1104 0000 80B5     		push	{r7, lr}
 1105              		.cfi_def_cfa_offset 8
 1106              		.cfi_offset 7, -8
 1107              		.cfi_offset 14, -4
 1108 0002 82B0     		sub	sp, sp, #8
 1109              		.cfi_def_cfa_offset 16
 1110 0004 00AF     		add	r7, sp, #0
 1111              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 29


 1112 0006 7860     		str	r0, [r7, #4]
 466:main.c        **** // !! Assumes that *s is a string with allocated space >=64 chars     
 467:main.c        **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 468:main.c        **** //  length to 62 char (63rd char is a '!')
 469:main.c        **** 
 470:main.c        **** #ifdef USE_USB     
 471:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1113              		.loc 1 471 0
 1114 0008 00BF     		nop
 1115              	.L45:
 1116              		.loc 1 471 0 is_stmt 0 discriminator 1
 1117 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 1118 000e 0346     		mov	r3, r0
 1119 0010 002B     		cmp	r3, #0
 1120 0012 FAD0     		beq	.L45
 472:main.c        ****     s[63]='\0';
 1121              		.loc 1 472 0 is_stmt 1
 1122 0014 7B68     		ldr	r3, [r7, #4]
 1123 0016 3F33     		adds	r3, r3, #63
 1124 0018 0022     		movs	r2, #0
 1125 001a 1A70     		strb	r2, [r3]
 473:main.c        ****     s[62]='!';
 1126              		.loc 1 473 0
 1127 001c 7B68     		ldr	r3, [r7, #4]
 1128 001e 3E33     		adds	r3, r3, #62
 1129 0020 2122     		movs	r2, #33
 1130 0022 1A70     		strb	r2, [r3]
 474:main.c        ****     USBUART_PutData((uint8*)s,strlen(s));
 1131              		.loc 1 474 0
 1132 0024 7868     		ldr	r0, [r7, #4]
 1133 0026 FFF7FEFF 		bl	strlen
 1134 002a 0346     		mov	r3, r0
 1135 002c 9BB2     		uxth	r3, r3
 1136 002e 1946     		mov	r1, r3
 1137 0030 7868     		ldr	r0, [r7, #4]
 1138 0032 FFF7FEFF 		bl	USBUART_PutData
 475:main.c        **** #endif
 476:main.c        **** }
 1139              		.loc 1 476 0
 1140 0036 00BF     		nop
 1141 0038 0837     		adds	r7, r7, #8
 1142              		.cfi_def_cfa_offset 8
 1143 003a BD46     		mov	sp, r7
 1144              		.cfi_def_cfa_register 13
 1145              		@ sp needed
 1146 003c 80BD     		pop	{r7, pc}
 1147              		.cfi_endproc
 1148              	.LFE79:
 1149              		.size	usbPutString, .-usbPutString
 1150 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 1151              		.align	2
 1152              		.global	usbPutChar
 1153              		.thumb
 1154              		.thumb_func
 1155              		.type	usbPutChar, %function
 1156              	usbPutChar:
 1157              	.LFB80:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 30


 477:main.c        **** //* ========================================
 478:main.c        **** void usbPutChar(char c)
 479:main.c        **** {
 1158              		.loc 1 479 0
 1159              		.cfi_startproc
 1160              		@ args = 0, pretend = 0, frame = 8
 1161              		@ frame_needed = 1, uses_anonymous_args = 0
 1162 0000 80B5     		push	{r7, lr}
 1163              		.cfi_def_cfa_offset 8
 1164              		.cfi_offset 7, -8
 1165              		.cfi_offset 14, -4
 1166 0002 82B0     		sub	sp, sp, #8
 1167              		.cfi_def_cfa_offset 16
 1168 0004 00AF     		add	r7, sp, #0
 1169              		.cfi_def_cfa_register 7
 1170 0006 0346     		mov	r3, r0
 1171 0008 FB71     		strb	r3, [r7, #7]
 480:main.c        **** #ifdef USE_USB     
 481:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1172              		.loc 1 481 0
 1173 000a 00BF     		nop
 1174              	.L47:
 1175              		.loc 1 481 0 is_stmt 0 discriminator 1
 1176 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 1177 0010 0346     		mov	r3, r0
 1178 0012 002B     		cmp	r3, #0
 1179 0014 FAD0     		beq	.L47
 482:main.c        ****     USBUART_PutChar(c);
 1180              		.loc 1 482 0 is_stmt 1
 1181 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1182 0018 1846     		mov	r0, r3
 1183 001a FFF7FEFF 		bl	USBUART_PutChar
 483:main.c        **** #endif    
 484:main.c        **** }
 1184              		.loc 1 484 0
 1185 001e 00BF     		nop
 1186 0020 0837     		adds	r7, r7, #8
 1187              		.cfi_def_cfa_offset 8
 1188 0022 BD46     		mov	sp, r7
 1189              		.cfi_def_cfa_register 13
 1190              		@ sp needed
 1191 0024 80BD     		pop	{r7, pc}
 1192              		.cfi_endproc
 1193              	.LFE80:
 1194              		.size	usbPutChar, .-usbPutChar
 1195 0026 00BF     		.section	.text.handle_usb,"ax",%progbits
 1196              		.align	2
 1197              		.global	handle_usb
 1198              		.thumb
 1199              		.thumb_func
 1200              		.type	handle_usb, %function
 1201              	handle_usb:
 1202              	.LFB81:
 485:main.c        **** //* ========================================
 486:main.c        **** void handle_usb()
 487:main.c        **** {
 1203              		.loc 1 487 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 31


 1204              		.cfi_startproc
 1205              		@ args = 0, pretend = 0, frame = 8
 1206              		@ frame_needed = 1, uses_anonymous_args = 0
 1207 0000 80B5     		push	{r7, lr}
 1208              		.cfi_def_cfa_offset 8
 1209              		.cfi_offset 7, -8
 1210              		.cfi_offset 14, -4
 1211 0002 82B0     		sub	sp, sp, #8
 1212              		.cfi_def_cfa_offset 16
 1213 0004 00AF     		add	r7, sp, #0
 1214              		.cfi_def_cfa_register 7
 488:main.c        ****     // handles input at terminal, echos it back to the terminal
 489:main.c        ****     // turn echo OFF, key emulation: only CR
 490:main.c        ****     // entered string is made available in 'line' and 'flag_KB_string' is set
 491:main.c        ****     
 492:main.c        ****     static uint8 usbStarted = FALSE;
 493:main.c        ****     static uint16 usbBufCount = 0;
 494:main.c        ****     uint8 c = 0; 
 1215              		.loc 1 494 0
 1216 0006 0023     		movs	r3, #0
 1217 0008 FB71     		strb	r3, [r7, #7]
 495:main.c        ****     
 496:main.c        **** 
 497:main.c        ****     if (!usbStarted)
 1218              		.loc 1 497 0
 1219 000a 2B4B     		ldr	r3, .L58
 1220 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1221 000e 002B     		cmp	r3, #0
 1222 0010 0AD1     		bne	.L49
 498:main.c        ****     {
 499:main.c        ****         if (USBUART_GetConfiguration())
 1223              		.loc 1 499 0
 1224 0012 FFF7FEFF 		bl	USBUART_GetConfiguration
 1225 0016 0346     		mov	r3, r0
 1226 0018 002B     		cmp	r3, #0
 1227 001a 49D0     		beq	.L57
 500:main.c        ****         {
 501:main.c        ****             USBUART_CDC_Init();
 1228              		.loc 1 501 0
 1229 001c FFF7FEFF 		bl	USBUART_CDC_Init
 502:main.c        ****             usbStarted = TRUE;
 1230              		.loc 1 502 0
 1231 0020 254B     		ldr	r3, .L58
 1232 0022 0122     		movs	r2, #1
 1233 0024 1A70     		strb	r2, [r3]
 503:main.c        ****         }
 504:main.c        ****     }
 505:main.c        ****     else
 506:main.c        ****     {
 507:main.c        ****         if (USBUART_DataIsReady() != 0)
 508:main.c        ****         {  
 509:main.c        ****             c = USBUART_GetChar();
 510:main.c        **** 
 511:main.c        ****             if ((c == 13) || (c == 10))
 512:main.c        ****             {
 513:main.c        **** //                if (usbBufCount > 0)
 514:main.c        ****                 {
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 32


 515:main.c        ****                     entry[usbBufCount]= '\0';
 516:main.c        ****                     strcpy(line,entry);
 517:main.c        ****                     usbBufCount = 0;
 518:main.c        ****                     flag_KB_string = 1;
 519:main.c        ****                 }
 520:main.c        ****             }
 521:main.c        ****             else 
 522:main.c        ****             {
 523:main.c        ****                 if (((c == CHAR_BACKSP) || (c == CHAR_DEL) ) && (usbBufCount > 0) )
 524:main.c        ****                     usbBufCount--;
 525:main.c        ****                 else
 526:main.c        ****                 {
 527:main.c        ****                     if (usbBufCount > (BUF_SIZE-2) ) // one less else strtok triggers a crash
 528:main.c        ****                     {
 529:main.c        ****                        USBUART_PutChar('!');        
 530:main.c        ****                     }
 531:main.c        ****                     else
 532:main.c        ****                         entry[usbBufCount++] = c;  
 533:main.c        ****                 }  
 534:main.c        ****             }
 535:main.c        ****         }
 536:main.c        ****     }    
 537:main.c        **** }
 1234              		.loc 1 537 0
 1235 0026 43E0     		b	.L57
 1236              	.L49:
 507:main.c        ****         {  
 1237              		.loc 1 507 0
 1238 0028 FFF7FEFF 		bl	USBUART_DataIsReady
 1239 002c 0346     		mov	r3, r0
 1240 002e 002B     		cmp	r3, #0
 1241 0030 3ED0     		beq	.L57
 509:main.c        **** 
 1242              		.loc 1 509 0
 1243 0032 FFF7FEFF 		bl	USBUART_GetChar
 1244 0036 0346     		mov	r3, r0
 1245 0038 FB71     		strb	r3, [r7, #7]
 511:main.c        ****             {
 1246              		.loc 1 511 0
 1247 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1248 003c 0D2B     		cmp	r3, #13
 1249 003e 02D0     		beq	.L52
 511:main.c        ****             {
 1250              		.loc 1 511 0 is_stmt 0 discriminator 1
 1251 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1252 0042 0A2B     		cmp	r3, #10
 1253 0044 10D1     		bne	.L53
 1254              	.L52:
 515:main.c        ****                     strcpy(line,entry);
 1255              		.loc 1 515 0 is_stmt 1
 1256 0046 1D4B     		ldr	r3, .L58+4
 1257 0048 1B88     		ldrh	r3, [r3]
 1258 004a 1A46     		mov	r2, r3
 1259 004c 1C4B     		ldr	r3, .L58+8
 1260 004e 0021     		movs	r1, #0
 1261 0050 9954     		strb	r1, [r3, r2]
 516:main.c        ****                     usbBufCount = 0;
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 33


 1262              		.loc 1 516 0
 1263 0052 1B49     		ldr	r1, .L58+8
 1264 0054 1B48     		ldr	r0, .L58+12
 1265 0056 FFF7FEFF 		bl	strcpy
 517:main.c        ****                     flag_KB_string = 1;
 1266              		.loc 1 517 0
 1267 005a 184B     		ldr	r3, .L58+4
 1268 005c 0022     		movs	r2, #0
 1269 005e 1A80     		strh	r2, [r3]	@ movhi
 518:main.c        ****                 }
 1270              		.loc 1 518 0
 1271 0060 194B     		ldr	r3, .L58+16
 1272 0062 0122     		movs	r2, #1
 1273 0064 1A70     		strb	r2, [r3]
 1274 0066 23E0     		b	.L51
 1275              	.L53:
 523:main.c        ****                     usbBufCount--;
 1276              		.loc 1 523 0
 1277 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1278 006a 082B     		cmp	r3, #8
 1279 006c 02D0     		beq	.L54
 523:main.c        ****                     usbBufCount--;
 1280              		.loc 1 523 0 is_stmt 0 discriminator 2
 1281 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1282 0070 7F2B     		cmp	r3, #127
 1283 0072 0AD1     		bne	.L55
 1284              	.L54:
 523:main.c        ****                     usbBufCount--;
 1285              		.loc 1 523 0 discriminator 3
 1286 0074 114B     		ldr	r3, .L58+4
 1287 0076 1B88     		ldrh	r3, [r3]
 1288 0078 002B     		cmp	r3, #0
 1289 007a 06D0     		beq	.L55
 524:main.c        ****                 else
 1290              		.loc 1 524 0 is_stmt 1
 1291 007c 0F4B     		ldr	r3, .L58+4
 1292 007e 1B88     		ldrh	r3, [r3]
 1293 0080 013B     		subs	r3, r3, #1
 1294 0082 9AB2     		uxth	r2, r3
 1295 0084 0D4B     		ldr	r3, .L58+4
 1296 0086 1A80     		strh	r2, [r3]	@ movhi
 1297 0088 12E0     		b	.L51
 1298              	.L55:
 527:main.c        ****                     {
 1299              		.loc 1 527 0
 1300 008a 0C4B     		ldr	r3, .L58+4
 1301 008c 1B88     		ldrh	r3, [r3]
 1302 008e 3E2B     		cmp	r3, #62
 1303 0090 03D9     		bls	.L56
 529:main.c        ****                     }
 1304              		.loc 1 529 0
 1305 0092 2120     		movs	r0, #33
 1306 0094 FFF7FEFF 		bl	USBUART_PutChar
 1307              		.loc 1 537 0
 1308 0098 0AE0     		b	.L57
 1309              	.L56:
 532:main.c        ****                 }  
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 34


 1310              		.loc 1 532 0
 1311 009a 084B     		ldr	r3, .L58+4
 1312 009c 1B88     		ldrh	r3, [r3]
 1313 009e 5A1C     		adds	r2, r3, #1
 1314 00a0 91B2     		uxth	r1, r2
 1315 00a2 064A     		ldr	r2, .L58+4
 1316 00a4 1180     		strh	r1, [r2]	@ movhi
 1317 00a6 1946     		mov	r1, r3
 1318 00a8 054A     		ldr	r2, .L58+8
 1319 00aa FB79     		ldrb	r3, [r7, #7]
 1320 00ac 5354     		strb	r3, [r2, r1]
 1321              		.loc 1 537 0
 1322 00ae FFE7     		b	.L57
 1323              	.L51:
 1324              	.L57:
 1325 00b0 00BF     		nop
 1326 00b2 0837     		adds	r7, r7, #8
 1327              		.cfi_def_cfa_offset 8
 1328 00b4 BD46     		mov	sp, r7
 1329              		.cfi_def_cfa_register 13
 1330              		@ sp needed
 1331 00b6 80BD     		pop	{r7, pc}
 1332              	.L59:
 1333              		.align	2
 1334              	.L58:
 1335 00b8 45000000 		.word	usbStarted.8812
 1336 00bc 46000000 		.word	usbBufCount.8813
 1337 00c0 00000000 		.word	entry
 1338 00c4 00000000 		.word	line
 1339 00c8 00000000 		.word	flag_KB_string
 1340              		.cfi_endproc
 1341              	.LFE81:
 1342              		.size	handle_usb, .-handle_usb
 1343              		.bss
 1344              	usbStarted.8812:
 1345 0045 00       		.space	1
 1346              		.align	1
 1347              	usbBufCount.8813:
 1348 0046 0000     		.space	2
 1349              		.text
 1350              	.Letext0:
 1351              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1352              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1353              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1354              		.file 5 "vars.h"
 1355              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1356              		.section	.debug_info,"",%progbits
 1357              	.Ldebug_info0:
 1358 0000 51070000 		.4byte	0x751
 1359 0004 0400     		.2byte	0x4
 1360 0006 00000000 		.4byte	.Ldebug_abbrev0
 1361 000a 04       		.byte	0x4
 1362 000b 01       		.uleb128 0x1
 1363 000c B5000000 		.4byte	.LASF102
 1364 0010 0C       		.byte	0xc
 1365 0011 B9040000 		.4byte	.LASF103
 1366 0015 AF010000 		.4byte	.LASF104
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 35


 1367 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1368 001d 00000000 		.4byte	0
 1369 0021 00000000 		.4byte	.Ldebug_line0
 1370 0025 02       		.uleb128 0x2
 1371 0026 01       		.byte	0x1
 1372 0027 06       		.byte	0x6
 1373 0028 AE030000 		.4byte	.LASF0
 1374 002c 02       		.uleb128 0x2
 1375 002d 01       		.byte	0x1
 1376 002e 08       		.byte	0x8
 1377 002f 75030000 		.4byte	.LASF1
 1378 0033 02       		.uleb128 0x2
 1379 0034 02       		.byte	0x2
 1380 0035 05       		.byte	0x5
 1381 0036 8B000000 		.4byte	.LASF2
 1382 003a 02       		.uleb128 0x2
 1383 003b 02       		.byte	0x2
 1384 003c 07       		.byte	0x7
 1385 003d 5F040000 		.4byte	.LASF3
 1386 0041 03       		.uleb128 0x3
 1387 0042 02050000 		.4byte	.LASF12
 1388 0046 02       		.byte	0x2
 1389 0047 3F       		.byte	0x3f
 1390 0048 4C000000 		.4byte	0x4c
 1391 004c 02       		.uleb128 0x2
 1392 004d 04       		.byte	0x4
 1393 004e 05       		.byte	0x5
 1394 004f D2020000 		.4byte	.LASF4
 1395 0053 02       		.uleb128 0x2
 1396 0054 04       		.byte	0x4
 1397 0055 07       		.byte	0x7
 1398 0056 C0040000 		.4byte	.LASF5
 1399 005a 02       		.uleb128 0x2
 1400 005b 08       		.byte	0x8
 1401 005c 05       		.byte	0x5
 1402 005d 86020000 		.4byte	.LASF6
 1403 0061 02       		.uleb128 0x2
 1404 0062 08       		.byte	0x8
 1405 0063 07       		.byte	0x7
 1406 0064 BA030000 		.4byte	.LASF7
 1407 0068 04       		.uleb128 0x4
 1408 0069 04       		.byte	0x4
 1409 006a 05       		.byte	0x5
 1410 006b 696E7400 		.ascii	"int\000"
 1411 006f 02       		.uleb128 0x2
 1412 0070 04       		.byte	0x4
 1413 0071 07       		.byte	0x7
 1414 0072 DD030000 		.4byte	.LASF8
 1415 0076 02       		.uleb128 0x2
 1416 0077 08       		.byte	0x8
 1417 0078 04       		.byte	0x4
 1418 0079 62030000 		.4byte	.LASF9
 1419 007d 02       		.uleb128 0x2
 1420 007e 04       		.byte	0x4
 1421 007f 07       		.byte	0x7
 1422 0080 A2000000 		.4byte	.LASF10
 1423 0084 05       		.uleb128 0x5
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 36


 1424 0085 04       		.byte	0x4
 1425 0086 8A000000 		.4byte	0x8a
 1426 008a 02       		.uleb128 0x2
 1427 008b 01       		.byte	0x1
 1428 008c 08       		.byte	0x8
 1429 008d 32040000 		.4byte	.LASF11
 1430 0091 03       		.uleb128 0x3
 1431 0092 42040000 		.4byte	.LASF13
 1432 0096 03       		.byte	0x3
 1433 0097 2C       		.byte	0x2c
 1434 0098 41000000 		.4byte	0x41
 1435 009c 02       		.uleb128 0x2
 1436 009d 08       		.byte	0x8
 1437 009e 04       		.byte	0x4
 1438 009f 29000000 		.4byte	.LASF14
 1439 00a3 02       		.uleb128 0x2
 1440 00a4 04       		.byte	0x4
 1441 00a5 04       		.byte	0x4
 1442 00a6 66020000 		.4byte	.LASF15
 1443 00aa 06       		.uleb128 0x6
 1444 00ab A9010000 		.4byte	.LASF16
 1445 00af 04       		.byte	0x4
 1446 00b0 E401     		.2byte	0x1e4
 1447 00b2 2C000000 		.4byte	0x2c
 1448 00b6 06       		.uleb128 0x6
 1449 00b7 8C010000 		.4byte	.LASF17
 1450 00bb 04       		.byte	0x4
 1451 00bc E501     		.2byte	0x1e5
 1452 00be 3A000000 		.4byte	0x3a
 1453 00c2 06       		.uleb128 0x6
 1454 00c3 A1020000 		.4byte	.LASF18
 1455 00c7 04       		.byte	0x4
 1456 00c8 E701     		.2byte	0x1e7
 1457 00ca 25000000 		.4byte	0x25
 1458 00ce 06       		.uleb128 0x6
 1459 00cf A3010000 		.4byte	.LASF19
 1460 00d3 04       		.byte	0x4
 1461 00d4 E801     		.2byte	0x1e8
 1462 00d6 33000000 		.4byte	0x33
 1463 00da 07       		.uleb128 0x7
 1464 00db 99010000 		.4byte	.LASF105
 1465 00df 20       		.byte	0x20
 1466 00e0 05       		.byte	0x5
 1467 00e1 29       		.byte	0x29
 1468 00e2 B3010000 		.4byte	0x1b3
 1469 00e6 08       		.uleb128 0x8
 1470 00e7 D1050000 		.4byte	.LASF20
 1471 00eb 05       		.byte	0x5
 1472 00ec 2A       		.byte	0x2a
 1473 00ed C2000000 		.4byte	0xc2
 1474 00f1 00       		.byte	0
 1475 00f2 08       		.uleb128 0x8
 1476 00f3 93010000 		.4byte	.LASF21
 1477 00f7 05       		.byte	0x5
 1478 00f8 2B       		.byte	0x2b
 1479 00f9 AA000000 		.4byte	0xaa
 1480 00fd 01       		.byte	0x1
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 37


 1481 00fe 08       		.uleb128 0x8
 1482 00ff 37040000 		.4byte	.LASF22
 1483 0103 05       		.byte	0x5
 1484 0104 2C       		.byte	0x2c
 1485 0105 CE000000 		.4byte	0xce
 1486 0109 02       		.byte	0x2
 1487 010a 08       		.uleb128 0x8
 1488 010b 83050000 		.4byte	.LASF23
 1489 010f 05       		.byte	0x5
 1490 0110 2D       		.byte	0x2d
 1491 0111 CE000000 		.4byte	0xce
 1492 0115 04       		.byte	0x4
 1493 0116 08       		.uleb128 0x8
 1494 0117 D6050000 		.4byte	.LASF24
 1495 011b 05       		.byte	0x5
 1496 011c 2E       		.byte	0x2e
 1497 011d CE000000 		.4byte	0xce
 1498 0121 06       		.byte	0x6
 1499 0122 08       		.uleb128 0x8
 1500 0123 CA020000 		.4byte	.LASF25
 1501 0127 05       		.byte	0x5
 1502 0128 2F       		.byte	0x2f
 1503 0129 CE000000 		.4byte	0xce
 1504 012d 08       		.byte	0x8
 1505 012e 08       		.uleb128 0x8
 1506 012f 35050000 		.4byte	.LASF26
 1507 0133 05       		.byte	0x5
 1508 0134 30       		.byte	0x30
 1509 0135 CE000000 		.4byte	0xce
 1510 0139 0A       		.byte	0xa
 1511 013a 08       		.uleb128 0x8
 1512 013b 96030000 		.4byte	.LASF27
 1513 013f 05       		.byte	0x5
 1514 0140 31       		.byte	0x31
 1515 0141 CE000000 		.4byte	0xce
 1516 0145 0C       		.byte	0xc
 1517 0146 08       		.uleb128 0x8
 1518 0147 BD020000 		.4byte	.LASF28
 1519 014b 05       		.byte	0x5
 1520 014c 32       		.byte	0x32
 1521 014d CE000000 		.4byte	0xce
 1522 0151 0E       		.byte	0xe
 1523 0152 08       		.uleb128 0x8
 1524 0153 0E040000 		.4byte	.LASF29
 1525 0157 05       		.byte	0x5
 1526 0158 33       		.byte	0x33
 1527 0159 CE000000 		.4byte	0xce
 1528 015d 10       		.byte	0x10
 1529 015e 08       		.uleb128 0x8
 1530 015f 4A040000 		.4byte	.LASF30
 1531 0163 05       		.byte	0x5
 1532 0164 34       		.byte	0x34
 1533 0165 CE000000 		.4byte	0xce
 1534 0169 12       		.byte	0x12
 1535 016a 08       		.uleb128 0x8
 1536 016b 80040000 		.4byte	.LASF31
 1537 016f 05       		.byte	0x5
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 38


 1538 0170 35       		.byte	0x35
 1539 0171 CE000000 		.4byte	0xce
 1540 0175 14       		.byte	0x14
 1541 0176 08       		.uleb128 0x8
 1542 0177 AE050000 		.4byte	.LASF32
 1543 017b 05       		.byte	0x5
 1544 017c 36       		.byte	0x36
 1545 017d CE000000 		.4byte	0xce
 1546 0181 16       		.byte	0x16
 1547 0182 08       		.uleb128 0x8
 1548 0183 83000000 		.4byte	.LASF33
 1549 0187 05       		.byte	0x5
 1550 0188 37       		.byte	0x37
 1551 0189 CE000000 		.4byte	0xce
 1552 018d 18       		.byte	0x18
 1553 018e 08       		.uleb128 0x8
 1554 018f B5020000 		.4byte	.LASF34
 1555 0193 05       		.byte	0x5
 1556 0194 38       		.byte	0x38
 1557 0195 CE000000 		.4byte	0xce
 1558 0199 1A       		.byte	0x1a
 1559 019a 08       		.uleb128 0x8
 1560 019b 05040000 		.4byte	.LASF35
 1561 019f 05       		.byte	0x5
 1562 01a0 39       		.byte	0x39
 1563 01a1 CE000000 		.4byte	0xce
 1564 01a5 1C       		.byte	0x1c
 1565 01a6 08       		.uleb128 0x8
 1566 01a7 52040000 		.4byte	.LASF36
 1567 01ab 05       		.byte	0x5
 1568 01ac 3A       		.byte	0x3a
 1569 01ad CE000000 		.4byte	0xce
 1570 01b1 1E       		.byte	0x1e
 1571 01b2 00       		.byte	0
 1572 01b3 09       		.uleb128 0x9
 1573 01b4 1A050000 		.4byte	.LASF37
 1574 01b8 01       		.byte	0x1
 1575 01b9 34       		.byte	0x34
 1576 01ba 00000000 		.4byte	.LFB64
 1577 01be 14000000 		.4byte	.LFE64-.LFB64
 1578 01c2 01       		.uleb128 0x1
 1579 01c3 9C       		.byte	0x9c
 1580 01c4 0A       		.uleb128 0xa
 1581 01c5 72040000 		.4byte	.LASF40
 1582 01c9 01       		.byte	0x1
 1583 01ca 3A       		.byte	0x3a
 1584 01cb 00000000 		.4byte	.LFB65
 1585 01cf 2E000000 		.4byte	.LFE65-.LFB65
 1586 01d3 01       		.uleb128 0x1
 1587 01d4 9C       		.byte	0x9c
 1588 01d5 E6010000 		.4byte	0x1e6
 1589 01d9 0B       		.uleb128 0xb
 1590 01da 7800     		.ascii	"x\000"
 1591 01dc 01       		.byte	0x1
 1592 01dd 3A       		.byte	0x3a
 1593 01de 68000000 		.4byte	0x68
 1594 01e2 02       		.uleb128 0x2
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 39


 1595 01e3 91       		.byte	0x91
 1596 01e4 74       		.sleb128 -12
 1597 01e5 00       		.byte	0
 1598 01e6 09       		.uleb128 0x9
 1599 01e7 67000000 		.4byte	.LASF38
 1600 01eb 01       		.byte	0x1
 1601 01ec 42       		.byte	0x42
 1602 01ed 00000000 		.4byte	.LFB66
 1603 01f1 14000000 		.4byte	.LFE66-.LFB66
 1604 01f5 01       		.uleb128 0x1
 1605 01f6 9C       		.byte	0x9c
 1606 01f7 09       		.uleb128 0x9
 1607 01f8 00000000 		.4byte	.LASF39
 1608 01fc 01       		.byte	0x1
 1609 01fd 48       		.byte	0x48
 1610 01fe 00000000 		.4byte	.LFB67
 1611 0202 14000000 		.4byte	.LFE67-.LFB67
 1612 0206 01       		.uleb128 0x1
 1613 0207 9C       		.byte	0x9c
 1614 0208 0A       		.uleb128 0xa
 1615 0209 0C050000 		.4byte	.LASF41
 1616 020d 01       		.byte	0x1
 1617 020e 4D       		.byte	0x4d
 1618 020f 00000000 		.4byte	.LFB68
 1619 0213 20000000 		.4byte	.LFE68-.LFB68
 1620 0217 01       		.uleb128 0x1
 1621 0218 9C       		.byte	0x9c
 1622 0219 2A020000 		.4byte	0x22a
 1623 021d 0B       		.uleb128 0xb
 1624 021e 7800     		.ascii	"x\000"
 1625 0220 01       		.byte	0x1
 1626 0221 4D       		.byte	0x4d
 1627 0222 AA000000 		.4byte	0xaa
 1628 0226 02       		.uleb128 0x2
 1629 0227 91       		.byte	0x91
 1630 0228 77       		.sleb128 -9
 1631 0229 00       		.byte	0
 1632 022a 0A       		.uleb128 0xa
 1633 022b BB050000 		.4byte	.LASF42
 1634 022f 01       		.byte	0x1
 1635 0230 58       		.byte	0x58
 1636 0231 00000000 		.4byte	.LFB69
 1637 0235 20000000 		.4byte	.LFE69-.LFB69
 1638 0239 01       		.uleb128 0x1
 1639 023a 9C       		.byte	0x9c
 1640 023b 4C020000 		.4byte	0x24c
 1641 023f 0B       		.uleb128 0xb
 1642 0240 7800     		.ascii	"x\000"
 1643 0242 01       		.byte	0x1
 1644 0243 58       		.byte	0x58
 1645 0244 68000000 		.4byte	0x68
 1646 0248 02       		.uleb128 0x2
 1647 0249 91       		.byte	0x91
 1648 024a 74       		.sleb128 -12
 1649 024b 00       		.byte	0
 1650 024c 0A       		.uleb128 0xa
 1651 024d D1030000 		.4byte	.LASF43
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 40


 1652 0251 01       		.byte	0x1
 1653 0252 61       		.byte	0x61
 1654 0253 00000000 		.4byte	.LFB70
 1655 0257 2A000000 		.4byte	.LFE70-.LFB70
 1656 025b 01       		.uleb128 0x1
 1657 025c 9C       		.byte	0x9c
 1658 025d 6E020000 		.4byte	0x26e
 1659 0261 0B       		.uleb128 0xb
 1660 0262 7800     		.ascii	"x\000"
 1661 0264 01       		.byte	0x1
 1662 0265 61       		.byte	0x61
 1663 0266 AA000000 		.4byte	0xaa
 1664 026a 02       		.uleb128 0x2
 1665 026b 91       		.byte	0x91
 1666 026c 77       		.sleb128 -9
 1667 026d 00       		.byte	0
 1668 026e 0A       		.uleb128 0xa
 1669 026f 50000000 		.4byte	.LASF44
 1670 0273 01       		.byte	0x1
 1671 0274 74       		.byte	0x74
 1672 0275 00000000 		.4byte	.LFB71
 1673 0279 E0000000 		.4byte	.LFE71-.LFB71
 1674 027d 01       		.uleb128 0x1
 1675 027e 9C       		.byte	0x9c
 1676 027f D8020000 		.4byte	0x2d8
 1677 0283 0C       		.uleb128 0xc
 1678 0284 61010000 		.4byte	.LASF45
 1679 0288 01       		.byte	0x1
 1680 0289 7C       		.byte	0x7c
 1681 028a CE000000 		.4byte	0xce
 1682 028e 02       		.uleb128 0x2
 1683 028f 91       		.byte	0x91
 1684 0290 76       		.sleb128 -10
 1685 0291 0C       		.uleb128 0xc
 1686 0292 69010000 		.4byte	.LASF46
 1687 0296 01       		.byte	0x1
 1688 0297 7D       		.byte	0x7d
 1689 0298 CE000000 		.4byte	0xce
 1690 029c 02       		.uleb128 0x2
 1691 029d 91       		.byte	0x91
 1692 029e 74       		.sleb128 -12
 1693 029f 0C       		.uleb128 0xc
 1694 02a0 71010000 		.4byte	.LASF47
 1695 02a4 01       		.byte	0x1
 1696 02a5 7E       		.byte	0x7e
 1697 02a6 CE000000 		.4byte	0xce
 1698 02aa 02       		.uleb128 0x2
 1699 02ab 91       		.byte	0x91
 1700 02ac 72       		.sleb128 -14
 1701 02ad 0C       		.uleb128 0xc
 1702 02ae 51010000 		.4byte	.LASF48
 1703 02b2 01       		.byte	0x1
 1704 02b3 80       		.byte	0x80
 1705 02b4 CE000000 		.4byte	0xce
 1706 02b8 02       		.uleb128 0x2
 1707 02b9 91       		.byte	0x91
 1708 02ba 70       		.sleb128 -16
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 41


 1709 02bb 0C       		.uleb128 0xc
 1710 02bc 59010000 		.4byte	.LASF49
 1711 02c0 01       		.byte	0x1
 1712 02c1 81       		.byte	0x81
 1713 02c2 CE000000 		.4byte	0xce
 1714 02c6 02       		.uleb128 0x2
 1715 02c7 91       		.byte	0x91
 1716 02c8 6E       		.sleb128 -18
 1717 02c9 0C       		.uleb128 0xc
 1718 02ca 79010000 		.4byte	.LASF50
 1719 02ce 01       		.byte	0x1
 1720 02cf 82       		.byte	0x82
 1721 02d0 CE000000 		.4byte	0xce
 1722 02d4 02       		.uleb128 0x2
 1723 02d5 91       		.byte	0x91
 1724 02d6 6C       		.sleb128 -20
 1725 02d7 00       		.byte	0
 1726 02d8 0D       		.uleb128 0xd
 1727 02d9 6C020000 		.4byte	.LASF58
 1728 02dd 01       		.byte	0x1
 1729 02de AF       		.byte	0xaf
 1730 02df 00000000 		.4byte	.LFB72
 1731 02e3 0C000000 		.4byte	.LFE72-.LFB72
 1732 02e7 01       		.uleb128 0x1
 1733 02e8 9C       		.byte	0x9c
 1734 02e9 0E       		.uleb128 0xe
 1735 02ea 2A050000 		.4byte	.LASF70
 1736 02ee 01       		.byte	0x1
 1737 02ef C2       		.byte	0xc2
 1738 02f0 00000000 		.4byte	.LFB73
 1739 02f4 C0000000 		.4byte	.LFE73-.LFB73
 1740 02f8 01       		.uleb128 0x1
 1741 02f9 9C       		.byte	0x9c
 1742 02fa 57030000 		.4byte	0x357
 1743 02fe 0C       		.uleb128 0xc
 1744 02ff DB020000 		.4byte	.LASF51
 1745 0303 01       		.byte	0x1
 1746 0304 C3       		.byte	0xc3
 1747 0305 CE000000 		.4byte	0xce
 1748 0309 02       		.uleb128 0x2
 1749 030a 91       		.byte	0x91
 1750 030b 76       		.sleb128 -10
 1751 030c 0C       		.uleb128 0xc
 1752 030d F0020000 		.4byte	.LASF52
 1753 0311 01       		.byte	0x1
 1754 0312 C4       		.byte	0xc4
 1755 0313 CE000000 		.4byte	0xce
 1756 0317 02       		.uleb128 0x2
 1757 0318 91       		.byte	0x91
 1758 0319 74       		.sleb128 -12
 1759 031a 0C       		.uleb128 0xc
 1760 031b 4D030000 		.4byte	.LASF53
 1761 031f 01       		.byte	0x1
 1762 0320 C5       		.byte	0xc5
 1763 0321 CE000000 		.4byte	0xce
 1764 0325 02       		.uleb128 0x2
 1765 0326 91       		.byte	0x91
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 42


 1766 0327 72       		.sleb128 -14
 1767 0328 0C       		.uleb128 0xc
 1768 0329 3E030000 		.4byte	.LASF54
 1769 032d 01       		.byte	0x1
 1770 032e C6       		.byte	0xc6
 1771 032f CE000000 		.4byte	0xce
 1772 0333 02       		.uleb128 0x2
 1773 0334 91       		.byte	0x91
 1774 0335 70       		.sleb128 -16
 1775 0336 0C       		.uleb128 0xc
 1776 0337 05030000 		.4byte	.LASF55
 1777 033b 01       		.byte	0x1
 1778 033c C7       		.byte	0xc7
 1779 033d 57030000 		.4byte	0x357
 1780 0341 04       		.uleb128 0x4
 1781 0342 91       		.byte	0x91
 1782 0343 E0B17F   		.sleb128 -10016
 1783 0346 0C       		.uleb128 0xc
 1784 0347 A1050000 		.4byte	.LASF56
 1785 034b 01       		.byte	0x1
 1786 034c C9       		.byte	0xc9
 1787 034d 57030000 		.4byte	0x357
 1788 0351 04       		.uleb128 0x4
 1789 0352 91       		.byte	0x91
 1790 0353 D0E37E   		.sleb128 -20016
 1791 0356 00       		.byte	0
 1792 0357 0F       		.uleb128 0xf
 1793 0358 8A000000 		.4byte	0x8a
 1794 035c 68030000 		.4byte	0x368
 1795 0360 10       		.uleb128 0x10
 1796 0361 7D000000 		.4byte	0x7d
 1797 0365 0F27     		.2byte	0x270f
 1798 0367 00       		.byte	0
 1799 0368 0A       		.uleb128 0xa
 1800 0369 48010000 		.4byte	.LASF57
 1801 036d 01       		.byte	0x1
 1802 036e D1       		.byte	0xd1
 1803 036f 00000000 		.4byte	.LFB74
 1804 0373 1A000000 		.4byte	.LFE74-.LFB74
 1805 0377 01       		.uleb128 0x1
 1806 0378 9C       		.byte	0x9c
 1807 0379 8A030000 		.4byte	0x38a
 1808 037d 0B       		.uleb128 0xb
 1809 037e 7800     		.ascii	"x\000"
 1810 0380 01       		.byte	0x1
 1811 0381 D1       		.byte	0xd1
 1812 0382 68000000 		.4byte	0x68
 1813 0386 02       		.uleb128 0x2
 1814 0387 91       		.byte	0x91
 1815 0388 74       		.sleb128 -12
 1816 0389 00       		.byte	0
 1817 038a 11       		.uleb128 0x11
 1818 038b 0A000000 		.4byte	.LASF59
 1819 038f 01       		.byte	0x1
 1820 0390 E9       		.byte	0xe9
 1821 0391 00000000 		.4byte	.LFB75
 1822 0395 0C000000 		.4byte	.LFE75-.LFB75
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 43


 1823 0399 01       		.uleb128 0x1
 1824 039a 9C       		.byte	0x9c
 1825 039b 12       		.uleb128 0x12
 1826 039c 43010000 		.4byte	.LASF60
 1827 03a0 01       		.byte	0x1
 1828 03a1 F6       		.byte	0xf6
 1829 03a2 68000000 		.4byte	0x68
 1830 03a6 00000000 		.4byte	.LFB76
 1831 03aa 08010000 		.4byte	.LFE76-.LFB76
 1832 03ae 01       		.uleb128 0x1
 1833 03af 9C       		.byte	0x9c
 1834 03b0 EC030000 		.4byte	0x3ec
 1835 03b4 13       		.uleb128 0x13
 1836 03b5 48050000 		.4byte	.LASF61
 1837 03b9 01       		.byte	0x1
 1838 03ba 1901     		.2byte	0x119
 1839 03bc 68000000 		.4byte	0x68
 1840 03c0 02       		.uleb128 0x2
 1841 03c1 91       		.byte	0x91
 1842 03c2 74       		.sleb128 -12
 1843 03c3 13       		.uleb128 0x13
 1844 03c4 DD040000 		.4byte	.LASF62
 1845 03c8 01       		.byte	0x1
 1846 03c9 2101     		.2byte	0x121
 1847 03cb 68000000 		.4byte	0x68
 1848 03cf 02       		.uleb128 0x2
 1849 03d0 91       		.byte	0x91
 1850 03d1 70       		.sleb128 -16
 1851 03d2 14       		.uleb128 0x14
 1852 03d3 5C000000 		.4byte	.LBB2
 1853 03d7 70000000 		.4byte	.LBE2-.LBB2
 1854 03db 13       		.uleb128 0x13
 1855 03dc 16040000 		.4byte	.LASF63
 1856 03e0 01       		.byte	0x1
 1857 03e1 2501     		.2byte	0x125
 1858 03e3 68000000 		.4byte	0x68
 1859 03e7 02       		.uleb128 0x2
 1860 03e8 91       		.byte	0x91
 1861 03e9 6C       		.sleb128 -20
 1862 03ea 00       		.byte	0
 1863 03eb 00       		.byte	0
 1864 03ec 15       		.uleb128 0x15
 1865 03ed 20040000 		.4byte	.LASF64
 1866 03f1 01       		.byte	0x1
 1867 03f2 B601     		.2byte	0x1b6
 1868 03f4 68000000 		.4byte	0x68
 1869 03f8 00000000 		.4byte	.LFB77
 1870 03fc 50000000 		.4byte	.LFE77-.LFB77
 1871 0400 01       		.uleb128 0x1
 1872 0401 9C       		.byte	0x9c
 1873 0402 40040000 		.4byte	0x440
 1874 0406 13       		.uleb128 0x13
 1875 0407 6E030000 		.4byte	.LASF65
 1876 040b 01       		.byte	0x1
 1877 040c B801     		.2byte	0x1b8
 1878 040e 68000000 		.4byte	0x68
 1879 0412 02       		.uleb128 0x2
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 44


 1880 0413 91       		.byte	0x91
 1881 0414 74       		.sleb128 -12
 1882 0415 16       		.uleb128 0x16
 1883 0416 513100   		.ascii	"Q1\000"
 1884 0419 01       		.byte	0x1
 1885 041a B901     		.2byte	0x1b9
 1886 041c 68000000 		.4byte	0x68
 1887 0420 02       		.uleb128 0x2
 1888 0421 91       		.byte	0x91
 1889 0422 70       		.sleb128 -16
 1890 0423 16       		.uleb128 0x16
 1891 0424 513200   		.ascii	"Q2\000"
 1892 0427 01       		.byte	0x1
 1893 0428 BA01     		.2byte	0x1ba
 1894 042a 68000000 		.4byte	0x68
 1895 042e 02       		.uleb128 0x2
 1896 042f 91       		.byte	0x91
 1897 0430 6C       		.sleb128 -20
 1898 0431 16       		.uleb128 0x16
 1899 0432 513600   		.ascii	"Q6\000"
 1900 0435 01       		.byte	0x1
 1901 0436 BB01     		.2byte	0x1bb
 1902 0438 68000000 		.4byte	0x68
 1903 043c 02       		.uleb128 0x2
 1904 043d 91       		.byte	0x91
 1905 043e 68       		.sleb128 -24
 1906 043f 00       		.byte	0
 1907 0440 15       		.uleb128 0x15
 1908 0441 A5040000 		.4byte	.LASF66
 1909 0445 01       		.byte	0x1
 1910 0446 C401     		.2byte	0x1c4
 1911 0448 68000000 		.4byte	0x68
 1912 044c 00000000 		.4byte	.LFB78
 1913 0450 50000000 		.4byte	.LFE78-.LFB78
 1914 0454 01       		.uleb128 0x1
 1915 0455 9C       		.byte	0x9c
 1916 0456 94040000 		.4byte	0x494
 1917 045a 13       		.uleb128 0x13
 1918 045b 9B050000 		.4byte	.LASF67
 1919 045f 01       		.byte	0x1
 1920 0460 C601     		.2byte	0x1c6
 1921 0462 68000000 		.4byte	0x68
 1922 0466 02       		.uleb128 0x2
 1923 0467 91       		.byte	0x91
 1924 0468 74       		.sleb128 -12
 1925 0469 16       		.uleb128 0x16
 1926 046a 513300   		.ascii	"Q3\000"
 1927 046d 01       		.byte	0x1
 1928 046e C701     		.2byte	0x1c7
 1929 0470 68000000 		.4byte	0x68
 1930 0474 02       		.uleb128 0x2
 1931 0475 91       		.byte	0x91
 1932 0476 70       		.sleb128 -16
 1933 0477 16       		.uleb128 0x16
 1934 0478 513400   		.ascii	"Q4\000"
 1935 047b 01       		.byte	0x1
 1936 047c C801     		.2byte	0x1c8
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 45


 1937 047e 68000000 		.4byte	0x68
 1938 0482 02       		.uleb128 0x2
 1939 0483 91       		.byte	0x91
 1940 0484 6C       		.sleb128 -20
 1941 0485 16       		.uleb128 0x16
 1942 0486 513500   		.ascii	"Q5\000"
 1943 0489 01       		.byte	0x1
 1944 048a C901     		.2byte	0x1c9
 1945 048c 68000000 		.4byte	0x68
 1946 0490 02       		.uleb128 0x2
 1947 0491 91       		.byte	0x91
 1948 0492 68       		.sleb128 -24
 1949 0493 00       		.byte	0
 1950 0494 17       		.uleb128 0x17
 1951 0495 94020000 		.4byte	.LASF68
 1952 0499 01       		.byte	0x1
 1953 049a D001     		.2byte	0x1d0
 1954 049c 00000000 		.4byte	.LFB79
 1955 04a0 3E000000 		.4byte	.LFE79-.LFB79
 1956 04a4 01       		.uleb128 0x1
 1957 04a5 9C       		.byte	0x9c
 1958 04a6 B8040000 		.4byte	0x4b8
 1959 04aa 18       		.uleb128 0x18
 1960 04ab 7300     		.ascii	"s\000"
 1961 04ad 01       		.byte	0x1
 1962 04ae D001     		.2byte	0x1d0
 1963 04b0 84000000 		.4byte	0x84
 1964 04b4 02       		.uleb128 0x2
 1965 04b5 91       		.byte	0x91
 1966 04b6 74       		.sleb128 -12
 1967 04b7 00       		.byte	0
 1968 04b8 17       		.uleb128 0x17
 1969 04b9 3C000000 		.4byte	.LASF69
 1970 04bd 01       		.byte	0x1
 1971 04be DE01     		.2byte	0x1de
 1972 04c0 00000000 		.4byte	.LFB80
 1973 04c4 26000000 		.4byte	.LFE80-.LFB80
 1974 04c8 01       		.uleb128 0x1
 1975 04c9 9C       		.byte	0x9c
 1976 04ca DC040000 		.4byte	0x4dc
 1977 04ce 18       		.uleb128 0x18
 1978 04cf 6300     		.ascii	"c\000"
 1979 04d1 01       		.byte	0x1
 1980 04d2 DE01     		.2byte	0x1de
 1981 04d4 8A000000 		.4byte	0x8a
 1982 04d8 02       		.uleb128 0x2
 1983 04d9 91       		.byte	0x91
 1984 04da 77       		.sleb128 -9
 1985 04db 00       		.byte	0
 1986 04dc 19       		.uleb128 0x19
 1987 04dd 5C050000 		.4byte	.LASF71
 1988 04e1 01       		.byte	0x1
 1989 04e2 E601     		.2byte	0x1e6
 1990 04e4 00000000 		.4byte	.LFB81
 1991 04e8 CC000000 		.4byte	.LFE81-.LFB81
 1992 04ec 01       		.uleb128 0x1
 1993 04ed 9C       		.byte	0x9c
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 46


 1994 04ee 24050000 		.4byte	0x524
 1995 04f2 13       		.uleb128 0x13
 1996 04f3 D2040000 		.4byte	.LASF72
 1997 04f7 01       		.byte	0x1
 1998 04f8 EC01     		.2byte	0x1ec
 1999 04fa AA000000 		.4byte	0xaa
 2000 04fe 05       		.uleb128 0x5
 2001 04ff 03       		.byte	0x3
 2002 0500 45000000 		.4byte	usbStarted.8812
 2003 0504 13       		.uleb128 0x13
 2004 0505 F9030000 		.4byte	.LASF73
 2005 0509 01       		.byte	0x1
 2006 050a ED01     		.2byte	0x1ed
 2007 050c B6000000 		.4byte	0xb6
 2008 0510 05       		.uleb128 0x5
 2009 0511 03       		.byte	0x3
 2010 0512 46000000 		.4byte	usbBufCount.8813
 2011 0516 16       		.uleb128 0x16
 2012 0517 6300     		.ascii	"c\000"
 2013 0519 01       		.byte	0x1
 2014 051a EE01     		.2byte	0x1ee
 2015 051c AA000000 		.4byte	0xaa
 2016 0520 02       		.uleb128 0x2
 2017 0521 91       		.byte	0x91
 2018 0522 77       		.sleb128 -9
 2019 0523 00       		.byte	0
 2020 0524 0C       		.uleb128 0xc
 2021 0525 F0040000 		.4byte	.LASF74
 2022 0529 01       		.byte	0x1
 2023 052a AE       		.byte	0xae
 2024 052b 35050000 		.4byte	0x535
 2025 052f 05       		.uleb128 0x5
 2026 0530 03       		.byte	0x3
 2027 0531 44000000 		.4byte	count
 2028 0535 1A       		.uleb128 0x1a
 2029 0536 C2000000 		.4byte	0xc2
 2030 053a 1B       		.uleb128 0x1b
 2031 053b 8E050000 		.4byte	.LASF75
 2032 053f 06       		.byte	0x6
 2033 0540 1207     		.2byte	0x712
 2034 0542 46050000 		.4byte	0x546
 2035 0546 1A       		.uleb128 0x1a
 2036 0547 91000000 		.4byte	0x91
 2037 054b 1C       		.uleb128 0x1c
 2038 054c 747300   		.ascii	"ts\000"
 2039 054f 05       		.byte	0x5
 2040 0550 10       		.byte	0x10
 2041 0551 AA000000 		.4byte	0xaa
 2042 0555 05       		.uleb128 0x5
 2043 0556 03       		.byte	0x3
 2044 0557 00000000 		.4byte	ts
 2045 055b 1D       		.uleb128 0x1d
 2046 055c 22000000 		.4byte	.LASF76
 2047 0560 05       		.byte	0x5
 2048 0561 11       		.byte	0x11
 2049 0562 B6000000 		.4byte	0xb6
 2050 0566 05       		.uleb128 0x5
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 47


 2051 0567 03       		.byte	0x3
 2052 0568 00000000 		.4byte	ts_enc
 2053 056c 1D       		.uleb128 0x1d
 2054 056d 52050000 		.4byte	.LASF77
 2055 0571 05       		.byte	0x5
 2056 0572 12       		.byte	0x12
 2057 0573 B6000000 		.4byte	0xb6
 2058 0577 05       		.uleb128 0x5
 2059 0578 03       		.byte	0x3
 2060 0579 00000000 		.4byte	ts_update
 2061 057d 1D       		.uleb128 0x1d
 2062 057e E7040000 		.4byte	.LASF78
 2063 0582 05       		.byte	0x5
 2064 0583 13       		.byte	0x13
 2065 0584 B6000000 		.4byte	0xb6
 2066 0588 05       		.uleb128 0x5
 2067 0589 03       		.byte	0x3
 2068 058a 00000000 		.4byte	ts_speed
 2069 058e 1D       		.uleb128 0x1d
 2070 058f 3D050000 		.4byte	.LASF79
 2071 0593 05       		.byte	0x5
 2072 0594 14       		.byte	0x14
 2073 0595 B6000000 		.4byte	0xb6
 2074 0599 05       		.uleb128 0x5
 2075 059a 03       		.byte	0x3
 2076 059b 00000000 		.4byte	ts_display
 2077 059f 1D       		.uleb128 0x1d
 2078 05a0 F6040000 		.4byte	.LASF80
 2079 05a4 05       		.byte	0x5
 2080 05a5 16       		.byte	0x16
 2081 05a6 AA000000 		.4byte	0xaa
 2082 05aa 05       		.uleb128 0x5
 2083 05ab 03       		.byte	0x3
 2084 05ac 00000000 		.4byte	flag_ts_enc
 2085 05b0 1D       		.uleb128 0x1d
 2086 05b1 A6020000 		.4byte	.LASF81
 2087 05b5 05       		.byte	0x5
 2088 05b6 17       		.byte	0x17
 2089 05b7 AA000000 		.4byte	0xaa
 2090 05bb 05       		.uleb128 0x5
 2091 05bc 03       		.byte	0x3
 2092 05bd 00000000 		.4byte	flag_ts_update
 2093 05c1 1D       		.uleb128 0x1d
 2094 05c2 97040000 		.4byte	.LASF82
 2095 05c6 05       		.byte	0x5
 2096 05c7 18       		.byte	0x18
 2097 05c8 AA000000 		.4byte	0xaa
 2098 05cc 05       		.uleb128 0x5
 2099 05cd 03       		.byte	0x3
 2100 05ce 00000000 		.4byte	flag_ts_speed
 2101 05d2 1D       		.uleb128 0x1d
 2102 05d3 26030000 		.4byte	.LASF83
 2103 05d7 05       		.byte	0x5
 2104 05d8 19       		.byte	0x19
 2105 05d9 AA000000 		.4byte	0xaa
 2106 05dd 05       		.uleb128 0x5
 2107 05de 03       		.byte	0x3
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 48


 2108 05df 00000000 		.4byte	flag_ts_display
 2109 05e3 1D       		.uleb128 0x1d
 2110 05e4 36030000 		.4byte	.LASF84
 2111 05e8 05       		.byte	0x5
 2112 05e9 1C       		.byte	0x1c
 2113 05ea AA000000 		.4byte	0xaa
 2114 05ee 05       		.uleb128 0x5
 2115 05ef 03       		.byte	0x3
 2116 05f0 00000000 		.4byte	flag_rx
 2117 05f4 1D       		.uleb128 0x1d
 2118 05f5 30000000 		.4byte	.LASF85
 2119 05f9 05       		.byte	0x5
 2120 05fa 1D       		.byte	0x1d
 2121 05fb AA000000 		.4byte	0xaa
 2122 05ff 05       		.uleb128 0x5
 2123 0600 03       		.byte	0x3
 2124 0601 00000000 		.4byte	flag_packet
 2125 0605 1D       		.uleb128 0x1d
 2126 0606 EA030000 		.4byte	.LASF86
 2127 060a 05       		.byte	0x5
 2128 060b 1E       		.byte	0x1e
 2129 060c AA000000 		.4byte	0xaa
 2130 0610 05       		.uleb128 0x5
 2131 0611 03       		.byte	0x3
 2132 0612 00000000 		.4byte	flag_KB_string
 2133 0616 1D       		.uleb128 0x1d
 2134 0617 9F030000 		.4byte	.LASF87
 2135 061b 05       		.byte	0x5
 2136 061c 20       		.byte	0x20
 2137 061d AA000000 		.4byte	0xaa
 2138 0621 05       		.uleb128 0x5
 2139 0622 03       		.byte	0x3
 2140 0623 00000000 		.4byte	dataready_flag
 2141 0627 1D       		.uleb128 0x1d
 2142 0628 67050000 		.4byte	.LASF88
 2143 062c 05       		.byte	0x5
 2144 062d 22       		.byte	0x22
 2145 062e AA000000 		.4byte	0xaa
 2146 0632 05       		.uleb128 0x5
 2147 0633 03       		.byte	0x3
 2148 0634 00000000 		.4byte	flag_rf_transmission_active
 2149 0638 0F       		.uleb128 0xf
 2150 0639 8A000000 		.4byte	0x8a
 2151 063d 48060000 		.4byte	0x648
 2152 0641 1E       		.uleb128 0x1e
 2153 0642 7D000000 		.4byte	0x7d
 2154 0646 3F       		.byte	0x3f
 2155 0647 00       		.byte	0
 2156 0648 1D       		.uleb128 0x1d
 2157 0649 89040000 		.4byte	.LASF89
 2158 064d 05       		.byte	0x5
 2159 064e 25       		.byte	0x25
 2160 064f 38060000 		.4byte	0x638
 2161 0653 05       		.uleb128 0x5
 2162 0654 03       		.byte	0x3
 2163 0655 00000000 		.4byte	displaystring
 2164 0659 1D       		.uleb128 0x1d
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 49


 2165 065a 21030000 		.4byte	.LASF90
 2166 065e 05       		.byte	0x5
 2167 065f 26       		.byte	0x26
 2168 0660 38060000 		.4byte	0x638
 2169 0664 05       		.uleb128 0x5
 2170 0665 03       		.byte	0x3
 2171 0666 00000000 		.4byte	line
 2172 066a 1D       		.uleb128 0x1d
 2173 066b 5C030000 		.4byte	.LASF91
 2174 066f 05       		.byte	0x5
 2175 0670 26       		.byte	0x26
 2176 0671 38060000 		.4byte	0x638
 2177 0675 05       		.uleb128 0x5
 2178 0676 03       		.byte	0x3
 2179 0677 00000000 		.4byte	entry
 2180 067b 0F       		.uleb128 0xf
 2181 067c AA000000 		.4byte	0xaa
 2182 0680 8B060000 		.4byte	0x68b
 2183 0684 1E       		.uleb128 0x1e
 2184 0685 7D000000 		.4byte	0x7d
 2185 0689 3F       		.byte	0x3f
 2186 068a 00       		.byte	0
 2187 068b 1D       		.uleb128 0x1d
 2188 068c AB000000 		.4byte	.LASF92
 2189 0690 05       		.byte	0x5
 2190 0691 27       		.byte	0x27
 2191 0692 7B060000 		.4byte	0x67b
 2192 0696 05       		.uleb128 0x5
 2193 0697 03       		.byte	0x3
 2194 0698 00000000 		.4byte	usbBuffer
 2195 069c 1D       		.uleb128 0x1d
 2196 069d 95000000 		.4byte	.LASF93
 2197 06a1 05       		.byte	0x5
 2198 06a2 3C       		.byte	0x3c
 2199 06a3 DA000000 		.4byte	0xda
 2200 06a7 05       		.uleb128 0x5
 2201 06a8 03       		.byte	0x3
 2202 06a9 00000000 		.4byte	system_state
 2203 06ad 1D       		.uleb128 0x1d
 2204 06ae 48020000 		.4byte	.LASF94
 2205 06b2 01       		.byte	0x1
 2206 06b3 6C       		.byte	0x6c
 2207 06b4 68000000 		.4byte	0x68
 2208 06b8 05       		.uleb128 0x5
 2209 06b9 03       		.byte	0x3
 2210 06ba 00000000 		.4byte	changeMotor
 2211 06be 1D       		.uleb128 0x1d
 2212 06bf 78000000 		.4byte	.LASF95
 2213 06c3 01       		.byte	0x1
 2214 06c4 6D       		.byte	0x6d
 2215 06c5 68000000 		.4byte	0x68
 2216 06c9 05       		.uleb128 0x5
 2217 06ca 03       		.byte	0x3
 2218 06cb 00000000 		.4byte	checkLight
 2219 06cf 1D       		.uleb128 0x1d
 2220 06d0 81010000 		.4byte	.LASF96
 2221 06d4 01       		.byte	0x1
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 50


 2222 06d5 6E       		.byte	0x6e
 2223 06d6 68000000 		.4byte	0x68
 2224 06da 05       		.uleb128 0x5
 2225 06db 03       		.byte	0x3
 2226 06dc 00000000 		.4byte	lightState
 2227 06e0 0F       		.uleb128 0xf
 2228 06e1 F0060000 		.4byte	0x6f0
 2229 06e5 F0060000 		.4byte	0x6f0
 2230 06e9 1E       		.uleb128 0x1e
 2231 06ea 7D000000 		.4byte	0x7d
 2232 06ee 02       		.byte	0x2
 2233 06ef 00       		.byte	0
 2234 06f0 1A       		.uleb128 0x1a
 2235 06f1 68000000 		.4byte	0x68
 2236 06f5 1D       		.uleb128 0x1d
 2237 06f6 83030000 		.4byte	.LASF97
 2238 06fa 01       		.byte	0x1
 2239 06fb 6F       		.byte	0x6f
 2240 06fc 06070000 		.4byte	0x706
 2241 0700 05       		.uleb128 0x5
 2242 0701 03       		.byte	0x3
 2243 0702 00000000 		.4byte	lightDetectedFront
 2244 0706 1A       		.uleb128 0x1a
 2245 0707 E0060000 		.4byte	0x6e0
 2246 070b 1D       		.uleb128 0x1d
 2247 070c 54020000 		.4byte	.LASF98
 2248 0710 01       		.byte	0x1
 2249 0711 70       		.byte	0x70
 2250 0712 1C070000 		.4byte	0x71c
 2251 0716 05       		.uleb128 0x5
 2252 0717 03       		.byte	0x3
 2253 0718 00000000 		.4byte	lightDetectedBack
 2254 071c 1A       		.uleb128 0x1a
 2255 071d E0060000 		.4byte	0x6e0
 2256 0721 1D       		.uleb128 0x1d
 2257 0722 47000000 		.4byte	.LASF99
 2258 0726 01       		.byte	0x1
 2259 0727 71       		.byte	0x71
 2260 0728 F0060000 		.4byte	0x6f0
 2261 072c 05       		.uleb128 0x5
 2262 072d 03       		.byte	0x3
 2263 072e 00000000 		.4byte	counteoc
 2264 0732 1D       		.uleb128 0x1d
 2265 0733 12030000 		.4byte	.LASF100
 2266 0737 01       		.byte	0x1
 2267 0738 72       		.byte	0x72
 2268 0739 F0060000 		.4byte	0x6f0
 2269 073d 05       		.uleb128 0x5
 2270 073e 03       		.byte	0x3
 2271 073f 00000000 		.4byte	processSensors
 2272 0743 1D       		.uleb128 0x1d
 2273 0744 CA050000 		.4byte	.LASF101
 2274 0748 01       		.byte	0x1
 2275 0749 73       		.byte	0x73
 2276 074a F0060000 		.4byte	0x6f0
 2277 074e 05       		.uleb128 0x5
 2278 074f 03       		.byte	0x3
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 51


 2279 0750 00000000 		.4byte	middle
 2280 0754 00       		.byte	0
 2281              		.section	.debug_abbrev,"",%progbits
 2282              	.Ldebug_abbrev0:
 2283 0000 01       		.uleb128 0x1
 2284 0001 11       		.uleb128 0x11
 2285 0002 01       		.byte	0x1
 2286 0003 25       		.uleb128 0x25
 2287 0004 0E       		.uleb128 0xe
 2288 0005 13       		.uleb128 0x13
 2289 0006 0B       		.uleb128 0xb
 2290 0007 03       		.uleb128 0x3
 2291 0008 0E       		.uleb128 0xe
 2292 0009 1B       		.uleb128 0x1b
 2293 000a 0E       		.uleb128 0xe
 2294 000b 55       		.uleb128 0x55
 2295 000c 17       		.uleb128 0x17
 2296 000d 11       		.uleb128 0x11
 2297 000e 01       		.uleb128 0x1
 2298 000f 10       		.uleb128 0x10
 2299 0010 17       		.uleb128 0x17
 2300 0011 00       		.byte	0
 2301 0012 00       		.byte	0
 2302 0013 02       		.uleb128 0x2
 2303 0014 24       		.uleb128 0x24
 2304 0015 00       		.byte	0
 2305 0016 0B       		.uleb128 0xb
 2306 0017 0B       		.uleb128 0xb
 2307 0018 3E       		.uleb128 0x3e
 2308 0019 0B       		.uleb128 0xb
 2309 001a 03       		.uleb128 0x3
 2310 001b 0E       		.uleb128 0xe
 2311 001c 00       		.byte	0
 2312 001d 00       		.byte	0
 2313 001e 03       		.uleb128 0x3
 2314 001f 16       		.uleb128 0x16
 2315 0020 00       		.byte	0
 2316 0021 03       		.uleb128 0x3
 2317 0022 0E       		.uleb128 0xe
 2318 0023 3A       		.uleb128 0x3a
 2319 0024 0B       		.uleb128 0xb
 2320 0025 3B       		.uleb128 0x3b
 2321 0026 0B       		.uleb128 0xb
 2322 0027 49       		.uleb128 0x49
 2323 0028 13       		.uleb128 0x13
 2324 0029 00       		.byte	0
 2325 002a 00       		.byte	0
 2326 002b 04       		.uleb128 0x4
 2327 002c 24       		.uleb128 0x24
 2328 002d 00       		.byte	0
 2329 002e 0B       		.uleb128 0xb
 2330 002f 0B       		.uleb128 0xb
 2331 0030 3E       		.uleb128 0x3e
 2332 0031 0B       		.uleb128 0xb
 2333 0032 03       		.uleb128 0x3
 2334 0033 08       		.uleb128 0x8
 2335 0034 00       		.byte	0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 52


 2336 0035 00       		.byte	0
 2337 0036 05       		.uleb128 0x5
 2338 0037 0F       		.uleb128 0xf
 2339 0038 00       		.byte	0
 2340 0039 0B       		.uleb128 0xb
 2341 003a 0B       		.uleb128 0xb
 2342 003b 49       		.uleb128 0x49
 2343 003c 13       		.uleb128 0x13
 2344 003d 00       		.byte	0
 2345 003e 00       		.byte	0
 2346 003f 06       		.uleb128 0x6
 2347 0040 16       		.uleb128 0x16
 2348 0041 00       		.byte	0
 2349 0042 03       		.uleb128 0x3
 2350 0043 0E       		.uleb128 0xe
 2351 0044 3A       		.uleb128 0x3a
 2352 0045 0B       		.uleb128 0xb
 2353 0046 3B       		.uleb128 0x3b
 2354 0047 05       		.uleb128 0x5
 2355 0048 49       		.uleb128 0x49
 2356 0049 13       		.uleb128 0x13
 2357 004a 00       		.byte	0
 2358 004b 00       		.byte	0
 2359 004c 07       		.uleb128 0x7
 2360 004d 13       		.uleb128 0x13
 2361 004e 01       		.byte	0x1
 2362 004f 03       		.uleb128 0x3
 2363 0050 0E       		.uleb128 0xe
 2364 0051 0B       		.uleb128 0xb
 2365 0052 0B       		.uleb128 0xb
 2366 0053 3A       		.uleb128 0x3a
 2367 0054 0B       		.uleb128 0xb
 2368 0055 3B       		.uleb128 0x3b
 2369 0056 0B       		.uleb128 0xb
 2370 0057 01       		.uleb128 0x1
 2371 0058 13       		.uleb128 0x13
 2372 0059 00       		.byte	0
 2373 005a 00       		.byte	0
 2374 005b 08       		.uleb128 0x8
 2375 005c 0D       		.uleb128 0xd
 2376 005d 00       		.byte	0
 2377 005e 03       		.uleb128 0x3
 2378 005f 0E       		.uleb128 0xe
 2379 0060 3A       		.uleb128 0x3a
 2380 0061 0B       		.uleb128 0xb
 2381 0062 3B       		.uleb128 0x3b
 2382 0063 0B       		.uleb128 0xb
 2383 0064 49       		.uleb128 0x49
 2384 0065 13       		.uleb128 0x13
 2385 0066 38       		.uleb128 0x38
 2386 0067 0B       		.uleb128 0xb
 2387 0068 00       		.byte	0
 2388 0069 00       		.byte	0
 2389 006a 09       		.uleb128 0x9
 2390 006b 2E       		.uleb128 0x2e
 2391 006c 00       		.byte	0
 2392 006d 3F       		.uleb128 0x3f
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 53


 2393 006e 19       		.uleb128 0x19
 2394 006f 03       		.uleb128 0x3
 2395 0070 0E       		.uleb128 0xe
 2396 0071 3A       		.uleb128 0x3a
 2397 0072 0B       		.uleb128 0xb
 2398 0073 3B       		.uleb128 0x3b
 2399 0074 0B       		.uleb128 0xb
 2400 0075 11       		.uleb128 0x11
 2401 0076 01       		.uleb128 0x1
 2402 0077 12       		.uleb128 0x12
 2403 0078 06       		.uleb128 0x6
 2404 0079 40       		.uleb128 0x40
 2405 007a 18       		.uleb128 0x18
 2406 007b 9642     		.uleb128 0x2116
 2407 007d 19       		.uleb128 0x19
 2408 007e 00       		.byte	0
 2409 007f 00       		.byte	0
 2410 0080 0A       		.uleb128 0xa
 2411 0081 2E       		.uleb128 0x2e
 2412 0082 01       		.byte	0x1
 2413 0083 3F       		.uleb128 0x3f
 2414 0084 19       		.uleb128 0x19
 2415 0085 03       		.uleb128 0x3
 2416 0086 0E       		.uleb128 0xe
 2417 0087 3A       		.uleb128 0x3a
 2418 0088 0B       		.uleb128 0xb
 2419 0089 3B       		.uleb128 0x3b
 2420 008a 0B       		.uleb128 0xb
 2421 008b 27       		.uleb128 0x27
 2422 008c 19       		.uleb128 0x19
 2423 008d 11       		.uleb128 0x11
 2424 008e 01       		.uleb128 0x1
 2425 008f 12       		.uleb128 0x12
 2426 0090 06       		.uleb128 0x6
 2427 0091 40       		.uleb128 0x40
 2428 0092 18       		.uleb128 0x18
 2429 0093 9642     		.uleb128 0x2116
 2430 0095 19       		.uleb128 0x19
 2431 0096 01       		.uleb128 0x1
 2432 0097 13       		.uleb128 0x13
 2433 0098 00       		.byte	0
 2434 0099 00       		.byte	0
 2435 009a 0B       		.uleb128 0xb
 2436 009b 05       		.uleb128 0x5
 2437 009c 00       		.byte	0
 2438 009d 03       		.uleb128 0x3
 2439 009e 08       		.uleb128 0x8
 2440 009f 3A       		.uleb128 0x3a
 2441 00a0 0B       		.uleb128 0xb
 2442 00a1 3B       		.uleb128 0x3b
 2443 00a2 0B       		.uleb128 0xb
 2444 00a3 49       		.uleb128 0x49
 2445 00a4 13       		.uleb128 0x13
 2446 00a5 02       		.uleb128 0x2
 2447 00a6 18       		.uleb128 0x18
 2448 00a7 00       		.byte	0
 2449 00a8 00       		.byte	0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 54


 2450 00a9 0C       		.uleb128 0xc
 2451 00aa 34       		.uleb128 0x34
 2452 00ab 00       		.byte	0
 2453 00ac 03       		.uleb128 0x3
 2454 00ad 0E       		.uleb128 0xe
 2455 00ae 3A       		.uleb128 0x3a
 2456 00af 0B       		.uleb128 0xb
 2457 00b0 3B       		.uleb128 0x3b
 2458 00b1 0B       		.uleb128 0xb
 2459 00b2 49       		.uleb128 0x49
 2460 00b3 13       		.uleb128 0x13
 2461 00b4 02       		.uleb128 0x2
 2462 00b5 18       		.uleb128 0x18
 2463 00b6 00       		.byte	0
 2464 00b7 00       		.byte	0
 2465 00b8 0D       		.uleb128 0xd
 2466 00b9 2E       		.uleb128 0x2e
 2467 00ba 00       		.byte	0
 2468 00bb 3F       		.uleb128 0x3f
 2469 00bc 19       		.uleb128 0x19
 2470 00bd 03       		.uleb128 0x3
 2471 00be 0E       		.uleb128 0xe
 2472 00bf 3A       		.uleb128 0x3a
 2473 00c0 0B       		.uleb128 0xb
 2474 00c1 3B       		.uleb128 0x3b
 2475 00c2 0B       		.uleb128 0xb
 2476 00c3 27       		.uleb128 0x27
 2477 00c4 19       		.uleb128 0x19
 2478 00c5 11       		.uleb128 0x11
 2479 00c6 01       		.uleb128 0x1
 2480 00c7 12       		.uleb128 0x12
 2481 00c8 06       		.uleb128 0x6
 2482 00c9 40       		.uleb128 0x40
 2483 00ca 18       		.uleb128 0x18
 2484 00cb 9742     		.uleb128 0x2117
 2485 00cd 19       		.uleb128 0x19
 2486 00ce 00       		.byte	0
 2487 00cf 00       		.byte	0
 2488 00d0 0E       		.uleb128 0xe
 2489 00d1 2E       		.uleb128 0x2e
 2490 00d2 01       		.byte	0x1
 2491 00d3 3F       		.uleb128 0x3f
 2492 00d4 19       		.uleb128 0x19
 2493 00d5 03       		.uleb128 0x3
 2494 00d6 0E       		.uleb128 0xe
 2495 00d7 3A       		.uleb128 0x3a
 2496 00d8 0B       		.uleb128 0xb
 2497 00d9 3B       		.uleb128 0x3b
 2498 00da 0B       		.uleb128 0xb
 2499 00db 11       		.uleb128 0x11
 2500 00dc 01       		.uleb128 0x1
 2501 00dd 12       		.uleb128 0x12
 2502 00de 06       		.uleb128 0x6
 2503 00df 40       		.uleb128 0x40
 2504 00e0 18       		.uleb128 0x18
 2505 00e1 9642     		.uleb128 0x2116
 2506 00e3 19       		.uleb128 0x19
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 55


 2507 00e4 01       		.uleb128 0x1
 2508 00e5 13       		.uleb128 0x13
 2509 00e6 00       		.byte	0
 2510 00e7 00       		.byte	0
 2511 00e8 0F       		.uleb128 0xf
 2512 00e9 01       		.uleb128 0x1
 2513 00ea 01       		.byte	0x1
 2514 00eb 49       		.uleb128 0x49
 2515 00ec 13       		.uleb128 0x13
 2516 00ed 01       		.uleb128 0x1
 2517 00ee 13       		.uleb128 0x13
 2518 00ef 00       		.byte	0
 2519 00f0 00       		.byte	0
 2520 00f1 10       		.uleb128 0x10
 2521 00f2 21       		.uleb128 0x21
 2522 00f3 00       		.byte	0
 2523 00f4 49       		.uleb128 0x49
 2524 00f5 13       		.uleb128 0x13
 2525 00f6 2F       		.uleb128 0x2f
 2526 00f7 05       		.uleb128 0x5
 2527 00f8 00       		.byte	0
 2528 00f9 00       		.byte	0
 2529 00fa 11       		.uleb128 0x11
 2530 00fb 2E       		.uleb128 0x2e
 2531 00fc 00       		.byte	0
 2532 00fd 3F       		.uleb128 0x3f
 2533 00fe 19       		.uleb128 0x19
 2534 00ff 03       		.uleb128 0x3
 2535 0100 0E       		.uleb128 0xe
 2536 0101 3A       		.uleb128 0x3a
 2537 0102 0B       		.uleb128 0xb
 2538 0103 3B       		.uleb128 0x3b
 2539 0104 0B       		.uleb128 0xb
 2540 0105 27       		.uleb128 0x27
 2541 0106 19       		.uleb128 0x19
 2542 0107 11       		.uleb128 0x11
 2543 0108 01       		.uleb128 0x1
 2544 0109 12       		.uleb128 0x12
 2545 010a 06       		.uleb128 0x6
 2546 010b 40       		.uleb128 0x40
 2547 010c 18       		.uleb128 0x18
 2548 010d 9642     		.uleb128 0x2116
 2549 010f 19       		.uleb128 0x19
 2550 0110 00       		.byte	0
 2551 0111 00       		.byte	0
 2552 0112 12       		.uleb128 0x12
 2553 0113 2E       		.uleb128 0x2e
 2554 0114 01       		.byte	0x1
 2555 0115 3F       		.uleb128 0x3f
 2556 0116 19       		.uleb128 0x19
 2557 0117 03       		.uleb128 0x3
 2558 0118 0E       		.uleb128 0xe
 2559 0119 3A       		.uleb128 0x3a
 2560 011a 0B       		.uleb128 0xb
 2561 011b 3B       		.uleb128 0x3b
 2562 011c 0B       		.uleb128 0xb
 2563 011d 49       		.uleb128 0x49
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 56


 2564 011e 13       		.uleb128 0x13
 2565 011f 11       		.uleb128 0x11
 2566 0120 01       		.uleb128 0x1
 2567 0121 12       		.uleb128 0x12
 2568 0122 06       		.uleb128 0x6
 2569 0123 40       		.uleb128 0x40
 2570 0124 18       		.uleb128 0x18
 2571 0125 9642     		.uleb128 0x2116
 2572 0127 19       		.uleb128 0x19
 2573 0128 01       		.uleb128 0x1
 2574 0129 13       		.uleb128 0x13
 2575 012a 00       		.byte	0
 2576 012b 00       		.byte	0
 2577 012c 13       		.uleb128 0x13
 2578 012d 34       		.uleb128 0x34
 2579 012e 00       		.byte	0
 2580 012f 03       		.uleb128 0x3
 2581 0130 0E       		.uleb128 0xe
 2582 0131 3A       		.uleb128 0x3a
 2583 0132 0B       		.uleb128 0xb
 2584 0133 3B       		.uleb128 0x3b
 2585 0134 05       		.uleb128 0x5
 2586 0135 49       		.uleb128 0x49
 2587 0136 13       		.uleb128 0x13
 2588 0137 02       		.uleb128 0x2
 2589 0138 18       		.uleb128 0x18
 2590 0139 00       		.byte	0
 2591 013a 00       		.byte	0
 2592 013b 14       		.uleb128 0x14
 2593 013c 0B       		.uleb128 0xb
 2594 013d 01       		.byte	0x1
 2595 013e 11       		.uleb128 0x11
 2596 013f 01       		.uleb128 0x1
 2597 0140 12       		.uleb128 0x12
 2598 0141 06       		.uleb128 0x6
 2599 0142 00       		.byte	0
 2600 0143 00       		.byte	0
 2601 0144 15       		.uleb128 0x15
 2602 0145 2E       		.uleb128 0x2e
 2603 0146 01       		.byte	0x1
 2604 0147 3F       		.uleb128 0x3f
 2605 0148 19       		.uleb128 0x19
 2606 0149 03       		.uleb128 0x3
 2607 014a 0E       		.uleb128 0xe
 2608 014b 3A       		.uleb128 0x3a
 2609 014c 0B       		.uleb128 0xb
 2610 014d 3B       		.uleb128 0x3b
 2611 014e 05       		.uleb128 0x5
 2612 014f 49       		.uleb128 0x49
 2613 0150 13       		.uleb128 0x13
 2614 0151 11       		.uleb128 0x11
 2615 0152 01       		.uleb128 0x1
 2616 0153 12       		.uleb128 0x12
 2617 0154 06       		.uleb128 0x6
 2618 0155 40       		.uleb128 0x40
 2619 0156 18       		.uleb128 0x18
 2620 0157 9742     		.uleb128 0x2117
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 57


 2621 0159 19       		.uleb128 0x19
 2622 015a 01       		.uleb128 0x1
 2623 015b 13       		.uleb128 0x13
 2624 015c 00       		.byte	0
 2625 015d 00       		.byte	0
 2626 015e 16       		.uleb128 0x16
 2627 015f 34       		.uleb128 0x34
 2628 0160 00       		.byte	0
 2629 0161 03       		.uleb128 0x3
 2630 0162 08       		.uleb128 0x8
 2631 0163 3A       		.uleb128 0x3a
 2632 0164 0B       		.uleb128 0xb
 2633 0165 3B       		.uleb128 0x3b
 2634 0166 05       		.uleb128 0x5
 2635 0167 49       		.uleb128 0x49
 2636 0168 13       		.uleb128 0x13
 2637 0169 02       		.uleb128 0x2
 2638 016a 18       		.uleb128 0x18
 2639 016b 00       		.byte	0
 2640 016c 00       		.byte	0
 2641 016d 17       		.uleb128 0x17
 2642 016e 2E       		.uleb128 0x2e
 2643 016f 01       		.byte	0x1
 2644 0170 3F       		.uleb128 0x3f
 2645 0171 19       		.uleb128 0x19
 2646 0172 03       		.uleb128 0x3
 2647 0173 0E       		.uleb128 0xe
 2648 0174 3A       		.uleb128 0x3a
 2649 0175 0B       		.uleb128 0xb
 2650 0176 3B       		.uleb128 0x3b
 2651 0177 05       		.uleb128 0x5
 2652 0178 27       		.uleb128 0x27
 2653 0179 19       		.uleb128 0x19
 2654 017a 11       		.uleb128 0x11
 2655 017b 01       		.uleb128 0x1
 2656 017c 12       		.uleb128 0x12
 2657 017d 06       		.uleb128 0x6
 2658 017e 40       		.uleb128 0x40
 2659 017f 18       		.uleb128 0x18
 2660 0180 9642     		.uleb128 0x2116
 2661 0182 19       		.uleb128 0x19
 2662 0183 01       		.uleb128 0x1
 2663 0184 13       		.uleb128 0x13
 2664 0185 00       		.byte	0
 2665 0186 00       		.byte	0
 2666 0187 18       		.uleb128 0x18
 2667 0188 05       		.uleb128 0x5
 2668 0189 00       		.byte	0
 2669 018a 03       		.uleb128 0x3
 2670 018b 08       		.uleb128 0x8
 2671 018c 3A       		.uleb128 0x3a
 2672 018d 0B       		.uleb128 0xb
 2673 018e 3B       		.uleb128 0x3b
 2674 018f 05       		.uleb128 0x5
 2675 0190 49       		.uleb128 0x49
 2676 0191 13       		.uleb128 0x13
 2677 0192 02       		.uleb128 0x2
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 58


 2678 0193 18       		.uleb128 0x18
 2679 0194 00       		.byte	0
 2680 0195 00       		.byte	0
 2681 0196 19       		.uleb128 0x19
 2682 0197 2E       		.uleb128 0x2e
 2683 0198 01       		.byte	0x1
 2684 0199 3F       		.uleb128 0x3f
 2685 019a 19       		.uleb128 0x19
 2686 019b 03       		.uleb128 0x3
 2687 019c 0E       		.uleb128 0xe
 2688 019d 3A       		.uleb128 0x3a
 2689 019e 0B       		.uleb128 0xb
 2690 019f 3B       		.uleb128 0x3b
 2691 01a0 05       		.uleb128 0x5
 2692 01a1 11       		.uleb128 0x11
 2693 01a2 01       		.uleb128 0x1
 2694 01a3 12       		.uleb128 0x12
 2695 01a4 06       		.uleb128 0x6
 2696 01a5 40       		.uleb128 0x40
 2697 01a6 18       		.uleb128 0x18
 2698 01a7 9642     		.uleb128 0x2116
 2699 01a9 19       		.uleb128 0x19
 2700 01aa 01       		.uleb128 0x1
 2701 01ab 13       		.uleb128 0x13
 2702 01ac 00       		.byte	0
 2703 01ad 00       		.byte	0
 2704 01ae 1A       		.uleb128 0x1a
 2705 01af 35       		.uleb128 0x35
 2706 01b0 00       		.byte	0
 2707 01b1 49       		.uleb128 0x49
 2708 01b2 13       		.uleb128 0x13
 2709 01b3 00       		.byte	0
 2710 01b4 00       		.byte	0
 2711 01b5 1B       		.uleb128 0x1b
 2712 01b6 34       		.uleb128 0x34
 2713 01b7 00       		.byte	0
 2714 01b8 03       		.uleb128 0x3
 2715 01b9 0E       		.uleb128 0xe
 2716 01ba 3A       		.uleb128 0x3a
 2717 01bb 0B       		.uleb128 0xb
 2718 01bc 3B       		.uleb128 0x3b
 2719 01bd 05       		.uleb128 0x5
 2720 01be 49       		.uleb128 0x49
 2721 01bf 13       		.uleb128 0x13
 2722 01c0 3F       		.uleb128 0x3f
 2723 01c1 19       		.uleb128 0x19
 2724 01c2 3C       		.uleb128 0x3c
 2725 01c3 19       		.uleb128 0x19
 2726 01c4 00       		.byte	0
 2727 01c5 00       		.byte	0
 2728 01c6 1C       		.uleb128 0x1c
 2729 01c7 34       		.uleb128 0x34
 2730 01c8 00       		.byte	0
 2731 01c9 03       		.uleb128 0x3
 2732 01ca 08       		.uleb128 0x8
 2733 01cb 3A       		.uleb128 0x3a
 2734 01cc 0B       		.uleb128 0xb
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 59


 2735 01cd 3B       		.uleb128 0x3b
 2736 01ce 0B       		.uleb128 0xb
 2737 01cf 49       		.uleb128 0x49
 2738 01d0 13       		.uleb128 0x13
 2739 01d1 3F       		.uleb128 0x3f
 2740 01d2 19       		.uleb128 0x19
 2741 01d3 02       		.uleb128 0x2
 2742 01d4 18       		.uleb128 0x18
 2743 01d5 00       		.byte	0
 2744 01d6 00       		.byte	0
 2745 01d7 1D       		.uleb128 0x1d
 2746 01d8 34       		.uleb128 0x34
 2747 01d9 00       		.byte	0
 2748 01da 03       		.uleb128 0x3
 2749 01db 0E       		.uleb128 0xe
 2750 01dc 3A       		.uleb128 0x3a
 2751 01dd 0B       		.uleb128 0xb
 2752 01de 3B       		.uleb128 0x3b
 2753 01df 0B       		.uleb128 0xb
 2754 01e0 49       		.uleb128 0x49
 2755 01e1 13       		.uleb128 0x13
 2756 01e2 3F       		.uleb128 0x3f
 2757 01e3 19       		.uleb128 0x19
 2758 01e4 02       		.uleb128 0x2
 2759 01e5 18       		.uleb128 0x18
 2760 01e6 00       		.byte	0
 2761 01e7 00       		.byte	0
 2762 01e8 1E       		.uleb128 0x1e
 2763 01e9 21       		.uleb128 0x21
 2764 01ea 00       		.byte	0
 2765 01eb 49       		.uleb128 0x49
 2766 01ec 13       		.uleb128 0x13
 2767 01ed 2F       		.uleb128 0x2f
 2768 01ee 0B       		.uleb128 0xb
 2769 01ef 00       		.byte	0
 2770 01f0 00       		.byte	0
 2771 01f1 00       		.byte	0
 2772              		.section	.debug_aranges,"",%progbits
 2773 0000 A4000000 		.4byte	0xa4
 2774 0004 0200     		.2byte	0x2
 2775 0006 00000000 		.4byte	.Ldebug_info0
 2776 000a 04       		.byte	0x4
 2777 000b 00       		.byte	0
 2778 000c 0000     		.2byte	0
 2779 000e 0000     		.2byte	0
 2780 0010 00000000 		.4byte	.LFB64
 2781 0014 14000000 		.4byte	.LFE64-.LFB64
 2782 0018 00000000 		.4byte	.LFB65
 2783 001c 2E000000 		.4byte	.LFE65-.LFB65
 2784 0020 00000000 		.4byte	.LFB66
 2785 0024 14000000 		.4byte	.LFE66-.LFB66
 2786 0028 00000000 		.4byte	.LFB67
 2787 002c 14000000 		.4byte	.LFE67-.LFB67
 2788 0030 00000000 		.4byte	.LFB68
 2789 0034 20000000 		.4byte	.LFE68-.LFB68
 2790 0038 00000000 		.4byte	.LFB69
 2791 003c 20000000 		.4byte	.LFE69-.LFB69
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 60


 2792 0040 00000000 		.4byte	.LFB70
 2793 0044 2A000000 		.4byte	.LFE70-.LFB70
 2794 0048 00000000 		.4byte	.LFB71
 2795 004c E0000000 		.4byte	.LFE71-.LFB71
 2796 0050 00000000 		.4byte	.LFB72
 2797 0054 0C000000 		.4byte	.LFE72-.LFB72
 2798 0058 00000000 		.4byte	.LFB73
 2799 005c C0000000 		.4byte	.LFE73-.LFB73
 2800 0060 00000000 		.4byte	.LFB74
 2801 0064 1A000000 		.4byte	.LFE74-.LFB74
 2802 0068 00000000 		.4byte	.LFB75
 2803 006c 0C000000 		.4byte	.LFE75-.LFB75
 2804 0070 00000000 		.4byte	.LFB76
 2805 0074 08010000 		.4byte	.LFE76-.LFB76
 2806 0078 00000000 		.4byte	.LFB77
 2807 007c 50000000 		.4byte	.LFE77-.LFB77
 2808 0080 00000000 		.4byte	.LFB78
 2809 0084 50000000 		.4byte	.LFE78-.LFB78
 2810 0088 00000000 		.4byte	.LFB79
 2811 008c 3E000000 		.4byte	.LFE79-.LFB79
 2812 0090 00000000 		.4byte	.LFB80
 2813 0094 26000000 		.4byte	.LFE80-.LFB80
 2814 0098 00000000 		.4byte	.LFB81
 2815 009c CC000000 		.4byte	.LFE81-.LFB81
 2816 00a0 00000000 		.4byte	0
 2817 00a4 00000000 		.4byte	0
 2818              		.section	.debug_ranges,"",%progbits
 2819              	.Ldebug_ranges0:
 2820 0000 00000000 		.4byte	.LFB64
 2821 0004 14000000 		.4byte	.LFE64
 2822 0008 00000000 		.4byte	.LFB65
 2823 000c 2E000000 		.4byte	.LFE65
 2824 0010 00000000 		.4byte	.LFB66
 2825 0014 14000000 		.4byte	.LFE66
 2826 0018 00000000 		.4byte	.LFB67
 2827 001c 14000000 		.4byte	.LFE67
 2828 0020 00000000 		.4byte	.LFB68
 2829 0024 20000000 		.4byte	.LFE68
 2830 0028 00000000 		.4byte	.LFB69
 2831 002c 20000000 		.4byte	.LFE69
 2832 0030 00000000 		.4byte	.LFB70
 2833 0034 2A000000 		.4byte	.LFE70
 2834 0038 00000000 		.4byte	.LFB71
 2835 003c E0000000 		.4byte	.LFE71
 2836 0040 00000000 		.4byte	.LFB72
 2837 0044 0C000000 		.4byte	.LFE72
 2838 0048 00000000 		.4byte	.LFB73
 2839 004c C0000000 		.4byte	.LFE73
 2840 0050 00000000 		.4byte	.LFB74
 2841 0054 1A000000 		.4byte	.LFE74
 2842 0058 00000000 		.4byte	.LFB75
 2843 005c 0C000000 		.4byte	.LFE75
 2844 0060 00000000 		.4byte	.LFB76
 2845 0064 08010000 		.4byte	.LFE76
 2846 0068 00000000 		.4byte	.LFB77
 2847 006c 50000000 		.4byte	.LFE77
 2848 0070 00000000 		.4byte	.LFB78
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 61


 2849 0074 50000000 		.4byte	.LFE78
 2850 0078 00000000 		.4byte	.LFB79
 2851 007c 3E000000 		.4byte	.LFE79
 2852 0080 00000000 		.4byte	.LFB80
 2853 0084 26000000 		.4byte	.LFE80
 2854 0088 00000000 		.4byte	.LFB81
 2855 008c CC000000 		.4byte	.LFE81
 2856 0090 00000000 		.4byte	0
 2857 0094 00000000 		.4byte	0
 2858              		.section	.debug_line,"",%progbits
 2859              	.Ldebug_line0:
 2860 0000 42030000 		.section	.debug_str,"MS",%progbits,1
 2860      02005601 
 2860      00000201 
 2860      FB0E0D00 
 2860      01010101 
 2861              	.LASF39:
 2862 0000 6D6F746F 		.ascii	"motorStop\000"
 2862      7253746F 
 2862      7000
 2863              	.LASF59:
 2864 000a 6973725F 		.ascii	"isr_TS_Interrupt_sample\000"
 2864      54535F49 
 2864      6E746572 
 2864      72757074 
 2864      5F73616D 
 2865              	.LASF76:
 2866 0022 74735F65 		.ascii	"ts_enc\000"
 2866      6E6300
 2867              	.LASF14:
 2868 0029 646F7562 		.ascii	"double\000"
 2868      6C6500
 2869              	.LASF85:
 2870 0030 666C6167 		.ascii	"flag_packet\000"
 2870      5F706163 
 2870      6B657400 
 2871              	.LASF69:
 2872 003c 75736250 		.ascii	"usbPutChar\000"
 2872      75744368 
 2872      617200
 2873              	.LASF99:
 2874 0047 636F756E 		.ascii	"counteoc\000"
 2874      74656F63 
 2874      00
 2875              	.LASF44:
 2876 0050 6973725F 		.ascii	"isr_eoc_Interrupt_test\000"
 2876      656F635F 
 2876      496E7465 
 2876      72727570 
 2876      745F7465 
 2877              	.LASF38:
 2878 0067 6D6F746F 		.ascii	"motorGoBackwards\000"
 2878      72476F42 
 2878      61636B77 
 2878      61726473 
 2878      00
 2879              	.LASF95:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 62


 2880 0078 63686563 		.ascii	"checkLight\000"
 2880      6B4C6967 
 2880      687400
 2881              	.LASF33:
 2882 0083 67325F78 		.ascii	"g2_xpos\000"
 2882      706F7300 
 2883              	.LASF2:
 2884 008b 73686F72 		.ascii	"short int\000"
 2884      7420696E 
 2884      7400
 2885              	.LASF93:
 2886 0095 73797374 		.ascii	"system_state\000"
 2886      656D5F73 
 2886      74617465 
 2886      00
 2887              	.LASF10:
 2888 00a2 73697A65 		.ascii	"sizetype\000"
 2888      74797065 
 2888      00
 2889              	.LASF92:
 2890 00ab 75736242 		.ascii	"usbBuffer\000"
 2890      75666665 
 2890      7200
 2891              	.LASF102:
 2892 00b5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2892      43313120 
 2892      352E342E 
 2892      31203230 
 2892      31363036 
 2893 00e8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2893      20726576 
 2893      6973696F 
 2893      6E203233 
 2893      37373135 
 2894 011b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2894      66756E63 
 2894      74696F6E 
 2894      2D736563 
 2894      74696F6E 
 2895              	.LASF60:
 2896 0143 6D61696E 		.ascii	"main\000"
 2896      00
 2897              	.LASF57:
 2898 0148 6D6F746F 		.ascii	"motorRun\000"
 2898      7252756E 
 2898      00
 2899              	.LASF48:
 2900 0151 76616C75 		.ascii	"valueQ1\000"
 2900      65513100 
 2901              	.LASF49:
 2902 0159 76616C75 		.ascii	"valueQ2\000"
 2902      65513200 
 2903              	.LASF45:
 2904 0161 76616C75 		.ascii	"valueQ3\000"
 2904      65513300 
 2905              	.LASF46:
 2906 0169 76616C75 		.ascii	"valueQ4\000"
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 63


 2906      65513400 
 2907              	.LASF47:
 2908 0171 76616C75 		.ascii	"valueQ5\000"
 2908      65513500 
 2909              	.LASF50:
 2910 0179 76616C75 		.ascii	"valueQ6\000"
 2910      65513600 
 2911              	.LASF96:
 2912 0181 6C696768 		.ascii	"lightState\000"
 2912      74537461 
 2912      746500
 2913              	.LASF17:
 2914 018c 75696E74 		.ascii	"uint16\000"
 2914      313600
 2915              	.LASF21:
 2916 0193 696E6465 		.ascii	"index\000"
 2916      7800
 2917              	.LASF105:
 2918 0199 64617461 		.ascii	"data_main\000"
 2918      5F6D6169 
 2918      6E00
 2919              	.LASF19:
 2920 01a3 696E7431 		.ascii	"int16\000"
 2920      3600
 2921              	.LASF16:
 2922 01a9 75696E74 		.ascii	"uint8\000"
 2922      3800
 2923              	.LASF104:
 2924 01af 5C5C6669 		.ascii	"\\\\files.auckland.ac.nz\\myhome\\Documents\\GitHub"
 2924      6C65732E 
 2924      6175636B 
 2924      6C616E64 
 2924      2E61632E 
 2925 01dd 5C70726F 		.ascii	"\\project-project_group_11\\COMPSYS 301\\psoc stude"
 2925      6A656374 
 2925      2D70726F 
 2925      6A656374 
 2925      5F67726F 
 2926 020d 6E742070 		.ascii	"nt pack\\psoc student pack\\psoc_code_base\\CS301_C"
 2926      61636B5C 
 2926      70736F63 
 2926      20737475 
 2926      64656E74 
 2927 023d 6C617373 		.ascii	"lass.cydsn\000"
 2927      2E637964 
 2927      736E00
 2928              	.LASF94:
 2929 0248 6368616E 		.ascii	"changeMotor\000"
 2929      67654D6F 
 2929      746F7200 
 2930              	.LASF98:
 2931 0254 6C696768 		.ascii	"lightDetectedBack\000"
 2931      74446574 
 2931      65637465 
 2931      64426163 
 2931      6B00
 2932              	.LASF15:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 64


 2933 0266 666C6F61 		.ascii	"float\000"
 2933      7400
 2934              	.LASF58:
 2935 026c 6973725F 		.ascii	"isr_motor_interrupt_speed\000"
 2935      6D6F746F 
 2935      725F696E 
 2935      74657272 
 2935      7570745F 
 2936              	.LASF6:
 2937 0286 6C6F6E67 		.ascii	"long long int\000"
 2937      206C6F6E 
 2937      6720696E 
 2937      7400
 2938              	.LASF68:
 2939 0294 75736250 		.ascii	"usbPutString\000"
 2939      75745374 
 2939      72696E67 
 2939      00
 2940              	.LASF18:
 2941 02a1 696E7438 		.ascii	"int8\000"
 2941      00
 2942              	.LASF81:
 2943 02a6 666C6167 		.ascii	"flag_ts_update\000"
 2943      5F74735F 
 2943      75706461 
 2943      746500
 2944              	.LASF34:
 2945 02b5 67325F79 		.ascii	"g2_ypos\000"
 2945      706F7300 
 2946              	.LASF28:
 2947 02bd 67305F64 		.ascii	"g0_direction\000"
 2947      69726563 
 2947      74696F6E 
 2947      00
 2948              	.LASF25:
 2949 02ca 67305F78 		.ascii	"g0_xpos\000"
 2949      706F7300 
 2950              	.LASF4:
 2951 02d2 6C6F6E67 		.ascii	"long int\000"
 2951      20696E74 
 2951      00
 2952              	.LASF51:
 2953 02db 62656769 		.ascii	"beginningCountMotor1\000"
 2953      6E6E696E 
 2953      67436F75 
 2953      6E744D6F 
 2953      746F7231 
 2954              	.LASF52:
 2955 02f0 62656769 		.ascii	"beginningCountMotor2\000"
 2955      6E6E696E 
 2955      67436F75 
 2955      6E744D6F 
 2955      746F7232 
 2956              	.LASF55:
 2957 0305 6D6F746F 		.ascii	"motor1String\000"
 2957      72315374 
 2957      72696E67 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 65


 2957      00
 2958              	.LASF100:
 2959 0312 70726F63 		.ascii	"processSensors\000"
 2959      65737353 
 2959      656E736F 
 2959      727300
 2960              	.LASF90:
 2961 0321 6C696E65 		.ascii	"line\000"
 2961      00
 2962              	.LASF83:
 2963 0326 666C6167 		.ascii	"flag_ts_display\000"
 2963      5F74735F 
 2963      64697370 
 2963      6C617900 
 2964              	.LASF84:
 2965 0336 666C6167 		.ascii	"flag_rx\000"
 2965      5F727800 
 2966              	.LASF54:
 2967 033e 656E6443 		.ascii	"endCountMotor1\000"
 2967      6F756E74 
 2967      4D6F746F 
 2967      723100
 2968              	.LASF53:
 2969 034d 656E6443 		.ascii	"endCountMotor2\000"
 2969      6F756E74 
 2969      4D6F746F 
 2969      723200
 2970              	.LASF91:
 2971 035c 656E7472 		.ascii	"entry\000"
 2971      7900
 2972              	.LASF9:
 2973 0362 6C6F6E67 		.ascii	"long double\000"
 2973      20646F75 
 2973      626C6500 
 2974              	.LASF65:
 2975 036e 76616C75 		.ascii	"value1\000"
 2975      653100
 2976              	.LASF1:
 2977 0375 756E7369 		.ascii	"unsigned char\000"
 2977      676E6564 
 2977      20636861 
 2977      7200
 2978              	.LASF97:
 2979 0383 6C696768 		.ascii	"lightDetectedFront\000"
 2979      74446574 
 2979      65637465 
 2979      6446726F 
 2979      6E7400
 2980              	.LASF27:
 2981 0396 67305F73 		.ascii	"g0_speed\000"
 2981      70656564 
 2981      00
 2982              	.LASF87:
 2983 039f 64617461 		.ascii	"dataready_flag\000"
 2983      72656164 
 2983      795F666C 
 2983      616700
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 66


 2984              	.LASF0:
 2985 03ae 7369676E 		.ascii	"signed char\000"
 2985      65642063 
 2985      68617200 
 2986              	.LASF7:
 2987 03ba 6C6F6E67 		.ascii	"long long unsigned int\000"
 2987      206C6F6E 
 2987      6720756E 
 2987      7369676E 
 2987      65642069 
 2988              	.LASF43:
 2989 03d1 6D6F746F 		.ascii	"motorCircle\000"
 2989      72436972 
 2989      636C6500 
 2990              	.LASF8:
 2991 03dd 756E7369 		.ascii	"unsigned int\000"
 2991      676E6564 
 2991      20696E74 
 2991      00
 2992              	.LASF86:
 2993 03ea 666C6167 		.ascii	"flag_KB_string\000"
 2993      5F4B425F 
 2993      73747269 
 2993      6E6700
 2994              	.LASF73:
 2995 03f9 75736242 		.ascii	"usbBufCount\000"
 2995      7566436F 
 2995      756E7400 
 2996              	.LASF35:
 2997 0405 67325F73 		.ascii	"g2_speed\000"
 2997      70656564 
 2997      00
 2998              	.LASF29:
 2999 040e 67315F78 		.ascii	"g1_xpos\000"
 2999      706F7300 
 3000              	.LASF63:
 3001 0416 6F706572 		.ascii	"operation\000"
 3001      6174696F 
 3001      6E00
 3002              	.LASF64:
 3003 0420 636F6E76 		.ascii	"convertBackBinary\000"
 3003      65727442 
 3003      61636B42 
 3003      696E6172 
 3003      7900
 3004              	.LASF11:
 3005 0432 63686172 		.ascii	"char\000"
 3005      00
 3006              	.LASF22:
 3007 0437 726F626F 		.ascii	"robot_xpos\000"
 3007      745F7870 
 3007      6F7300
 3008              	.LASF13:
 3009 0442 696E7433 		.ascii	"int32_t\000"
 3009      325F7400 
 3010              	.LASF30:
 3011 044a 67315F79 		.ascii	"g1_ypos\000"
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 67


 3011      706F7300 
 3012              	.LASF36:
 3013 0452 67325F64 		.ascii	"g2_direction\000"
 3013      69726563 
 3013      74696F6E 
 3013      00
 3014              	.LASF3:
 3015 045f 73686F72 		.ascii	"short unsigned int\000"
 3015      7420756E 
 3015      7369676E 
 3015      65642069 
 3015      6E7400
 3016              	.LASF40:
 3017 0472 6D6F746F 		.ascii	"motorSetSpeed\000"
 3017      72536574 
 3017      53706565 
 3017      6400
 3018              	.LASF31:
 3019 0480 67315F73 		.ascii	"g1_speed\000"
 3019      70656564 
 3019      00
 3020              	.LASF89:
 3021 0489 64697370 		.ascii	"displaystring\000"
 3021      6C617973 
 3021      7472696E 
 3021      6700
 3022              	.LASF82:
 3023 0497 666C6167 		.ascii	"flag_ts_speed\000"
 3023      5F74735F 
 3023      73706565 
 3023      6400
 3024              	.LASF66:
 3025 04a5 636F6E76 		.ascii	"convertSensorBinary\000"
 3025      65727453 
 3025      656E736F 
 3025      7242696E 
 3025      61727900 
 3026              	.LASF103:
 3027 04b9 6D61696E 		.ascii	"main.c\000"
 3027      2E6300
 3028              	.LASF5:
 3029 04c0 6C6F6E67 		.ascii	"long unsigned int\000"
 3029      20756E73 
 3029      69676E65 
 3029      6420696E 
 3029      7400
 3030              	.LASF72:
 3031 04d2 75736253 		.ascii	"usbStarted\000"
 3031      74617274 
 3031      656400
 3032              	.LASF62:
 3033 04dd 74726176 		.ascii	"travelDis\000"
 3033      656C4469 
 3033      7300
 3034              	.LASF78:
 3035 04e7 74735F73 		.ascii	"ts_speed\000"
 3035      70656564 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 68


 3035      00
 3036              	.LASF74:
 3037 04f0 636F756E 		.ascii	"count\000"
 3037      7400
 3038              	.LASF80:
 3039 04f6 666C6167 		.ascii	"flag_ts_enc\000"
 3039      5F74735F 
 3039      656E6300 
 3040              	.LASF12:
 3041 0502 5F5F696E 		.ascii	"__int32_t\000"
 3041      7433325F 
 3041      7400
 3042              	.LASF41:
 3043 050c 6D6F746F 		.ascii	"motorTurnLeft\000"
 3043      72547572 
 3043      6E4C6566 
 3043      7400
 3044              	.LASF37:
 3045 051a 6D6F746F 		.ascii	"motorGoStraight\000"
 3045      72476F53 
 3045      74726169 
 3045      67687400 
 3046              	.LASF70:
 3047 052a 6D6F746F 		.ascii	"motorCount\000"
 3047      72436F75 
 3047      6E7400
 3048              	.LASF26:
 3049 0535 67305F79 		.ascii	"g0_ypos\000"
 3049      706F7300 
 3050              	.LASF79:
 3051 053d 74735F64 		.ascii	"ts_display\000"
 3051      6973706C 
 3051      617900
 3052              	.LASF61:
 3053 0548 6C617374 		.ascii	"lastState\000"
 3053      53746174 
 3053      6500
 3054              	.LASF77:
 3055 0552 74735F75 		.ascii	"ts_update\000"
 3055      70646174 
 3055      6500
 3056              	.LASF71:
 3057 055c 68616E64 		.ascii	"handle_usb\000"
 3057      6C655F75 
 3057      736200
 3058              	.LASF88:
 3059 0567 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3059      5F72665F 
 3059      7472616E 
 3059      736D6973 
 3059      73696F6E 
 3060              	.LASF23:
 3061 0583 726F626F 		.ascii	"robot_ypos\000"
 3061      745F7970 
 3061      6F7300
 3062              	.LASF75:
 3063 058e 49544D5F 		.ascii	"ITM_RxBuffer\000"
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQMpYnn.s 			page 69


 3063      52784275 
 3063      66666572 
 3063      00
 3064              	.LASF67:
 3065 059b 76616C75 		.ascii	"value\000"
 3065      6500
 3066              	.LASF56:
 3067 05a1 6D6F746F 		.ascii	"motor2String\000"
 3067      72325374 
 3067      72696E67 
 3067      00
 3068              	.LASF32:
 3069 05ae 67315F64 		.ascii	"g1_direction\000"
 3069      69726563 
 3069      74696F6E 
 3069      00
 3070              	.LASF42:
 3071 05bb 6D6F746F 		.ascii	"motorTurnRight\000"
 3071      72547572 
 3071      6E526967 
 3071      687400
 3072              	.LASF101:
 3073 05ca 6D696464 		.ascii	"middle\000"
 3073      6C6500
 3074              	.LASF20:
 3075 05d1 72737369 		.ascii	"rssi\000"
 3075      00
 3076              	.LASF24:
 3077 05d6 726F626F 		.ascii	"robot_orientation\000"
 3077      745F6F72 
 3077      69656E74 
 3077      6174696F 
 3077      6E00
 3078              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
