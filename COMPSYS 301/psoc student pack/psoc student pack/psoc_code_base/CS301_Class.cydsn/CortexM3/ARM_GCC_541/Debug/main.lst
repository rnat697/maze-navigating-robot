ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.section	.text.motorGoStraight,"ax",%progbits
 107              		.align	2
 108              		.global	motorGoStraight
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 3


 109              		.thumb
 110              		.thumb_func
 111              		.type	motorGoStraight, %function
 112              	motorGoStraight:
 113              	.LFB64:
 114              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <stdbool.h>
  19:main.c        **** #include <string.h>
  20:main.c        **** #include <stdlib.h>
  21:main.c        **** #include <project.h>
  22:main.c        **** //* ========================================
  23:main.c        **** #include "defines.h"
  24:main.c        **** #include "vars.h"
  25:main.c        **** #include "isr_eoc.h"
  26:main.c        **** //* ========================================
  27:main.c        **** void usbPutString(char *s);
  28:main.c        **** void usbPutChar(char c);
  29:main.c        **** void handle_usb();
  30:main.c        **** //* ========================================
  31:main.c        **** 
  32:main.c        **** 
  33:main.c        **** #define rota180 500 //turns
  34:main.c        **** #define rota90Left 250
  35:main.c        **** 
  36:main.c        **** #define moveSlow 50
  37:main.c        **** #define travelDist 326 // how
  38:main.c        **** #define Q1CHANNEL 3
  39:main.c        **** #define Q2CHANNEL 5 
  40:main.c        **** #define Q3CHANNEL 0
  41:main.c        **** #define Q4CHANNEL 1
  42:main.c        **** #define Q5CHANNEL 2
  43:main.c        **** #define Q6CHANNEL 4
  44:main.c        **** 
  45:main.c        **** CY_ISR_PROTO(isr_eoc_Interrupt_test);
  46:main.c        **** CY_ISR_PROTO(isr_motor_interrupt_speed);
  47:main.c        **** CY_ISR_PROTO(isr_TS_interrupt_sample);
  48:main.c        **** int convertSensorBinary();
  49:main.c        **** 
  50:main.c        **** void motorGoStraight(){
 115              		.loc 1 50 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 4


 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119 0000 80B5     		push	{r7, lr}
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 7, -8
 122              		.cfi_offset 14, -4
 123 0002 00AF     		add	r7, sp, #0
 124              		.cfi_def_cfa_register 7
  51:main.c        ****     ////PWM_1_WriteCompare(150); // left wheel near power switch is stronker than right wheel //150
  52:main.c        ****     //M1_IN2_Write(0);
  53:main.c        ****     PWM_1_WriteCompare(200);//200
 125              		.loc 1 53 0
 126 0004 C820     		movs	r0, #200
 127 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  54:main.c        ****     PWM_2_WriteCompare(50); //50
 128              		.loc 1 54 0
 129 000a 3220     		movs	r0, #50
 130 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  55:main.c        **** }
 131              		.loc 1 55 0
 132 0010 00BF     		nop
 133 0012 80BD     		pop	{r7, pc}
 134              		.cfi_endproc
 135              	.LFE64:
 136              		.size	motorGoStraight, .-motorGoStraight
 137              		.section	.text.motorGoBackwards,"ax",%progbits
 138              		.align	2
 139              		.global	motorGoBackwards
 140              		.thumb
 141              		.thumb_func
 142              		.type	motorGoBackwards, %function
 143              	motorGoBackwards:
 144              	.LFB65:
  56:main.c        **** void motorGoBackwards(){
 145              		.loc 1 56 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 1, uses_anonymous_args = 0
 149 0000 80B5     		push	{r7, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 00AF     		add	r7, sp, #0
 154              		.cfi_def_cfa_register 7
  57:main.c        ****     
  58:main.c        ****     //M1_IN2_Write(0);
  59:main.c        ****     PWM_1_WriteCompare(55); //55
 155              		.loc 1 59 0
 156 0004 3720     		movs	r0, #55
 157 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  60:main.c        ****     PWM_2_WriteCompare(201); //201
 158              		.loc 1 60 0
 159 000a C920     		movs	r0, #201
 160 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  61:main.c        **** }
 161              		.loc 1 61 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 5


 162 0010 00BF     		nop
 163 0012 80BD     		pop	{r7, pc}
 164              		.cfi_endproc
 165              	.LFE65:
 166              		.size	motorGoBackwards, .-motorGoBackwards
 167              		.section	.text.motorStop,"ax",%progbits
 168              		.align	2
 169              		.global	motorStop
 170              		.thumb
 171              		.thumb_func
 172              		.type	motorStop, %function
 173              	motorStop:
 174              	.LFB66:
  62:main.c        **** void motorStop(){
 175              		.loc 1 62 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 1, uses_anonymous_args = 0
 179 0000 80B5     		push	{r7, lr}
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 7, -8
 182              		.cfi_offset 14, -4
 183 0002 00AF     		add	r7, sp, #0
 184              		.cfi_def_cfa_register 7
  63:main.c        ****     PWM_1_WriteCompare(127); // left wheel near power switch is stronker than right wheel
 185              		.loc 1 63 0
 186 0004 7F20     		movs	r0, #127
 187 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  64:main.c        ****     PWM_2_WriteCompare(127);
 188              		.loc 1 64 0
 189 000a 7F20     		movs	r0, #127
 190 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  65:main.c        **** }
 191              		.loc 1 65 0
 192 0010 00BF     		nop
 193 0012 80BD     		pop	{r7, pc}
 194              		.cfi_endproc
 195              	.LFE66:
 196              		.size	motorStop, .-motorStop
 197              		.section	.text.motorTurnLeft,"ax",%progbits
 198              		.align	2
 199              		.global	motorTurnLeft
 200              		.thumb
 201              		.thumb_func
 202              		.type	motorTurnLeft, %function
 203              	motorTurnLeft:
 204              	.LFB67:
  66:main.c        **** 
  67:main.c        **** void motorTurnLeft(int x){
 205              		.loc 1 67 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 8
 208              		@ frame_needed = 1, uses_anonymous_args = 0
 209 0000 80B5     		push	{r7, lr}
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 7, -8
 212              		.cfi_offset 14, -4
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 6


 213 0002 82B0     		sub	sp, sp, #8
 214              		.cfi_def_cfa_offset 16
 215 0004 00AF     		add	r7, sp, #0
 216              		.cfi_def_cfa_register 7
 217 0006 7860     		str	r0, [r7, #4]
  68:main.c        ****     // TO DO
  69:main.c        ****     
  70:main.c        ****     PWM_1_WriteCompare(x); //55
 218              		.loc 1 70 0
 219 0008 7B68     		ldr	r3, [r7, #4]
 220 000a DBB2     		uxtb	r3, r3
 221 000c 1846     		mov	r0, r3
 222 000e FFF7FEFF 		bl	PWM_1_WriteCompare
  71:main.c        ****     PWM_2_WriteCompare(125); //201
 223              		.loc 1 71 0
 224 0012 7D20     		movs	r0, #125
 225 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
  72:main.c        ****     
  73:main.c        ****     
  74:main.c        ****     
  75:main.c        ****     //255
  76:main.c        **** }
 226              		.loc 1 76 0
 227 0018 00BF     		nop
 228 001a 0837     		adds	r7, r7, #8
 229              		.cfi_def_cfa_offset 8
 230 001c BD46     		mov	sp, r7
 231              		.cfi_def_cfa_register 13
 232              		@ sp needed
 233 001e 80BD     		pop	{r7, pc}
 234              		.cfi_endproc
 235              	.LFE67:
 236              		.size	motorTurnLeft, .-motorTurnLeft
 237              		.section	.text.motorTurnRight,"ax",%progbits
 238              		.align	2
 239              		.global	motorTurnRight
 240              		.thumb
 241              		.thumb_func
 242              		.type	motorTurnRight, %function
 243              	motorTurnRight:
 244              	.LFB68:
  77:main.c        **** 
  78:main.c        **** void motorTurnRight(int x){
 245              		.loc 1 78 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 8
 248              		@ frame_needed = 1, uses_anonymous_args = 0
 249 0000 80B5     		push	{r7, lr}
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 7, -8
 252              		.cfi_offset 14, -4
 253 0002 82B0     		sub	sp, sp, #8
 254              		.cfi_def_cfa_offset 16
 255 0004 00AF     		add	r7, sp, #0
 256              		.cfi_def_cfa_register 7
 257 0006 7860     		str	r0, [r7, #4]
  79:main.c        ****     // TO DO
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 7


  80:main.c        ****     
  81:main.c        ****     PWM_1_WriteCompare(127);//200
 258              		.loc 1 81 0
 259 0008 7F20     		movs	r0, #127
 260 000a FFF7FEFF 		bl	PWM_1_WriteCompare
  82:main.c        ****     PWM_2_WriteCompare(x); //50
 261              		.loc 1 82 0
 262 000e 7B68     		ldr	r3, [r7, #4]
 263 0010 DBB2     		uxtb	r3, r3
 264 0012 1846     		mov	r0, r3
 265 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
  83:main.c        **** 
  84:main.c        **** }
 266              		.loc 1 84 0
 267 0018 00BF     		nop
 268 001a 0837     		adds	r7, r7, #8
 269              		.cfi_def_cfa_offset 8
 270 001c BD46     		mov	sp, r7
 271              		.cfi_def_cfa_register 13
 272              		@ sp needed
 273 001e 80BD     		pop	{r7, pc}
 274              		.cfi_endproc
 275              	.LFE68:
 276              		.size	motorTurnRight, .-motorTurnRight
 277              		.global	changeMotor
 278              		.bss
 279 0012 0000     		.align	2
 280              		.type	changeMotor, %object
 281              		.size	changeMotor, 4
 282              	changeMotor:
 283 0014 00000000 		.space	4
 284              		.global	checkLight
 285              		.align	2
 286              		.type	checkLight, %object
 287              		.size	checkLight, 4
 288              	checkLight:
 289 0018 00000000 		.space	4
 290              		.global	lightState
 291              		.align	2
 292              		.type	lightState, %object
 293              		.size	lightState, 4
 294              	lightState:
 295 001c 00000000 		.space	4
 296              		.global	lightDetectedFront
 297              		.align	2
 298              		.type	lightDetectedFront, %object
 299              		.size	lightDetectedFront, 12
 300              	lightDetectedFront:
 301 0020 00000000 		.space	12
 301      00000000 
 301      00000000 
 302              		.global	counteoc
 303              		.align	2
 304              		.type	counteoc, %object
 305              		.size	counteoc, 4
 306              	counteoc:
 307 002c 00000000 		.space	4
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 8


 308              		.global	processSensors
 309              		.align	2
 310              		.type	processSensors, %object
 311              		.size	processSensors, 4
 312              	processSensors:
 313 0030 00000000 		.space	4
 314              		.section	.text.isr_eoc_Interrupt_test,"ax",%progbits
 315              		.align	2
 316              		.global	isr_eoc_Interrupt_test
 317              		.thumb
 318              		.thumb_func
 319              		.type	isr_eoc_Interrupt_test, %function
 320              	isr_eoc_Interrupt_test:
 321              	.LFB69:
  85:main.c        **** int changeMotor=0;
  86:main.c        **** int checkLight =0;
  87:main.c        **** int lightState=0;
  88:main.c        **** volatile int lightDetectedFront[3] = {0,0,0};
  89:main.c        **** volatile int counteoc = 0;
  90:main.c        **** volatile int processSensors = 0;
  91:main.c        **** CY_ISR(isr_eoc_Interrupt_test)
  92:main.c        **** {
 322              		.loc 1 92 0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 8
 325              		@ frame_needed = 1, uses_anonymous_args = 0
 326 0000 80B5     		push	{r7, lr}
 327              		.cfi_def_cfa_offset 8
 328              		.cfi_offset 7, -8
 329              		.cfi_offset 14, -4
 330 0002 82B0     		sub	sp, sp, #8
 331              		.cfi_def_cfa_offset 16
 332 0004 00AF     		add	r7, sp, #0
 333              		.cfi_def_cfa_register 7
  93:main.c        ****     #ifdef isr_test_INTERRUPT_INTERRUPT_CALLBACK
  94:main.c        ****         isr_TS_Interrupt_InterruptCallback();
  95:main.c        ****     #endif /* isr_eoc_INTERRUPT_INTERRUPT_CALLBACK */ 
  96:main.c        **** 
  97:main.c        ****     /*  Place your Interrupt code here. */
  98:main.c        ****     /* `#START isr_eoc_Interrupt` */
  99:main.c        ****     int16 valueQ3 =  ADC_GetResult16(Q3CHANNEL);
 334              		.loc 1 99 0
 335 0006 0020     		movs	r0, #0
 336 0008 FFF7FEFF 		bl	ADC_GetResult16
 337 000c 0346     		mov	r3, r0
 338 000e FB80     		strh	r3, [r7, #6]	@ movhi
 100:main.c        ****     int16 valueQ4 =  ADC_GetResult16(Q4CHANNEL);
 339              		.loc 1 100 0
 340 0010 0120     		movs	r0, #1
 341 0012 FFF7FEFF 		bl	ADC_GetResult16
 342 0016 0346     		mov	r3, r0
 343 0018 BB80     		strh	r3, [r7, #4]	@ movhi
 101:main.c        ****     int16 valueQ5 =  ADC_GetResult16(Q5CHANNEL);
 344              		.loc 1 101 0
 345 001a 0220     		movs	r0, #2
 346 001c FFF7FEFF 		bl	ADC_GetResult16
 347 0020 0346     		mov	r3, r0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 9


 348 0022 7B80     		strh	r3, [r7, #2]	@ movhi
 102:main.c        ****     // get value from ADC then convert to DAC to send to external LEDs
 103:main.c        ****     if (counteoc < 10) {
 349              		.loc 1 103 0
 350 0024 174B     		ldr	r3, .L13
 351 0026 1B68     		ldr	r3, [r3]
 352 0028 092B     		cmp	r3, #9
 353 002a 20DC     		bgt	.L7
 104:main.c        ****         //2211
 105:main.c        ****         if (valueQ3 >= 2211) {
 354              		.loc 1 105 0
 355 002c B7F90630 		ldrsh	r3, [r7, #6]
 356 0030 40F6A202 		movw	r2, #2210
 357 0034 9342     		cmp	r3, r2
 358 0036 02DD     		ble	.L8
 106:main.c        ****         //set flag for white light detected
 107:main.c        ****         lightDetectedFront[0] = 1;
 359              		.loc 1 107 0
 360 0038 134B     		ldr	r3, .L13+4
 361 003a 0122     		movs	r2, #1
 362 003c 1A60     		str	r2, [r3]
 363              	.L8:
 108:main.c        ****         }
 109:main.c        ****         if (valueQ4 >= 2211) {
 364              		.loc 1 109 0
 365 003e B7F90430 		ldrsh	r3, [r7, #4]
 366 0042 40F6A202 		movw	r2, #2210
 367 0046 9342     		cmp	r3, r2
 368 0048 02DD     		ble	.L9
 110:main.c        ****         //set flag for white light detected
 111:main.c        ****         lightDetectedFront[1] = 1;
 369              		.loc 1 111 0
 370 004a 0F4B     		ldr	r3, .L13+4
 371 004c 0122     		movs	r2, #1
 372 004e 5A60     		str	r2, [r3, #4]
 373              	.L9:
 112:main.c        ****         }
 113:main.c        ****     
 114:main.c        ****         if (valueQ5 >= 2211) {
 374              		.loc 1 114 0
 375 0050 B7F90230 		ldrsh	r3, [r7, #2]
 376 0054 40F6A202 		movw	r2, #2210
 377 0058 9342     		cmp	r3, r2
 378 005a 02DD     		ble	.L10
 115:main.c        ****         //set flag for white light detected
 116:main.c        ****         lightDetectedFront[2] = 1;
 379              		.loc 1 116 0
 380 005c 0A4B     		ldr	r3, .L13+4
 381 005e 0122     		movs	r2, #1
 382 0060 9A60     		str	r2, [r3, #8]
 383              	.L10:
 117:main.c        ****         }
 118:main.c        ****         //Q3,Q4,Q5  in Array format.
 119:main.c        ****         counteoc++;
 384              		.loc 1 119 0
 385 0062 084B     		ldr	r3, .L13
 386 0064 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 10


 387 0066 0133     		adds	r3, r3, #1
 388 0068 064A     		ldr	r2, .L13
 389 006a 1360     		str	r3, [r2]
 120:main.c        ****     } else {
 121:main.c        ****         processSensors = 1;   
 122:main.c        ****         counteoc = 0;
 123:main.c        ****     }
 124:main.c        ****     /* `#END` */
 125:main.c        **** }
 390              		.loc 1 125 0
 391 006c 05E0     		b	.L12
 392              	.L7:
 121:main.c        ****         counteoc = 0;
 393              		.loc 1 121 0
 394 006e 074B     		ldr	r3, .L13+8
 395 0070 0122     		movs	r2, #1
 396 0072 1A60     		str	r2, [r3]
 122:main.c        ****     }
 397              		.loc 1 122 0
 398 0074 034B     		ldr	r3, .L13
 399 0076 0022     		movs	r2, #0
 400 0078 1A60     		str	r2, [r3]
 401              	.L12:
 402              		.loc 1 125 0
 403 007a 00BF     		nop
 404 007c 0837     		adds	r7, r7, #8
 405              		.cfi_def_cfa_offset 8
 406 007e BD46     		mov	sp, r7
 407              		.cfi_def_cfa_register 13
 408              		@ sp needed
 409 0080 80BD     		pop	{r7, pc}
 410              	.L14:
 411 0082 00BF     		.align	2
 412              	.L13:
 413 0084 00000000 		.word	counteoc
 414 0088 00000000 		.word	lightDetectedFront
 415 008c 00000000 		.word	processSensors
 416              		.cfi_endproc
 417              	.LFE69:
 418              		.size	isr_eoc_Interrupt_test, .-isr_eoc_Interrupt_test
 419              		.bss
 420              	count:
 421 0034 00       		.space	1
 422              		.section	.text.isr_motor_interrupt_speed,"ax",%progbits
 423              		.align	2
 424              		.global	isr_motor_interrupt_speed
 425              		.thumb
 426              		.thumb_func
 427              		.type	isr_motor_interrupt_speed, %function
 428              	isr_motor_interrupt_speed:
 429              	.LFB70:
 126:main.c        **** // NEED TO INCREASE/DECREASE SPEED TOO
 127:main.c        **** // AND IMPLEMENT LIGHT SENSOR THINGS
 128:main.c        **** volatile static int8 count;
 129:main.c        **** CY_ISR(isr_motor_interrupt_speed)
 130:main.c        **** {
 430              		.loc 1 130 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 11


 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 1, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 435 0000 80B4     		push	{r7}
 436              		.cfi_def_cfa_offset 4
 437              		.cfi_offset 7, -4
 438 0002 00AF     		add	r7, sp, #0
 439              		.cfi_def_cfa_register 7
 131:main.c        ****     #ifdef isr_motor_INTERRUPT_INTERRUPT_CALLBACK
 132:main.c        ****         isr_motor_Interrupt_InterruptCallback();
 133:main.c        ****     #endif /* isr_motor_INTERRUPT_INTERRUPT_CALLBACK */ 
 134:main.c        **** 
 135:main.c        ****     /*  Place your Interrupt code here. */
 136:main.c        ****     /* `#START isr_motor_Interrupt` */
 137:main.c        ****       /*int16 currCountMotor2 = QuadDec_M2_GetCounter();
 138:main.c        ****       int16 currCountMotor1 = QuadDec_M1_GetCounter();  
 139:main.c        ****       
 140:main.c        ****      speedMotor1 = (currCountMotor1 - prevcountMotor1) / 0.2;
 141:main.c        ****      speedMotor2 = (currCountMotor2 - prevcountMotor2) / 0.2;
 142:main.c        ****     
 143:main.c        ****       prevcountMotor1 = currCountMotor1;
 144:main.c        ****       prevcountMotor2 = currCountMotor2;*/
 145:main.c        ****     
 146:main.c        ****     /* `#END` */
 147:main.c        **** }
 440              		.loc 1 147 0
 441 0004 00BF     		nop
 442 0006 BD46     		mov	sp, r7
 443              		.cfi_def_cfa_register 13
 444              		@ sp needed
 445 0008 80BC     		pop	{r7}
 446              		.cfi_restore 7
 447              		.cfi_def_cfa_offset 0
 448 000a 7047     		bx	lr
 449              		.cfi_endproc
 450              	.LFE70:
 451              		.size	isr_motor_interrupt_speed, .-isr_motor_interrupt_speed
 452              		.section	.rodata
 453              		.align	2
 454              	.LC0:
 455 0000 4D6F746F 		.ascii	"Motor 1 - start count: %d, end count: %d \012\000"
 455      72203120 
 455      2D207374 
 455      61727420 
 455      636F756E 
 456 002b 00       		.align	2
 457              	.LC1:
 458 002c 4D6F746F 		.ascii	"Motor 2 - start count: %d, end count: %d \012\000"
 458      72203220 
 458      2D207374 
 458      61727420 
 458      636F756E 
 459              		.section	.text.motorCount,"ax",%progbits
 460              		.align	2
 461              		.global	motorCount
 462              		.thumb
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 12


 463              		.thumb_func
 464              		.type	motorCount, %function
 465              	motorCount:
 466              	.LFB71:
 148:main.c        **** void motorCount(){
 467              		.loc 1 148 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 20008
 470              		@ frame_needed = 1, uses_anonymous_args = 0
 471 0000 80B5     		push	{r7, lr}
 472              		.cfi_def_cfa_offset 8
 473              		.cfi_offset 7, -8
 474              		.cfi_offset 14, -4
 475 0002 ADF59C4D 		sub	sp, sp, #19968
 476              		.cfi_def_cfa_offset 19976
 477 0006 8AB0     		sub	sp, sp, #40
 478              		.cfi_def_cfa_offset 20016
 479 0008 00AF     		add	r7, sp, #0
 480              		.cfi_def_cfa_register 7
 149:main.c        ****     int16 beginningCountMotor1 = 0;
 481              		.loc 1 149 0
 482 000a 0023     		movs	r3, #0
 483 000c 07F59C42 		add	r2, r7, #19968
 484 0010 02F12602 		add	r2, r2, #38
 485 0014 1380     		strh	r3, [r2]	@ movhi
 150:main.c        ****     int16 beginningCountMotor2 = 0;
 486              		.loc 1 150 0
 487 0016 0023     		movs	r3, #0
 488 0018 07F59C42 		add	r2, r7, #19968
 489 001c 02F12402 		add	r2, r2, #36
 490 0020 1380     		strh	r3, [r2]	@ movhi
 151:main.c        ****     int16 endCountMotor2 = QuadDec_M2_GetCounter();
 491              		.loc 1 151 0
 492 0022 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 493 0026 0346     		mov	r3, r0
 494 0028 07F59C42 		add	r2, r7, #19968
 495 002c 02F12202 		add	r2, r2, #34
 496 0030 1380     		strh	r3, [r2]	@ movhi
 152:main.c        ****     int16 endCountMotor1 = QuadDec_M1_GetCounter();
 497              		.loc 1 152 0
 498 0032 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 499 0036 0346     		mov	r3, r0
 500 0038 07F59C42 		add	r2, r7, #19968
 501 003c 02F12002 		add	r2, r2, #32
 502 0040 1380     		strh	r3, [r2]	@ movhi
 153:main.c        ****     char motor1String[10000]; 
 154:main.c        ****     sprintf(motor1String,"Motor 1 - start count: %d, end count: %d \n", beginningCountMotor1, endCo
 503              		.loc 1 154 0
 504 0042 07F59C43 		add	r3, r7, #19968
 505 0046 03F12603 		add	r3, r3, #38
 506 004a B3F90020 		ldrsh	r2, [r3]
 507 004e 07F59C43 		add	r3, r7, #19968
 508 0052 03F12003 		add	r3, r3, #32
 509 0056 B3F90030 		ldrsh	r3, [r3]
 510 005a 07F51C50 		add	r0, r7, #9984
 511 005e 00F12800 		add	r0, r0, #40
 512 0062 1838     		subs	r0, r0, #24
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 13


 513 0064 1449     		ldr	r1, .L17
 514 0066 FFF7FEFF 		bl	sprintf
 155:main.c        ****     char motor2String[10000];
 156:main.c        ****     sprintf(motor2String,"Motor 2 - start count: %d, end count: %d \n", beginningCountMotor2 , endC
 515              		.loc 1 156 0
 516 006a 07F59C43 		add	r3, r7, #19968
 517 006e 03F12403 		add	r3, r3, #36
 518 0072 B3F90020 		ldrsh	r2, [r3]
 519 0076 07F59C43 		add	r3, r7, #19968
 520 007a 03F12203 		add	r3, r3, #34
 521 007e B3F90030 		ldrsh	r3, [r3]
 522 0082 07F12800 		add	r0, r7, #40
 523 0086 2838     		subs	r0, r0, #40
 524 0088 0C49     		ldr	r1, .L17+4
 525 008a FFF7FEFF 		bl	sprintf
 157:main.c        ****     
 158:main.c        ****     usbPutString(motor1String);
 526              		.loc 1 158 0
 527 008e 07F51C53 		add	r3, r7, #9984
 528 0092 03F12803 		add	r3, r3, #40
 529 0096 183B     		subs	r3, r3, #24
 530 0098 1846     		mov	r0, r3
 531 009a FFF7FEFF 		bl	usbPutString
 159:main.c        ****     usbPutString(motor2String);
 532              		.loc 1 159 0
 533 009e 07F12803 		add	r3, r7, #40
 534 00a2 283B     		subs	r3, r3, #40
 535 00a4 1846     		mov	r0, r3
 536 00a6 FFF7FEFF 		bl	usbPutString
 160:main.c        **** 
 161:main.c        **** }
 537              		.loc 1 161 0
 538 00aa 00BF     		nop
 539 00ac 07F59C47 		add	r7, r7, #19968
 540 00b0 2837     		adds	r7, r7, #40
 541              		.cfi_def_cfa_offset 8
 542 00b2 BD46     		mov	sp, r7
 543              		.cfi_def_cfa_register 13
 544              		@ sp needed
 545 00b4 80BD     		pop	{r7, pc}
 546              	.L18:
 547 00b6 00BF     		.align	2
 548              	.L17:
 549 00b8 00000000 		.word	.LC0
 550 00bc 2C000000 		.word	.LC1
 551              		.cfi_endproc
 552              	.LFE71:
 553              		.size	motorCount, .-motorCount
 554              		.section	.text.motorRun,"ax",%progbits
 555              		.align	2
 556              		.global	motorRun
 557              		.thumb
 558              		.thumb_func
 559              		.type	motorRun, %function
 560              	motorRun:
 561              	.LFB72:
 162:main.c        **** 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 14


 163:main.c        **** void motorRun(){
 562              		.loc 1 163 0
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 0
 565              		@ frame_needed = 1, uses_anonymous_args = 0
 566 0000 80B5     		push	{r7, lr}
 567              		.cfi_def_cfa_offset 8
 568              		.cfi_offset 7, -8
 569              		.cfi_offset 14, -4
 570 0002 00AF     		add	r7, sp, #0
 571              		.cfi_def_cfa_register 7
 164:main.c        ****     
 165:main.c        ****     
 166:main.c        ****     
 167:main.c        ****     PWM_1_Start();
 572              		.loc 1 167 0
 573 0004 FFF7FEFF 		bl	PWM_1_Start
 168:main.c        ****     PWM_2_Start();
 574              		.loc 1 168 0
 575 0008 FFF7FEFF 		bl	PWM_2_Start
 169:main.c        **** 
 170:main.c        **** 
 171:main.c        ****     motorStop();
 576              		.loc 1 171 0
 577 000c FFF7FEFF 		bl	motorStop
 172:main.c        ****     CyDelay(2000); // so we have time to set the robot up
 578              		.loc 1 172 0
 579 0010 4FF4FA60 		mov	r0, #2000
 580 0014 FFF7FEFF 		bl	CyDelay
 173:main.c        ****     motorGoStraight();
 581              		.loc 1 173 0
 582 0018 FFF7FEFF 		bl	motorGoStraight
 174:main.c        ****     CyDelay(2000);
 583              		.loc 1 174 0
 584 001c 4FF4FA60 		mov	r0, #2000
 585 0020 FFF7FEFF 		bl	CyDelay
 175:main.c        ****     motorStop();
 586              		.loc 1 175 0
 587 0024 FFF7FEFF 		bl	motorStop
 176:main.c        ****     
 177:main.c        ****     //motorGoBackwards();
 178:main.c        **** 
 179:main.c        ****     
 180:main.c        ****     //CyDelay(2000);
 181:main.c        ****  
 182:main.c        ****     //motorStop();
 183:main.c        ****     //motorCount();//checks count per second.
 184:main.c        **** 
 185:main.c        **** }
 588              		.loc 1 185 0
 589 0028 00BF     		nop
 590 002a 80BD     		pop	{r7, pc}
 591              		.cfi_endproc
 592              	.LFE72:
 593              		.size	motorRun, .-motorRun
 594              		.section	.text.isr_TS_Interrupt_sample,"ax",%progbits
 595              		.align	2
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 15


 596              		.global	isr_TS_Interrupt_sample
 597              		.thumb
 598              		.thumb_func
 599              		.type	isr_TS_Interrupt_sample, %function
 600              	isr_TS_Interrupt_sample:
 601              	.LFB73:
 186:main.c        **** CY_ISR(isr_TS_Interrupt_sample)
 187:main.c        **** {
 602              		.loc 1 187 0
 603              		.cfi_startproc
 604              		@ args = 0, pretend = 0, frame = 0
 605              		@ frame_needed = 1, uses_anonymous_args = 0
 606 0000 80B5     		push	{r7, lr}
 607              		.cfi_def_cfa_offset 8
 608              		.cfi_offset 7, -8
 609              		.cfi_offset 14, -4
 610 0002 00AF     		add	r7, sp, #0
 611              		.cfi_def_cfa_register 7
 188:main.c        ****     #ifdef isr_TS_INTERRUPT_INTERRUPT_CALLBACK
 189:main.c        ****         isr_TS_Interrupt_InterruptCallback();
 190:main.c        ****     #endif /* isr_TS_INTERRUPT_INTERRUPT_CALLBACK */ 
 191:main.c        ****         ADC_StartConvert();
 612              		.loc 1 191 0
 613 0004 FFF7FEFF 		bl	ADC_StartConvert
 192:main.c        ****     /*  Place your Interrupt code here. */
 193:main.c        ****     /* `#START isr_TS_Interrupt` */
 194:main.c        **** 
 195:main.c        ****     /* `#END` */
 196:main.c        **** }
 614              		.loc 1 196 0
 615 0008 00BF     		nop
 616 000a 80BD     		pop	{r7, pc}
 617              		.cfi_endproc
 618              	.LFE73:
 619              		.size	isr_TS_Interrupt_sample, .-isr_TS_Interrupt_sample
 620              		.section	.text.main,"ax",%progbits
 621              		.align	2
 622              		.global	main
 623              		.thumb
 624              		.thumb_func
 625              		.type	main, %function
 626              	main:
 627              	.LFB74:
 197:main.c        **** 
 198:main.c        **** 
 199:main.c        **** int main()
 200:main.c        **** {
 628              		.loc 1 200 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 8
 631              		@ frame_needed = 1, uses_anonymous_args = 0
 632 0000 80B5     		push	{r7, lr}
 633              		.cfi_def_cfa_offset 8
 634              		.cfi_offset 7, -8
 635              		.cfi_offset 14, -4
 636 0002 82B0     		sub	sp, sp, #8
 637              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 16


 638 0004 00AF     		add	r7, sp, #0
 639              		.cfi_def_cfa_register 7
 201:main.c        ****     
 202:main.c        **** 
 203:main.c        **** // --------------------------------    
 204:main.c        **** // ----- INITIALIZATIONS ----------
 205:main.c        ****     CYGlobalIntEnable;
 640              		.loc 1 205 0
 641              		.syntax unified
 642              	@ 205 "main.c" 1
 643 0006 62B6     		CPSIE   i
 644              	@ 0 "" 2
 206:main.c        ****     count  = 0;
 645              		.loc 1 206 0
 646              		.thumb
 647              		.syntax unified
 648 0008 274B     		ldr	r3, .L30
 649 000a 0022     		movs	r2, #0
 650 000c 1A70     		strb	r2, [r3]
 207:main.c        ****     
 208:main.c        ****    
 209:main.c        ****     Timer_TS_Start();
 651              		.loc 1 209 0
 652 000e FFF7FEFF 		bl	Timer_TS_Start
 210:main.c        ****     Timer_Motor_Start();
 653              		.loc 1 210 0
 654 0012 FFF7FEFF 		bl	Timer_Motor_Start
 211:main.c        ****     QuadDec_M1_Start();
 655              		.loc 1 211 0
 656 0016 FFF7FEFF 		bl	QuadDec_M1_Start
 212:main.c        ****     QuadDec_M2_Start(); //init the quadencoder,
 657              		.loc 1 212 0
 658 001a FFF7FEFF 		bl	QuadDec_M2_Start
 213:main.c        ****     //isr_motor_StartEx(isr_motor_interrupt_speed);
 214:main.c        ****     isr_TS_StartEx(isr_TS_Interrupt_sample);
 659              		.loc 1 214 0
 660 001e 2348     		ldr	r0, .L30+4
 661 0020 FFF7FEFF 		bl	isr_TS_StartEx
 215:main.c        ****     isr_eoc_StartEx(isr_eoc_Interrupt_test);
 662              		.loc 1 215 0
 663 0024 2248     		ldr	r0, .L30+8
 664 0026 FFF7FEFF 		bl	isr_eoc_StartEx
 216:main.c        ****     
 217:main.c        ****     ADC_Start();
 665              		.loc 1 217 0
 666 002a FFF7FEFF 		bl	ADC_Start
 218:main.c        ****     //ADC_StartConvert();
 219:main.c        ****     
 220:main.c        ****     PWM_1_Start();
 667              		.loc 1 220 0
 668 002e FFF7FEFF 		bl	PWM_1_Start
 221:main.c        ****     PWM_2_Start();
 669              		.loc 1 221 0
 670 0032 FFF7FEFF 		bl	PWM_2_Start
 222:main.c        ****     
 223:main.c        ****     LED_Write(0);
 671              		.loc 1 223 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 17


 672 0036 0020     		movs	r0, #0
 673 0038 FFF7FEFF 		bl	LED_Write
 224:main.c        ****     ///////IF NOT USINNG MOTOR RUN DO PWM START STUFF
 225:main.c        ****     // SO write compare is a measure of speed
 226:main.c        ****     // And Cy delay delays the running of the motor and duration that it travels
 227:main.c        ****     //look at motor RUn config above for more info.
 228:main.c        ****     motorStop();
 674              		.loc 1 228 0
 675 003c FFF7FEFF 		bl	motorStop
 229:main.c        ****     CyDelay(2000); // to prep
 676              		.loc 1 229 0
 677 0040 4FF4FA60 		mov	r0, #2000
 678 0044 FFF7FEFF 		bl	CyDelay
 679              	.L28:
 230:main.c        ****    /* while(QuadDec_M1_GetCounter()<travelDist){
 231:main.c        ****     //where counter is value we want it to stop at.
 232:main.c        ****         motorGoStraight();
 233:main.c        ****     
 234:main.c        ****     
 235:main.c        ****     }*/
 236:main.c        **** 
 237:main.c        ****     
 238:main.c        ****     //motorStop();
 239:main.c        ****    // CyDelay(2000); // so we have time to set the robot up
 240:main.c        ****     //motorTurnLeft();
 241:main.c        ****     //motorStop();
 242:main.c        ****     //motorCount();//checks count per second.
 243:main.c        ****      
 244:main.c        ****     
 245:main.c        ****     
 246:main.c        **** 
 247:main.c        ****     
 248:main.c        **** 
 249:main.c        ****     
 250:main.c        **** // ------USB SETUP ----------------    
 251:main.c        **** //#ifdef USE_USB    
 252:main.c        **** //    USBUART_Start(0,USBUART_5V_OPERATION);
 253:main.c        **** //#endif        
 254:main.c        **** //        
 255:main.c        **** //    RF_BT_SELECT_Write(0);
 256:main.c        **** //    motorCount();//checks count per second.
 257:main.c        **** 
 258:main.c        ****     //usbPutString(displaystring);
 259:main.c        ****     while(1)
 260:main.c        ****     {
 261:main.c        ****         /* Place your application code here. */
 262:main.c        ****         
 263:main.c        ****         //if Q3 SENSES BLACK LIGHT BUT Q4 DOES NOT SENSE THE BLACK LIGHT MOVE TOWARDS THE RIGHT TO 
 264:main.c        ****     // IF Q3 AND Q4 SENSES TURN 90 DEGREES LEFT - intersection
 265:main.c        ****     // IF Q5 BUT NOT Q4 SENSES BLACK LIGHT MOVE TOWARDS THE LEFT TO REALIGN CENTER
 266:main.c        ****     // IF Q5 AND Q4 TURN 90 DEGREES RIGHT - intersection
 267:main.c        ****        
 268:main.c        ****         if (processSensors == 1) {
 680              		.loc 1 268 0
 681 0048 1A4B     		ldr	r3, .L30+12
 682 004a 1B68     		ldr	r3, [r3]
 683 004c 012B     		cmp	r3, #1
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 18


 684 004e FBD1     		bne	.L28
 685              	.LBB2:
 269:main.c        ****             
 270:main.c        ****             //make decision
 271:main.c        ****             
 272:main.c        ****             //checks intersection
 273:main.c        ****             //int leftIntersection= (lightDetectedFront[0] == 1 && lightDetectedFront[1]==1);
 274:main.c        ****             //int rightIntersection=  (lightDetectedFront[2] == 1 && lightDetectedFront[1]==1);
 275:main.c        ****             
 276:main.c        ****            //check intersectin
 277:main.c        ****             ///mazeIntersection(leftIntersection,rightIntersection);
 278:main.c        ****         
 279:main.c        ****             int operation = convertSensorBinary();
 686              		.loc 1 279 0
 687 0050 FFF7FEFF 		bl	convertSensorBinary
 688 0054 7860     		str	r0, [r7, #4]
 280:main.c        ****             
 281:main.c        ****             switch(operation){
 689              		.loc 1 281 0
 690 0056 7B68     		ldr	r3, [r7, #4]
 691 0058 052B     		cmp	r3, #5
 692 005a 09D0     		beq	.L24
 693 005c 072B     		cmp	r3, #7
 694 005e 0DD0     		beq	.L25
 695 0060 002B     		cmp	r3, #0
 696 0062 11D1     		bne	.L29
 282:main.c        ****             
 283:main.c        ****                 case 0: // all sensors are in black
 284:main.c        ****                     motorStop();
 697              		.loc 1 284 0
 698 0064 FFF7FEFF 		bl	motorStop
 285:main.c        ****                     LED_Write(0);
 699              		.loc 1 285 0
 700 0068 0020     		movs	r0, #0
 701 006a FFF7FEFF 		bl	LED_Write
 286:main.c        ****                     break;
 702              		.loc 1 286 0
 703 006e 0DE0     		b	.L27
 704              	.L24:
 287:main.c        ****                 
 288:main.c        **** //                case 1: // Left intersection
 289:main.c        **** //                    motorStop();
 290:main.c        **** //                    LED_Write(0);
 291:main.c        **** //                    break;
 292:main.c        **** //                
 293:main.c        **** //                
 294:main.c        **** //                case 2: // do nothing 010
 295:main.c        **** //                    motorStop();
 296:main.c        **** //                    LED_Write(0);
 297:main.c        **** //                    break;
 298:main.c        **** //                
 299:main.c        **** //                case 3: // align right
 300:main.c        **** //                    
 301:main.c        **** //                    motorStop();
 302:main.c        **** //                    motorTurnRight(10);
 303:main.c        **** //                    LED_Write(1);
 304:main.c        **** //                    break;
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 19


 305:main.c        **** //                
 306:main.c        **** //                case 4: // right intersection
 307:main.c        **** //                    motorStop();
 308:main.c        **** //                    LED_Write(0);
 309:main.c        **** //                    break;
 310:main.c        **** //                    
 311:main.c        ****                 case 5: // go straight when 101
 312:main.c        ****                
 313:main.c        ****                     LED_Write(1);
 705              		.loc 1 313 0
 706 0070 0120     		movs	r0, #1
 707 0072 FFF7FEFF 		bl	LED_Write
 314:main.c        ****                     motorGoStraight();
 708              		.loc 1 314 0
 709 0076 FFF7FEFF 		bl	motorGoStraight
 315:main.c        ****                     break;
 710              		.loc 1 315 0
 711 007a 07E0     		b	.L27
 712              	.L25:
 316:main.c        **** //
 317:main.c        **** //                case 6: // Align left
 318:main.c        **** //                    motorStop();
 319:main.c        **** //                   motorTurnLeft(10);
 320:main.c        **** //                    LED_Write(1);
 321:main.c        **** //                    break;
 322:main.c        ****                     
 323:main.c        ****                 case 7: // Full white, stop (uturn later?)
 324:main.c        ****                     motorStop();
 713              		.loc 1 324 0
 714 007c FFF7FEFF 		bl	motorStop
 325:main.c        ****                     LED_Write(0);
 715              		.loc 1 325 0
 716 0080 0020     		movs	r0, #0
 717 0082 FFF7FEFF 		bl	LED_Write
 326:main.c        ****                     break;
 718              		.loc 1 326 0
 719 0086 01E0     		b	.L27
 720              	.L29:
 327:main.c        ****             
 328:main.c        ****                 default:
 329:main.c        ****                     motorStop();
 721              		.loc 1 329 0
 722 0088 FFF7FEFF 		bl	motorStop
 723              	.L27:
 330:main.c        ****             
 331:main.c        ****                 
 332:main.c        ****             
 333:main.c        ****             }
 334:main.c        **** //            if(leftIntersection){
 335:main.c        **** //                motorTurnLeft(55);
 336:main.c        **** //            
 337:main.c        **** //            
 338:main.c        **** //                CyDelay(250);
 339:main.c        **** //            }
 340:main.c        **** //            
 341:main.c        **** //            if(rightIntersection){
 342:main.c        **** //                motorTurnRight(55);
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 20


 343:main.c        **** //                
 344:main.c        **** //                CyDelay(250);//small rotation need small time
 345:main.c        **** //            
 346:main.c        **** //            }
 347:main.c        ****             
 348:main.c        **** //            //Slight turns
 349:main.c        **** //            if(lightDetectedFront[0] == 1 && lightDetectedFront[1]==0){
 350:main.c        **** //                motorTurnRight(140);
 351:main.c        **** //                CyDelay(20);//small rotation need small time
 352:main.c        **** //            }
 353:main.c        **** //            
 354:main.c        **** //            if(lightDetectedFront[2] == 0 && lightDetectedFront[1]==1){
 355:main.c        **** //                motorTurnLeft(140);
 356:main.c        **** //                CyDelay(20);//small rotation need small time
 357:main.c        **** //            }
 358:main.c        **** 
 359:main.c        ****            
 360:main.c        ****             //reset variable.
 361:main.c        ****             processSensors = 0;
 724              		.loc 1 361 0
 725 008c 094B     		ldr	r3, .L30+12
 726 008e 0022     		movs	r2, #0
 727 0090 1A60     		str	r2, [r3]
 362:main.c        ****             //reset counter
 363:main.c        ****             //reset flags for lightsensors because it checks every 10 iterations, adds delay/
 364:main.c        ****             lightDetectedFront[0] = 0;
 728              		.loc 1 364 0
 729 0092 094B     		ldr	r3, .L30+16
 730 0094 0022     		movs	r2, #0
 731 0096 1A60     		str	r2, [r3]
 365:main.c        ****             lightDetectedFront[1] = 0;
 732              		.loc 1 365 0
 733 0098 074B     		ldr	r3, .L30+16
 734 009a 0022     		movs	r2, #0
 735 009c 5A60     		str	r2, [r3, #4]
 366:main.c        ****             lightDetectedFront[2] = 0;
 736              		.loc 1 366 0
 737 009e 064B     		ldr	r3, .L30+16
 738 00a0 0022     		movs	r2, #0
 739 00a2 9A60     		str	r2, [r3, #8]
 740              	.LBE2:
 367:main.c        ****           
 368:main.c        ****         }
 369:main.c        ****         
 370:main.c        ****     }   
 741              		.loc 1 370 0
 742 00a4 D0E7     		b	.L28
 743              	.L31:
 744 00a6 00BF     		.align	2
 745              	.L30:
 746 00a8 34000000 		.word	count
 747 00ac 00000000 		.word	isr_TS_Interrupt_sample
 748 00b0 00000000 		.word	isr_eoc_Interrupt_test
 749 00b4 00000000 		.word	processSensors
 750 00b8 00000000 		.word	lightDetectedFront
 751              		.cfi_endproc
 752              	.LFE74:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 21


 753              		.size	main, .-main
 754              		.section	.text.convertSensorBinary,"ax",%progbits
 755              		.align	2
 756              		.global	convertSensorBinary
 757              		.thumb
 758              		.thumb_func
 759              		.type	convertSensorBinary, %function
 760              	convertSensorBinary:
 761              	.LFB75:
 371:main.c        **** }
 372:main.c        **** 
 373:main.c        ****   
 374:main.c        **** 
 375:main.c        **** 
 376:main.c        **** 
 377:main.c        **** int convertSensorBinary()
 378:main.c        **** {
 762              		.loc 1 378 0
 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 16
 765              		@ frame_needed = 1, uses_anonymous_args = 0
 766              		@ link register save eliminated.
 767 0000 80B4     		push	{r7}
 768              		.cfi_def_cfa_offset 4
 769              		.cfi_offset 7, -4
 770 0002 85B0     		sub	sp, sp, #20
 771              		.cfi_def_cfa_offset 24
 772 0004 00AF     		add	r7, sp, #0
 773              		.cfi_def_cfa_register 7
 379:main.c        ****    int value=0;
 774              		.loc 1 379 0
 775 0006 0023     		movs	r3, #0
 776 0008 FB60     		str	r3, [r7, #12]
 380:main.c        ****    int binaryIndex= 0;
 777              		.loc 1 380 0
 778 000a 0023     		movs	r3, #0
 779 000c 7B60     		str	r3, [r7, #4]
 780              	.LBB3:
 381:main.c        ****    for (int i=2;i>=0;i--){
 781              		.loc 1 381 0
 782 000e 0223     		movs	r3, #2
 783 0010 BB60     		str	r3, [r7, #8]
 784 0012 13E0     		b	.L33
 785              	.L34:
 786              	.LBB4:
 382:main.c        ****     int x=lightDetectedFront[i];
 787              		.loc 1 382 0 discriminator 3
 788 0014 0E4A     		ldr	r2, .L36
 789 0016 BB68     		ldr	r3, [r7, #8]
 790 0018 52F82330 		ldr	r3, [r2, r3, lsl #2]
 791 001c 3B60     		str	r3, [r7]
 383:main.c        ****     value = value + ((2^binaryIndex) * lightDetectedFront[i]); // eg first value, Q2 is in whitelig
 792              		.loc 1 383 0 discriminator 3
 793 001e 7B68     		ldr	r3, [r7, #4]
 794 0020 83F00203 		eor	r3, r3, #2
 795 0024 0A49     		ldr	r1, .L36
 796 0026 BA68     		ldr	r2, [r7, #8]
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 22


 797 0028 51F82220 		ldr	r2, [r1, r2, lsl #2]
 798 002c 02FB03F3 		mul	r3, r2, r3
 799 0030 FA68     		ldr	r2, [r7, #12]
 800 0032 1344     		add	r3, r3, r2
 801 0034 FB60     		str	r3, [r7, #12]
 802              	.LBE4:
 381:main.c        ****    for (int i=2;i>=0;i--){
 803              		.loc 1 381 0 discriminator 3
 804 0036 BB68     		ldr	r3, [r7, #8]
 805 0038 013B     		subs	r3, r3, #1
 806 003a BB60     		str	r3, [r7, #8]
 807              	.L33:
 381:main.c        ****    for (int i=2;i>=0;i--){
 808              		.loc 1 381 0 is_stmt 0 discriminator 1
 809 003c BB68     		ldr	r3, [r7, #8]
 810 003e 002B     		cmp	r3, #0
 811 0040 E8DA     		bge	.L34
 812              	.LBE3:
 384:main.c        ****     }
 385:main.c        **** 
 386:main.c        ****     return value;
 813              		.loc 1 386 0 is_stmt 1
 814 0042 FB68     		ldr	r3, [r7, #12]
 387:main.c        **** }
 815              		.loc 1 387 0
 816 0044 1846     		mov	r0, r3
 817 0046 1437     		adds	r7, r7, #20
 818              		.cfi_def_cfa_offset 4
 819 0048 BD46     		mov	sp, r7
 820              		.cfi_def_cfa_register 13
 821              		@ sp needed
 822 004a 80BC     		pop	{r7}
 823              		.cfi_restore 7
 824              		.cfi_def_cfa_offset 0
 825 004c 7047     		bx	lr
 826              	.L37:
 827 004e 00BF     		.align	2
 828              	.L36:
 829 0050 00000000 		.word	lightDetectedFront
 830              		.cfi_endproc
 831              	.LFE75:
 832              		.size	convertSensorBinary, .-convertSensorBinary
 833              		.section	.text.usbPutString,"ax",%progbits
 834              		.align	2
 835              		.global	usbPutString
 836              		.thumb
 837              		.thumb_func
 838              		.type	usbPutString, %function
 839              	usbPutString:
 840              	.LFB76:
 388:main.c        **** //* ========================================
 389:main.c        **** void usbPutString(char *s)
 390:main.c        **** {
 841              		.loc 1 390 0
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 8
 844              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 23


 845 0000 80B5     		push	{r7, lr}
 846              		.cfi_def_cfa_offset 8
 847              		.cfi_offset 7, -8
 848              		.cfi_offset 14, -4
 849 0002 82B0     		sub	sp, sp, #8
 850              		.cfi_def_cfa_offset 16
 851 0004 00AF     		add	r7, sp, #0
 852              		.cfi_def_cfa_register 7
 853 0006 7860     		str	r0, [r7, #4]
 391:main.c        **** // !! Assumes that *s is a string with allocated space >=64 chars     
 392:main.c        **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 393:main.c        **** //  length to 62 char (63rd char is a '!')
 394:main.c        **** 
 395:main.c        **** #ifdef USE_USB     
 396:main.c        ****     while (USBUART_CDCIsReady() == 0);
 854              		.loc 1 396 0
 855 0008 00BF     		nop
 856              	.L39:
 857              		.loc 1 396 0 is_stmt 0 discriminator 1
 858 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 859 000e 0346     		mov	r3, r0
 860 0010 002B     		cmp	r3, #0
 861 0012 FAD0     		beq	.L39
 397:main.c        ****     s[63]='\0';
 862              		.loc 1 397 0 is_stmt 1
 863 0014 7B68     		ldr	r3, [r7, #4]
 864 0016 3F33     		adds	r3, r3, #63
 865 0018 0022     		movs	r2, #0
 866 001a 1A70     		strb	r2, [r3]
 398:main.c        ****     s[62]='!';
 867              		.loc 1 398 0
 868 001c 7B68     		ldr	r3, [r7, #4]
 869 001e 3E33     		adds	r3, r3, #62
 870 0020 2122     		movs	r2, #33
 871 0022 1A70     		strb	r2, [r3]
 399:main.c        ****     USBUART_PutData((uint8*)s,strlen(s));
 872              		.loc 1 399 0
 873 0024 7868     		ldr	r0, [r7, #4]
 874 0026 FFF7FEFF 		bl	strlen
 875 002a 0346     		mov	r3, r0
 876 002c 9BB2     		uxth	r3, r3
 877 002e 1946     		mov	r1, r3
 878 0030 7868     		ldr	r0, [r7, #4]
 879 0032 FFF7FEFF 		bl	USBUART_PutData
 400:main.c        **** #endif
 401:main.c        **** }
 880              		.loc 1 401 0
 881 0036 00BF     		nop
 882 0038 0837     		adds	r7, r7, #8
 883              		.cfi_def_cfa_offset 8
 884 003a BD46     		mov	sp, r7
 885              		.cfi_def_cfa_register 13
 886              		@ sp needed
 887 003c 80BD     		pop	{r7, pc}
 888              		.cfi_endproc
 889              	.LFE76:
 890              		.size	usbPutString, .-usbPutString
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 24


 891 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 892              		.align	2
 893              		.global	usbPutChar
 894              		.thumb
 895              		.thumb_func
 896              		.type	usbPutChar, %function
 897              	usbPutChar:
 898              	.LFB77:
 402:main.c        **** //* ========================================
 403:main.c        **** void usbPutChar(char c)
 404:main.c        **** {
 899              		.loc 1 404 0
 900              		.cfi_startproc
 901              		@ args = 0, pretend = 0, frame = 8
 902              		@ frame_needed = 1, uses_anonymous_args = 0
 903 0000 80B5     		push	{r7, lr}
 904              		.cfi_def_cfa_offset 8
 905              		.cfi_offset 7, -8
 906              		.cfi_offset 14, -4
 907 0002 82B0     		sub	sp, sp, #8
 908              		.cfi_def_cfa_offset 16
 909 0004 00AF     		add	r7, sp, #0
 910              		.cfi_def_cfa_register 7
 911 0006 0346     		mov	r3, r0
 912 0008 FB71     		strb	r3, [r7, #7]
 405:main.c        **** #ifdef USE_USB     
 406:main.c        ****     while (USBUART_CDCIsReady() == 0);
 913              		.loc 1 406 0
 914 000a 00BF     		nop
 915              	.L41:
 916              		.loc 1 406 0 is_stmt 0 discriminator 1
 917 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 918 0010 0346     		mov	r3, r0
 919 0012 002B     		cmp	r3, #0
 920 0014 FAD0     		beq	.L41
 407:main.c        ****     USBUART_PutChar(c);
 921              		.loc 1 407 0 is_stmt 1
 922 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 923 0018 1846     		mov	r0, r3
 924 001a FFF7FEFF 		bl	USBUART_PutChar
 408:main.c        **** #endif    
 409:main.c        **** }
 925              		.loc 1 409 0
 926 001e 00BF     		nop
 927 0020 0837     		adds	r7, r7, #8
 928              		.cfi_def_cfa_offset 8
 929 0022 BD46     		mov	sp, r7
 930              		.cfi_def_cfa_register 13
 931              		@ sp needed
 932 0024 80BD     		pop	{r7, pc}
 933              		.cfi_endproc
 934              	.LFE77:
 935              		.size	usbPutChar, .-usbPutChar
 936 0026 00BF     		.section	.text.handle_usb,"ax",%progbits
 937              		.align	2
 938              		.global	handle_usb
 939              		.thumb
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 25


 940              		.thumb_func
 941              		.type	handle_usb, %function
 942              	handle_usb:
 943              	.LFB78:
 410:main.c        **** //* ========================================
 411:main.c        **** void handle_usb()
 412:main.c        **** {
 944              		.loc 1 412 0
 945              		.cfi_startproc
 946              		@ args = 0, pretend = 0, frame = 8
 947              		@ frame_needed = 1, uses_anonymous_args = 0
 948 0000 80B5     		push	{r7, lr}
 949              		.cfi_def_cfa_offset 8
 950              		.cfi_offset 7, -8
 951              		.cfi_offset 14, -4
 952 0002 82B0     		sub	sp, sp, #8
 953              		.cfi_def_cfa_offset 16
 954 0004 00AF     		add	r7, sp, #0
 955              		.cfi_def_cfa_register 7
 413:main.c        ****     // handles input at terminal, echos it back to the terminal
 414:main.c        ****     // turn echo OFF, key emulation: only CR
 415:main.c        ****     // entered string is made available in 'line' and 'flag_KB_string' is set
 416:main.c        ****     
 417:main.c        ****     static uint8 usbStarted = FALSE;
 418:main.c        ****     static uint16 usbBufCount = 0;
 419:main.c        ****     uint8 c; 
 420:main.c        ****     
 421:main.c        **** 
 422:main.c        ****     if (!usbStarted)
 956              		.loc 1 422 0
 957 0006 2B4B     		ldr	r3, .L52
 958 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 959 000a 002B     		cmp	r3, #0
 960 000c 0AD1     		bne	.L43
 423:main.c        ****     {
 424:main.c        ****         if (USBUART_GetConfiguration())
 961              		.loc 1 424 0
 962 000e FFF7FEFF 		bl	USBUART_GetConfiguration
 963 0012 0346     		mov	r3, r0
 964 0014 002B     		cmp	r3, #0
 965 0016 49D0     		beq	.L51
 425:main.c        ****         {
 426:main.c        ****             USBUART_CDC_Init();
 966              		.loc 1 426 0
 967 0018 FFF7FEFF 		bl	USBUART_CDC_Init
 427:main.c        ****             usbStarted = TRUE;
 968              		.loc 1 427 0
 969 001c 254B     		ldr	r3, .L52
 970 001e 0122     		movs	r2, #1
 971 0020 1A70     		strb	r2, [r3]
 428:main.c        ****         }
 429:main.c        ****     }
 430:main.c        ****     else
 431:main.c        ****     {
 432:main.c        ****         if (USBUART_DataIsReady() != 0)
 433:main.c        ****         {  
 434:main.c        ****             c = USBUART_GetChar();
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 26


 435:main.c        **** 
 436:main.c        ****             if ((c == 13) || (c == 10))
 437:main.c        ****             {
 438:main.c        **** //                if (usbBufCount > 0)
 439:main.c        ****                 {
 440:main.c        ****                     entry[usbBufCount]= '\0';
 441:main.c        ****                     strcpy(line,entry);
 442:main.c        ****                     usbBufCount = 0;
 443:main.c        ****                     flag_KB_string = 1;
 444:main.c        ****                 }
 445:main.c        ****             }
 446:main.c        ****             else 
 447:main.c        ****             {
 448:main.c        ****                 if (((c == CHAR_BACKSP) || (c == CHAR_DEL) ) && (usbBufCount > 0) )
 449:main.c        ****                     usbBufCount--;
 450:main.c        ****                 else
 451:main.c        ****                 {
 452:main.c        ****                     if (usbBufCount > (BUF_SIZE-2) ) // one less else strtok triggers a crash
 453:main.c        ****                     {
 454:main.c        ****                        USBUART_PutChar('!');        
 455:main.c        ****                     }
 456:main.c        ****                     else
 457:main.c        ****                         entry[usbBufCount++] = c;  
 458:main.c        ****                 }  
 459:main.c        ****             }
 460:main.c        ****         }
 461:main.c        ****     }    
 462:main.c        **** }
 972              		.loc 1 462 0
 973 0022 43E0     		b	.L51
 974              	.L43:
 432:main.c        ****         {  
 975              		.loc 1 432 0
 976 0024 FFF7FEFF 		bl	USBUART_DataIsReady
 977 0028 0346     		mov	r3, r0
 978 002a 002B     		cmp	r3, #0
 979 002c 3ED0     		beq	.L51
 434:main.c        **** 
 980              		.loc 1 434 0
 981 002e FFF7FEFF 		bl	USBUART_GetChar
 982 0032 0346     		mov	r3, r0
 983 0034 FB71     		strb	r3, [r7, #7]
 436:main.c        ****             {
 984              		.loc 1 436 0
 985 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 986 0038 0D2B     		cmp	r3, #13
 987 003a 02D0     		beq	.L46
 436:main.c        ****             {
 988              		.loc 1 436 0 is_stmt 0 discriminator 1
 989 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 990 003e 0A2B     		cmp	r3, #10
 991 0040 10D1     		bne	.L47
 992              	.L46:
 440:main.c        ****                     strcpy(line,entry);
 993              		.loc 1 440 0 is_stmt 1
 994 0042 1D4B     		ldr	r3, .L52+4
 995 0044 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 27


 996 0046 1A46     		mov	r2, r3
 997 0048 1C4B     		ldr	r3, .L52+8
 998 004a 0021     		movs	r1, #0
 999 004c 9954     		strb	r1, [r3, r2]
 441:main.c        ****                     usbBufCount = 0;
 1000              		.loc 1 441 0
 1001 004e 1B49     		ldr	r1, .L52+8
 1002 0050 1B48     		ldr	r0, .L52+12
 1003 0052 FFF7FEFF 		bl	strcpy
 442:main.c        ****                     flag_KB_string = 1;
 1004              		.loc 1 442 0
 1005 0056 184B     		ldr	r3, .L52+4
 1006 0058 0022     		movs	r2, #0
 1007 005a 1A80     		strh	r2, [r3]	@ movhi
 443:main.c        ****                 }
 1008              		.loc 1 443 0
 1009 005c 194B     		ldr	r3, .L52+16
 1010 005e 0122     		movs	r2, #1
 1011 0060 1A70     		strb	r2, [r3]
 1012 0062 23E0     		b	.L45
 1013              	.L47:
 448:main.c        ****                     usbBufCount--;
 1014              		.loc 1 448 0
 1015 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1016 0066 082B     		cmp	r3, #8
 1017 0068 02D0     		beq	.L48
 448:main.c        ****                     usbBufCount--;
 1018              		.loc 1 448 0 is_stmt 0 discriminator 2
 1019 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1020 006c 7F2B     		cmp	r3, #127
 1021 006e 0AD1     		bne	.L49
 1022              	.L48:
 448:main.c        ****                     usbBufCount--;
 1023              		.loc 1 448 0 discriminator 3
 1024 0070 114B     		ldr	r3, .L52+4
 1025 0072 1B88     		ldrh	r3, [r3]
 1026 0074 002B     		cmp	r3, #0
 1027 0076 06D0     		beq	.L49
 449:main.c        ****                 else
 1028              		.loc 1 449 0 is_stmt 1
 1029 0078 0F4B     		ldr	r3, .L52+4
 1030 007a 1B88     		ldrh	r3, [r3]
 1031 007c 013B     		subs	r3, r3, #1
 1032 007e 9AB2     		uxth	r2, r3
 1033 0080 0D4B     		ldr	r3, .L52+4
 1034 0082 1A80     		strh	r2, [r3]	@ movhi
 1035 0084 12E0     		b	.L45
 1036              	.L49:
 452:main.c        ****                     {
 1037              		.loc 1 452 0
 1038 0086 0C4B     		ldr	r3, .L52+4
 1039 0088 1B88     		ldrh	r3, [r3]
 1040 008a 3E2B     		cmp	r3, #62
 1041 008c 03D9     		bls	.L50
 454:main.c        ****                     }
 1042              		.loc 1 454 0
 1043 008e 2120     		movs	r0, #33
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 28


 1044 0090 FFF7FEFF 		bl	USBUART_PutChar
 1045              		.loc 1 462 0
 1046 0094 0AE0     		b	.L51
 1047              	.L50:
 457:main.c        ****                 }  
 1048              		.loc 1 457 0
 1049 0096 084B     		ldr	r3, .L52+4
 1050 0098 1B88     		ldrh	r3, [r3]
 1051 009a 5A1C     		adds	r2, r3, #1
 1052 009c 91B2     		uxth	r1, r2
 1053 009e 064A     		ldr	r2, .L52+4
 1054 00a0 1180     		strh	r1, [r2]	@ movhi
 1055 00a2 1946     		mov	r1, r3
 1056 00a4 054A     		ldr	r2, .L52+8
 1057 00a6 FB79     		ldrb	r3, [r7, #7]
 1058 00a8 5354     		strb	r3, [r2, r1]
 1059              		.loc 1 462 0
 1060 00aa FFE7     		b	.L51
 1061              	.L45:
 1062              	.L51:
 1063 00ac 00BF     		nop
 1064 00ae 0837     		adds	r7, r7, #8
 1065              		.cfi_def_cfa_offset 8
 1066 00b0 BD46     		mov	sp, r7
 1067              		.cfi_def_cfa_register 13
 1068              		@ sp needed
 1069 00b2 80BD     		pop	{r7, pc}
 1070              	.L53:
 1071              		.align	2
 1072              	.L52:
 1073 00b4 35000000 		.word	usbStarted.8279
 1074 00b8 36000000 		.word	usbBufCount.8280
 1075 00bc 00000000 		.word	entry
 1076 00c0 00000000 		.word	line
 1077 00c4 00000000 		.word	flag_KB_string
 1078              		.cfi_endproc
 1079              	.LFE78:
 1080              		.size	handle_usb, .-handle_usb
 1081              		.bss
 1082              	usbStarted.8279:
 1083 0035 00       		.space	1
 1084              		.align	1
 1085              	usbBufCount.8280:
 1086 0036 0000     		.space	2
 1087              		.text
 1088              	.Letext0:
 1089              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1090              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1091              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1092              		.file 5 "vars.h"
 1093              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1094              		.section	.debug_info,"",%progbits
 1095              	.Ldebug_info0:
 1096 0000 4C060000 		.4byte	0x64c
 1097 0004 0400     		.2byte	0x4
 1098 0006 00000000 		.4byte	.Ldebug_abbrev0
 1099 000a 04       		.byte	0x4
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 29


 1100 000b 01       		.uleb128 0x1
 1101 000c B5000000 		.4byte	.LASF92
 1102 0010 0C       		.byte	0xc
 1103 0011 68040000 		.4byte	.LASF93
 1104 0015 8D010000 		.4byte	.LASF94
 1105 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1106 001d 00000000 		.4byte	0
 1107 0021 00000000 		.4byte	.Ldebug_line0
 1108 0025 02       		.uleb128 0x2
 1109 0026 01       		.byte	0x1
 1110 0027 06       		.byte	0x6
 1111 0028 73030000 		.4byte	.LASF0
 1112 002c 02       		.uleb128 0x2
 1113 002d 01       		.byte	0x1
 1114 002e 08       		.byte	0x8
 1115 002f 3A030000 		.4byte	.LASF1
 1116 0033 02       		.uleb128 0x2
 1117 0034 02       		.byte	0x2
 1118 0035 05       		.byte	0x5
 1119 0036 8B000000 		.4byte	.LASF2
 1120 003a 02       		.uleb128 0x2
 1121 003b 02       		.byte	0x2
 1122 003c 07       		.byte	0x7
 1123 003d 1C040000 		.4byte	.LASF3
 1124 0041 03       		.uleb128 0x3
 1125 0042 A7040000 		.4byte	.LASF12
 1126 0046 02       		.byte	0x2
 1127 0047 3F       		.byte	0x3f
 1128 0048 4C000000 		.4byte	0x4c
 1129 004c 02       		.uleb128 0x2
 1130 004d 04       		.byte	0x4
 1131 004e 05       		.byte	0x5
 1132 004f A3020000 		.4byte	.LASF4
 1133 0053 02       		.uleb128 0x2
 1134 0054 04       		.byte	0x4
 1135 0055 07       		.byte	0x7
 1136 0056 6F040000 		.4byte	.LASF5
 1137 005a 02       		.uleb128 0x2
 1138 005b 08       		.byte	0x8
 1139 005c 05       		.byte	0x5
 1140 005d 57020000 		.4byte	.LASF6
 1141 0061 02       		.uleb128 0x2
 1142 0062 08       		.byte	0x8
 1143 0063 07       		.byte	0x7
 1144 0064 7F030000 		.4byte	.LASF7
 1145 0068 04       		.uleb128 0x4
 1146 0069 04       		.byte	0x4
 1147 006a 05       		.byte	0x5
 1148 006b 696E7400 		.ascii	"int\000"
 1149 006f 02       		.uleb128 0x2
 1150 0070 04       		.byte	0x4
 1151 0071 07       		.byte	0x7
 1152 0072 96030000 		.4byte	.LASF8
 1153 0076 02       		.uleb128 0x2
 1154 0077 08       		.byte	0x8
 1155 0078 04       		.byte	0x4
 1156 0079 28030000 		.4byte	.LASF9
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 30


 1157 007d 02       		.uleb128 0x2
 1158 007e 04       		.byte	0x4
 1159 007f 07       		.byte	0x7
 1160 0080 A2000000 		.4byte	.LASF10
 1161 0084 05       		.uleb128 0x5
 1162 0085 04       		.byte	0x4
 1163 0086 8A000000 		.4byte	0x8a
 1164 008a 02       		.uleb128 0x2
 1165 008b 01       		.byte	0x1
 1166 008c 08       		.byte	0x8
 1167 008d EF030000 		.4byte	.LASF11
 1168 0091 03       		.uleb128 0x3
 1169 0092 FF030000 		.4byte	.LASF13
 1170 0096 03       		.byte	0x3
 1171 0097 2C       		.byte	0x2c
 1172 0098 41000000 		.4byte	0x41
 1173 009c 06       		.uleb128 0x6
 1174 009d 87010000 		.4byte	.LASF14
 1175 00a1 04       		.byte	0x4
 1176 00a2 E401     		.2byte	0x1e4
 1177 00a4 2C000000 		.4byte	0x2c
 1178 00a8 06       		.uleb128 0x6
 1179 00a9 74010000 		.4byte	.LASF15
 1180 00ad 04       		.byte	0x4
 1181 00ae E501     		.2byte	0x1e5
 1182 00b0 3A000000 		.4byte	0x3a
 1183 00b4 06       		.uleb128 0x6
 1184 00b5 72020000 		.4byte	.LASF16
 1185 00b9 04       		.byte	0x4
 1186 00ba E701     		.2byte	0x1e7
 1187 00bc 25000000 		.4byte	0x25
 1188 00c0 06       		.uleb128 0x6
 1189 00c1 81010000 		.4byte	.LASF17
 1190 00c5 04       		.byte	0x4
 1191 00c6 E801     		.2byte	0x1e8
 1192 00c8 33000000 		.4byte	0x33
 1193 00cc 02       		.uleb128 0x2
 1194 00cd 04       		.byte	0x4
 1195 00ce 04       		.byte	0x4
 1196 00cf 37020000 		.4byte	.LASF18
 1197 00d3 02       		.uleb128 0x2
 1198 00d4 08       		.byte	0x8
 1199 00d5 04       		.byte	0x4
 1200 00d6 29000000 		.4byte	.LASF19
 1201 00da 07       		.uleb128 0x7
 1202 00db D9030000 		.4byte	.LASF95
 1203 00df 20       		.byte	0x20
 1204 00e0 05       		.byte	0x5
 1205 00e1 29       		.byte	0x29
 1206 00e2 B3010000 		.4byte	0x1b3
 1207 00e6 08       		.uleb128 0x8
 1208 00e7 65050000 		.4byte	.LASF20
 1209 00eb 05       		.byte	0x5
 1210 00ec 2A       		.byte	0x2a
 1211 00ed B4000000 		.4byte	0xb4
 1212 00f1 00       		.byte	0
 1213 00f2 08       		.uleb128 0x8
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 31


 1214 00f3 7B010000 		.4byte	.LASF21
 1215 00f7 05       		.byte	0x5
 1216 00f8 2B       		.byte	0x2b
 1217 00f9 9C000000 		.4byte	0x9c
 1218 00fd 01       		.byte	0x1
 1219 00fe 08       		.uleb128 0x8
 1220 00ff F4030000 		.4byte	.LASF22
 1221 0103 05       		.byte	0x5
 1222 0104 2C       		.byte	0x2c
 1223 0105 C0000000 		.4byte	0xc0
 1224 0109 02       		.byte	0x2
 1225 010a 08       		.uleb128 0x8
 1226 010b 1E050000 		.4byte	.LASF23
 1227 010f 05       		.byte	0x5
 1228 0110 2D       		.byte	0x2d
 1229 0111 C0000000 		.4byte	0xc0
 1230 0115 04       		.byte	0x4
 1231 0116 08       		.uleb128 0x8
 1232 0117 6A050000 		.4byte	.LASF24
 1233 011b 05       		.byte	0x5
 1234 011c 2E       		.byte	0x2e
 1235 011d C0000000 		.4byte	0xc0
 1236 0121 06       		.byte	0x6
 1237 0122 08       		.uleb128 0x8
 1238 0123 9B020000 		.4byte	.LASF25
 1239 0127 05       		.byte	0x5
 1240 0128 2F       		.byte	0x2f
 1241 0129 C0000000 		.4byte	0xc0
 1242 012d 08       		.byte	0x8
 1243 012e 08       		.uleb128 0x8
 1244 012f DA040000 		.4byte	.LASF26
 1245 0133 05       		.byte	0x5
 1246 0134 30       		.byte	0x30
 1247 0135 C0000000 		.4byte	0xc0
 1248 0139 0A       		.byte	0xa
 1249 013a 08       		.uleb128 0x8
 1250 013b 5B030000 		.4byte	.LASF27
 1251 013f 05       		.byte	0x5
 1252 0140 31       		.byte	0x31
 1253 0141 C0000000 		.4byte	0xc0
 1254 0145 0C       		.byte	0xc
 1255 0146 08       		.uleb128 0x8
 1256 0147 8E020000 		.4byte	.LASF28
 1257 014b 05       		.byte	0x5
 1258 014c 32       		.byte	0x32
 1259 014d C0000000 		.4byte	0xc0
 1260 0151 0E       		.byte	0xe
 1261 0152 08       		.uleb128 0x8
 1262 0153 C7030000 		.4byte	.LASF29
 1263 0157 05       		.byte	0x5
 1264 0158 33       		.byte	0x33
 1265 0159 C0000000 		.4byte	0xc0
 1266 015d 10       		.byte	0x10
 1267 015e 08       		.uleb128 0x8
 1268 015f 07040000 		.4byte	.LASF30
 1269 0163 05       		.byte	0x5
 1270 0164 34       		.byte	0x34
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 32


 1271 0165 C0000000 		.4byte	0xc0
 1272 0169 12       		.byte	0x12
 1273 016a 08       		.uleb128 0x8
 1274 016b 2F040000 		.4byte	.LASF31
 1275 016f 05       		.byte	0x5
 1276 0170 35       		.byte	0x35
 1277 0171 C0000000 		.4byte	0xc0
 1278 0175 14       		.byte	0x14
 1279 0176 08       		.uleb128 0x8
 1280 0177 49050000 		.4byte	.LASF32
 1281 017b 05       		.byte	0x5
 1282 017c 36       		.byte	0x36
 1283 017d C0000000 		.4byte	0xc0
 1284 0181 16       		.byte	0x16
 1285 0182 08       		.uleb128 0x8
 1286 0183 83000000 		.4byte	.LASF33
 1287 0187 05       		.byte	0x5
 1288 0188 37       		.byte	0x37
 1289 0189 C0000000 		.4byte	0xc0
 1290 018d 18       		.byte	0x18
 1291 018e 08       		.uleb128 0x8
 1292 018f 86020000 		.4byte	.LASF34
 1293 0193 05       		.byte	0x5
 1294 0194 38       		.byte	0x38
 1295 0195 C0000000 		.4byte	0xc0
 1296 0199 1A       		.byte	0x1a
 1297 019a 08       		.uleb128 0x8
 1298 019b BE030000 		.4byte	.LASF35
 1299 019f 05       		.byte	0x5
 1300 01a0 39       		.byte	0x39
 1301 01a1 C0000000 		.4byte	0xc0
 1302 01a5 1C       		.byte	0x1c
 1303 01a6 08       		.uleb128 0x8
 1304 01a7 0F040000 		.4byte	.LASF36
 1305 01ab 05       		.byte	0x5
 1306 01ac 3A       		.byte	0x3a
 1307 01ad C0000000 		.4byte	0xc0
 1308 01b1 1E       		.byte	0x1e
 1309 01b2 00       		.byte	0
 1310 01b3 09       		.uleb128 0x9
 1311 01b4 BF040000 		.4byte	.LASF37
 1312 01b8 01       		.byte	0x1
 1313 01b9 32       		.byte	0x32
 1314 01ba 00000000 		.4byte	.LFB64
 1315 01be 14000000 		.4byte	.LFE64-.LFB64
 1316 01c2 01       		.uleb128 0x1
 1317 01c3 9C       		.byte	0x9c
 1318 01c4 09       		.uleb128 0x9
 1319 01c5 67000000 		.4byte	.LASF38
 1320 01c9 01       		.byte	0x1
 1321 01ca 38       		.byte	0x38
 1322 01cb 00000000 		.4byte	.LFB65
 1323 01cf 14000000 		.4byte	.LFE65-.LFB65
 1324 01d3 01       		.uleb128 0x1
 1325 01d4 9C       		.byte	0x9c
 1326 01d5 09       		.uleb128 0x9
 1327 01d6 00000000 		.4byte	.LASF39
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 33


 1328 01da 01       		.byte	0x1
 1329 01db 3E       		.byte	0x3e
 1330 01dc 00000000 		.4byte	.LFB66
 1331 01e0 14000000 		.4byte	.LFE66-.LFB66
 1332 01e4 01       		.uleb128 0x1
 1333 01e5 9C       		.byte	0x9c
 1334 01e6 0A       		.uleb128 0xa
 1335 01e7 B1040000 		.4byte	.LASF40
 1336 01eb 01       		.byte	0x1
 1337 01ec 43       		.byte	0x43
 1338 01ed 00000000 		.4byte	.LFB67
 1339 01f1 20000000 		.4byte	.LFE67-.LFB67
 1340 01f5 01       		.uleb128 0x1
 1341 01f6 9C       		.byte	0x9c
 1342 01f7 08020000 		.4byte	0x208
 1343 01fb 0B       		.uleb128 0xb
 1344 01fc 7800     		.ascii	"x\000"
 1345 01fe 01       		.byte	0x1
 1346 01ff 43       		.byte	0x43
 1347 0200 68000000 		.4byte	0x68
 1348 0204 02       		.uleb128 0x2
 1349 0205 91       		.byte	0x91
 1350 0206 74       		.sleb128 -12
 1351 0207 00       		.byte	0
 1352 0208 0A       		.uleb128 0xa
 1353 0209 56050000 		.4byte	.LASF41
 1354 020d 01       		.byte	0x1
 1355 020e 4E       		.byte	0x4e
 1356 020f 00000000 		.4byte	.LFB68
 1357 0213 20000000 		.4byte	.LFE68-.LFB68
 1358 0217 01       		.uleb128 0x1
 1359 0218 9C       		.byte	0x9c
 1360 0219 2A020000 		.4byte	0x22a
 1361 021d 0B       		.uleb128 0xb
 1362 021e 7800     		.ascii	"x\000"
 1363 0220 01       		.byte	0x1
 1364 0221 4E       		.byte	0x4e
 1365 0222 68000000 		.4byte	0x68
 1366 0226 02       		.uleb128 0x2
 1367 0227 91       		.byte	0x91
 1368 0228 74       		.sleb128 -12
 1369 0229 00       		.byte	0
 1370 022a 0A       		.uleb128 0xa
 1371 022b 50000000 		.4byte	.LASF42
 1372 022f 01       		.byte	0x1
 1373 0230 5B       		.byte	0x5b
 1374 0231 00000000 		.4byte	.LFB69
 1375 0235 90000000 		.4byte	.LFE69-.LFB69
 1376 0239 01       		.uleb128 0x1
 1377 023a 9C       		.byte	0x9c
 1378 023b 6A020000 		.4byte	0x26a
 1379 023f 0C       		.uleb128 0xc
 1380 0240 48010000 		.4byte	.LASF43
 1381 0244 01       		.byte	0x1
 1382 0245 63       		.byte	0x63
 1383 0246 C0000000 		.4byte	0xc0
 1384 024a 02       		.uleb128 0x2
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 34


 1385 024b 91       		.byte	0x91
 1386 024c 76       		.sleb128 -10
 1387 024d 0C       		.uleb128 0xc
 1388 024e 50010000 		.4byte	.LASF44
 1389 0252 01       		.byte	0x1
 1390 0253 64       		.byte	0x64
 1391 0254 C0000000 		.4byte	0xc0
 1392 0258 02       		.uleb128 0x2
 1393 0259 91       		.byte	0x91
 1394 025a 74       		.sleb128 -12
 1395 025b 0C       		.uleb128 0xc
 1396 025c 58010000 		.4byte	.LASF45
 1397 0260 01       		.byte	0x1
 1398 0261 65       		.byte	0x65
 1399 0262 C0000000 		.4byte	0xc0
 1400 0266 02       		.uleb128 0x2
 1401 0267 91       		.byte	0x91
 1402 0268 72       		.sleb128 -14
 1403 0269 00       		.byte	0
 1404 026a 0D       		.uleb128 0xd
 1405 026b 3D020000 		.4byte	.LASF53
 1406 026f 01       		.byte	0x1
 1407 0270 81       		.byte	0x81
 1408 0271 00000000 		.4byte	.LFB70
 1409 0275 0C000000 		.4byte	.LFE70-.LFB70
 1410 0279 01       		.uleb128 0x1
 1411 027a 9C       		.byte	0x9c
 1412 027b 0E       		.uleb128 0xe
 1413 027c CF040000 		.4byte	.LASF62
 1414 0280 01       		.byte	0x1
 1415 0281 94       		.byte	0x94
 1416 0282 00000000 		.4byte	.LFB71
 1417 0286 C0000000 		.4byte	.LFE71-.LFB71
 1418 028a 01       		.uleb128 0x1
 1419 028b 9C       		.byte	0x9c
 1420 028c E9020000 		.4byte	0x2e9
 1421 0290 0C       		.uleb128 0xc
 1422 0291 AC020000 		.4byte	.LASF46
 1423 0295 01       		.byte	0x1
 1424 0296 95       		.byte	0x95
 1425 0297 C0000000 		.4byte	0xc0
 1426 029b 02       		.uleb128 0x2
 1427 029c 91       		.byte	0x91
 1428 029d 76       		.sleb128 -10
 1429 029e 0C       		.uleb128 0xc
 1430 029f C1020000 		.4byte	.LASF47
 1431 02a3 01       		.byte	0x1
 1432 02a4 96       		.byte	0x96
 1433 02a5 C0000000 		.4byte	0xc0
 1434 02a9 02       		.uleb128 0x2
 1435 02aa 91       		.byte	0x91
 1436 02ab 74       		.sleb128 -12
 1437 02ac 0C       		.uleb128 0xc
 1438 02ad 19030000 		.4byte	.LASF48
 1439 02b1 01       		.byte	0x1
 1440 02b2 97       		.byte	0x97
 1441 02b3 C0000000 		.4byte	0xc0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 35


 1442 02b7 02       		.uleb128 0x2
 1443 02b8 91       		.byte	0x91
 1444 02b9 72       		.sleb128 -14
 1445 02ba 0C       		.uleb128 0xc
 1446 02bb 0A030000 		.4byte	.LASF49
 1447 02bf 01       		.byte	0x1
 1448 02c0 98       		.byte	0x98
 1449 02c1 C0000000 		.4byte	0xc0
 1450 02c5 02       		.uleb128 0x2
 1451 02c6 91       		.byte	0x91
 1452 02c7 70       		.sleb128 -16
 1453 02c8 0C       		.uleb128 0xc
 1454 02c9 D6020000 		.4byte	.LASF50
 1455 02cd 01       		.byte	0x1
 1456 02ce 99       		.byte	0x99
 1457 02cf E9020000 		.4byte	0x2e9
 1458 02d3 04       		.uleb128 0x4
 1459 02d4 91       		.byte	0x91
 1460 02d5 E0B17F   		.sleb128 -10016
 1461 02d8 0C       		.uleb128 0xc
 1462 02d9 3C050000 		.4byte	.LASF51
 1463 02dd 01       		.byte	0x1
 1464 02de 9B       		.byte	0x9b
 1465 02df E9020000 		.4byte	0x2e9
 1466 02e3 04       		.uleb128 0x4
 1467 02e4 91       		.byte	0x91
 1468 02e5 D0E37E   		.sleb128 -20016
 1469 02e8 00       		.byte	0
 1470 02e9 0F       		.uleb128 0xf
 1471 02ea 8A000000 		.4byte	0x8a
 1472 02ee FA020000 		.4byte	0x2fa
 1473 02f2 10       		.uleb128 0x10
 1474 02f3 7D000000 		.4byte	0x7d
 1475 02f7 0F27     		.2byte	0x270f
 1476 02f9 00       		.byte	0
 1477 02fa 09       		.uleb128 0x9
 1478 02fb 60010000 		.4byte	.LASF52
 1479 02ff 01       		.byte	0x1
 1480 0300 A3       		.byte	0xa3
 1481 0301 00000000 		.4byte	.LFB72
 1482 0305 2C000000 		.4byte	.LFE72-.LFB72
 1483 0309 01       		.uleb128 0x1
 1484 030a 9C       		.byte	0x9c
 1485 030b 11       		.uleb128 0x11
 1486 030c 0A000000 		.4byte	.LASF54
 1487 0310 01       		.byte	0x1
 1488 0311 BA       		.byte	0xba
 1489 0312 00000000 		.4byte	.LFB73
 1490 0316 0C000000 		.4byte	.LFE73-.LFB73
 1491 031a 01       		.uleb128 0x1
 1492 031b 9C       		.byte	0x9c
 1493 031c 12       		.uleb128 0x12
 1494 031d 43010000 		.4byte	.LASF55
 1495 0321 01       		.byte	0x1
 1496 0322 C7       		.byte	0xc7
 1497 0323 68000000 		.4byte	0x68
 1498 0327 00000000 		.4byte	.LFB74
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 36


 1499 032b BC000000 		.4byte	.LFE74-.LFB74
 1500 032f 01       		.uleb128 0x1
 1501 0330 9C       		.byte	0x9c
 1502 0331 4F030000 		.4byte	0x34f
 1503 0335 13       		.uleb128 0x13
 1504 0336 50000000 		.4byte	.LBB2
 1505 033a 54000000 		.4byte	.LBE2-.LBB2
 1506 033e 14       		.uleb128 0x14
 1507 033f CF030000 		.4byte	.LASF56
 1508 0343 01       		.byte	0x1
 1509 0344 1701     		.2byte	0x117
 1510 0346 68000000 		.4byte	0x68
 1511 034a 02       		.uleb128 0x2
 1512 034b 91       		.byte	0x91
 1513 034c 74       		.sleb128 -12
 1514 034d 00       		.byte	0
 1515 034e 00       		.byte	0
 1516 034f 15       		.uleb128 0x15
 1517 0350 54040000 		.4byte	.LASF57
 1518 0354 01       		.byte	0x1
 1519 0355 7901     		.2byte	0x179
 1520 0357 68000000 		.4byte	0x68
 1521 035b 00000000 		.4byte	.LFB75
 1522 035f 54000000 		.4byte	.LFE75-.LFB75
 1523 0363 01       		.uleb128 0x1
 1524 0364 9C       		.byte	0x9c
 1525 0365 B6030000 		.4byte	0x3b6
 1526 0369 14       		.uleb128 0x14
 1527 036a 36050000 		.4byte	.LASF58
 1528 036e 01       		.byte	0x1
 1529 036f 7B01     		.2byte	0x17b
 1530 0371 68000000 		.4byte	0x68
 1531 0375 02       		.uleb128 0x2
 1532 0376 91       		.byte	0x91
 1533 0377 74       		.sleb128 -12
 1534 0378 14       		.uleb128 0x14
 1535 0379 E3030000 		.4byte	.LASF59
 1536 037d 01       		.byte	0x1
 1537 037e 7C01     		.2byte	0x17c
 1538 0380 68000000 		.4byte	0x68
 1539 0384 02       		.uleb128 0x2
 1540 0385 91       		.byte	0x91
 1541 0386 6C       		.sleb128 -20
 1542 0387 13       		.uleb128 0x13
 1543 0388 0E000000 		.4byte	.LBB3
 1544 038c 34000000 		.4byte	.LBE3-.LBB3
 1545 0390 16       		.uleb128 0x16
 1546 0391 6900     		.ascii	"i\000"
 1547 0393 01       		.byte	0x1
 1548 0394 7D01     		.2byte	0x17d
 1549 0396 68000000 		.4byte	0x68
 1550 039a 02       		.uleb128 0x2
 1551 039b 91       		.byte	0x91
 1552 039c 70       		.sleb128 -16
 1553 039d 13       		.uleb128 0x13
 1554 039e 14000000 		.4byte	.LBB4
 1555 03a2 22000000 		.4byte	.LBE4-.LBB4
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 37


 1556 03a6 16       		.uleb128 0x16
 1557 03a7 7800     		.ascii	"x\000"
 1558 03a9 01       		.byte	0x1
 1559 03aa 7E01     		.2byte	0x17e
 1560 03ac 68000000 		.4byte	0x68
 1561 03b0 02       		.uleb128 0x2
 1562 03b1 91       		.byte	0x91
 1563 03b2 68       		.sleb128 -24
 1564 03b3 00       		.byte	0
 1565 03b4 00       		.byte	0
 1566 03b5 00       		.byte	0
 1567 03b6 17       		.uleb128 0x17
 1568 03b7 65020000 		.4byte	.LASF60
 1569 03bb 01       		.byte	0x1
 1570 03bc 8501     		.2byte	0x185
 1571 03be 00000000 		.4byte	.LFB76
 1572 03c2 3E000000 		.4byte	.LFE76-.LFB76
 1573 03c6 01       		.uleb128 0x1
 1574 03c7 9C       		.byte	0x9c
 1575 03c8 DA030000 		.4byte	0x3da
 1576 03cc 18       		.uleb128 0x18
 1577 03cd 7300     		.ascii	"s\000"
 1578 03cf 01       		.byte	0x1
 1579 03d0 8501     		.2byte	0x185
 1580 03d2 84000000 		.4byte	0x84
 1581 03d6 02       		.uleb128 0x2
 1582 03d7 91       		.byte	0x91
 1583 03d8 74       		.sleb128 -12
 1584 03d9 00       		.byte	0
 1585 03da 17       		.uleb128 0x17
 1586 03db 3C000000 		.4byte	.LASF61
 1587 03df 01       		.byte	0x1
 1588 03e0 9301     		.2byte	0x193
 1589 03e2 00000000 		.4byte	.LFB77
 1590 03e6 26000000 		.4byte	.LFE77-.LFB77
 1591 03ea 01       		.uleb128 0x1
 1592 03eb 9C       		.byte	0x9c
 1593 03ec FE030000 		.4byte	0x3fe
 1594 03f0 18       		.uleb128 0x18
 1595 03f1 6300     		.ascii	"c\000"
 1596 03f3 01       		.byte	0x1
 1597 03f4 9301     		.2byte	0x193
 1598 03f6 8A000000 		.4byte	0x8a
 1599 03fa 02       		.uleb128 0x2
 1600 03fb 91       		.byte	0x91
 1601 03fc 77       		.sleb128 -9
 1602 03fd 00       		.byte	0
 1603 03fe 19       		.uleb128 0x19
 1604 03ff F7040000 		.4byte	.LASF63
 1605 0403 01       		.byte	0x1
 1606 0404 9B01     		.2byte	0x19b
 1607 0406 00000000 		.4byte	.LFB78
 1608 040a C8000000 		.4byte	.LFE78-.LFB78
 1609 040e 01       		.uleb128 0x1
 1610 040f 9C       		.byte	0x9c
 1611 0410 46040000 		.4byte	0x446
 1612 0414 14       		.uleb128 0x14
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 38


 1613 0415 81040000 		.4byte	.LASF64
 1614 0419 01       		.byte	0x1
 1615 041a A101     		.2byte	0x1a1
 1616 041c 9C000000 		.4byte	0x9c
 1617 0420 05       		.uleb128 0x5
 1618 0421 03       		.byte	0x3
 1619 0422 35000000 		.4byte	usbStarted.8279
 1620 0426 14       		.uleb128 0x14
 1621 0427 B2030000 		.4byte	.LASF65
 1622 042b 01       		.byte	0x1
 1623 042c A201     		.2byte	0x1a2
 1624 042e A8000000 		.4byte	0xa8
 1625 0432 05       		.uleb128 0x5
 1626 0433 03       		.byte	0x3
 1627 0434 36000000 		.4byte	usbBufCount.8280
 1628 0438 16       		.uleb128 0x16
 1629 0439 6300     		.ascii	"c\000"
 1630 043b 01       		.byte	0x1
 1631 043c A301     		.2byte	0x1a3
 1632 043e 9C000000 		.4byte	0x9c
 1633 0442 02       		.uleb128 0x2
 1634 0443 91       		.byte	0x91
 1635 0444 77       		.sleb128 -9
 1636 0445 00       		.byte	0
 1637 0446 0C       		.uleb128 0xc
 1638 0447 95040000 		.4byte	.LASF66
 1639 044b 01       		.byte	0x1
 1640 044c 80       		.byte	0x80
 1641 044d 57040000 		.4byte	0x457
 1642 0451 05       		.uleb128 0x5
 1643 0452 03       		.byte	0x3
 1644 0453 34000000 		.4byte	count
 1645 0457 1A       		.uleb128 0x1a
 1646 0458 B4000000 		.4byte	0xb4
 1647 045c 1B       		.uleb128 0x1b
 1648 045d 29050000 		.4byte	.LASF67
 1649 0461 06       		.byte	0x6
 1650 0462 1207     		.2byte	0x712
 1651 0464 68040000 		.4byte	0x468
 1652 0468 1A       		.uleb128 0x1a
 1653 0469 91000000 		.4byte	0x91
 1654 046d 1C       		.uleb128 0x1c
 1655 046e 747300   		.ascii	"ts\000"
 1656 0471 05       		.byte	0x5
 1657 0472 10       		.byte	0x10
 1658 0473 9C000000 		.4byte	0x9c
 1659 0477 05       		.uleb128 0x5
 1660 0478 03       		.byte	0x3
 1661 0479 00000000 		.4byte	ts
 1662 047d 1D       		.uleb128 0x1d
 1663 047e 22000000 		.4byte	.LASF68
 1664 0482 05       		.byte	0x5
 1665 0483 11       		.byte	0x11
 1666 0484 A8000000 		.4byte	0xa8
 1667 0488 05       		.uleb128 0x5
 1668 0489 03       		.byte	0x3
 1669 048a 00000000 		.4byte	ts_enc
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 39


 1670 048e 1D       		.uleb128 0x1d
 1671 048f ED040000 		.4byte	.LASF69
 1672 0493 05       		.byte	0x5
 1673 0494 12       		.byte	0x12
 1674 0495 A8000000 		.4byte	0xa8
 1675 0499 05       		.uleb128 0x5
 1676 049a 03       		.byte	0x3
 1677 049b 00000000 		.4byte	ts_update
 1678 049f 1D       		.uleb128 0x1d
 1679 04a0 8C040000 		.4byte	.LASF70
 1680 04a4 05       		.byte	0x5
 1681 04a5 13       		.byte	0x13
 1682 04a6 A8000000 		.4byte	0xa8
 1683 04aa 05       		.uleb128 0x5
 1684 04ab 03       		.byte	0x3
 1685 04ac 00000000 		.4byte	ts_speed
 1686 04b0 1D       		.uleb128 0x1d
 1687 04b1 E2040000 		.4byte	.LASF71
 1688 04b5 05       		.byte	0x5
 1689 04b6 14       		.byte	0x14
 1690 04b7 A8000000 		.4byte	0xa8
 1691 04bb 05       		.uleb128 0x5
 1692 04bc 03       		.byte	0x3
 1693 04bd 00000000 		.4byte	ts_display
 1694 04c1 1D       		.uleb128 0x1d
 1695 04c2 9B040000 		.4byte	.LASF72
 1696 04c6 05       		.byte	0x5
 1697 04c7 16       		.byte	0x16
 1698 04c8 9C000000 		.4byte	0x9c
 1699 04cc 05       		.uleb128 0x5
 1700 04cd 03       		.byte	0x3
 1701 04ce 00000000 		.4byte	flag_ts_enc
 1702 04d2 1D       		.uleb128 0x1d
 1703 04d3 77020000 		.4byte	.LASF73
 1704 04d7 05       		.byte	0x5
 1705 04d8 17       		.byte	0x17
 1706 04d9 9C000000 		.4byte	0x9c
 1707 04dd 05       		.uleb128 0x5
 1708 04de 03       		.byte	0x3
 1709 04df 00000000 		.4byte	flag_ts_update
 1710 04e3 1D       		.uleb128 0x1d
 1711 04e4 46040000 		.4byte	.LASF74
 1712 04e8 05       		.byte	0x5
 1713 04e9 18       		.byte	0x18
 1714 04ea 9C000000 		.4byte	0x9c
 1715 04ee 05       		.uleb128 0x5
 1716 04ef 03       		.byte	0x3
 1717 04f0 00000000 		.4byte	flag_ts_speed
 1718 04f4 1D       		.uleb128 0x1d
 1719 04f5 F2020000 		.4byte	.LASF75
 1720 04f9 05       		.byte	0x5
 1721 04fa 19       		.byte	0x19
 1722 04fb 9C000000 		.4byte	0x9c
 1723 04ff 05       		.uleb128 0x5
 1724 0500 03       		.byte	0x3
 1725 0501 00000000 		.4byte	flag_ts_display
 1726 0505 1D       		.uleb128 0x1d
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 40


 1727 0506 02030000 		.4byte	.LASF76
 1728 050a 05       		.byte	0x5
 1729 050b 1C       		.byte	0x1c
 1730 050c 9C000000 		.4byte	0x9c
 1731 0510 05       		.uleb128 0x5
 1732 0511 03       		.byte	0x3
 1733 0512 00000000 		.4byte	flag_rx
 1734 0516 1D       		.uleb128 0x1d
 1735 0517 30000000 		.4byte	.LASF77
 1736 051b 05       		.byte	0x5
 1737 051c 1D       		.byte	0x1d
 1738 051d 9C000000 		.4byte	0x9c
 1739 0521 05       		.uleb128 0x5
 1740 0522 03       		.byte	0x3
 1741 0523 00000000 		.4byte	flag_packet
 1742 0527 1D       		.uleb128 0x1d
 1743 0528 A3030000 		.4byte	.LASF78
 1744 052c 05       		.byte	0x5
 1745 052d 1E       		.byte	0x1e
 1746 052e 9C000000 		.4byte	0x9c
 1747 0532 05       		.uleb128 0x5
 1748 0533 03       		.byte	0x3
 1749 0534 00000000 		.4byte	flag_KB_string
 1750 0538 1D       		.uleb128 0x1d
 1751 0539 64030000 		.4byte	.LASF79
 1752 053d 05       		.byte	0x5
 1753 053e 20       		.byte	0x20
 1754 053f 9C000000 		.4byte	0x9c
 1755 0543 05       		.uleb128 0x5
 1756 0544 03       		.byte	0x3
 1757 0545 00000000 		.4byte	dataready_flag
 1758 0549 1D       		.uleb128 0x1d
 1759 054a 02050000 		.4byte	.LASF80
 1760 054e 05       		.byte	0x5
 1761 054f 22       		.byte	0x22
 1762 0550 9C000000 		.4byte	0x9c
 1763 0554 05       		.uleb128 0x5
 1764 0555 03       		.byte	0x3
 1765 0556 00000000 		.4byte	flag_rf_transmission_active
 1766 055a 0F       		.uleb128 0xf
 1767 055b 8A000000 		.4byte	0x8a
 1768 055f 6A050000 		.4byte	0x56a
 1769 0563 1E       		.uleb128 0x1e
 1770 0564 7D000000 		.4byte	0x7d
 1771 0568 3F       		.byte	0x3f
 1772 0569 00       		.byte	0
 1773 056a 1D       		.uleb128 0x1d
 1774 056b 38040000 		.4byte	.LASF81
 1775 056f 05       		.byte	0x5
 1776 0570 25       		.byte	0x25
 1777 0571 5A050000 		.4byte	0x55a
 1778 0575 05       		.uleb128 0x5
 1779 0576 03       		.byte	0x3
 1780 0577 00000000 		.4byte	displaystring
 1781 057b 1D       		.uleb128 0x1d
 1782 057c 32020000 		.4byte	.LASF82
 1783 0580 05       		.byte	0x5
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 41


 1784 0581 26       		.byte	0x26
 1785 0582 5A050000 		.4byte	0x55a
 1786 0586 05       		.uleb128 0x5
 1787 0587 03       		.byte	0x3
 1788 0588 00000000 		.4byte	line
 1789 058c 1D       		.uleb128 0x1d
 1790 058d 34030000 		.4byte	.LASF83
 1791 0591 05       		.byte	0x5
 1792 0592 26       		.byte	0x26
 1793 0593 5A050000 		.4byte	0x55a
 1794 0597 05       		.uleb128 0x5
 1795 0598 03       		.byte	0x3
 1796 0599 00000000 		.4byte	entry
 1797 059d 0F       		.uleb128 0xf
 1798 059e 9C000000 		.4byte	0x9c
 1799 05a2 AD050000 		.4byte	0x5ad
 1800 05a6 1E       		.uleb128 0x1e
 1801 05a7 7D000000 		.4byte	0x7d
 1802 05ab 3F       		.byte	0x3f
 1803 05ac 00       		.byte	0
 1804 05ad 1D       		.uleb128 0x1d
 1805 05ae AB000000 		.4byte	.LASF84
 1806 05b2 05       		.byte	0x5
 1807 05b3 27       		.byte	0x27
 1808 05b4 9D050000 		.4byte	0x59d
 1809 05b8 05       		.uleb128 0x5
 1810 05b9 03       		.byte	0x3
 1811 05ba 00000000 		.4byte	usbBuffer
 1812 05be 1D       		.uleb128 0x1d
 1813 05bf 95000000 		.4byte	.LASF85
 1814 05c3 05       		.byte	0x5
 1815 05c4 3C       		.byte	0x3c
 1816 05c5 DA000000 		.4byte	0xda
 1817 05c9 05       		.uleb128 0x5
 1818 05ca 03       		.byte	0x3
 1819 05cb 00000000 		.4byte	system_state
 1820 05cf 1D       		.uleb128 0x1d
 1821 05d0 26020000 		.4byte	.LASF86
 1822 05d4 01       		.byte	0x1
 1823 05d5 55       		.byte	0x55
 1824 05d6 68000000 		.4byte	0x68
 1825 05da 05       		.uleb128 0x5
 1826 05db 03       		.byte	0x3
 1827 05dc 00000000 		.4byte	changeMotor
 1828 05e0 1D       		.uleb128 0x1d
 1829 05e1 78000000 		.4byte	.LASF87
 1830 05e5 01       		.byte	0x1
 1831 05e6 56       		.byte	0x56
 1832 05e7 68000000 		.4byte	0x68
 1833 05eb 05       		.uleb128 0x5
 1834 05ec 03       		.byte	0x3
 1835 05ed 00000000 		.4byte	checkLight
 1836 05f1 1D       		.uleb128 0x1d
 1837 05f2 69010000 		.4byte	.LASF88
 1838 05f6 01       		.byte	0x1
 1839 05f7 57       		.byte	0x57
 1840 05f8 68000000 		.4byte	0x68
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 42


 1841 05fc 05       		.uleb128 0x5
 1842 05fd 03       		.byte	0x3
 1843 05fe 00000000 		.4byte	lightState
 1844 0602 0F       		.uleb128 0xf
 1845 0603 12060000 		.4byte	0x612
 1846 0607 12060000 		.4byte	0x612
 1847 060b 1E       		.uleb128 0x1e
 1848 060c 7D000000 		.4byte	0x7d
 1849 0610 02       		.byte	0x2
 1850 0611 00       		.byte	0
 1851 0612 1A       		.uleb128 0x1a
 1852 0613 68000000 		.4byte	0x68
 1853 0617 1D       		.uleb128 0x1d
 1854 0618 48030000 		.4byte	.LASF89
 1855 061c 01       		.byte	0x1
 1856 061d 58       		.byte	0x58
 1857 061e 28060000 		.4byte	0x628
 1858 0622 05       		.uleb128 0x5
 1859 0623 03       		.byte	0x3
 1860 0624 00000000 		.4byte	lightDetectedFront
 1861 0628 1A       		.uleb128 0x1a
 1862 0629 02060000 		.4byte	0x602
 1863 062d 1D       		.uleb128 0x1d
 1864 062e 47000000 		.4byte	.LASF90
 1865 0632 01       		.byte	0x1
 1866 0633 59       		.byte	0x59
 1867 0634 12060000 		.4byte	0x612
 1868 0638 05       		.uleb128 0x5
 1869 0639 03       		.byte	0x3
 1870 063a 00000000 		.4byte	counteoc
 1871 063e 1D       		.uleb128 0x1d
 1872 063f E3020000 		.4byte	.LASF91
 1873 0643 01       		.byte	0x1
 1874 0644 5A       		.byte	0x5a
 1875 0645 12060000 		.4byte	0x612
 1876 0649 05       		.uleb128 0x5
 1877 064a 03       		.byte	0x3
 1878 064b 00000000 		.4byte	processSensors
 1879 064f 00       		.byte	0
 1880              		.section	.debug_abbrev,"",%progbits
 1881              	.Ldebug_abbrev0:
 1882 0000 01       		.uleb128 0x1
 1883 0001 11       		.uleb128 0x11
 1884 0002 01       		.byte	0x1
 1885 0003 25       		.uleb128 0x25
 1886 0004 0E       		.uleb128 0xe
 1887 0005 13       		.uleb128 0x13
 1888 0006 0B       		.uleb128 0xb
 1889 0007 03       		.uleb128 0x3
 1890 0008 0E       		.uleb128 0xe
 1891 0009 1B       		.uleb128 0x1b
 1892 000a 0E       		.uleb128 0xe
 1893 000b 55       		.uleb128 0x55
 1894 000c 17       		.uleb128 0x17
 1895 000d 11       		.uleb128 0x11
 1896 000e 01       		.uleb128 0x1
 1897 000f 10       		.uleb128 0x10
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 43


 1898 0010 17       		.uleb128 0x17
 1899 0011 00       		.byte	0
 1900 0012 00       		.byte	0
 1901 0013 02       		.uleb128 0x2
 1902 0014 24       		.uleb128 0x24
 1903 0015 00       		.byte	0
 1904 0016 0B       		.uleb128 0xb
 1905 0017 0B       		.uleb128 0xb
 1906 0018 3E       		.uleb128 0x3e
 1907 0019 0B       		.uleb128 0xb
 1908 001a 03       		.uleb128 0x3
 1909 001b 0E       		.uleb128 0xe
 1910 001c 00       		.byte	0
 1911 001d 00       		.byte	0
 1912 001e 03       		.uleb128 0x3
 1913 001f 16       		.uleb128 0x16
 1914 0020 00       		.byte	0
 1915 0021 03       		.uleb128 0x3
 1916 0022 0E       		.uleb128 0xe
 1917 0023 3A       		.uleb128 0x3a
 1918 0024 0B       		.uleb128 0xb
 1919 0025 3B       		.uleb128 0x3b
 1920 0026 0B       		.uleb128 0xb
 1921 0027 49       		.uleb128 0x49
 1922 0028 13       		.uleb128 0x13
 1923 0029 00       		.byte	0
 1924 002a 00       		.byte	0
 1925 002b 04       		.uleb128 0x4
 1926 002c 24       		.uleb128 0x24
 1927 002d 00       		.byte	0
 1928 002e 0B       		.uleb128 0xb
 1929 002f 0B       		.uleb128 0xb
 1930 0030 3E       		.uleb128 0x3e
 1931 0031 0B       		.uleb128 0xb
 1932 0032 03       		.uleb128 0x3
 1933 0033 08       		.uleb128 0x8
 1934 0034 00       		.byte	0
 1935 0035 00       		.byte	0
 1936 0036 05       		.uleb128 0x5
 1937 0037 0F       		.uleb128 0xf
 1938 0038 00       		.byte	0
 1939 0039 0B       		.uleb128 0xb
 1940 003a 0B       		.uleb128 0xb
 1941 003b 49       		.uleb128 0x49
 1942 003c 13       		.uleb128 0x13
 1943 003d 00       		.byte	0
 1944 003e 00       		.byte	0
 1945 003f 06       		.uleb128 0x6
 1946 0040 16       		.uleb128 0x16
 1947 0041 00       		.byte	0
 1948 0042 03       		.uleb128 0x3
 1949 0043 0E       		.uleb128 0xe
 1950 0044 3A       		.uleb128 0x3a
 1951 0045 0B       		.uleb128 0xb
 1952 0046 3B       		.uleb128 0x3b
 1953 0047 05       		.uleb128 0x5
 1954 0048 49       		.uleb128 0x49
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 44


 1955 0049 13       		.uleb128 0x13
 1956 004a 00       		.byte	0
 1957 004b 00       		.byte	0
 1958 004c 07       		.uleb128 0x7
 1959 004d 13       		.uleb128 0x13
 1960 004e 01       		.byte	0x1
 1961 004f 03       		.uleb128 0x3
 1962 0050 0E       		.uleb128 0xe
 1963 0051 0B       		.uleb128 0xb
 1964 0052 0B       		.uleb128 0xb
 1965 0053 3A       		.uleb128 0x3a
 1966 0054 0B       		.uleb128 0xb
 1967 0055 3B       		.uleb128 0x3b
 1968 0056 0B       		.uleb128 0xb
 1969 0057 01       		.uleb128 0x1
 1970 0058 13       		.uleb128 0x13
 1971 0059 00       		.byte	0
 1972 005a 00       		.byte	0
 1973 005b 08       		.uleb128 0x8
 1974 005c 0D       		.uleb128 0xd
 1975 005d 00       		.byte	0
 1976 005e 03       		.uleb128 0x3
 1977 005f 0E       		.uleb128 0xe
 1978 0060 3A       		.uleb128 0x3a
 1979 0061 0B       		.uleb128 0xb
 1980 0062 3B       		.uleb128 0x3b
 1981 0063 0B       		.uleb128 0xb
 1982 0064 49       		.uleb128 0x49
 1983 0065 13       		.uleb128 0x13
 1984 0066 38       		.uleb128 0x38
 1985 0067 0B       		.uleb128 0xb
 1986 0068 00       		.byte	0
 1987 0069 00       		.byte	0
 1988 006a 09       		.uleb128 0x9
 1989 006b 2E       		.uleb128 0x2e
 1990 006c 00       		.byte	0
 1991 006d 3F       		.uleb128 0x3f
 1992 006e 19       		.uleb128 0x19
 1993 006f 03       		.uleb128 0x3
 1994 0070 0E       		.uleb128 0xe
 1995 0071 3A       		.uleb128 0x3a
 1996 0072 0B       		.uleb128 0xb
 1997 0073 3B       		.uleb128 0x3b
 1998 0074 0B       		.uleb128 0xb
 1999 0075 11       		.uleb128 0x11
 2000 0076 01       		.uleb128 0x1
 2001 0077 12       		.uleb128 0x12
 2002 0078 06       		.uleb128 0x6
 2003 0079 40       		.uleb128 0x40
 2004 007a 18       		.uleb128 0x18
 2005 007b 9642     		.uleb128 0x2116
 2006 007d 19       		.uleb128 0x19
 2007 007e 00       		.byte	0
 2008 007f 00       		.byte	0
 2009 0080 0A       		.uleb128 0xa
 2010 0081 2E       		.uleb128 0x2e
 2011 0082 01       		.byte	0x1
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 45


 2012 0083 3F       		.uleb128 0x3f
 2013 0084 19       		.uleb128 0x19
 2014 0085 03       		.uleb128 0x3
 2015 0086 0E       		.uleb128 0xe
 2016 0087 3A       		.uleb128 0x3a
 2017 0088 0B       		.uleb128 0xb
 2018 0089 3B       		.uleb128 0x3b
 2019 008a 0B       		.uleb128 0xb
 2020 008b 27       		.uleb128 0x27
 2021 008c 19       		.uleb128 0x19
 2022 008d 11       		.uleb128 0x11
 2023 008e 01       		.uleb128 0x1
 2024 008f 12       		.uleb128 0x12
 2025 0090 06       		.uleb128 0x6
 2026 0091 40       		.uleb128 0x40
 2027 0092 18       		.uleb128 0x18
 2028 0093 9642     		.uleb128 0x2116
 2029 0095 19       		.uleb128 0x19
 2030 0096 01       		.uleb128 0x1
 2031 0097 13       		.uleb128 0x13
 2032 0098 00       		.byte	0
 2033 0099 00       		.byte	0
 2034 009a 0B       		.uleb128 0xb
 2035 009b 05       		.uleb128 0x5
 2036 009c 00       		.byte	0
 2037 009d 03       		.uleb128 0x3
 2038 009e 08       		.uleb128 0x8
 2039 009f 3A       		.uleb128 0x3a
 2040 00a0 0B       		.uleb128 0xb
 2041 00a1 3B       		.uleb128 0x3b
 2042 00a2 0B       		.uleb128 0xb
 2043 00a3 49       		.uleb128 0x49
 2044 00a4 13       		.uleb128 0x13
 2045 00a5 02       		.uleb128 0x2
 2046 00a6 18       		.uleb128 0x18
 2047 00a7 00       		.byte	0
 2048 00a8 00       		.byte	0
 2049 00a9 0C       		.uleb128 0xc
 2050 00aa 34       		.uleb128 0x34
 2051 00ab 00       		.byte	0
 2052 00ac 03       		.uleb128 0x3
 2053 00ad 0E       		.uleb128 0xe
 2054 00ae 3A       		.uleb128 0x3a
 2055 00af 0B       		.uleb128 0xb
 2056 00b0 3B       		.uleb128 0x3b
 2057 00b1 0B       		.uleb128 0xb
 2058 00b2 49       		.uleb128 0x49
 2059 00b3 13       		.uleb128 0x13
 2060 00b4 02       		.uleb128 0x2
 2061 00b5 18       		.uleb128 0x18
 2062 00b6 00       		.byte	0
 2063 00b7 00       		.byte	0
 2064 00b8 0D       		.uleb128 0xd
 2065 00b9 2E       		.uleb128 0x2e
 2066 00ba 00       		.byte	0
 2067 00bb 3F       		.uleb128 0x3f
 2068 00bc 19       		.uleb128 0x19
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 46


 2069 00bd 03       		.uleb128 0x3
 2070 00be 0E       		.uleb128 0xe
 2071 00bf 3A       		.uleb128 0x3a
 2072 00c0 0B       		.uleb128 0xb
 2073 00c1 3B       		.uleb128 0x3b
 2074 00c2 0B       		.uleb128 0xb
 2075 00c3 27       		.uleb128 0x27
 2076 00c4 19       		.uleb128 0x19
 2077 00c5 11       		.uleb128 0x11
 2078 00c6 01       		.uleb128 0x1
 2079 00c7 12       		.uleb128 0x12
 2080 00c8 06       		.uleb128 0x6
 2081 00c9 40       		.uleb128 0x40
 2082 00ca 18       		.uleb128 0x18
 2083 00cb 9742     		.uleb128 0x2117
 2084 00cd 19       		.uleb128 0x19
 2085 00ce 00       		.byte	0
 2086 00cf 00       		.byte	0
 2087 00d0 0E       		.uleb128 0xe
 2088 00d1 2E       		.uleb128 0x2e
 2089 00d2 01       		.byte	0x1
 2090 00d3 3F       		.uleb128 0x3f
 2091 00d4 19       		.uleb128 0x19
 2092 00d5 03       		.uleb128 0x3
 2093 00d6 0E       		.uleb128 0xe
 2094 00d7 3A       		.uleb128 0x3a
 2095 00d8 0B       		.uleb128 0xb
 2096 00d9 3B       		.uleb128 0x3b
 2097 00da 0B       		.uleb128 0xb
 2098 00db 11       		.uleb128 0x11
 2099 00dc 01       		.uleb128 0x1
 2100 00dd 12       		.uleb128 0x12
 2101 00de 06       		.uleb128 0x6
 2102 00df 40       		.uleb128 0x40
 2103 00e0 18       		.uleb128 0x18
 2104 00e1 9642     		.uleb128 0x2116
 2105 00e3 19       		.uleb128 0x19
 2106 00e4 01       		.uleb128 0x1
 2107 00e5 13       		.uleb128 0x13
 2108 00e6 00       		.byte	0
 2109 00e7 00       		.byte	0
 2110 00e8 0F       		.uleb128 0xf
 2111 00e9 01       		.uleb128 0x1
 2112 00ea 01       		.byte	0x1
 2113 00eb 49       		.uleb128 0x49
 2114 00ec 13       		.uleb128 0x13
 2115 00ed 01       		.uleb128 0x1
 2116 00ee 13       		.uleb128 0x13
 2117 00ef 00       		.byte	0
 2118 00f0 00       		.byte	0
 2119 00f1 10       		.uleb128 0x10
 2120 00f2 21       		.uleb128 0x21
 2121 00f3 00       		.byte	0
 2122 00f4 49       		.uleb128 0x49
 2123 00f5 13       		.uleb128 0x13
 2124 00f6 2F       		.uleb128 0x2f
 2125 00f7 05       		.uleb128 0x5
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 47


 2126 00f8 00       		.byte	0
 2127 00f9 00       		.byte	0
 2128 00fa 11       		.uleb128 0x11
 2129 00fb 2E       		.uleb128 0x2e
 2130 00fc 00       		.byte	0
 2131 00fd 3F       		.uleb128 0x3f
 2132 00fe 19       		.uleb128 0x19
 2133 00ff 03       		.uleb128 0x3
 2134 0100 0E       		.uleb128 0xe
 2135 0101 3A       		.uleb128 0x3a
 2136 0102 0B       		.uleb128 0xb
 2137 0103 3B       		.uleb128 0x3b
 2138 0104 0B       		.uleb128 0xb
 2139 0105 27       		.uleb128 0x27
 2140 0106 19       		.uleb128 0x19
 2141 0107 11       		.uleb128 0x11
 2142 0108 01       		.uleb128 0x1
 2143 0109 12       		.uleb128 0x12
 2144 010a 06       		.uleb128 0x6
 2145 010b 40       		.uleb128 0x40
 2146 010c 18       		.uleb128 0x18
 2147 010d 9642     		.uleb128 0x2116
 2148 010f 19       		.uleb128 0x19
 2149 0110 00       		.byte	0
 2150 0111 00       		.byte	0
 2151 0112 12       		.uleb128 0x12
 2152 0113 2E       		.uleb128 0x2e
 2153 0114 01       		.byte	0x1
 2154 0115 3F       		.uleb128 0x3f
 2155 0116 19       		.uleb128 0x19
 2156 0117 03       		.uleb128 0x3
 2157 0118 0E       		.uleb128 0xe
 2158 0119 3A       		.uleb128 0x3a
 2159 011a 0B       		.uleb128 0xb
 2160 011b 3B       		.uleb128 0x3b
 2161 011c 0B       		.uleb128 0xb
 2162 011d 49       		.uleb128 0x49
 2163 011e 13       		.uleb128 0x13
 2164 011f 11       		.uleb128 0x11
 2165 0120 01       		.uleb128 0x1
 2166 0121 12       		.uleb128 0x12
 2167 0122 06       		.uleb128 0x6
 2168 0123 40       		.uleb128 0x40
 2169 0124 18       		.uleb128 0x18
 2170 0125 9642     		.uleb128 0x2116
 2171 0127 19       		.uleb128 0x19
 2172 0128 01       		.uleb128 0x1
 2173 0129 13       		.uleb128 0x13
 2174 012a 00       		.byte	0
 2175 012b 00       		.byte	0
 2176 012c 13       		.uleb128 0x13
 2177 012d 0B       		.uleb128 0xb
 2178 012e 01       		.byte	0x1
 2179 012f 11       		.uleb128 0x11
 2180 0130 01       		.uleb128 0x1
 2181 0131 12       		.uleb128 0x12
 2182 0132 06       		.uleb128 0x6
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 48


 2183 0133 00       		.byte	0
 2184 0134 00       		.byte	0
 2185 0135 14       		.uleb128 0x14
 2186 0136 34       		.uleb128 0x34
 2187 0137 00       		.byte	0
 2188 0138 03       		.uleb128 0x3
 2189 0139 0E       		.uleb128 0xe
 2190 013a 3A       		.uleb128 0x3a
 2191 013b 0B       		.uleb128 0xb
 2192 013c 3B       		.uleb128 0x3b
 2193 013d 05       		.uleb128 0x5
 2194 013e 49       		.uleb128 0x49
 2195 013f 13       		.uleb128 0x13
 2196 0140 02       		.uleb128 0x2
 2197 0141 18       		.uleb128 0x18
 2198 0142 00       		.byte	0
 2199 0143 00       		.byte	0
 2200 0144 15       		.uleb128 0x15
 2201 0145 2E       		.uleb128 0x2e
 2202 0146 01       		.byte	0x1
 2203 0147 3F       		.uleb128 0x3f
 2204 0148 19       		.uleb128 0x19
 2205 0149 03       		.uleb128 0x3
 2206 014a 0E       		.uleb128 0xe
 2207 014b 3A       		.uleb128 0x3a
 2208 014c 0B       		.uleb128 0xb
 2209 014d 3B       		.uleb128 0x3b
 2210 014e 05       		.uleb128 0x5
 2211 014f 49       		.uleb128 0x49
 2212 0150 13       		.uleb128 0x13
 2213 0151 11       		.uleb128 0x11
 2214 0152 01       		.uleb128 0x1
 2215 0153 12       		.uleb128 0x12
 2216 0154 06       		.uleb128 0x6
 2217 0155 40       		.uleb128 0x40
 2218 0156 18       		.uleb128 0x18
 2219 0157 9742     		.uleb128 0x2117
 2220 0159 19       		.uleb128 0x19
 2221 015a 01       		.uleb128 0x1
 2222 015b 13       		.uleb128 0x13
 2223 015c 00       		.byte	0
 2224 015d 00       		.byte	0
 2225 015e 16       		.uleb128 0x16
 2226 015f 34       		.uleb128 0x34
 2227 0160 00       		.byte	0
 2228 0161 03       		.uleb128 0x3
 2229 0162 08       		.uleb128 0x8
 2230 0163 3A       		.uleb128 0x3a
 2231 0164 0B       		.uleb128 0xb
 2232 0165 3B       		.uleb128 0x3b
 2233 0166 05       		.uleb128 0x5
 2234 0167 49       		.uleb128 0x49
 2235 0168 13       		.uleb128 0x13
 2236 0169 02       		.uleb128 0x2
 2237 016a 18       		.uleb128 0x18
 2238 016b 00       		.byte	0
 2239 016c 00       		.byte	0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 49


 2240 016d 17       		.uleb128 0x17
 2241 016e 2E       		.uleb128 0x2e
 2242 016f 01       		.byte	0x1
 2243 0170 3F       		.uleb128 0x3f
 2244 0171 19       		.uleb128 0x19
 2245 0172 03       		.uleb128 0x3
 2246 0173 0E       		.uleb128 0xe
 2247 0174 3A       		.uleb128 0x3a
 2248 0175 0B       		.uleb128 0xb
 2249 0176 3B       		.uleb128 0x3b
 2250 0177 05       		.uleb128 0x5
 2251 0178 27       		.uleb128 0x27
 2252 0179 19       		.uleb128 0x19
 2253 017a 11       		.uleb128 0x11
 2254 017b 01       		.uleb128 0x1
 2255 017c 12       		.uleb128 0x12
 2256 017d 06       		.uleb128 0x6
 2257 017e 40       		.uleb128 0x40
 2258 017f 18       		.uleb128 0x18
 2259 0180 9642     		.uleb128 0x2116
 2260 0182 19       		.uleb128 0x19
 2261 0183 01       		.uleb128 0x1
 2262 0184 13       		.uleb128 0x13
 2263 0185 00       		.byte	0
 2264 0186 00       		.byte	0
 2265 0187 18       		.uleb128 0x18
 2266 0188 05       		.uleb128 0x5
 2267 0189 00       		.byte	0
 2268 018a 03       		.uleb128 0x3
 2269 018b 08       		.uleb128 0x8
 2270 018c 3A       		.uleb128 0x3a
 2271 018d 0B       		.uleb128 0xb
 2272 018e 3B       		.uleb128 0x3b
 2273 018f 05       		.uleb128 0x5
 2274 0190 49       		.uleb128 0x49
 2275 0191 13       		.uleb128 0x13
 2276 0192 02       		.uleb128 0x2
 2277 0193 18       		.uleb128 0x18
 2278 0194 00       		.byte	0
 2279 0195 00       		.byte	0
 2280 0196 19       		.uleb128 0x19
 2281 0197 2E       		.uleb128 0x2e
 2282 0198 01       		.byte	0x1
 2283 0199 3F       		.uleb128 0x3f
 2284 019a 19       		.uleb128 0x19
 2285 019b 03       		.uleb128 0x3
 2286 019c 0E       		.uleb128 0xe
 2287 019d 3A       		.uleb128 0x3a
 2288 019e 0B       		.uleb128 0xb
 2289 019f 3B       		.uleb128 0x3b
 2290 01a0 05       		.uleb128 0x5
 2291 01a1 11       		.uleb128 0x11
 2292 01a2 01       		.uleb128 0x1
 2293 01a3 12       		.uleb128 0x12
 2294 01a4 06       		.uleb128 0x6
 2295 01a5 40       		.uleb128 0x40
 2296 01a6 18       		.uleb128 0x18
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 50


 2297 01a7 9642     		.uleb128 0x2116
 2298 01a9 19       		.uleb128 0x19
 2299 01aa 01       		.uleb128 0x1
 2300 01ab 13       		.uleb128 0x13
 2301 01ac 00       		.byte	0
 2302 01ad 00       		.byte	0
 2303 01ae 1A       		.uleb128 0x1a
 2304 01af 35       		.uleb128 0x35
 2305 01b0 00       		.byte	0
 2306 01b1 49       		.uleb128 0x49
 2307 01b2 13       		.uleb128 0x13
 2308 01b3 00       		.byte	0
 2309 01b4 00       		.byte	0
 2310 01b5 1B       		.uleb128 0x1b
 2311 01b6 34       		.uleb128 0x34
 2312 01b7 00       		.byte	0
 2313 01b8 03       		.uleb128 0x3
 2314 01b9 0E       		.uleb128 0xe
 2315 01ba 3A       		.uleb128 0x3a
 2316 01bb 0B       		.uleb128 0xb
 2317 01bc 3B       		.uleb128 0x3b
 2318 01bd 05       		.uleb128 0x5
 2319 01be 49       		.uleb128 0x49
 2320 01bf 13       		.uleb128 0x13
 2321 01c0 3F       		.uleb128 0x3f
 2322 01c1 19       		.uleb128 0x19
 2323 01c2 3C       		.uleb128 0x3c
 2324 01c3 19       		.uleb128 0x19
 2325 01c4 00       		.byte	0
 2326 01c5 00       		.byte	0
 2327 01c6 1C       		.uleb128 0x1c
 2328 01c7 34       		.uleb128 0x34
 2329 01c8 00       		.byte	0
 2330 01c9 03       		.uleb128 0x3
 2331 01ca 08       		.uleb128 0x8
 2332 01cb 3A       		.uleb128 0x3a
 2333 01cc 0B       		.uleb128 0xb
 2334 01cd 3B       		.uleb128 0x3b
 2335 01ce 0B       		.uleb128 0xb
 2336 01cf 49       		.uleb128 0x49
 2337 01d0 13       		.uleb128 0x13
 2338 01d1 3F       		.uleb128 0x3f
 2339 01d2 19       		.uleb128 0x19
 2340 01d3 02       		.uleb128 0x2
 2341 01d4 18       		.uleb128 0x18
 2342 01d5 00       		.byte	0
 2343 01d6 00       		.byte	0
 2344 01d7 1D       		.uleb128 0x1d
 2345 01d8 34       		.uleb128 0x34
 2346 01d9 00       		.byte	0
 2347 01da 03       		.uleb128 0x3
 2348 01db 0E       		.uleb128 0xe
 2349 01dc 3A       		.uleb128 0x3a
 2350 01dd 0B       		.uleb128 0xb
 2351 01de 3B       		.uleb128 0x3b
 2352 01df 0B       		.uleb128 0xb
 2353 01e0 49       		.uleb128 0x49
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 51


 2354 01e1 13       		.uleb128 0x13
 2355 01e2 3F       		.uleb128 0x3f
 2356 01e3 19       		.uleb128 0x19
 2357 01e4 02       		.uleb128 0x2
 2358 01e5 18       		.uleb128 0x18
 2359 01e6 00       		.byte	0
 2360 01e7 00       		.byte	0
 2361 01e8 1E       		.uleb128 0x1e
 2362 01e9 21       		.uleb128 0x21
 2363 01ea 00       		.byte	0
 2364 01eb 49       		.uleb128 0x49
 2365 01ec 13       		.uleb128 0x13
 2366 01ed 2F       		.uleb128 0x2f
 2367 01ee 0B       		.uleb128 0xb
 2368 01ef 00       		.byte	0
 2369 01f0 00       		.byte	0
 2370 01f1 00       		.byte	0
 2371              		.section	.debug_aranges,"",%progbits
 2372 0000 8C000000 		.4byte	0x8c
 2373 0004 0200     		.2byte	0x2
 2374 0006 00000000 		.4byte	.Ldebug_info0
 2375 000a 04       		.byte	0x4
 2376 000b 00       		.byte	0
 2377 000c 0000     		.2byte	0
 2378 000e 0000     		.2byte	0
 2379 0010 00000000 		.4byte	.LFB64
 2380 0014 14000000 		.4byte	.LFE64-.LFB64
 2381 0018 00000000 		.4byte	.LFB65
 2382 001c 14000000 		.4byte	.LFE65-.LFB65
 2383 0020 00000000 		.4byte	.LFB66
 2384 0024 14000000 		.4byte	.LFE66-.LFB66
 2385 0028 00000000 		.4byte	.LFB67
 2386 002c 20000000 		.4byte	.LFE67-.LFB67
 2387 0030 00000000 		.4byte	.LFB68
 2388 0034 20000000 		.4byte	.LFE68-.LFB68
 2389 0038 00000000 		.4byte	.LFB69
 2390 003c 90000000 		.4byte	.LFE69-.LFB69
 2391 0040 00000000 		.4byte	.LFB70
 2392 0044 0C000000 		.4byte	.LFE70-.LFB70
 2393 0048 00000000 		.4byte	.LFB71
 2394 004c C0000000 		.4byte	.LFE71-.LFB71
 2395 0050 00000000 		.4byte	.LFB72
 2396 0054 2C000000 		.4byte	.LFE72-.LFB72
 2397 0058 00000000 		.4byte	.LFB73
 2398 005c 0C000000 		.4byte	.LFE73-.LFB73
 2399 0060 00000000 		.4byte	.LFB74
 2400 0064 BC000000 		.4byte	.LFE74-.LFB74
 2401 0068 00000000 		.4byte	.LFB75
 2402 006c 54000000 		.4byte	.LFE75-.LFB75
 2403 0070 00000000 		.4byte	.LFB76
 2404 0074 3E000000 		.4byte	.LFE76-.LFB76
 2405 0078 00000000 		.4byte	.LFB77
 2406 007c 26000000 		.4byte	.LFE77-.LFB77
 2407 0080 00000000 		.4byte	.LFB78
 2408 0084 C8000000 		.4byte	.LFE78-.LFB78
 2409 0088 00000000 		.4byte	0
 2410 008c 00000000 		.4byte	0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 52


 2411              		.section	.debug_ranges,"",%progbits
 2412              	.Ldebug_ranges0:
 2413 0000 00000000 		.4byte	.LFB64
 2414 0004 14000000 		.4byte	.LFE64
 2415 0008 00000000 		.4byte	.LFB65
 2416 000c 14000000 		.4byte	.LFE65
 2417 0010 00000000 		.4byte	.LFB66
 2418 0014 14000000 		.4byte	.LFE66
 2419 0018 00000000 		.4byte	.LFB67
 2420 001c 20000000 		.4byte	.LFE67
 2421 0020 00000000 		.4byte	.LFB68
 2422 0024 20000000 		.4byte	.LFE68
 2423 0028 00000000 		.4byte	.LFB69
 2424 002c 90000000 		.4byte	.LFE69
 2425 0030 00000000 		.4byte	.LFB70
 2426 0034 0C000000 		.4byte	.LFE70
 2427 0038 00000000 		.4byte	.LFB71
 2428 003c C0000000 		.4byte	.LFE71
 2429 0040 00000000 		.4byte	.LFB72
 2430 0044 2C000000 		.4byte	.LFE72
 2431 0048 00000000 		.4byte	.LFB73
 2432 004c 0C000000 		.4byte	.LFE73
 2433 0050 00000000 		.4byte	.LFB74
 2434 0054 BC000000 		.4byte	.LFE74
 2435 0058 00000000 		.4byte	.LFB75
 2436 005c 54000000 		.4byte	.LFE75
 2437 0060 00000000 		.4byte	.LFB76
 2438 0064 3E000000 		.4byte	.LFE76
 2439 0068 00000000 		.4byte	.LFB77
 2440 006c 26000000 		.4byte	.LFE77
 2441 0070 00000000 		.4byte	.LFB78
 2442 0074 C8000000 		.4byte	.LFE78
 2443 0078 00000000 		.4byte	0
 2444 007c 00000000 		.4byte	0
 2445              		.section	.debug_line,"",%progbits
 2446              	.Ldebug_line0:
 2447 0000 08030000 		.section	.debug_str,"MS",%progbits,1
 2447      02005601 
 2447      00000201 
 2447      FB0E0D00 
 2447      01010101 
 2448              	.LASF39:
 2449 0000 6D6F746F 		.ascii	"motorStop\000"
 2449      7253746F 
 2449      7000
 2450              	.LASF54:
 2451 000a 6973725F 		.ascii	"isr_TS_Interrupt_sample\000"
 2451      54535F49 
 2451      6E746572 
 2451      72757074 
 2451      5F73616D 
 2452              	.LASF68:
 2453 0022 74735F65 		.ascii	"ts_enc\000"
 2453      6E6300
 2454              	.LASF19:
 2455 0029 646F7562 		.ascii	"double\000"
 2455      6C6500
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 53


 2456              	.LASF77:
 2457 0030 666C6167 		.ascii	"flag_packet\000"
 2457      5F706163 
 2457      6B657400 
 2458              	.LASF61:
 2459 003c 75736250 		.ascii	"usbPutChar\000"
 2459      75744368 
 2459      617200
 2460              	.LASF90:
 2461 0047 636F756E 		.ascii	"counteoc\000"
 2461      74656F63 
 2461      00
 2462              	.LASF42:
 2463 0050 6973725F 		.ascii	"isr_eoc_Interrupt_test\000"
 2463      656F635F 
 2463      496E7465 
 2463      72727570 
 2463      745F7465 
 2464              	.LASF38:
 2465 0067 6D6F746F 		.ascii	"motorGoBackwards\000"
 2465      72476F42 
 2465      61636B77 
 2465      61726473 
 2465      00
 2466              	.LASF87:
 2467 0078 63686563 		.ascii	"checkLight\000"
 2467      6B4C6967 
 2467      687400
 2468              	.LASF33:
 2469 0083 67325F78 		.ascii	"g2_xpos\000"
 2469      706F7300 
 2470              	.LASF2:
 2471 008b 73686F72 		.ascii	"short int\000"
 2471      7420696E 
 2471      7400
 2472              	.LASF85:
 2473 0095 73797374 		.ascii	"system_state\000"
 2473      656D5F73 
 2473      74617465 
 2473      00
 2474              	.LASF10:
 2475 00a2 73697A65 		.ascii	"sizetype\000"
 2475      74797065 
 2475      00
 2476              	.LASF84:
 2477 00ab 75736242 		.ascii	"usbBuffer\000"
 2477      75666665 
 2477      7200
 2478              	.LASF92:
 2479 00b5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2479      43313120 
 2479      352E342E 
 2479      31203230 
 2479      31363036 
 2480 00e8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2480      20726576 
 2480      6973696F 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 54


 2480      6E203233 
 2480      37373135 
 2481 011b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2481      66756E63 
 2481      74696F6E 
 2481      2D736563 
 2481      74696F6E 
 2482              	.LASF55:
 2483 0143 6D61696E 		.ascii	"main\000"
 2483      00
 2484              	.LASF43:
 2485 0148 76616C75 		.ascii	"valueQ3\000"
 2485      65513300 
 2486              	.LASF44:
 2487 0150 76616C75 		.ascii	"valueQ4\000"
 2487      65513400 
 2488              	.LASF45:
 2489 0158 76616C75 		.ascii	"valueQ5\000"
 2489      65513500 
 2490              	.LASF52:
 2491 0160 6D6F746F 		.ascii	"motorRun\000"
 2491      7252756E 
 2491      00
 2492              	.LASF88:
 2493 0169 6C696768 		.ascii	"lightState\000"
 2493      74537461 
 2493      746500
 2494              	.LASF15:
 2495 0174 75696E74 		.ascii	"uint16\000"
 2495      313600
 2496              	.LASF21:
 2497 017b 696E6465 		.ascii	"index\000"
 2497      7800
 2498              	.LASF17:
 2499 0181 696E7431 		.ascii	"int16\000"
 2499      3600
 2500              	.LASF14:
 2501 0187 75696E74 		.ascii	"uint8\000"
 2501      3800
 2502              	.LASF94:
 2503 018d 5C5C6669 		.ascii	"\\\\files.auckland.ac.nz\\myhome\\Documents\\GitHub"
 2503      6C65732E 
 2503      6175636B 
 2503      6C616E64 
 2503      2E61632E 
 2504 01bb 5C70726F 		.ascii	"\\project-project_group_11\\COMPSYS 301\\psoc stude"
 2504      6A656374 
 2504      2D70726F 
 2504      6A656374 
 2504      5F67726F 
 2505 01eb 6E742070 		.ascii	"nt pack\\psoc student pack\\psoc_code_base\\CS301_C"
 2505      61636B5C 
 2505      70736F63 
 2505      20737475 
 2505      64656E74 
 2506 021b 6C617373 		.ascii	"lass.cydsn\000"
 2506      2E637964 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 55


 2506      736E00
 2507              	.LASF86:
 2508 0226 6368616E 		.ascii	"changeMotor\000"
 2508      67654D6F 
 2508      746F7200 
 2509              	.LASF82:
 2510 0232 6C696E65 		.ascii	"line\000"
 2510      00
 2511              	.LASF18:
 2512 0237 666C6F61 		.ascii	"float\000"
 2512      7400
 2513              	.LASF53:
 2514 023d 6973725F 		.ascii	"isr_motor_interrupt_speed\000"
 2514      6D6F746F 
 2514      725F696E 
 2514      74657272 
 2514      7570745F 
 2515              	.LASF6:
 2516 0257 6C6F6E67 		.ascii	"long long int\000"
 2516      206C6F6E 
 2516      6720696E 
 2516      7400
 2517              	.LASF60:
 2518 0265 75736250 		.ascii	"usbPutString\000"
 2518      75745374 
 2518      72696E67 
 2518      00
 2519              	.LASF16:
 2520 0272 696E7438 		.ascii	"int8\000"
 2520      00
 2521              	.LASF73:
 2522 0277 666C6167 		.ascii	"flag_ts_update\000"
 2522      5F74735F 
 2522      75706461 
 2522      746500
 2523              	.LASF34:
 2524 0286 67325F79 		.ascii	"g2_ypos\000"
 2524      706F7300 
 2525              	.LASF28:
 2526 028e 67305F64 		.ascii	"g0_direction\000"
 2526      69726563 
 2526      74696F6E 
 2526      00
 2527              	.LASF25:
 2528 029b 67305F78 		.ascii	"g0_xpos\000"
 2528      706F7300 
 2529              	.LASF4:
 2530 02a3 6C6F6E67 		.ascii	"long int\000"
 2530      20696E74 
 2530      00
 2531              	.LASF46:
 2532 02ac 62656769 		.ascii	"beginningCountMotor1\000"
 2532      6E6E696E 
 2532      67436F75 
 2532      6E744D6F 
 2532      746F7231 
 2533              	.LASF47:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 56


 2534 02c1 62656769 		.ascii	"beginningCountMotor2\000"
 2534      6E6E696E 
 2534      67436F75 
 2534      6E744D6F 
 2534      746F7232 
 2535              	.LASF50:
 2536 02d6 6D6F746F 		.ascii	"motor1String\000"
 2536      72315374 
 2536      72696E67 
 2536      00
 2537              	.LASF91:
 2538 02e3 70726F63 		.ascii	"processSensors\000"
 2538      65737353 
 2538      656E736F 
 2538      727300
 2539              	.LASF75:
 2540 02f2 666C6167 		.ascii	"flag_ts_display\000"
 2540      5F74735F 
 2540      64697370 
 2540      6C617900 
 2541              	.LASF76:
 2542 0302 666C6167 		.ascii	"flag_rx\000"
 2542      5F727800 
 2543              	.LASF49:
 2544 030a 656E6443 		.ascii	"endCountMotor1\000"
 2544      6F756E74 
 2544      4D6F746F 
 2544      723100
 2545              	.LASF48:
 2546 0319 656E6443 		.ascii	"endCountMotor2\000"
 2546      6F756E74 
 2546      4D6F746F 
 2546      723200
 2547              	.LASF9:
 2548 0328 6C6F6E67 		.ascii	"long double\000"
 2548      20646F75 
 2548      626C6500 
 2549              	.LASF83:
 2550 0334 656E7472 		.ascii	"entry\000"
 2550      7900
 2551              	.LASF1:
 2552 033a 756E7369 		.ascii	"unsigned char\000"
 2552      676E6564 
 2552      20636861 
 2552      7200
 2553              	.LASF89:
 2554 0348 6C696768 		.ascii	"lightDetectedFront\000"
 2554      74446574 
 2554      65637465 
 2554      6446726F 
 2554      6E7400
 2555              	.LASF27:
 2556 035b 67305F73 		.ascii	"g0_speed\000"
 2556      70656564 
 2556      00
 2557              	.LASF79:
 2558 0364 64617461 		.ascii	"dataready_flag\000"
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 57


 2558      72656164 
 2558      795F666C 
 2558      616700
 2559              	.LASF0:
 2560 0373 7369676E 		.ascii	"signed char\000"
 2560      65642063 
 2560      68617200 
 2561              	.LASF7:
 2562 037f 6C6F6E67 		.ascii	"long long unsigned int\000"
 2562      206C6F6E 
 2562      6720756E 
 2562      7369676E 
 2562      65642069 
 2563              	.LASF8:
 2564 0396 756E7369 		.ascii	"unsigned int\000"
 2564      676E6564 
 2564      20696E74 
 2564      00
 2565              	.LASF78:
 2566 03a3 666C6167 		.ascii	"flag_KB_string\000"
 2566      5F4B425F 
 2566      73747269 
 2566      6E6700
 2567              	.LASF65:
 2568 03b2 75736242 		.ascii	"usbBufCount\000"
 2568      7566436F 
 2568      756E7400 
 2569              	.LASF35:
 2570 03be 67325F73 		.ascii	"g2_speed\000"
 2570      70656564 
 2570      00
 2571              	.LASF29:
 2572 03c7 67315F78 		.ascii	"g1_xpos\000"
 2572      706F7300 
 2573              	.LASF56:
 2574 03cf 6F706572 		.ascii	"operation\000"
 2574      6174696F 
 2574      6E00
 2575              	.LASF95:
 2576 03d9 64617461 		.ascii	"data_main\000"
 2576      5F6D6169 
 2576      6E00
 2577              	.LASF59:
 2578 03e3 62696E61 		.ascii	"binaryIndex\000"
 2578      7279496E 
 2578      64657800 
 2579              	.LASF11:
 2580 03ef 63686172 		.ascii	"char\000"
 2580      00
 2581              	.LASF22:
 2582 03f4 726F626F 		.ascii	"robot_xpos\000"
 2582      745F7870 
 2582      6F7300
 2583              	.LASF13:
 2584 03ff 696E7433 		.ascii	"int32_t\000"
 2584      325F7400 
 2585              	.LASF30:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 58


 2586 0407 67315F79 		.ascii	"g1_ypos\000"
 2586      706F7300 
 2587              	.LASF36:
 2588 040f 67325F64 		.ascii	"g2_direction\000"
 2588      69726563 
 2588      74696F6E 
 2588      00
 2589              	.LASF3:
 2590 041c 73686F72 		.ascii	"short unsigned int\000"
 2590      7420756E 
 2590      7369676E 
 2590      65642069 
 2590      6E7400
 2591              	.LASF31:
 2592 042f 67315F73 		.ascii	"g1_speed\000"
 2592      70656564 
 2592      00
 2593              	.LASF81:
 2594 0438 64697370 		.ascii	"displaystring\000"
 2594      6C617973 
 2594      7472696E 
 2594      6700
 2595              	.LASF74:
 2596 0446 666C6167 		.ascii	"flag_ts_speed\000"
 2596      5F74735F 
 2596      73706565 
 2596      6400
 2597              	.LASF57:
 2598 0454 636F6E76 		.ascii	"convertSensorBinary\000"
 2598      65727453 
 2598      656E736F 
 2598      7242696E 
 2598      61727900 
 2599              	.LASF93:
 2600 0468 6D61696E 		.ascii	"main.c\000"
 2600      2E6300
 2601              	.LASF5:
 2602 046f 6C6F6E67 		.ascii	"long unsigned int\000"
 2602      20756E73 
 2602      69676E65 
 2602      6420696E 
 2602      7400
 2603              	.LASF64:
 2604 0481 75736253 		.ascii	"usbStarted\000"
 2604      74617274 
 2604      656400
 2605              	.LASF70:
 2606 048c 74735F73 		.ascii	"ts_speed\000"
 2606      70656564 
 2606      00
 2607              	.LASF66:
 2608 0495 636F756E 		.ascii	"count\000"
 2608      7400
 2609              	.LASF72:
 2610 049b 666C6167 		.ascii	"flag_ts_enc\000"
 2610      5F74735F 
 2610      656E6300 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 59


 2611              	.LASF12:
 2612 04a7 5F5F696E 		.ascii	"__int32_t\000"
 2612      7433325F 
 2612      7400
 2613              	.LASF40:
 2614 04b1 6D6F746F 		.ascii	"motorTurnLeft\000"
 2614      72547572 
 2614      6E4C6566 
 2614      7400
 2615              	.LASF37:
 2616 04bf 6D6F746F 		.ascii	"motorGoStraight\000"
 2616      72476F53 
 2616      74726169 
 2616      67687400 
 2617              	.LASF62:
 2618 04cf 6D6F746F 		.ascii	"motorCount\000"
 2618      72436F75 
 2618      6E7400
 2619              	.LASF26:
 2620 04da 67305F79 		.ascii	"g0_ypos\000"
 2620      706F7300 
 2621              	.LASF71:
 2622 04e2 74735F64 		.ascii	"ts_display\000"
 2622      6973706C 
 2622      617900
 2623              	.LASF69:
 2624 04ed 74735F75 		.ascii	"ts_update\000"
 2624      70646174 
 2624      6500
 2625              	.LASF63:
 2626 04f7 68616E64 		.ascii	"handle_usb\000"
 2626      6C655F75 
 2626      736200
 2627              	.LASF80:
 2628 0502 666C6167 		.ascii	"flag_rf_transmission_active\000"
 2628      5F72665F 
 2628      7472616E 
 2628      736D6973 
 2628      73696F6E 
 2629              	.LASF23:
 2630 051e 726F626F 		.ascii	"robot_ypos\000"
 2630      745F7970 
 2630      6F7300
 2631              	.LASF67:
 2632 0529 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2632      52784275 
 2632      66666572 
 2632      00
 2633              	.LASF58:
 2634 0536 76616C75 		.ascii	"value\000"
 2634      6500
 2635              	.LASF51:
 2636 053c 6D6F746F 		.ascii	"motor2String\000"
 2636      72325374 
 2636      72696E67 
 2636      00
 2637              	.LASF32:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccQ5aNj3.s 			page 60


 2638 0549 67315F64 		.ascii	"g1_direction\000"
 2638      69726563 
 2638      74696F6E 
 2638      00
 2639              	.LASF41:
 2640 0556 6D6F746F 		.ascii	"motorTurnRight\000"
 2640      72547572 
 2640      6E526967 
 2640      687400
 2641              	.LASF20:
 2642 0565 72737369 		.ascii	"rssi\000"
 2642      00
 2643              	.LASF24:
 2644 056a 726F626F 		.ascii	"robot_orientation\000"
 2644      745F6F72 
 2644      69656E74 
 2644      6174696F 
 2644      6E00
 2645              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
