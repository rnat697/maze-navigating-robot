ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.section	.text.motorGoStraight,"ax",%progbits
 107              		.align	2
 108              		.global	motorGoStraight
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 3


 109              		.thumb
 110              		.thumb_func
 111              		.type	motorGoStraight, %function
 112              	motorGoStraight:
 113              	.LFB64:
 114              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <stdbool.h>
  19:main.c        **** #include <string.h>
  20:main.c        **** #include <stdlib.h>
  21:main.c        **** #include <math.h>
  22:main.c        **** #include <project.h>
  23:main.c        **** //* ========================================
  24:main.c        **** #include "defines.h"
  25:main.c        **** #include "vars.h"
  26:main.c        **** #include "isr_eoc.h"
  27:main.c        **** //* ========================================
  28:main.c        **** void usbPutString(char *s);
  29:main.c        **** void usbPutChar(char c);
  30:main.c        **** void handle_usb();
  31:main.c        **** //* ========================================
  32:main.c        **** 
  33:main.c        **** 
  34:main.c        **** #define rota180 500 //turns
  35:main.c        **** #define rota90Left 250
  36:main.c        **** 
  37:main.c        **** #define moveSlow 50
  38:main.c        **** #define travelDist 326 // how
  39:main.c        **** #define Q1CHANNEL 3
  40:main.c        **** #define Q2CHANNEL 5 
  41:main.c        **** #define Q3CHANNEL 0
  42:main.c        **** #define Q4CHANNEL 1
  43:main.c        **** #define Q5CHANNEL 2
  44:main.c        **** #define Q6CHANNEL 4
  45:main.c        **** 
  46:main.c        **** CY_ISR_PROTO(isr_eoc_Interrupt_test);
  47:main.c        **** CY_ISR_PROTO(isr_motor_interrupt_speed);
  48:main.c        **** CY_ISR_PROTO(isr_TS_interrupt_sample);
  49:main.c        **** int convertSensorBinary();
  50:main.c        **** 
  51:main.c        **** void motorGoStraight(){
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 4


 115              		.loc 1 51 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119 0000 80B5     		push	{r7, lr}
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 7, -8
 122              		.cfi_offset 14, -4
 123 0002 00AF     		add	r7, sp, #0
 124              		.cfi_def_cfa_register 7
  52:main.c        ****     ////PWM_1_WriteCompare(150); // left wheel near power switch is stronker than right wheel //150
  53:main.c        ****     //M1_IN2_Write(0);
  54:main.c        ****     PWM_1_WriteCompare(180);//200
 125              		.loc 1 54 0
 126 0004 B420     		movs	r0, #180
 127 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  55:main.c        ****     PWM_2_WriteCompare(72); //50
 128              		.loc 1 55 0
 129 000a 4820     		movs	r0, #72
 130 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  56:main.c        **** }
 131              		.loc 1 56 0
 132 0010 00BF     		nop
 133 0012 80BD     		pop	{r7, pc}
 134              		.cfi_endproc
 135              	.LFE64:
 136              		.size	motorGoStraight, .-motorGoStraight
 137              		.section	.text.motorGoBackwards,"ax",%progbits
 138              		.align	2
 139              		.global	motorGoBackwards
 140              		.thumb
 141              		.thumb_func
 142              		.type	motorGoBackwards, %function
 143              	motorGoBackwards:
 144              	.LFB65:
  57:main.c        **** void motorGoBackwards(){
 145              		.loc 1 57 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 1, uses_anonymous_args = 0
 149 0000 80B5     		push	{r7, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 00AF     		add	r7, sp, #0
 154              		.cfi_def_cfa_register 7
  58:main.c        ****     
  59:main.c        ****     //M1_IN2_Write(0);
  60:main.c        ****     PWM_1_WriteCompare(55); //55
 155              		.loc 1 60 0
 156 0004 3720     		movs	r0, #55
 157 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  61:main.c        ****     PWM_2_WriteCompare(201); //201
 158              		.loc 1 61 0
 159 000a C920     		movs	r0, #201
 160 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  62:main.c        **** }
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 5


 161              		.loc 1 62 0
 162 0010 00BF     		nop
 163 0012 80BD     		pop	{r7, pc}
 164              		.cfi_endproc
 165              	.LFE65:
 166              		.size	motorGoBackwards, .-motorGoBackwards
 167              		.section	.text.motorStop,"ax",%progbits
 168              		.align	2
 169              		.global	motorStop
 170              		.thumb
 171              		.thumb_func
 172              		.type	motorStop, %function
 173              	motorStop:
 174              	.LFB66:
  63:main.c        **** void motorStop(){
 175              		.loc 1 63 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 1, uses_anonymous_args = 0
 179 0000 80B5     		push	{r7, lr}
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 7, -8
 182              		.cfi_offset 14, -4
 183 0002 00AF     		add	r7, sp, #0
 184              		.cfi_def_cfa_register 7
  64:main.c        ****     PWM_1_WriteCompare(127); 
 185              		.loc 1 64 0
 186 0004 7F20     		movs	r0, #127
 187 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  65:main.c        ****     PWM_2_WriteCompare(127);
 188              		.loc 1 65 0
 189 000a 7F20     		movs	r0, #127
 190 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  66:main.c        **** }
 191              		.loc 1 66 0
 192 0010 00BF     		nop
 193 0012 80BD     		pop	{r7, pc}
 194              		.cfi_endproc
 195              	.LFE66:
 196              		.size	motorStop, .-motorStop
 197              		.section	.text.motorTurnLeft,"ax",%progbits
 198              		.align	2
 199              		.global	motorTurnLeft
 200              		.thumb
 201              		.thumb_func
 202              		.type	motorTurnLeft, %function
 203              	motorTurnLeft:
 204              	.LFB67:
  67:main.c        **** 
  68:main.c        **** void motorTurnLeft(uint8 x){
 205              		.loc 1 68 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 8
 208              		@ frame_needed = 1, uses_anonymous_args = 0
 209 0000 80B5     		push	{r7, lr}
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 7, -8
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 6


 212              		.cfi_offset 14, -4
 213 0002 82B0     		sub	sp, sp, #8
 214              		.cfi_def_cfa_offset 16
 215 0004 00AF     		add	r7, sp, #0
 216              		.cfi_def_cfa_register 7
 217 0006 0346     		mov	r3, r0
 218 0008 FB71     		strb	r3, [r7, #7]
  69:main.c        ****     // TO DO
  70:main.c        ****     
  71:main.c        ****     PWM_1_WriteCompare(127); //55
 219              		.loc 1 71 0
 220 000a 7F20     		movs	r0, #127
 221 000c FFF7FEFF 		bl	PWM_1_WriteCompare
  72:main.c        ****     PWM_2_WriteCompare(x); //201
 222              		.loc 1 72 0
 223 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 224 0012 1846     		mov	r0, r3
 225 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
  73:main.c        ****     
  74:main.c        ****     
  75:main.c        ****     
  76:main.c        ****     //255
  77:main.c        **** }
 226              		.loc 1 77 0
 227 0018 00BF     		nop
 228 001a 0837     		adds	r7, r7, #8
 229              		.cfi_def_cfa_offset 8
 230 001c BD46     		mov	sp, r7
 231              		.cfi_def_cfa_register 13
 232              		@ sp needed
 233 001e 80BD     		pop	{r7, pc}
 234              		.cfi_endproc
 235              	.LFE67:
 236              		.size	motorTurnLeft, .-motorTurnLeft
 237              		.section	.text.motorTurnRight,"ax",%progbits
 238              		.align	2
 239              		.global	motorTurnRight
 240              		.thumb
 241              		.thumb_func
 242              		.type	motorTurnRight, %function
 243              	motorTurnRight:
 244              	.LFB68:
  78:main.c        **** 
  79:main.c        **** void motorTurnRight(int x){
 245              		.loc 1 79 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 8
 248              		@ frame_needed = 1, uses_anonymous_args = 0
 249 0000 80B5     		push	{r7, lr}
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 7, -8
 252              		.cfi_offset 14, -4
 253 0002 82B0     		sub	sp, sp, #8
 254              		.cfi_def_cfa_offset 16
 255 0004 00AF     		add	r7, sp, #0
 256              		.cfi_def_cfa_register 7
 257 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 7


  80:main.c        ****     // TO DO
  81:main.c        ****     
  82:main.c        ****     PWM_1_WriteCompare(x);//200
 258              		.loc 1 82 0
 259 0008 7B68     		ldr	r3, [r7, #4]
 260 000a DBB2     		uxtb	r3, r3
 261 000c 1846     		mov	r0, r3
 262 000e FFF7FEFF 		bl	PWM_1_WriteCompare
  83:main.c        ****     PWM_2_WriteCompare(127); //50
 263              		.loc 1 83 0
 264 0012 7F20     		movs	r0, #127
 265 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
  84:main.c        **** 
  85:main.c        **** }
 266              		.loc 1 85 0
 267 0018 00BF     		nop
 268 001a 0837     		adds	r7, r7, #8
 269              		.cfi_def_cfa_offset 8
 270 001c BD46     		mov	sp, r7
 271              		.cfi_def_cfa_register 13
 272              		@ sp needed
 273 001e 80BD     		pop	{r7, pc}
 274              		.cfi_endproc
 275              	.LFE68:
 276              		.size	motorTurnRight, .-motorTurnRight
 277              		.global	changeMotor
 278              		.bss
 279 0012 0000     		.align	2
 280              		.type	changeMotor, %object
 281              		.size	changeMotor, 4
 282              	changeMotor:
 283 0014 00000000 		.space	4
 284              		.global	checkLight
 285              		.align	2
 286              		.type	checkLight, %object
 287              		.size	checkLight, 4
 288              	checkLight:
 289 0018 00000000 		.space	4
 290              		.global	lightState
 291              		.align	2
 292              		.type	lightState, %object
 293              		.size	lightState, 4
 294              	lightState:
 295 001c 00000000 		.space	4
 296              		.global	lightDetectedFront
 297              		.align	2
 298              		.type	lightDetectedFront, %object
 299              		.size	lightDetectedFront, 12
 300              	lightDetectedFront:
 301 0020 00000000 		.space	12
 301      00000000 
 301      00000000 
 302              		.global	lightDetectedBack
 303              		.align	2
 304              		.type	lightDetectedBack, %object
 305              		.size	lightDetectedBack, 12
 306              	lightDetectedBack:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 8


 307 002c 00000000 		.space	12
 307      00000000 
 307      00000000 
 308              		.global	counteoc
 309              		.align	2
 310              		.type	counteoc, %object
 311              		.size	counteoc, 4
 312              	counteoc:
 313 0038 00000000 		.space	4
 314              		.global	processSensors
 315              		.align	2
 316              		.type	processSensors, %object
 317              		.size	processSensors, 4
 318              	processSensors:
 319 003c 00000000 		.space	4
 320              		.global	middle
 321              		.align	2
 322              		.type	middle, %object
 323              		.size	middle, 4
 324              	middle:
 325 0040 00000000 		.space	4
 326              		.section	.text.isr_eoc_Interrupt_test,"ax",%progbits
 327              		.align	2
 328              		.global	isr_eoc_Interrupt_test
 329              		.thumb
 330              		.thumb_func
 331              		.type	isr_eoc_Interrupt_test, %function
 332              	isr_eoc_Interrupt_test:
 333              	.LFB69:
  86:main.c        **** int changeMotor=0;
  87:main.c        **** int checkLight =0;
  88:main.c        **** int lightState=0;
  89:main.c        **** volatile int lightDetectedFront[3] = {0,0,0};
  90:main.c        **** volatile int lightDetectedBack[3] = {0,0,0};
  91:main.c        **** volatile int counteoc = 0;
  92:main.c        **** volatile int processSensors = 0;
  93:main.c        **** volatile int middle =0;
  94:main.c        **** CY_ISR(isr_eoc_Interrupt_test)
  95:main.c        **** {
 334              		.loc 1 95 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 16
 337              		@ frame_needed = 1, uses_anonymous_args = 0
 338 0000 80B5     		push	{r7, lr}
 339              		.cfi_def_cfa_offset 8
 340              		.cfi_offset 7, -8
 341              		.cfi_offset 14, -4
 342 0002 84B0     		sub	sp, sp, #16
 343              		.cfi_def_cfa_offset 24
 344 0004 00AF     		add	r7, sp, #0
 345              		.cfi_def_cfa_register 7
  96:main.c        ****     #ifdef isr_test_INTERRUPT_INTERRUPT_CALLBACK
  97:main.c        ****         isr_TS_Interrupt_InterruptCallback();
  98:main.c        ****     #endif /* isr_eoc_INTERRUPT_INTERRUPT_CALLBACK */ 
  99:main.c        **** 
 100:main.c        ****     /*  Place your Interrupt code here. */
 101:main.c        ****     /* `#START isr_eoc_Interrupt` */
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 9


 102:main.c        ****     int16 valueQ3 =  ADC_GetResult16(Q3CHANNEL);
 346              		.loc 1 102 0
 347 0006 0020     		movs	r0, #0
 348 0008 FFF7FEFF 		bl	ADC_GetResult16
 349 000c 0346     		mov	r3, r0
 350 000e FB81     		strh	r3, [r7, #14]	@ movhi
 103:main.c        ****     int16 valueQ4 =  ADC_GetResult16(Q4CHANNEL);
 351              		.loc 1 103 0
 352 0010 0120     		movs	r0, #1
 353 0012 FFF7FEFF 		bl	ADC_GetResult16
 354 0016 0346     		mov	r3, r0
 355 0018 BB81     		strh	r3, [r7, #12]	@ movhi
 104:main.c        ****     int16 valueQ5 =  ADC_GetResult16(Q5CHANNEL);
 356              		.loc 1 104 0
 357 001a 0220     		movs	r0, #2
 358 001c FFF7FEFF 		bl	ADC_GetResult16
 359 0020 0346     		mov	r3, r0
 360 0022 7B81     		strh	r3, [r7, #10]	@ movhi
 105:main.c        ****     
 106:main.c        ****     int16 valueQ1 =  ADC_GetResult16(Q1CHANNEL);
 361              		.loc 1 106 0
 362 0024 0320     		movs	r0, #3
 363 0026 FFF7FEFF 		bl	ADC_GetResult16
 364 002a 0346     		mov	r3, r0
 365 002c 3B81     		strh	r3, [r7, #8]	@ movhi
 107:main.c        ****     int16 valueQ2 =  ADC_GetResult16(Q2CHANNEL);
 366              		.loc 1 107 0
 367 002e 0520     		movs	r0, #5
 368 0030 FFF7FEFF 		bl	ADC_GetResult16
 369 0034 0346     		mov	r3, r0
 370 0036 FB80     		strh	r3, [r7, #6]	@ movhi
 108:main.c        ****     int16 valueQ6 =  ADC_GetResult16(Q6CHANNEL);
 371              		.loc 1 108 0
 372 0038 0420     		movs	r0, #4
 373 003a FFF7FEFF 		bl	ADC_GetResult16
 374 003e 0346     		mov	r3, r0
 375 0040 BB80     		strh	r3, [r7, #4]	@ movhi
 109:main.c        ****     
 110:main.c        ****     // get value from ADC then convert to DAC to send to external LEDs
 111:main.c        ****     if (counteoc < 10) {
 376              		.loc 1 111 0
 377 0042 1A4B     		ldr	r3, .L14
 378 0044 1B68     		ldr	r3, [r3]
 379 0046 092B     		cmp	r3, #9
 380 0048 29DC     		bgt	.L7
 112:main.c        ****         //2211
 113:main.c        ****         if (valueQ3 >= 2211) {
 381              		.loc 1 113 0
 382 004a B7F90E30 		ldrsh	r3, [r7, #14]
 383 004e 40F6A202 		movw	r2, #2210
 384 0052 9342     		cmp	r3, r2
 385 0054 02DD     		ble	.L8
 114:main.c        ****         //set flag for white light detected
 115:main.c        ****         lightDetectedFront[0] = 1;
 386              		.loc 1 115 0
 387 0056 164B     		ldr	r3, .L14+4
 388 0058 0122     		movs	r2, #1
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 10


 389 005a 1A60     		str	r2, [r3]
 390              	.L8:
 116:main.c        ****         }
 117:main.c        ****         if (valueQ4 >= 2211) {
 391              		.loc 1 117 0
 392 005c B7F90C30 		ldrsh	r3, [r7, #12]
 393 0060 40F6A202 		movw	r2, #2210
 394 0064 9342     		cmp	r3, r2
 395 0066 02DD     		ble	.L9
 118:main.c        ****         //set flag for white light detected
 119:main.c        ****         lightDetectedFront[1] = 1;
 396              		.loc 1 119 0
 397 0068 114B     		ldr	r3, .L14+4
 398 006a 0122     		movs	r2, #1
 399 006c 5A60     		str	r2, [r3, #4]
 400              	.L9:
 120:main.c        ****         }
 121:main.c        ****     
 122:main.c        ****         if (valueQ5 >= 2211) {
 401              		.loc 1 122 0
 402 006e B7F90A30 		ldrsh	r3, [r7, #10]
 403 0072 40F6A202 		movw	r2, #2210
 404 0076 9342     		cmp	r3, r2
 405 0078 02DD     		ble	.L10
 123:main.c        ****         //set flag for white light detected
 124:main.c        ****         lightDetectedFront[2] = 1;
 406              		.loc 1 124 0
 407 007a 0D4B     		ldr	r3, .L14+4
 408 007c 0122     		movs	r2, #1
 409 007e 9A60     		str	r2, [r3, #8]
 410              	.L10:
 125:main.c        ****         }
 126:main.c        ****         
 127:main.c        ****         if (valueQ1 >= 2211) {
 411              		.loc 1 127 0
 412 0080 B7F90830 		ldrsh	r3, [r7, #8]
 413 0084 40F6A202 		movw	r2, #2210
 414 0088 9342     		cmp	r3, r2
 415 008a 02DD     		ble	.L11
 128:main.c        ****         //set flag for white light detected
 129:main.c        ****             middle = 1;
 416              		.loc 1 129 0
 417 008c 094B     		ldr	r3, .L14+8
 418 008e 0122     		movs	r2, #1
 419 0090 1A60     		str	r2, [r3]
 420              	.L11:
 130:main.c        ****         }
 131:main.c        ****         
 132:main.c        ****         counteoc++;
 421              		.loc 1 132 0
 422 0092 064B     		ldr	r3, .L14
 423 0094 1B68     		ldr	r3, [r3]
 424 0096 0133     		adds	r3, r3, #1
 425 0098 044A     		ldr	r2, .L14
 426 009a 1360     		str	r3, [r2]
 133:main.c        ****     } else {
 134:main.c        ****         processSensors = 1;   
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 11


 135:main.c        ****        
 136:main.c        ****     }
 137:main.c        ****     /* `#END` */
 138:main.c        **** }
 427              		.loc 1 138 0
 428 009c 02E0     		b	.L13
 429              	.L7:
 134:main.c        ****        
 430              		.loc 1 134 0
 431 009e 064B     		ldr	r3, .L14+12
 432 00a0 0122     		movs	r2, #1
 433 00a2 1A60     		str	r2, [r3]
 434              	.L13:
 435              		.loc 1 138 0
 436 00a4 00BF     		nop
 437 00a6 1037     		adds	r7, r7, #16
 438              		.cfi_def_cfa_offset 8
 439 00a8 BD46     		mov	sp, r7
 440              		.cfi_def_cfa_register 13
 441              		@ sp needed
 442 00aa 80BD     		pop	{r7, pc}
 443              	.L15:
 444              		.align	2
 445              	.L14:
 446 00ac 00000000 		.word	counteoc
 447 00b0 00000000 		.word	lightDetectedFront
 448 00b4 00000000 		.word	middle
 449 00b8 00000000 		.word	processSensors
 450              		.cfi_endproc
 451              	.LFE69:
 452              		.size	isr_eoc_Interrupt_test, .-isr_eoc_Interrupt_test
 453              		.bss
 454              	count:
 455 0044 00       		.space	1
 456              		.section	.text.isr_motor_interrupt_speed,"ax",%progbits
 457              		.align	2
 458              		.global	isr_motor_interrupt_speed
 459              		.thumb
 460              		.thumb_func
 461              		.type	isr_motor_interrupt_speed, %function
 462              	isr_motor_interrupt_speed:
 463              	.LFB70:
 139:main.c        **** // NEED TO INCREASE/DECREASE SPEED TOO
 140:main.c        **** // AND IMPLEMENT LIGHT SENSOR THINGS
 141:main.c        **** volatile static int8 count;
 142:main.c        **** CY_ISR(isr_motor_interrupt_speed)
 143:main.c        **** {
 464              		.loc 1 143 0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 1, uses_anonymous_args = 0
 468              		@ link register save eliminated.
 469 0000 80B4     		push	{r7}
 470              		.cfi_def_cfa_offset 4
 471              		.cfi_offset 7, -4
 472 0002 00AF     		add	r7, sp, #0
 473              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 12


 144:main.c        ****     #ifdef isr_motor_INTERRUPT_INTERRUPT_CALLBACK
 145:main.c        ****         isr_motor_Interrupt_InterruptCallback();
 146:main.c        ****     #endif /* isr_motor_INTERRUPT_INTERRUPT_CALLBACK */ 
 147:main.c        **** 
 148:main.c        ****     /*  Place your Interrupt code here. */
 149:main.c        ****     /* `#START isr_motor_Interrupt` */
 150:main.c        ****       /*int16 currCountMotor2 = QuadDec_M2_GetCounter();
 151:main.c        ****       int16 currCountMotor1 = QuadDec_M1_GetCounter();  
 152:main.c        ****       
 153:main.c        ****      speedMotor1 = (currCountMotor1 - prevcountMotor1) / 0.2;
 154:main.c        ****      speedMotor2 = (currCountMotor2 - prevcountMotor2) / 0.2;
 155:main.c        ****     
 156:main.c        ****       prevcountMotor1 = currCountMotor1;
 157:main.c        ****       prevcountMotor2 = currCountMotor2;*/
 158:main.c        ****     
 159:main.c        ****     /* `#END` */
 160:main.c        **** }
 474              		.loc 1 160 0
 475 0004 00BF     		nop
 476 0006 BD46     		mov	sp, r7
 477              		.cfi_def_cfa_register 13
 478              		@ sp needed
 479 0008 80BC     		pop	{r7}
 480              		.cfi_restore 7
 481              		.cfi_def_cfa_offset 0
 482 000a 7047     		bx	lr
 483              		.cfi_endproc
 484              	.LFE70:
 485              		.size	isr_motor_interrupt_speed, .-isr_motor_interrupt_speed
 486              		.section	.rodata
 487              		.align	2
 488              	.LC0:
 489 0000 4D6F746F 		.ascii	"Motor 1 - start count: %d, end count: %d \012\000"
 489      72203120 
 489      2D207374 
 489      61727420 
 489      636F756E 
 490 002b 00       		.align	2
 491              	.LC1:
 492 002c 4D6F746F 		.ascii	"Motor 2 - start count: %d, end count: %d \012\000"
 492      72203220 
 492      2D207374 
 492      61727420 
 492      636F756E 
 493              		.section	.text.motorCount,"ax",%progbits
 494              		.align	2
 495              		.global	motorCount
 496              		.thumb
 497              		.thumb_func
 498              		.type	motorCount, %function
 499              	motorCount:
 500              	.LFB71:
 161:main.c        **** void motorCount(){
 501              		.loc 1 161 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 20008
 504              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 13


 505 0000 80B5     		push	{r7, lr}
 506              		.cfi_def_cfa_offset 8
 507              		.cfi_offset 7, -8
 508              		.cfi_offset 14, -4
 509 0002 ADF59C4D 		sub	sp, sp, #19968
 510              		.cfi_def_cfa_offset 19976
 511 0006 8AB0     		sub	sp, sp, #40
 512              		.cfi_def_cfa_offset 20016
 513 0008 00AF     		add	r7, sp, #0
 514              		.cfi_def_cfa_register 7
 162:main.c        ****     int16 beginningCountMotor1 = 0;
 515              		.loc 1 162 0
 516 000a 0023     		movs	r3, #0
 517 000c 07F59C42 		add	r2, r7, #19968
 518 0010 02F12602 		add	r2, r2, #38
 519 0014 1380     		strh	r3, [r2]	@ movhi
 163:main.c        ****     int16 beginningCountMotor2 = 0;
 520              		.loc 1 163 0
 521 0016 0023     		movs	r3, #0
 522 0018 07F59C42 		add	r2, r7, #19968
 523 001c 02F12402 		add	r2, r2, #36
 524 0020 1380     		strh	r3, [r2]	@ movhi
 164:main.c        ****     int16 endCountMotor2 = QuadDec_M2_GetCounter();
 525              		.loc 1 164 0
 526 0022 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 527 0026 0346     		mov	r3, r0
 528 0028 07F59C42 		add	r2, r7, #19968
 529 002c 02F12202 		add	r2, r2, #34
 530 0030 1380     		strh	r3, [r2]	@ movhi
 165:main.c        ****     int16 endCountMotor1 = QuadDec_M1_GetCounter();
 531              		.loc 1 165 0
 532 0032 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 533 0036 0346     		mov	r3, r0
 534 0038 07F59C42 		add	r2, r7, #19968
 535 003c 02F12002 		add	r2, r2, #32
 536 0040 1380     		strh	r3, [r2]	@ movhi
 166:main.c        ****     char motor1String[10000]; 
 167:main.c        ****     sprintf(motor1String,"Motor 1 - start count: %d, end count: %d \n", beginningCountMotor1, endCo
 537              		.loc 1 167 0
 538 0042 07F59C43 		add	r3, r7, #19968
 539 0046 03F12603 		add	r3, r3, #38
 540 004a B3F90020 		ldrsh	r2, [r3]
 541 004e 07F59C43 		add	r3, r7, #19968
 542 0052 03F12003 		add	r3, r3, #32
 543 0056 B3F90030 		ldrsh	r3, [r3]
 544 005a 07F51C50 		add	r0, r7, #9984
 545 005e 00F12800 		add	r0, r0, #40
 546 0062 1838     		subs	r0, r0, #24
 547 0064 1449     		ldr	r1, .L18
 548 0066 FFF7FEFF 		bl	sprintf
 168:main.c        ****     char motor2String[10000];
 169:main.c        ****     sprintf(motor2String,"Motor 2 - start count: %d, end count: %d \n", beginningCountMotor2 , endC
 549              		.loc 1 169 0
 550 006a 07F59C43 		add	r3, r7, #19968
 551 006e 03F12403 		add	r3, r3, #36
 552 0072 B3F90020 		ldrsh	r2, [r3]
 553 0076 07F59C43 		add	r3, r7, #19968
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 14


 554 007a 03F12203 		add	r3, r3, #34
 555 007e B3F90030 		ldrsh	r3, [r3]
 556 0082 07F12800 		add	r0, r7, #40
 557 0086 2838     		subs	r0, r0, #40
 558 0088 0C49     		ldr	r1, .L18+4
 559 008a FFF7FEFF 		bl	sprintf
 170:main.c        ****     
 171:main.c        ****     usbPutString(motor1String);
 560              		.loc 1 171 0
 561 008e 07F51C53 		add	r3, r7, #9984
 562 0092 03F12803 		add	r3, r3, #40
 563 0096 183B     		subs	r3, r3, #24
 564 0098 1846     		mov	r0, r3
 565 009a FFF7FEFF 		bl	usbPutString
 172:main.c        ****     usbPutString(motor2String);
 566              		.loc 1 172 0
 567 009e 07F12803 		add	r3, r7, #40
 568 00a2 283B     		subs	r3, r3, #40
 569 00a4 1846     		mov	r0, r3
 570 00a6 FFF7FEFF 		bl	usbPutString
 173:main.c        **** 
 174:main.c        **** }
 571              		.loc 1 174 0
 572 00aa 00BF     		nop
 573 00ac 07F59C47 		add	r7, r7, #19968
 574 00b0 2837     		adds	r7, r7, #40
 575              		.cfi_def_cfa_offset 8
 576 00b2 BD46     		mov	sp, r7
 577              		.cfi_def_cfa_register 13
 578              		@ sp needed
 579 00b4 80BD     		pop	{r7, pc}
 580              	.L19:
 581 00b6 00BF     		.align	2
 582              	.L18:
 583 00b8 00000000 		.word	.LC0
 584 00bc 2C000000 		.word	.LC1
 585              		.cfi_endproc
 586              	.LFE71:
 587              		.size	motorCount, .-motorCount
 588              		.section	.text.motorRun,"ax",%progbits
 589              		.align	2
 590              		.global	motorRun
 591              		.thumb
 592              		.thumb_func
 593              		.type	motorRun, %function
 594              	motorRun:
 595              	.LFB72:
 175:main.c        **** 
 176:main.c        **** void motorRun(){
 596              		.loc 1 176 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 1, uses_anonymous_args = 0
 600 0000 80B5     		push	{r7, lr}
 601              		.cfi_def_cfa_offset 8
 602              		.cfi_offset 7, -8
 603              		.cfi_offset 14, -4
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 15


 604 0002 00AF     		add	r7, sp, #0
 605              		.cfi_def_cfa_register 7
 177:main.c        ****     
 178:main.c        ****     
 179:main.c        ****     
 180:main.c        ****     PWM_1_Start();
 606              		.loc 1 180 0
 607 0004 FFF7FEFF 		bl	PWM_1_Start
 181:main.c        ****     PWM_2_Start();
 608              		.loc 1 181 0
 609 0008 FFF7FEFF 		bl	PWM_2_Start
 182:main.c        **** 
 183:main.c        **** 
 184:main.c        ****     motorStop();
 610              		.loc 1 184 0
 611 000c FFF7FEFF 		bl	motorStop
 185:main.c        ****     CyDelay(2000); // so we have time to set the robot up
 612              		.loc 1 185 0
 613 0010 4FF4FA60 		mov	r0, #2000
 614 0014 FFF7FEFF 		bl	CyDelay
 186:main.c        ****     motorGoStraight();
 615              		.loc 1 186 0
 616 0018 FFF7FEFF 		bl	motorGoStraight
 187:main.c        ****     CyDelay(2000);
 617              		.loc 1 187 0
 618 001c 4FF4FA60 		mov	r0, #2000
 619 0020 FFF7FEFF 		bl	CyDelay
 188:main.c        ****     motorStop();
 620              		.loc 1 188 0
 621 0024 FFF7FEFF 		bl	motorStop
 189:main.c        ****     
 190:main.c        ****     //motorGoBackwards();
 191:main.c        **** 
 192:main.c        ****     
 193:main.c        ****     //CyDelay(2000);
 194:main.c        ****  
 195:main.c        ****     //motorStop();
 196:main.c        ****     //motorCount();//checks count per second.
 197:main.c        **** 
 198:main.c        **** }
 622              		.loc 1 198 0
 623 0028 00BF     		nop
 624 002a 80BD     		pop	{r7, pc}
 625              		.cfi_endproc
 626              	.LFE72:
 627              		.size	motorRun, .-motorRun
 628              		.section	.text.isr_TS_Interrupt_sample,"ax",%progbits
 629              		.align	2
 630              		.global	isr_TS_Interrupt_sample
 631              		.thumb
 632              		.thumb_func
 633              		.type	isr_TS_Interrupt_sample, %function
 634              	isr_TS_Interrupt_sample:
 635              	.LFB73:
 199:main.c        **** CY_ISR(isr_TS_Interrupt_sample)
 200:main.c        **** {
 636              		.loc 1 200 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 16


 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 0
 639              		@ frame_needed = 1, uses_anonymous_args = 0
 640 0000 80B5     		push	{r7, lr}
 641              		.cfi_def_cfa_offset 8
 642              		.cfi_offset 7, -8
 643              		.cfi_offset 14, -4
 644 0002 00AF     		add	r7, sp, #0
 645              		.cfi_def_cfa_register 7
 201:main.c        ****     #ifdef isr_TS_INTERRUPT_INTERRUPT_CALLBACK
 202:main.c        ****         isr_TS_Interrupt_InterruptCallback();
 203:main.c        ****     #endif /* isr_TS_INTERRUPT_INTERRUPT_CALLBACK */ 
 204:main.c        ****         ADC_StartConvert();
 646              		.loc 1 204 0
 647 0004 FFF7FEFF 		bl	ADC_StartConvert
 205:main.c        ****     /*  Place your Interrupt code here. */
 206:main.c        ****     /* `#START isr_TS_Interrupt` */
 207:main.c        **** 
 208:main.c        ****     /* `#END` */
 209:main.c        **** }
 648              		.loc 1 209 0
 649 0008 00BF     		nop
 650 000a 80BD     		pop	{r7, pc}
 651              		.cfi_endproc
 652              	.LFE73:
 653              		.size	isr_TS_Interrupt_sample, .-isr_TS_Interrupt_sample
 654              		.section	.text.main,"ax",%progbits
 655              		.align	2
 656              		.global	main
 657              		.thumb
 658              		.thumb_func
 659              		.type	main, %function
 660              	main:
 661              	.LFB74:
 210:main.c        **** 
 211:main.c        **** 
 212:main.c        **** int main()
 213:main.c        **** {
 662              		.loc 1 213 0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 8
 665              		@ frame_needed = 1, uses_anonymous_args = 0
 666 0000 80B5     		push	{r7, lr}
 667              		.cfi_def_cfa_offset 8
 668              		.cfi_offset 7, -8
 669              		.cfi_offset 14, -4
 670 0002 82B0     		sub	sp, sp, #8
 671              		.cfi_def_cfa_offset 16
 672 0004 00AF     		add	r7, sp, #0
 673              		.cfi_def_cfa_register 7
 214:main.c        ****     
 215:main.c        **** 
 216:main.c        **** // --------------------------------    
 217:main.c        **** // ----- INITIALIZATIONS ----------
 218:main.c        ****     CYGlobalIntEnable;
 674              		.loc 1 218 0
 675              		.syntax unified
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 17


 676              	@ 218 "main.c" 1
 677 0006 62B6     		CPSIE   i
 678              	@ 0 "" 2
 219:main.c        ****     count  = 0;
 679              		.loc 1 219 0
 680              		.thumb
 681              		.syntax unified
 682 0008 3E4B     		ldr	r3, .L34
 683 000a 0022     		movs	r2, #0
 684 000c 1A70     		strb	r2, [r3]
 220:main.c        ****     
 221:main.c        ****     ADC_Start();
 685              		.loc 1 221 0
 686 000e FFF7FEFF 		bl	ADC_Start
 222:main.c        ****     Timer_TS_Start();
 687              		.loc 1 222 0
 688 0012 FFF7FEFF 		bl	Timer_TS_Start
 223:main.c        ****     Timer_Motor_Start();
 689              		.loc 1 223 0
 690 0016 FFF7FEFF 		bl	Timer_Motor_Start
 224:main.c        ****     QuadDec_M1_Start();
 691              		.loc 1 224 0
 692 001a FFF7FEFF 		bl	QuadDec_M1_Start
 225:main.c        ****     QuadDec_M2_Start(); //init the quadencoder,
 693              		.loc 1 225 0
 694 001e FFF7FEFF 		bl	QuadDec_M2_Start
 226:main.c        ****     //isr_motor_StartEx(isr_motor_interrupt_speed);
 227:main.c        ****     
 228:main.c        ****     isr_TS_StartEx(isr_TS_Interrupt_sample);
 695              		.loc 1 228 0
 696 0022 3948     		ldr	r0, .L34+4
 697 0024 FFF7FEFF 		bl	isr_TS_StartEx
 229:main.c        ****     isr_eoc_StartEx(isr_eoc_Interrupt_test);
 698              		.loc 1 229 0
 699 0028 3848     		ldr	r0, .L34+8
 700 002a FFF7FEFF 		bl	isr_eoc_StartEx
 230:main.c        ****     
 231:main.c        ****     
 232:main.c        ****     //ADC_StartConvert();
 233:main.c        ****     
 234:main.c        ****     PWM_1_Start();
 701              		.loc 1 234 0
 702 002e FFF7FEFF 		bl	PWM_1_Start
 235:main.c        ****     PWM_2_Start();
 703              		.loc 1 235 0
 704 0032 FFF7FEFF 		bl	PWM_2_Start
 236:main.c        ****     
 237:main.c        ****     LED_Write(0);
 705              		.loc 1 237 0
 706 0036 0020     		movs	r0, #0
 707 0038 FFF7FEFF 		bl	LED_Write
 238:main.c        ****     ///////IF NOT USINNG MOTOR RUN DO PWM START STUFF
 239:main.c        ****     // SO write compare is a measure of speed
 240:main.c        ****     // And Cy delay delays the running of the motor and duration that it travels
 241:main.c        ****     //look at motor RUn config above for more info.
 242:main.c        ****     motorStop();
 708              		.loc 1 242 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 18


 709 003c FFF7FEFF 		bl	motorStop
 243:main.c        ****     CyDelay(2000); // to prep PARTY PART!! WHOOP WHOOP
 710              		.loc 1 243 0
 711 0040 4FF4FA60 		mov	r0, #2000
 712 0044 FFF7FEFF 		bl	CyDelay
 244:main.c        ****    /* while(QuadDec_M1_GetCounter()<travelDist){
 245:main.c        ****     //where counter is value we want it to stop at.
 246:main.c        ****         motorGoStraight();
 247:main.c        ****     
 248:main.c        ****     
 249:main.c        ****     }*/
 250:main.c        **** 
 251:main.c        ****     
 252:main.c        ****     //motorStop();
 253:main.c        ****    // CyDelay(2000); // so we have time to set the robot up
 254:main.c        ****     //motorTurnLeft();
 255:main.c        ****     //motorStop();
 256:main.c        ****     //motorCount();//checks count per second.
 257:main.c        ****      
 258:main.c        ****     
 259:main.c        ****     
 260:main.c        **** 
 261:main.c        ****     
 262:main.c        **** 
 263:main.c        ****     
 264:main.c        **** // ------USB SETUP ----------------    
 265:main.c        **** //#ifdef USE_USB    
 266:main.c        **** //    USBUART_Start(0,USBUART_5V_OPERATION);
 267:main.c        **** //#endif        
 268:main.c        **** //        
 269:main.c        **** //    RF_BT_SELECT_Write(0);
 270:main.c        **** //    motorCount();//checks count per second.
 271:main.c        ****     int onLine=0; // tracks if line is between three sensors
 713              		.loc 1 271 0
 714 0048 0023     		movs	r3, #0
 715 004a 7B60     		str	r3, [r7, #4]
 716              	.L33:
 272:main.c        ****     //usbPutString(displaystring);
 273:main.c        ****     while(1)
 274:main.c        ****     {
 275:main.c        ****         /* Place your application code here. */
 276:main.c        ****         
 277:main.c        ****         //if Q3 SENSES BLACK LIGHT BUT Q4 DOES NOT SENSE THE BLACK LIGHT MOVE TOWARDS THE RIGHT TO 
 278:main.c        ****     // IF Q3 AND Q4 SENSES TURN 90 DEGREES LEFT - intersection
 279:main.c        ****     // IF Q5 BUT NOT Q4 SENSES BLACK LIGHT MOVE TOWARDS THE LEFT TO REALIGN CENTER
 280:main.c        ****     // IF Q5 AND Q4 TURN 90 DEGREES RIGHT - intersection
 281:main.c        ****        
 282:main.c        ****         if (processSensors == 1) {
 717              		.loc 1 282 0
 718 004c 304B     		ldr	r3, .L34+12
 719 004e 1B68     		ldr	r3, [r3]
 720 0050 012B     		cmp	r3, #1
 721 0052 FBD1     		bne	.L33
 722              	.LBB2:
 283:main.c        ****             
 284:main.c        ****             //make decision
 285:main.c        ****             
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 19


 286:main.c        ****             //checks intersection
 287:main.c        ****             //int leftIntersection= (lightDetectedFront[0] == 1 && lightDetectedFront[1]==1);
 288:main.c        ****             //int rightIntersection=  (lightDetectedFront[2] == 1 && lightDetectedFront[1]==1);
 289:main.c        ****             
 290:main.c        ****            //check intersectin
 291:main.c        ****             ///mazeIntersection(leftIntersection,rightIntersection);
 292:main.c        ****         
 293:main.c        ****             int operation = convertSensorBinary();
 723              		.loc 1 293 0
 724 0054 FFF7FEFF 		bl	convertSensorBinary
 725 0058 3860     		str	r0, [r7]
 294:main.c        ****             
 295:main.c        ****             if (onLine){
 726              		.loc 1 295 0
 727 005a 7B68     		ldr	r3, [r7, #4]
 728 005c 002B     		cmp	r3, #0
 729 005e 04D0     		beq	.L24
 296:main.c        ****               motorGoStraight();
 730              		.loc 1 296 0
 731 0060 FFF7FEFF 		bl	motorGoStraight
 297:main.c        ****               LED_Write(0);
 732              		.loc 1 297 0
 733 0064 0020     		movs	r0, #0
 734 0066 FFF7FEFF 		bl	LED_Write
 735              	.L24:
 298:main.c        ****             }
 299:main.c        ****             
 300:main.c        **** 
 301:main.c        ****             
 302:main.c        ****             
 303:main.c        ****             switch(operation){
 736              		.loc 1 303 0
 737 006a 3B68     		ldr	r3, [r7]
 738 006c 072B     		cmp	r3, #7
 739 006e 39D8     		bhi	.L25
 740 0070 01A2     		adr	r2, .L27
 741 0072 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 742 0076 00BF     		.p2align 2
 743              	.L27:
 744 0078 DF000000 		.word	.L26+1
 745 007c E5000000 		.word	.L25+1
 746 0080 E5000000 		.word	.L25+1
 747 0084 AB000000 		.word	.L28+1
 748 0088 E5000000 		.word	.L25+1
 749 008c CF000000 		.word	.L29+1
 750 0090 BD000000 		.word	.L30+1
 751 0094 99000000 		.word	.L31+1
 752              		.p2align 1
 753              	.L31:
 304:main.c        ****             //where 1 is on white, 0 is on black.
 305:main.c        ****                 
 306:main.c        ****                 case 7: // 111 // all under white\\
 307:main.c        ****                     
 308:main.c        ****                     if (onLine==1){
 754              		.loc 1 308 0
 755 0098 7B68     		ldr	r3, [r7, #4]
 756 009a 012B     		cmp	r3, #1
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 20


 757 009c 02D1     		bne	.L32
 309:main.c        ****                     
 310:main.c        ****                     motorGoStraight();
 758              		.loc 1 310 0
 759 009e FFF7FEFF 		bl	motorGoStraight
 311:main.c        ****                     break;
 760              		.loc 1 311 0
 761 00a2 1FE0     		b	.L25
 762              	.L32:
 312:main.c        ****                     }
 313:main.c        ****                     
 314:main.c        ****                     else{
 315:main.c        ****                     motorStop();
 763              		.loc 1 315 0
 764 00a4 FFF7FEFF 		bl	motorStop
 316:main.c        ****                     break;
 765              		.loc 1 316 0
 766 00a8 1CE0     		b	.L25
 767              	.L28:
 317:main.c        ****                     }
 318:main.c        ****                     
 319:main.c        ****                 case 3:// 0 1 1 // Q3 under black
 320:main.c        ****                     onLine=0;
 768              		.loc 1 320 0
 769 00aa 0023     		movs	r3, #0
 770 00ac 7B60     		str	r3, [r7, #4]
 321:main.c        ****                     motorTurnLeft(50);
 771              		.loc 1 321 0
 772 00ae 3220     		movs	r0, #50
 773 00b0 FFF7FEFF 		bl	motorTurnLeft
 322:main.c        ****                     LED_Write(1);
 774              		.loc 1 322 0
 775 00b4 0120     		movs	r0, #1
 776 00b6 FFF7FEFF 		bl	LED_Write
 323:main.c        ****                     break;    
 777              		.loc 1 323 0
 778 00ba 13E0     		b	.L25
 779              	.L30:
 324:main.c        ****                     
 325:main.c        ****                 case 6:// 1 1 0 // Q5 under black
 326:main.c        ****                     onLine=0;
 780              		.loc 1 326 0
 781 00bc 0023     		movs	r3, #0
 782 00be 7B60     		str	r3, [r7, #4]
 327:main.c        ****                     motorTurnRight(200);
 783              		.loc 1 327 0
 784 00c0 C820     		movs	r0, #200
 785 00c2 FFF7FEFF 		bl	motorTurnRight
 328:main.c        ****                     LED_Write(1);
 786              		.loc 1 328 0
 787 00c6 0120     		movs	r0, #1
 788 00c8 FFF7FEFF 		bl	LED_Write
 329:main.c        ****                     break;
 789              		.loc 1 329 0
 790 00cc 0AE0     		b	.L25
 791              	.L29:
 330:main.c        ****                     
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 21


 331:main.c        ****                 case 5:// 101 // Q4 under black
 332:main.c        ****                     onLine=1;
 792              		.loc 1 332 0
 793 00ce 0123     		movs	r3, #1
 794 00d0 7B60     		str	r3, [r7, #4]
 333:main.c        ****                     motorGoStraight();
 795              		.loc 1 333 0
 796 00d2 FFF7FEFF 		bl	motorGoStraight
 334:main.c        ****                     LED_Write(0);
 797              		.loc 1 334 0
 798 00d6 0020     		movs	r0, #0
 799 00d8 FFF7FEFF 		bl	LED_Write
 335:main.c        ****                     break;
 800              		.loc 1 335 0
 801 00dc 02E0     		b	.L25
 802              	.L26:
 336:main.c        ****                     
 337:main.c        ****                 
 338:main.c        ****                 
 339:main.c        ****                 
 340:main.c        ****                     
 341:main.c        ****                 case 0: // 000 // ALL UNDER black
 342:main.c        ****                       
 343:main.c        ****                     motorStop();
 803              		.loc 1 343 0
 804 00de FFF7FEFF 		bl	motorStop
 344:main.c        ****                     break;    
 805              		.loc 1 344 0
 806 00e2 00BF     		nop
 807              	.L25:
 345:main.c        **** 
 346:main.c        ****                
 347:main.c        ****                 
 348:main.c        ****                
 349:main.c        ****             
 350:main.c        ****             }
 351:main.c        ****             
 352:main.c        ****             
 353:main.c        ****             
 354:main.c        ****             
 355:main.c        **** //            if(leftIntersection){
 356:main.c        **** //                motorTurnLeft(55);
 357:main.c        **** //            
 358:main.c        **** //            
 359:main.c        **** //                CyDelay(250);
 360:main.c        **** //            }
 361:main.c        **** //            
 362:main.c        **** //            if(rightIntersection){
 363:main.c        **** //                motorTurnRight(55);
 364:main.c        **** //                
 365:main.c        **** //                CyDelay(250);//small rotation need small time
 366:main.c        **** //            
 367:main.c        **** //            }
 368:main.c        ****             
 369:main.c        **** //            //Slight turns
 370:main.c        **** //            if(lightDetectedFront[0] == 1 && lightDetectedFront[1]==0){
 371:main.c        **** //                motorTurnRight(140);
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 22


 372:main.c        **** //                CyDelay(20);//small rotation need small time
 373:main.c        **** //            }
 374:main.c        **** //            
 375:main.c        **** //            if(lightDetectedFront[2] == 0 && lightDetectedFront[1]==1){
 376:main.c        **** //                motorTurnLeft(140);
 377:main.c        **** //                CyDelay(20);//small rotation need small time
 378:main.c        **** //            }
 379:main.c        **** 
 380:main.c        ****        
 381:main.c        ****             //reset variable.
 382:main.c        ****             processSensors = 0;
 808              		.loc 1 382 0
 809 00e4 0A4B     		ldr	r3, .L34+12
 810 00e6 0022     		movs	r2, #0
 811 00e8 1A60     		str	r2, [r3]
 383:main.c        ****             //reset counter
 384:main.c        **** 
 385:main.c        ****              counteoc = 0;
 812              		.loc 1 385 0
 813 00ea 0A4B     		ldr	r3, .L34+16
 814 00ec 0022     		movs	r2, #0
 815 00ee 1A60     		str	r2, [r3]
 386:main.c        ****             //reset flags for lightsensors because it checks every 10 iterations, adds delay/
 387:main.c        ****             lightDetectedFront[0] = 0;
 816              		.loc 1 387 0
 817 00f0 094B     		ldr	r3, .L34+20
 818 00f2 0022     		movs	r2, #0
 819 00f4 1A60     		str	r2, [r3]
 388:main.c        ****             lightDetectedFront[1] = 0;
 820              		.loc 1 388 0
 821 00f6 084B     		ldr	r3, .L34+20
 822 00f8 0022     		movs	r2, #0
 823 00fa 5A60     		str	r2, [r3, #4]
 389:main.c        ****             lightDetectedFront[2] = 0;
 824              		.loc 1 389 0
 825 00fc 064B     		ldr	r3, .L34+20
 826 00fe 0022     		movs	r2, #0
 827 0100 9A60     		str	r2, [r3, #8]
 828              	.LBE2:
 390:main.c        ****           
 391:main.c        ****         }
 392:main.c        ****         
 393:main.c        ****     }   
 829              		.loc 1 393 0
 830 0102 A3E7     		b	.L33
 831              	.L35:
 832              		.align	2
 833              	.L34:
 834 0104 44000000 		.word	count
 835 0108 00000000 		.word	isr_TS_Interrupt_sample
 836 010c 00000000 		.word	isr_eoc_Interrupt_test
 837 0110 00000000 		.word	processSensors
 838 0114 00000000 		.word	counteoc
 839 0118 00000000 		.word	lightDetectedFront
 840              		.cfi_endproc
 841              	.LFE74:
 842              		.size	main, .-main
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 23


 843              		.section	.text.convertSensorBinary,"ax",%progbits
 844              		.align	2
 845              		.global	convertSensorBinary
 846              		.thumb
 847              		.thumb_func
 848              		.type	convertSensorBinary, %function
 849              	convertSensorBinary:
 850              	.LFB75:
 394:main.c        **** }
 395:main.c        **** 
 396:main.c        ****   
 397:main.c        **** 
 398:main.c        **** 
 399:main.c        **** 
 400:main.c        **** int convertSensorBinary()
 401:main.c        **** {
 851              		.loc 1 401 0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 16
 854              		@ frame_needed = 1, uses_anonymous_args = 0
 855              		@ link register save eliminated.
 856 0000 80B4     		push	{r7}
 857              		.cfi_def_cfa_offset 4
 858              		.cfi_offset 7, -4
 859 0002 85B0     		sub	sp, sp, #20
 860              		.cfi_def_cfa_offset 24
 861 0004 00AF     		add	r7, sp, #0
 862              		.cfi_def_cfa_register 7
 402:main.c        ****    int value=0;
 863              		.loc 1 402 0
 864 0006 0023     		movs	r3, #0
 865 0008 FB60     		str	r3, [r7, #12]
 403:main.c        ****   int Q3 = lightDetectedFront[0];
 866              		.loc 1 403 0
 867 000a 104B     		ldr	r3, .L38
 868 000c 1B68     		ldr	r3, [r3]
 869 000e BB60     		str	r3, [r7, #8]
 404:main.c        ****   int Q4 = lightDetectedFront[1];
 870              		.loc 1 404 0
 871 0010 0E4B     		ldr	r3, .L38
 872 0012 5B68     		ldr	r3, [r3, #4]
 873 0014 7B60     		str	r3, [r7, #4]
 405:main.c        ****    int Q5 = lightDetectedFront[2];
 874              		.loc 1 405 0
 875 0016 0D4B     		ldr	r3, .L38
 876 0018 9B68     		ldr	r3, [r3, #8]
 877 001a 3B60     		str	r3, [r7]
 406:main.c        ****   value=value + lightDetectedFront[0]*4;
 878              		.loc 1 406 0
 879 001c 0B4B     		ldr	r3, .L38
 880 001e 1B68     		ldr	r3, [r3]
 881 0020 9B00     		lsls	r3, r3, #2
 882 0022 FA68     		ldr	r2, [r7, #12]
 883 0024 1344     		add	r3, r3, r2
 884 0026 FB60     		str	r3, [r7, #12]
 407:main.c        ****   value=value + lightDetectedFront[1]*2;
 885              		.loc 1 407 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 24


 886 0028 084B     		ldr	r3, .L38
 887 002a 5B68     		ldr	r3, [r3, #4]
 888 002c 5B00     		lsls	r3, r3, #1
 889 002e FA68     		ldr	r2, [r7, #12]
 890 0030 1344     		add	r3, r3, r2
 891 0032 FB60     		str	r3, [r7, #12]
 408:main.c        ****   value=value + lightDetectedFront[2]*1;
 892              		.loc 1 408 0
 893 0034 054B     		ldr	r3, .L38
 894 0036 9B68     		ldr	r3, [r3, #8]
 895 0038 FA68     		ldr	r2, [r7, #12]
 896 003a 1344     		add	r3, r3, r2
 897 003c FB60     		str	r3, [r7, #12]
 409:main.c        ****     return value;
 898              		.loc 1 409 0
 899 003e FB68     		ldr	r3, [r7, #12]
 410:main.c        **** }
 900              		.loc 1 410 0
 901 0040 1846     		mov	r0, r3
 902 0042 1437     		adds	r7, r7, #20
 903              		.cfi_def_cfa_offset 4
 904 0044 BD46     		mov	sp, r7
 905              		.cfi_def_cfa_register 13
 906              		@ sp needed
 907 0046 80BC     		pop	{r7}
 908              		.cfi_restore 7
 909              		.cfi_def_cfa_offset 0
 910 0048 7047     		bx	lr
 911              	.L39:
 912 004a 00BF     		.align	2
 913              	.L38:
 914 004c 00000000 		.word	lightDetectedFront
 915              		.cfi_endproc
 916              	.LFE75:
 917              		.size	convertSensorBinary, .-convertSensorBinary
 918              		.section	.text.usbPutString,"ax",%progbits
 919              		.align	2
 920              		.global	usbPutString
 921              		.thumb
 922              		.thumb_func
 923              		.type	usbPutString, %function
 924              	usbPutString:
 925              	.LFB76:
 411:main.c        **** //* ========================================
 412:main.c        **** void usbPutString(char *s)
 413:main.c        **** {
 926              		.loc 1 413 0
 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 8
 929              		@ frame_needed = 1, uses_anonymous_args = 0
 930 0000 80B5     		push	{r7, lr}
 931              		.cfi_def_cfa_offset 8
 932              		.cfi_offset 7, -8
 933              		.cfi_offset 14, -4
 934 0002 82B0     		sub	sp, sp, #8
 935              		.cfi_def_cfa_offset 16
 936 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 25


 937              		.cfi_def_cfa_register 7
 938 0006 7860     		str	r0, [r7, #4]
 414:main.c        **** // !! Assumes that *s is a string with allocated space >=64 chars     
 415:main.c        **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 416:main.c        **** //  length to 62 char (63rd char is a '!')
 417:main.c        **** 
 418:main.c        **** #ifdef USE_USB     
 419:main.c        ****     while (USBUART_CDCIsReady() == 0);
 939              		.loc 1 419 0
 940 0008 00BF     		nop
 941              	.L41:
 942              		.loc 1 419 0 is_stmt 0 discriminator 1
 943 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 944 000e 0346     		mov	r3, r0
 945 0010 002B     		cmp	r3, #0
 946 0012 FAD0     		beq	.L41
 420:main.c        ****     s[63]='\0';
 947              		.loc 1 420 0 is_stmt 1
 948 0014 7B68     		ldr	r3, [r7, #4]
 949 0016 3F33     		adds	r3, r3, #63
 950 0018 0022     		movs	r2, #0
 951 001a 1A70     		strb	r2, [r3]
 421:main.c        ****     s[62]='!';
 952              		.loc 1 421 0
 953 001c 7B68     		ldr	r3, [r7, #4]
 954 001e 3E33     		adds	r3, r3, #62
 955 0020 2122     		movs	r2, #33
 956 0022 1A70     		strb	r2, [r3]
 422:main.c        ****     USBUART_PutData((uint8*)s,strlen(s));
 957              		.loc 1 422 0
 958 0024 7868     		ldr	r0, [r7, #4]
 959 0026 FFF7FEFF 		bl	strlen
 960 002a 0346     		mov	r3, r0
 961 002c 9BB2     		uxth	r3, r3
 962 002e 1946     		mov	r1, r3
 963 0030 7868     		ldr	r0, [r7, #4]
 964 0032 FFF7FEFF 		bl	USBUART_PutData
 423:main.c        **** #endif
 424:main.c        **** }
 965              		.loc 1 424 0
 966 0036 00BF     		nop
 967 0038 0837     		adds	r7, r7, #8
 968              		.cfi_def_cfa_offset 8
 969 003a BD46     		mov	sp, r7
 970              		.cfi_def_cfa_register 13
 971              		@ sp needed
 972 003c 80BD     		pop	{r7, pc}
 973              		.cfi_endproc
 974              	.LFE76:
 975              		.size	usbPutString, .-usbPutString
 976 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 977              		.align	2
 978              		.global	usbPutChar
 979              		.thumb
 980              		.thumb_func
 981              		.type	usbPutChar, %function
 982              	usbPutChar:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 26


 983              	.LFB77:
 425:main.c        **** //* ========================================
 426:main.c        **** void usbPutChar(char c)
 427:main.c        **** {
 984              		.loc 1 427 0
 985              		.cfi_startproc
 986              		@ args = 0, pretend = 0, frame = 8
 987              		@ frame_needed = 1, uses_anonymous_args = 0
 988 0000 80B5     		push	{r7, lr}
 989              		.cfi_def_cfa_offset 8
 990              		.cfi_offset 7, -8
 991              		.cfi_offset 14, -4
 992 0002 82B0     		sub	sp, sp, #8
 993              		.cfi_def_cfa_offset 16
 994 0004 00AF     		add	r7, sp, #0
 995              		.cfi_def_cfa_register 7
 996 0006 0346     		mov	r3, r0
 997 0008 FB71     		strb	r3, [r7, #7]
 428:main.c        **** #ifdef USE_USB     
 429:main.c        ****     while (USBUART_CDCIsReady() == 0);
 998              		.loc 1 429 0
 999 000a 00BF     		nop
 1000              	.L43:
 1001              		.loc 1 429 0 is_stmt 0 discriminator 1
 1002 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 1003 0010 0346     		mov	r3, r0
 1004 0012 002B     		cmp	r3, #0
 1005 0014 FAD0     		beq	.L43
 430:main.c        ****     USBUART_PutChar(c);
 1006              		.loc 1 430 0 is_stmt 1
 1007 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1008 0018 1846     		mov	r0, r3
 1009 001a FFF7FEFF 		bl	USBUART_PutChar
 431:main.c        **** #endif    
 432:main.c        **** }
 1010              		.loc 1 432 0
 1011 001e 00BF     		nop
 1012 0020 0837     		adds	r7, r7, #8
 1013              		.cfi_def_cfa_offset 8
 1014 0022 BD46     		mov	sp, r7
 1015              		.cfi_def_cfa_register 13
 1016              		@ sp needed
 1017 0024 80BD     		pop	{r7, pc}
 1018              		.cfi_endproc
 1019              	.LFE77:
 1020              		.size	usbPutChar, .-usbPutChar
 1021 0026 00BF     		.section	.text.handle_usb,"ax",%progbits
 1022              		.align	2
 1023              		.global	handle_usb
 1024              		.thumb
 1025              		.thumb_func
 1026              		.type	handle_usb, %function
 1027              	handle_usb:
 1028              	.LFB78:
 433:main.c        **** //* ========================================
 434:main.c        **** void handle_usb()
 435:main.c        **** {
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 27


 1029              		.loc 1 435 0
 1030              		.cfi_startproc
 1031              		@ args = 0, pretend = 0, frame = 8
 1032              		@ frame_needed = 1, uses_anonymous_args = 0
 1033 0000 80B5     		push	{r7, lr}
 1034              		.cfi_def_cfa_offset 8
 1035              		.cfi_offset 7, -8
 1036              		.cfi_offset 14, -4
 1037 0002 82B0     		sub	sp, sp, #8
 1038              		.cfi_def_cfa_offset 16
 1039 0004 00AF     		add	r7, sp, #0
 1040              		.cfi_def_cfa_register 7
 436:main.c        ****     // handles input at terminal, echos it back to the terminal
 437:main.c        ****     // turn echo OFF, key emulation: only CR
 438:main.c        ****     // entered string is made available in 'line' and 'flag_KB_string' is set
 439:main.c        ****     
 440:main.c        ****     static uint8 usbStarted = FALSE;
 441:main.c        ****     static uint16 usbBufCount = 0;
 442:main.c        ****     uint8 c = 0; 
 1041              		.loc 1 442 0
 1042 0006 0023     		movs	r3, #0
 1043 0008 FB71     		strb	r3, [r7, #7]
 443:main.c        ****     
 444:main.c        **** 
 445:main.c        ****     if (!usbStarted)
 1044              		.loc 1 445 0
 1045 000a 2B4B     		ldr	r3, .L54
 1046 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1047 000e 002B     		cmp	r3, #0
 1048 0010 0AD1     		bne	.L45
 446:main.c        ****     {
 447:main.c        ****         if (USBUART_GetConfiguration())
 1049              		.loc 1 447 0
 1050 0012 FFF7FEFF 		bl	USBUART_GetConfiguration
 1051 0016 0346     		mov	r3, r0
 1052 0018 002B     		cmp	r3, #0
 1053 001a 49D0     		beq	.L53
 448:main.c        ****         {
 449:main.c        ****             USBUART_CDC_Init();
 1054              		.loc 1 449 0
 1055 001c FFF7FEFF 		bl	USBUART_CDC_Init
 450:main.c        ****             usbStarted = TRUE;
 1056              		.loc 1 450 0
 1057 0020 254B     		ldr	r3, .L54
 1058 0022 0122     		movs	r2, #1
 1059 0024 1A70     		strb	r2, [r3]
 451:main.c        ****         }
 452:main.c        ****     }
 453:main.c        ****     else
 454:main.c        ****     {
 455:main.c        ****         if (USBUART_DataIsReady() != 0)
 456:main.c        ****         {  
 457:main.c        ****             c = USBUART_GetChar();
 458:main.c        **** 
 459:main.c        ****             if ((c == 13) || (c == 10))
 460:main.c        ****             {
 461:main.c        **** //                if (usbBufCount > 0)
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 28


 462:main.c        ****                 {
 463:main.c        ****                     entry[usbBufCount]= '\0';
 464:main.c        ****                     strcpy(line,entry);
 465:main.c        ****                     usbBufCount = 0;
 466:main.c        ****                     flag_KB_string = 1;
 467:main.c        ****                 }
 468:main.c        ****             }
 469:main.c        ****             else 
 470:main.c        ****             {
 471:main.c        ****                 if (((c == CHAR_BACKSP) || (c == CHAR_DEL) ) && (usbBufCount > 0) )
 472:main.c        ****                     usbBufCount--;
 473:main.c        ****                 else
 474:main.c        ****                 {
 475:main.c        ****                     if (usbBufCount > (BUF_SIZE-2) ) // one less else strtok triggers a crash
 476:main.c        ****                     {
 477:main.c        ****                        USBUART_PutChar('!');        
 478:main.c        ****                     }
 479:main.c        ****                     else
 480:main.c        ****                         entry[usbBufCount++] = c;  
 481:main.c        ****                 }  
 482:main.c        ****             }
 483:main.c        ****         }
 484:main.c        ****     }    
 485:main.c        **** }
 1060              		.loc 1 485 0
 1061 0026 43E0     		b	.L53
 1062              	.L45:
 455:main.c        ****         {  
 1063              		.loc 1 455 0
 1064 0028 FFF7FEFF 		bl	USBUART_DataIsReady
 1065 002c 0346     		mov	r3, r0
 1066 002e 002B     		cmp	r3, #0
 1067 0030 3ED0     		beq	.L53
 457:main.c        **** 
 1068              		.loc 1 457 0
 1069 0032 FFF7FEFF 		bl	USBUART_GetChar
 1070 0036 0346     		mov	r3, r0
 1071 0038 FB71     		strb	r3, [r7, #7]
 459:main.c        ****             {
 1072              		.loc 1 459 0
 1073 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1074 003c 0D2B     		cmp	r3, #13
 1075 003e 02D0     		beq	.L48
 459:main.c        ****             {
 1076              		.loc 1 459 0 is_stmt 0 discriminator 1
 1077 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1078 0042 0A2B     		cmp	r3, #10
 1079 0044 10D1     		bne	.L49
 1080              	.L48:
 463:main.c        ****                     strcpy(line,entry);
 1081              		.loc 1 463 0 is_stmt 1
 1082 0046 1D4B     		ldr	r3, .L54+4
 1083 0048 1B88     		ldrh	r3, [r3]
 1084 004a 1A46     		mov	r2, r3
 1085 004c 1C4B     		ldr	r3, .L54+8
 1086 004e 0021     		movs	r1, #0
 1087 0050 9954     		strb	r1, [r3, r2]
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 29


 464:main.c        ****                     usbBufCount = 0;
 1088              		.loc 1 464 0
 1089 0052 1B49     		ldr	r1, .L54+8
 1090 0054 1B48     		ldr	r0, .L54+12
 1091 0056 FFF7FEFF 		bl	strcpy
 465:main.c        ****                     flag_KB_string = 1;
 1092              		.loc 1 465 0
 1093 005a 184B     		ldr	r3, .L54+4
 1094 005c 0022     		movs	r2, #0
 1095 005e 1A80     		strh	r2, [r3]	@ movhi
 466:main.c        ****                 }
 1096              		.loc 1 466 0
 1097 0060 194B     		ldr	r3, .L54+16
 1098 0062 0122     		movs	r2, #1
 1099 0064 1A70     		strb	r2, [r3]
 1100 0066 23E0     		b	.L47
 1101              	.L49:
 471:main.c        ****                     usbBufCount--;
 1102              		.loc 1 471 0
 1103 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1104 006a 082B     		cmp	r3, #8
 1105 006c 02D0     		beq	.L50
 471:main.c        ****                     usbBufCount--;
 1106              		.loc 1 471 0 is_stmt 0 discriminator 2
 1107 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1108 0070 7F2B     		cmp	r3, #127
 1109 0072 0AD1     		bne	.L51
 1110              	.L50:
 471:main.c        ****                     usbBufCount--;
 1111              		.loc 1 471 0 discriminator 3
 1112 0074 114B     		ldr	r3, .L54+4
 1113 0076 1B88     		ldrh	r3, [r3]
 1114 0078 002B     		cmp	r3, #0
 1115 007a 06D0     		beq	.L51
 472:main.c        ****                 else
 1116              		.loc 1 472 0 is_stmt 1
 1117 007c 0F4B     		ldr	r3, .L54+4
 1118 007e 1B88     		ldrh	r3, [r3]
 1119 0080 013B     		subs	r3, r3, #1
 1120 0082 9AB2     		uxth	r2, r3
 1121 0084 0D4B     		ldr	r3, .L54+4
 1122 0086 1A80     		strh	r2, [r3]	@ movhi
 1123 0088 12E0     		b	.L47
 1124              	.L51:
 475:main.c        ****                     {
 1125              		.loc 1 475 0
 1126 008a 0C4B     		ldr	r3, .L54+4
 1127 008c 1B88     		ldrh	r3, [r3]
 1128 008e 3E2B     		cmp	r3, #62
 1129 0090 03D9     		bls	.L52
 477:main.c        ****                     }
 1130              		.loc 1 477 0
 1131 0092 2120     		movs	r0, #33
 1132 0094 FFF7FEFF 		bl	USBUART_PutChar
 1133              		.loc 1 485 0
 1134 0098 0AE0     		b	.L53
 1135              	.L52:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 30


 480:main.c        ****                 }  
 1136              		.loc 1 480 0
 1137 009a 084B     		ldr	r3, .L54+4
 1138 009c 1B88     		ldrh	r3, [r3]
 1139 009e 5A1C     		adds	r2, r3, #1
 1140 00a0 91B2     		uxth	r1, r2
 1141 00a2 064A     		ldr	r2, .L54+4
 1142 00a4 1180     		strh	r1, [r2]	@ movhi
 1143 00a6 1946     		mov	r1, r3
 1144 00a8 054A     		ldr	r2, .L54+8
 1145 00aa FB79     		ldrb	r3, [r7, #7]
 1146 00ac 5354     		strb	r3, [r2, r1]
 1147              		.loc 1 485 0
 1148 00ae FFE7     		b	.L53
 1149              	.L47:
 1150              	.L53:
 1151 00b0 00BF     		nop
 1152 00b2 0837     		adds	r7, r7, #8
 1153              		.cfi_def_cfa_offset 8
 1154 00b4 BD46     		mov	sp, r7
 1155              		.cfi_def_cfa_register 13
 1156              		@ sp needed
 1157 00b6 80BD     		pop	{r7, pc}
 1158              	.L55:
 1159              		.align	2
 1160              	.L54:
 1161 00b8 45000000 		.word	usbStarted.8797
 1162 00bc 46000000 		.word	usbBufCount.8798
 1163 00c0 00000000 		.word	entry
 1164 00c4 00000000 		.word	line
 1165 00c8 00000000 		.word	flag_KB_string
 1166              		.cfi_endproc
 1167              	.LFE78:
 1168              		.size	handle_usb, .-handle_usb
 1169              		.bss
 1170              	usbStarted.8797:
 1171 0045 00       		.space	1
 1172              		.align	1
 1173              	usbBufCount.8798:
 1174 0046 0000     		.space	2
 1175              		.text
 1176              	.Letext0:
 1177              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1178              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1179              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1180              		.file 5 "vars.h"
 1181              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1182              		.section	.debug_info,"",%progbits
 1183              	.Ldebug_info0:
 1184 0000 99060000 		.4byte	0x699
 1185 0004 0400     		.2byte	0x4
 1186 0006 00000000 		.4byte	.Ldebug_abbrev0
 1187 000a 04       		.byte	0x4
 1188 000b 01       		.uleb128 0x1
 1189 000c B5000000 		.4byte	.LASF97
 1190 0010 0C       		.byte	0xc
 1191 0011 93040000 		.4byte	.LASF98
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 31


 1192 0015 AB010000 		.4byte	.LASF99
 1193 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1194 001d 00000000 		.4byte	0
 1195 0021 00000000 		.4byte	.Ldebug_line0
 1196 0025 02       		.uleb128 0x2
 1197 0026 01       		.byte	0x1
 1198 0027 06       		.byte	0x6
 1199 0028 A3030000 		.4byte	.LASF0
 1200 002c 02       		.uleb128 0x2
 1201 002d 01       		.byte	0x1
 1202 002e 08       		.byte	0x8
 1203 002f 6A030000 		.4byte	.LASF1
 1204 0033 02       		.uleb128 0x2
 1205 0034 02       		.byte	0x2
 1206 0035 05       		.byte	0x5
 1207 0036 8B000000 		.4byte	.LASF2
 1208 003a 02       		.uleb128 0x2
 1209 003b 02       		.byte	0x2
 1210 003c 07       		.byte	0x7
 1211 003d 40040000 		.4byte	.LASF3
 1212 0041 03       		.uleb128 0x3
 1213 0042 D2040000 		.4byte	.LASF12
 1214 0046 02       		.byte	0x2
 1215 0047 3F       		.byte	0x3f
 1216 0048 4C000000 		.4byte	0x4c
 1217 004c 02       		.uleb128 0x2
 1218 004d 04       		.byte	0x4
 1219 004e 05       		.byte	0x5
 1220 004f CE020000 		.4byte	.LASF4
 1221 0053 02       		.uleb128 0x2
 1222 0054 04       		.byte	0x4
 1223 0055 07       		.byte	0x7
 1224 0056 9A040000 		.4byte	.LASF5
 1225 005a 02       		.uleb128 0x2
 1226 005b 08       		.byte	0x8
 1227 005c 05       		.byte	0x5
 1228 005d 82020000 		.4byte	.LASF6
 1229 0061 02       		.uleb128 0x2
 1230 0062 08       		.byte	0x8
 1231 0063 07       		.byte	0x7
 1232 0064 AF030000 		.4byte	.LASF7
 1233 0068 04       		.uleb128 0x4
 1234 0069 04       		.byte	0x4
 1235 006a 05       		.byte	0x5
 1236 006b 696E7400 		.ascii	"int\000"
 1237 006f 02       		.uleb128 0x2
 1238 0070 04       		.byte	0x4
 1239 0071 07       		.byte	0x7
 1240 0072 C6030000 		.4byte	.LASF8
 1241 0076 02       		.uleb128 0x2
 1242 0077 08       		.byte	0x8
 1243 0078 04       		.byte	0x4
 1244 0079 5E030000 		.4byte	.LASF9
 1245 007d 02       		.uleb128 0x2
 1246 007e 04       		.byte	0x4
 1247 007f 07       		.byte	0x7
 1248 0080 A2000000 		.4byte	.LASF10
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 32


 1249 0084 05       		.uleb128 0x5
 1250 0085 04       		.byte	0x4
 1251 0086 8A000000 		.4byte	0x8a
 1252 008a 02       		.uleb128 0x2
 1253 008b 01       		.byte	0x1
 1254 008c 08       		.byte	0x8
 1255 008d 13040000 		.4byte	.LASF11
 1256 0091 03       		.uleb128 0x3
 1257 0092 23040000 		.4byte	.LASF13
 1258 0096 03       		.byte	0x3
 1259 0097 2C       		.byte	0x2c
 1260 0098 41000000 		.4byte	0x41
 1261 009c 02       		.uleb128 0x2
 1262 009d 08       		.byte	0x8
 1263 009e 04       		.byte	0x4
 1264 009f 29000000 		.4byte	.LASF14
 1265 00a3 02       		.uleb128 0x2
 1266 00a4 04       		.byte	0x4
 1267 00a5 04       		.byte	0x4
 1268 00a6 62020000 		.4byte	.LASF15
 1269 00aa 06       		.uleb128 0x6
 1270 00ab A5010000 		.4byte	.LASF16
 1271 00af 04       		.byte	0x4
 1272 00b0 E401     		.2byte	0x1e4
 1273 00b2 2C000000 		.4byte	0x2c
 1274 00b6 06       		.uleb128 0x6
 1275 00b7 8C040000 		.4byte	.LASF17
 1276 00bb 04       		.byte	0x4
 1277 00bc E501     		.2byte	0x1e5
 1278 00be 3A000000 		.4byte	0x3a
 1279 00c2 06       		.uleb128 0x6
 1280 00c3 9D020000 		.4byte	.LASF18
 1281 00c7 04       		.byte	0x4
 1282 00c8 E701     		.2byte	0x1e7
 1283 00ca 25000000 		.4byte	0x25
 1284 00ce 06       		.uleb128 0x6
 1285 00cf 9F010000 		.4byte	.LASF19
 1286 00d3 04       		.byte	0x4
 1287 00d4 E801     		.2byte	0x1e8
 1288 00d6 33000000 		.4byte	0x33
 1289 00da 07       		.uleb128 0x7
 1290 00db 09040000 		.4byte	.LASF100
 1291 00df 20       		.byte	0x20
 1292 00e0 05       		.byte	0x5
 1293 00e1 29       		.byte	0x29
 1294 00e2 B3010000 		.4byte	0x1b3
 1295 00e6 08       		.uleb128 0x8
 1296 00e7 91050000 		.4byte	.LASF20
 1297 00eb 05       		.byte	0x5
 1298 00ec 2A       		.byte	0x2a
 1299 00ed C2000000 		.4byte	0xc2
 1300 00f1 00       		.byte	0
 1301 00f2 08       		.uleb128 0x8
 1302 00f3 99010000 		.4byte	.LASF21
 1303 00f7 05       		.byte	0x5
 1304 00f8 2B       		.byte	0x2b
 1305 00f9 AA000000 		.4byte	0xaa
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 33


 1306 00fd 01       		.byte	0x1
 1307 00fe 08       		.uleb128 0x8
 1308 00ff 18040000 		.4byte	.LASF22
 1309 0103 05       		.byte	0x5
 1310 0104 2C       		.byte	0x2c
 1311 0105 CE000000 		.4byte	0xce
 1312 0109 02       		.byte	0x2
 1313 010a 08       		.uleb128 0x8
 1314 010b 49050000 		.4byte	.LASF23
 1315 010f 05       		.byte	0x5
 1316 0110 2D       		.byte	0x2d
 1317 0111 CE000000 		.4byte	0xce
 1318 0115 04       		.byte	0x4
 1319 0116 08       		.uleb128 0x8
 1320 0117 96050000 		.4byte	.LASF24
 1321 011b 05       		.byte	0x5
 1322 011c 2E       		.byte	0x2e
 1323 011d CE000000 		.4byte	0xce
 1324 0121 06       		.byte	0x6
 1325 0122 08       		.uleb128 0x8
 1326 0123 C6020000 		.4byte	.LASF25
 1327 0127 05       		.byte	0x5
 1328 0128 2F       		.byte	0x2f
 1329 0129 CE000000 		.4byte	0xce
 1330 012d 08       		.byte	0x8
 1331 012e 08       		.uleb128 0x8
 1332 012f 05050000 		.4byte	.LASF26
 1333 0133 05       		.byte	0x5
 1334 0134 30       		.byte	0x30
 1335 0135 CE000000 		.4byte	0xce
 1336 0139 0A       		.byte	0xa
 1337 013a 08       		.uleb128 0x8
 1338 013b 8B030000 		.4byte	.LASF27
 1339 013f 05       		.byte	0x5
 1340 0140 31       		.byte	0x31
 1341 0141 CE000000 		.4byte	0xce
 1342 0145 0C       		.byte	0xc
 1343 0146 08       		.uleb128 0x8
 1344 0147 B9020000 		.4byte	.LASF28
 1345 014b 05       		.byte	0x5
 1346 014c 32       		.byte	0x32
 1347 014d CE000000 		.4byte	0xce
 1348 0151 0E       		.byte	0xe
 1349 0152 08       		.uleb128 0x8
 1350 0153 F7030000 		.4byte	.LASF29
 1351 0157 05       		.byte	0x5
 1352 0158 33       		.byte	0x33
 1353 0159 CE000000 		.4byte	0xce
 1354 015d 10       		.byte	0x10
 1355 015e 08       		.uleb128 0x8
 1356 015f 2B040000 		.4byte	.LASF30
 1357 0163 05       		.byte	0x5
 1358 0164 34       		.byte	0x34
 1359 0165 CE000000 		.4byte	0xce
 1360 0169 12       		.byte	0x12
 1361 016a 08       		.uleb128 0x8
 1362 016b 53040000 		.4byte	.LASF31
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 34


 1363 016f 05       		.byte	0x5
 1364 0170 35       		.byte	0x35
 1365 0171 CE000000 		.4byte	0xce
 1366 0175 14       		.byte	0x14
 1367 0176 08       		.uleb128 0x8
 1368 0177 6E050000 		.4byte	.LASF32
 1369 017b 05       		.byte	0x5
 1370 017c 36       		.byte	0x36
 1371 017d CE000000 		.4byte	0xce
 1372 0181 16       		.byte	0x16
 1373 0182 08       		.uleb128 0x8
 1374 0183 83000000 		.4byte	.LASF33
 1375 0187 05       		.byte	0x5
 1376 0188 37       		.byte	0x37
 1377 0189 CE000000 		.4byte	0xce
 1378 018d 18       		.byte	0x18
 1379 018e 08       		.uleb128 0x8
 1380 018f B1020000 		.4byte	.LASF34
 1381 0193 05       		.byte	0x5
 1382 0194 38       		.byte	0x38
 1383 0195 CE000000 		.4byte	0xce
 1384 0199 1A       		.byte	0x1a
 1385 019a 08       		.uleb128 0x8
 1386 019b EE030000 		.4byte	.LASF35
 1387 019f 05       		.byte	0x5
 1388 01a0 39       		.byte	0x39
 1389 01a1 CE000000 		.4byte	0xce
 1390 01a5 1C       		.byte	0x1c
 1391 01a6 08       		.uleb128 0x8
 1392 01a7 33040000 		.4byte	.LASF36
 1393 01ab 05       		.byte	0x5
 1394 01ac 3A       		.byte	0x3a
 1395 01ad CE000000 		.4byte	0xce
 1396 01b1 1E       		.byte	0x1e
 1397 01b2 00       		.byte	0
 1398 01b3 09       		.uleb128 0x9
 1399 01b4 EA040000 		.4byte	.LASF37
 1400 01b8 01       		.byte	0x1
 1401 01b9 33       		.byte	0x33
 1402 01ba 00000000 		.4byte	.LFB64
 1403 01be 14000000 		.4byte	.LFE64-.LFB64
 1404 01c2 01       		.uleb128 0x1
 1405 01c3 9C       		.byte	0x9c
 1406 01c4 09       		.uleb128 0x9
 1407 01c5 67000000 		.4byte	.LASF38
 1408 01c9 01       		.byte	0x1
 1409 01ca 39       		.byte	0x39
 1410 01cb 00000000 		.4byte	.LFB65
 1411 01cf 14000000 		.4byte	.LFE65-.LFB65
 1412 01d3 01       		.uleb128 0x1
 1413 01d4 9C       		.byte	0x9c
 1414 01d5 09       		.uleb128 0x9
 1415 01d6 00000000 		.4byte	.LASF39
 1416 01da 01       		.byte	0x1
 1417 01db 3F       		.byte	0x3f
 1418 01dc 00000000 		.4byte	.LFB66
 1419 01e0 14000000 		.4byte	.LFE66-.LFB66
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 35


 1420 01e4 01       		.uleb128 0x1
 1421 01e5 9C       		.byte	0x9c
 1422 01e6 0A       		.uleb128 0xa
 1423 01e7 DC040000 		.4byte	.LASF40
 1424 01eb 01       		.byte	0x1
 1425 01ec 44       		.byte	0x44
 1426 01ed 00000000 		.4byte	.LFB67
 1427 01f1 20000000 		.4byte	.LFE67-.LFB67
 1428 01f5 01       		.uleb128 0x1
 1429 01f6 9C       		.byte	0x9c
 1430 01f7 08020000 		.4byte	0x208
 1431 01fb 0B       		.uleb128 0xb
 1432 01fc 7800     		.ascii	"x\000"
 1433 01fe 01       		.byte	0x1
 1434 01ff 44       		.byte	0x44
 1435 0200 AA000000 		.4byte	0xaa
 1436 0204 02       		.uleb128 0x2
 1437 0205 91       		.byte	0x91
 1438 0206 77       		.sleb128 -9
 1439 0207 00       		.byte	0
 1440 0208 0A       		.uleb128 0xa
 1441 0209 7B050000 		.4byte	.LASF41
 1442 020d 01       		.byte	0x1
 1443 020e 4F       		.byte	0x4f
 1444 020f 00000000 		.4byte	.LFB68
 1445 0213 20000000 		.4byte	.LFE68-.LFB68
 1446 0217 01       		.uleb128 0x1
 1447 0218 9C       		.byte	0x9c
 1448 0219 2A020000 		.4byte	0x22a
 1449 021d 0B       		.uleb128 0xb
 1450 021e 7800     		.ascii	"x\000"
 1451 0220 01       		.byte	0x1
 1452 0221 4F       		.byte	0x4f
 1453 0222 68000000 		.4byte	0x68
 1454 0226 02       		.uleb128 0x2
 1455 0227 91       		.byte	0x91
 1456 0228 74       		.sleb128 -12
 1457 0229 00       		.byte	0
 1458 022a 0A       		.uleb128 0xa
 1459 022b 50000000 		.4byte	.LASF42
 1460 022f 01       		.byte	0x1
 1461 0230 5E       		.byte	0x5e
 1462 0231 00000000 		.4byte	.LFB69
 1463 0235 BC000000 		.4byte	.LFE69-.LFB69
 1464 0239 01       		.uleb128 0x1
 1465 023a 9C       		.byte	0x9c
 1466 023b 94020000 		.4byte	0x294
 1467 023f 0C       		.uleb128 0xc
 1468 0240 61010000 		.4byte	.LASF43
 1469 0244 01       		.byte	0x1
 1470 0245 66       		.byte	0x66
 1471 0246 CE000000 		.4byte	0xce
 1472 024a 02       		.uleb128 0x2
 1473 024b 91       		.byte	0x91
 1474 024c 76       		.sleb128 -10
 1475 024d 0C       		.uleb128 0xc
 1476 024e 69010000 		.4byte	.LASF44
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 36


 1477 0252 01       		.byte	0x1
 1478 0253 67       		.byte	0x67
 1479 0254 CE000000 		.4byte	0xce
 1480 0258 02       		.uleb128 0x2
 1481 0259 91       		.byte	0x91
 1482 025a 74       		.sleb128 -12
 1483 025b 0C       		.uleb128 0xc
 1484 025c 71010000 		.4byte	.LASF45
 1485 0260 01       		.byte	0x1
 1486 0261 68       		.byte	0x68
 1487 0262 CE000000 		.4byte	0xce
 1488 0266 02       		.uleb128 0x2
 1489 0267 91       		.byte	0x91
 1490 0268 72       		.sleb128 -14
 1491 0269 0C       		.uleb128 0xc
 1492 026a 51010000 		.4byte	.LASF46
 1493 026e 01       		.byte	0x1
 1494 026f 6A       		.byte	0x6a
 1495 0270 CE000000 		.4byte	0xce
 1496 0274 02       		.uleb128 0x2
 1497 0275 91       		.byte	0x91
 1498 0276 70       		.sleb128 -16
 1499 0277 0C       		.uleb128 0xc
 1500 0278 59010000 		.4byte	.LASF47
 1501 027c 01       		.byte	0x1
 1502 027d 6B       		.byte	0x6b
 1503 027e CE000000 		.4byte	0xce
 1504 0282 02       		.uleb128 0x2
 1505 0283 91       		.byte	0x91
 1506 0284 6E       		.sleb128 -18
 1507 0285 0C       		.uleb128 0xc
 1508 0286 79010000 		.4byte	.LASF48
 1509 028a 01       		.byte	0x1
 1510 028b 6C       		.byte	0x6c
 1511 028c CE000000 		.4byte	0xce
 1512 0290 02       		.uleb128 0x2
 1513 0291 91       		.byte	0x91
 1514 0292 6C       		.sleb128 -20
 1515 0293 00       		.byte	0
 1516 0294 0D       		.uleb128 0xd
 1517 0295 68020000 		.4byte	.LASF56
 1518 0299 01       		.byte	0x1
 1519 029a 8E       		.byte	0x8e
 1520 029b 00000000 		.4byte	.LFB70
 1521 029f 0C000000 		.4byte	.LFE70-.LFB70
 1522 02a3 01       		.uleb128 0x1
 1523 02a4 9C       		.byte	0x9c
 1524 02a5 0E       		.uleb128 0xe
 1525 02a6 FA040000 		.4byte	.LASF65
 1526 02aa 01       		.byte	0x1
 1527 02ab A1       		.byte	0xa1
 1528 02ac 00000000 		.4byte	.LFB71
 1529 02b0 C0000000 		.4byte	.LFE71-.LFB71
 1530 02b4 01       		.uleb128 0x1
 1531 02b5 9C       		.byte	0x9c
 1532 02b6 13030000 		.4byte	0x313
 1533 02ba 0C       		.uleb128 0xc
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 37


 1534 02bb D7020000 		.4byte	.LASF49
 1535 02bf 01       		.byte	0x1
 1536 02c0 A2       		.byte	0xa2
 1537 02c1 CE000000 		.4byte	0xce
 1538 02c5 02       		.uleb128 0x2
 1539 02c6 91       		.byte	0x91
 1540 02c7 76       		.sleb128 -10
 1541 02c8 0C       		.uleb128 0xc
 1542 02c9 EC020000 		.4byte	.LASF50
 1543 02cd 01       		.byte	0x1
 1544 02ce A3       		.byte	0xa3
 1545 02cf CE000000 		.4byte	0xce
 1546 02d3 02       		.uleb128 0x2
 1547 02d4 91       		.byte	0x91
 1548 02d5 74       		.sleb128 -12
 1549 02d6 0C       		.uleb128 0xc
 1550 02d7 49030000 		.4byte	.LASF51
 1551 02db 01       		.byte	0x1
 1552 02dc A4       		.byte	0xa4
 1553 02dd CE000000 		.4byte	0xce
 1554 02e1 02       		.uleb128 0x2
 1555 02e2 91       		.byte	0x91
 1556 02e3 72       		.sleb128 -14
 1557 02e4 0C       		.uleb128 0xc
 1558 02e5 3A030000 		.4byte	.LASF52
 1559 02e9 01       		.byte	0x1
 1560 02ea A5       		.byte	0xa5
 1561 02eb CE000000 		.4byte	0xce
 1562 02ef 02       		.uleb128 0x2
 1563 02f0 91       		.byte	0x91
 1564 02f1 70       		.sleb128 -16
 1565 02f2 0C       		.uleb128 0xc
 1566 02f3 01030000 		.4byte	.LASF53
 1567 02f7 01       		.byte	0x1
 1568 02f8 A6       		.byte	0xa6
 1569 02f9 13030000 		.4byte	0x313
 1570 02fd 04       		.uleb128 0x4
 1571 02fe 91       		.byte	0x91
 1572 02ff E0B17F   		.sleb128 -10016
 1573 0302 0C       		.uleb128 0xc
 1574 0303 8C010000 		.4byte	.LASF54
 1575 0307 01       		.byte	0x1
 1576 0308 A8       		.byte	0xa8
 1577 0309 13030000 		.4byte	0x313
 1578 030d 04       		.uleb128 0x4
 1579 030e 91       		.byte	0x91
 1580 030f D0E37E   		.sleb128 -20016
 1581 0312 00       		.byte	0
 1582 0313 0F       		.uleb128 0xf
 1583 0314 8A000000 		.4byte	0x8a
 1584 0318 24030000 		.4byte	0x324
 1585 031c 10       		.uleb128 0x10
 1586 031d 7D000000 		.4byte	0x7d
 1587 0321 0F27     		.2byte	0x270f
 1588 0323 00       		.byte	0
 1589 0324 09       		.uleb128 0x9
 1590 0325 48010000 		.4byte	.LASF55
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 38


 1591 0329 01       		.byte	0x1
 1592 032a B0       		.byte	0xb0
 1593 032b 00000000 		.4byte	.LFB72
 1594 032f 2C000000 		.4byte	.LFE72-.LFB72
 1595 0333 01       		.uleb128 0x1
 1596 0334 9C       		.byte	0x9c
 1597 0335 11       		.uleb128 0x11
 1598 0336 0A000000 		.4byte	.LASF57
 1599 033a 01       		.byte	0x1
 1600 033b C7       		.byte	0xc7
 1601 033c 00000000 		.4byte	.LFB73
 1602 0340 0C000000 		.4byte	.LFE73-.LFB73
 1603 0344 01       		.uleb128 0x1
 1604 0345 9C       		.byte	0x9c
 1605 0346 12       		.uleb128 0x12
 1606 0347 43010000 		.4byte	.LASF58
 1607 034b 01       		.byte	0x1
 1608 034c D4       		.byte	0xd4
 1609 034d 68000000 		.4byte	0x68
 1610 0351 00000000 		.4byte	.LFB74
 1611 0355 1C010000 		.4byte	.LFE74-.LFB74
 1612 0359 01       		.uleb128 0x1
 1613 035a 9C       		.byte	0x9c
 1614 035b 88030000 		.4byte	0x388
 1615 035f 13       		.uleb128 0x13
 1616 0360 67050000 		.4byte	.LASF59
 1617 0364 01       		.byte	0x1
 1618 0365 0F01     		.2byte	0x10f
 1619 0367 68000000 		.4byte	0x68
 1620 036b 02       		.uleb128 0x2
 1621 036c 91       		.byte	0x91
 1622 036d 74       		.sleb128 -12
 1623 036e 14       		.uleb128 0x14
 1624 036f 54000000 		.4byte	.LBB2
 1625 0373 AE000000 		.4byte	.LBE2-.LBB2
 1626 0377 13       		.uleb128 0x13
 1627 0378 FF030000 		.4byte	.LASF60
 1628 037c 01       		.byte	0x1
 1629 037d 2501     		.2byte	0x125
 1630 037f 68000000 		.4byte	0x68
 1631 0383 02       		.uleb128 0x2
 1632 0384 91       		.byte	0x91
 1633 0385 70       		.sleb128 -16
 1634 0386 00       		.byte	0
 1635 0387 00       		.byte	0
 1636 0388 15       		.uleb128 0x15
 1637 0389 78040000 		.4byte	.LASF61
 1638 038d 01       		.byte	0x1
 1639 038e 9001     		.2byte	0x190
 1640 0390 68000000 		.4byte	0x68
 1641 0394 00000000 		.4byte	.LFB75
 1642 0398 50000000 		.4byte	.LFE75-.LFB75
 1643 039c 01       		.uleb128 0x1
 1644 039d 9C       		.byte	0x9c
 1645 039e DC030000 		.4byte	0x3dc
 1646 03a2 13       		.uleb128 0x13
 1647 03a3 61050000 		.4byte	.LASF62
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 39


 1648 03a7 01       		.byte	0x1
 1649 03a8 9201     		.2byte	0x192
 1650 03aa 68000000 		.4byte	0x68
 1651 03ae 02       		.uleb128 0x2
 1652 03af 91       		.byte	0x91
 1653 03b0 74       		.sleb128 -12
 1654 03b1 16       		.uleb128 0x16
 1655 03b2 513300   		.ascii	"Q3\000"
 1656 03b5 01       		.byte	0x1
 1657 03b6 9301     		.2byte	0x193
 1658 03b8 68000000 		.4byte	0x68
 1659 03bc 02       		.uleb128 0x2
 1660 03bd 91       		.byte	0x91
 1661 03be 70       		.sleb128 -16
 1662 03bf 16       		.uleb128 0x16
 1663 03c0 513400   		.ascii	"Q4\000"
 1664 03c3 01       		.byte	0x1
 1665 03c4 9401     		.2byte	0x194
 1666 03c6 68000000 		.4byte	0x68
 1667 03ca 02       		.uleb128 0x2
 1668 03cb 91       		.byte	0x91
 1669 03cc 6C       		.sleb128 -20
 1670 03cd 16       		.uleb128 0x16
 1671 03ce 513500   		.ascii	"Q5\000"
 1672 03d1 01       		.byte	0x1
 1673 03d2 9501     		.2byte	0x195
 1674 03d4 68000000 		.4byte	0x68
 1675 03d8 02       		.uleb128 0x2
 1676 03d9 91       		.byte	0x91
 1677 03da 68       		.sleb128 -24
 1678 03db 00       		.byte	0
 1679 03dc 17       		.uleb128 0x17
 1680 03dd 90020000 		.4byte	.LASF63
 1681 03e1 01       		.byte	0x1
 1682 03e2 9C01     		.2byte	0x19c
 1683 03e4 00000000 		.4byte	.LFB76
 1684 03e8 3E000000 		.4byte	.LFE76-.LFB76
 1685 03ec 01       		.uleb128 0x1
 1686 03ed 9C       		.byte	0x9c
 1687 03ee 00040000 		.4byte	0x400
 1688 03f2 18       		.uleb128 0x18
 1689 03f3 7300     		.ascii	"s\000"
 1690 03f5 01       		.byte	0x1
 1691 03f6 9C01     		.2byte	0x19c
 1692 03f8 84000000 		.4byte	0x84
 1693 03fc 02       		.uleb128 0x2
 1694 03fd 91       		.byte	0x91
 1695 03fe 74       		.sleb128 -12
 1696 03ff 00       		.byte	0
 1697 0400 17       		.uleb128 0x17
 1698 0401 3C000000 		.4byte	.LASF64
 1699 0405 01       		.byte	0x1
 1700 0406 AA01     		.2byte	0x1aa
 1701 0408 00000000 		.4byte	.LFB77
 1702 040c 26000000 		.4byte	.LFE77-.LFB77
 1703 0410 01       		.uleb128 0x1
 1704 0411 9C       		.byte	0x9c
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 40


 1705 0412 24040000 		.4byte	0x424
 1706 0416 18       		.uleb128 0x18
 1707 0417 6300     		.ascii	"c\000"
 1708 0419 01       		.byte	0x1
 1709 041a AA01     		.2byte	0x1aa
 1710 041c 8A000000 		.4byte	0x8a
 1711 0420 02       		.uleb128 0x2
 1712 0421 91       		.byte	0x91
 1713 0422 77       		.sleb128 -9
 1714 0423 00       		.byte	0
 1715 0424 19       		.uleb128 0x19
 1716 0425 22050000 		.4byte	.LASF66
 1717 0429 01       		.byte	0x1
 1718 042a B201     		.2byte	0x1b2
 1719 042c 00000000 		.4byte	.LFB78
 1720 0430 CC000000 		.4byte	.LFE78-.LFB78
 1721 0434 01       		.uleb128 0x1
 1722 0435 9C       		.byte	0x9c
 1723 0436 6C040000 		.4byte	0x46c
 1724 043a 13       		.uleb128 0x13
 1725 043b AC040000 		.4byte	.LASF67
 1726 043f 01       		.byte	0x1
 1727 0440 B801     		.2byte	0x1b8
 1728 0442 AA000000 		.4byte	0xaa
 1729 0446 05       		.uleb128 0x5
 1730 0447 03       		.byte	0x3
 1731 0448 45000000 		.4byte	usbStarted.8797
 1732 044c 13       		.uleb128 0x13
 1733 044d E2030000 		.4byte	.LASF68
 1734 0451 01       		.byte	0x1
 1735 0452 B901     		.2byte	0x1b9
 1736 0454 B6000000 		.4byte	0xb6
 1737 0458 05       		.uleb128 0x5
 1738 0459 03       		.byte	0x3
 1739 045a 46000000 		.4byte	usbBufCount.8798
 1740 045e 16       		.uleb128 0x16
 1741 045f 6300     		.ascii	"c\000"
 1742 0461 01       		.byte	0x1
 1743 0462 BA01     		.2byte	0x1ba
 1744 0464 AA000000 		.4byte	0xaa
 1745 0468 02       		.uleb128 0x2
 1746 0469 91       		.byte	0x91
 1747 046a 77       		.sleb128 -9
 1748 046b 00       		.byte	0
 1749 046c 0C       		.uleb128 0xc
 1750 046d C0040000 		.4byte	.LASF69
 1751 0471 01       		.byte	0x1
 1752 0472 8D       		.byte	0x8d
 1753 0473 7D040000 		.4byte	0x47d
 1754 0477 05       		.uleb128 0x5
 1755 0478 03       		.byte	0x3
 1756 0479 44000000 		.4byte	count
 1757 047d 1A       		.uleb128 0x1a
 1758 047e C2000000 		.4byte	0xc2
 1759 0482 1B       		.uleb128 0x1b
 1760 0483 54050000 		.4byte	.LASF70
 1761 0487 06       		.byte	0x6
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 41


 1762 0488 1207     		.2byte	0x712
 1763 048a 8E040000 		.4byte	0x48e
 1764 048e 1A       		.uleb128 0x1a
 1765 048f 91000000 		.4byte	0x91
 1766 0493 1C       		.uleb128 0x1c
 1767 0494 747300   		.ascii	"ts\000"
 1768 0497 05       		.byte	0x5
 1769 0498 10       		.byte	0x10
 1770 0499 AA000000 		.4byte	0xaa
 1771 049d 05       		.uleb128 0x5
 1772 049e 03       		.byte	0x3
 1773 049f 00000000 		.4byte	ts
 1774 04a3 1D       		.uleb128 0x1d
 1775 04a4 22000000 		.4byte	.LASF71
 1776 04a8 05       		.byte	0x5
 1777 04a9 11       		.byte	0x11
 1778 04aa B6000000 		.4byte	0xb6
 1779 04ae 05       		.uleb128 0x5
 1780 04af 03       		.byte	0x3
 1781 04b0 00000000 		.4byte	ts_enc
 1782 04b4 1D       		.uleb128 0x1d
 1783 04b5 18050000 		.4byte	.LASF72
 1784 04b9 05       		.byte	0x5
 1785 04ba 12       		.byte	0x12
 1786 04bb B6000000 		.4byte	0xb6
 1787 04bf 05       		.uleb128 0x5
 1788 04c0 03       		.byte	0x3
 1789 04c1 00000000 		.4byte	ts_update
 1790 04c5 1D       		.uleb128 0x1d
 1791 04c6 B7040000 		.4byte	.LASF73
 1792 04ca 05       		.byte	0x5
 1793 04cb 13       		.byte	0x13
 1794 04cc B6000000 		.4byte	0xb6
 1795 04d0 05       		.uleb128 0x5
 1796 04d1 03       		.byte	0x3
 1797 04d2 00000000 		.4byte	ts_speed
 1798 04d6 1D       		.uleb128 0x1d
 1799 04d7 0D050000 		.4byte	.LASF74
 1800 04db 05       		.byte	0x5
 1801 04dc 14       		.byte	0x14
 1802 04dd B6000000 		.4byte	0xb6
 1803 04e1 05       		.uleb128 0x5
 1804 04e2 03       		.byte	0x3
 1805 04e3 00000000 		.4byte	ts_display
 1806 04e7 1D       		.uleb128 0x1d
 1807 04e8 C6040000 		.4byte	.LASF75
 1808 04ec 05       		.byte	0x5
 1809 04ed 16       		.byte	0x16
 1810 04ee AA000000 		.4byte	0xaa
 1811 04f2 05       		.uleb128 0x5
 1812 04f3 03       		.byte	0x3
 1813 04f4 00000000 		.4byte	flag_ts_enc
 1814 04f8 1D       		.uleb128 0x1d
 1815 04f9 A2020000 		.4byte	.LASF76
 1816 04fd 05       		.byte	0x5
 1817 04fe 17       		.byte	0x17
 1818 04ff AA000000 		.4byte	0xaa
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 42


 1819 0503 05       		.uleb128 0x5
 1820 0504 03       		.byte	0x3
 1821 0505 00000000 		.4byte	flag_ts_update
 1822 0509 1D       		.uleb128 0x1d
 1823 050a 6A040000 		.4byte	.LASF77
 1824 050e 05       		.byte	0x5
 1825 050f 18       		.byte	0x18
 1826 0510 AA000000 		.4byte	0xaa
 1827 0514 05       		.uleb128 0x5
 1828 0515 03       		.byte	0x3
 1829 0516 00000000 		.4byte	flag_ts_speed
 1830 051a 1D       		.uleb128 0x1d
 1831 051b 22030000 		.4byte	.LASF78
 1832 051f 05       		.byte	0x5
 1833 0520 19       		.byte	0x19
 1834 0521 AA000000 		.4byte	0xaa
 1835 0525 05       		.uleb128 0x5
 1836 0526 03       		.byte	0x3
 1837 0527 00000000 		.4byte	flag_ts_display
 1838 052b 1D       		.uleb128 0x1d
 1839 052c 32030000 		.4byte	.LASF79
 1840 0530 05       		.byte	0x5
 1841 0531 1C       		.byte	0x1c
 1842 0532 AA000000 		.4byte	0xaa
 1843 0536 05       		.uleb128 0x5
 1844 0537 03       		.byte	0x3
 1845 0538 00000000 		.4byte	flag_rx
 1846 053c 1D       		.uleb128 0x1d
 1847 053d 30000000 		.4byte	.LASF80
 1848 0541 05       		.byte	0x5
 1849 0542 1D       		.byte	0x1d
 1850 0543 AA000000 		.4byte	0xaa
 1851 0547 05       		.uleb128 0x5
 1852 0548 03       		.byte	0x3
 1853 0549 00000000 		.4byte	flag_packet
 1854 054d 1D       		.uleb128 0x1d
 1855 054e D3030000 		.4byte	.LASF81
 1856 0552 05       		.byte	0x5
 1857 0553 1E       		.byte	0x1e
 1858 0554 AA000000 		.4byte	0xaa
 1859 0558 05       		.uleb128 0x5
 1860 0559 03       		.byte	0x3
 1861 055a 00000000 		.4byte	flag_KB_string
 1862 055e 1D       		.uleb128 0x1d
 1863 055f 94030000 		.4byte	.LASF82
 1864 0563 05       		.byte	0x5
 1865 0564 20       		.byte	0x20
 1866 0565 AA000000 		.4byte	0xaa
 1867 0569 05       		.uleb128 0x5
 1868 056a 03       		.byte	0x3
 1869 056b 00000000 		.4byte	dataready_flag
 1870 056f 1D       		.uleb128 0x1d
 1871 0570 2D050000 		.4byte	.LASF83
 1872 0574 05       		.byte	0x5
 1873 0575 22       		.byte	0x22
 1874 0576 AA000000 		.4byte	0xaa
 1875 057a 05       		.uleb128 0x5
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 43


 1876 057b 03       		.byte	0x3
 1877 057c 00000000 		.4byte	flag_rf_transmission_active
 1878 0580 0F       		.uleb128 0xf
 1879 0581 8A000000 		.4byte	0x8a
 1880 0585 90050000 		.4byte	0x590
 1881 0589 1E       		.uleb128 0x1e
 1882 058a 7D000000 		.4byte	0x7d
 1883 058e 3F       		.byte	0x3f
 1884 058f 00       		.byte	0
 1885 0590 1D       		.uleb128 0x1d
 1886 0591 5C040000 		.4byte	.LASF84
 1887 0595 05       		.byte	0x5
 1888 0596 25       		.byte	0x25
 1889 0597 80050000 		.4byte	0x580
 1890 059b 05       		.uleb128 0x5
 1891 059c 03       		.byte	0x3
 1892 059d 00000000 		.4byte	displaystring
 1893 05a1 1D       		.uleb128 0x1d
 1894 05a2 1D030000 		.4byte	.LASF85
 1895 05a6 05       		.byte	0x5
 1896 05a7 26       		.byte	0x26
 1897 05a8 80050000 		.4byte	0x580
 1898 05ac 05       		.uleb128 0x5
 1899 05ad 03       		.byte	0x3
 1900 05ae 00000000 		.4byte	line
 1901 05b2 1D       		.uleb128 0x1d
 1902 05b3 58030000 		.4byte	.LASF86
 1903 05b7 05       		.byte	0x5
 1904 05b8 26       		.byte	0x26
 1905 05b9 80050000 		.4byte	0x580
 1906 05bd 05       		.uleb128 0x5
 1907 05be 03       		.byte	0x3
 1908 05bf 00000000 		.4byte	entry
 1909 05c3 0F       		.uleb128 0xf
 1910 05c4 AA000000 		.4byte	0xaa
 1911 05c8 D3050000 		.4byte	0x5d3
 1912 05cc 1E       		.uleb128 0x1e
 1913 05cd 7D000000 		.4byte	0x7d
 1914 05d1 3F       		.byte	0x3f
 1915 05d2 00       		.byte	0
 1916 05d3 1D       		.uleb128 0x1d
 1917 05d4 AB000000 		.4byte	.LASF87
 1918 05d8 05       		.byte	0x5
 1919 05d9 27       		.byte	0x27
 1920 05da C3050000 		.4byte	0x5c3
 1921 05de 05       		.uleb128 0x5
 1922 05df 03       		.byte	0x3
 1923 05e0 00000000 		.4byte	usbBuffer
 1924 05e4 1D       		.uleb128 0x1d
 1925 05e5 95000000 		.4byte	.LASF88
 1926 05e9 05       		.byte	0x5
 1927 05ea 3C       		.byte	0x3c
 1928 05eb DA000000 		.4byte	0xda
 1929 05ef 05       		.uleb128 0x5
 1930 05f0 03       		.byte	0x3
 1931 05f1 00000000 		.4byte	system_state
 1932 05f5 1D       		.uleb128 0x1d
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 44


 1933 05f6 44020000 		.4byte	.LASF89
 1934 05fa 01       		.byte	0x1
 1935 05fb 56       		.byte	0x56
 1936 05fc 68000000 		.4byte	0x68
 1937 0600 05       		.uleb128 0x5
 1938 0601 03       		.byte	0x3
 1939 0602 00000000 		.4byte	changeMotor
 1940 0606 1D       		.uleb128 0x1d
 1941 0607 78000000 		.4byte	.LASF90
 1942 060b 01       		.byte	0x1
 1943 060c 57       		.byte	0x57
 1944 060d 68000000 		.4byte	0x68
 1945 0611 05       		.uleb128 0x5
 1946 0612 03       		.byte	0x3
 1947 0613 00000000 		.4byte	checkLight
 1948 0617 1D       		.uleb128 0x1d
 1949 0618 81010000 		.4byte	.LASF91
 1950 061c 01       		.byte	0x1
 1951 061d 58       		.byte	0x58
 1952 061e 68000000 		.4byte	0x68
 1953 0622 05       		.uleb128 0x5
 1954 0623 03       		.byte	0x3
 1955 0624 00000000 		.4byte	lightState
 1956 0628 0F       		.uleb128 0xf
 1957 0629 38060000 		.4byte	0x638
 1958 062d 38060000 		.4byte	0x638
 1959 0631 1E       		.uleb128 0x1e
 1960 0632 7D000000 		.4byte	0x7d
 1961 0636 02       		.byte	0x2
 1962 0637 00       		.byte	0
 1963 0638 1A       		.uleb128 0x1a
 1964 0639 68000000 		.4byte	0x68
 1965 063d 1D       		.uleb128 0x1d
 1966 063e 78030000 		.4byte	.LASF92
 1967 0642 01       		.byte	0x1
 1968 0643 59       		.byte	0x59
 1969 0644 4E060000 		.4byte	0x64e
 1970 0648 05       		.uleb128 0x5
 1971 0649 03       		.byte	0x3
 1972 064a 00000000 		.4byte	lightDetectedFront
 1973 064e 1A       		.uleb128 0x1a
 1974 064f 28060000 		.4byte	0x628
 1975 0653 1D       		.uleb128 0x1d
 1976 0654 50020000 		.4byte	.LASF93
 1977 0658 01       		.byte	0x1
 1978 0659 5A       		.byte	0x5a
 1979 065a 64060000 		.4byte	0x664
 1980 065e 05       		.uleb128 0x5
 1981 065f 03       		.byte	0x3
 1982 0660 00000000 		.4byte	lightDetectedBack
 1983 0664 1A       		.uleb128 0x1a
 1984 0665 28060000 		.4byte	0x628
 1985 0669 1D       		.uleb128 0x1d
 1986 066a 47000000 		.4byte	.LASF94
 1987 066e 01       		.byte	0x1
 1988 066f 5B       		.byte	0x5b
 1989 0670 38060000 		.4byte	0x638
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 45


 1990 0674 05       		.uleb128 0x5
 1991 0675 03       		.byte	0x3
 1992 0676 00000000 		.4byte	counteoc
 1993 067a 1D       		.uleb128 0x1d
 1994 067b 0E030000 		.4byte	.LASF95
 1995 067f 01       		.byte	0x1
 1996 0680 5C       		.byte	0x5c
 1997 0681 38060000 		.4byte	0x638
 1998 0685 05       		.uleb128 0x5
 1999 0686 03       		.byte	0x3
 2000 0687 00000000 		.4byte	processSensors
 2001 068b 1D       		.uleb128 0x1d
 2002 068c 8A050000 		.4byte	.LASF96
 2003 0690 01       		.byte	0x1
 2004 0691 5D       		.byte	0x5d
 2005 0692 38060000 		.4byte	0x638
 2006 0696 05       		.uleb128 0x5
 2007 0697 03       		.byte	0x3
 2008 0698 00000000 		.4byte	middle
 2009 069c 00       		.byte	0
 2010              		.section	.debug_abbrev,"",%progbits
 2011              	.Ldebug_abbrev0:
 2012 0000 01       		.uleb128 0x1
 2013 0001 11       		.uleb128 0x11
 2014 0002 01       		.byte	0x1
 2015 0003 25       		.uleb128 0x25
 2016 0004 0E       		.uleb128 0xe
 2017 0005 13       		.uleb128 0x13
 2018 0006 0B       		.uleb128 0xb
 2019 0007 03       		.uleb128 0x3
 2020 0008 0E       		.uleb128 0xe
 2021 0009 1B       		.uleb128 0x1b
 2022 000a 0E       		.uleb128 0xe
 2023 000b 55       		.uleb128 0x55
 2024 000c 17       		.uleb128 0x17
 2025 000d 11       		.uleb128 0x11
 2026 000e 01       		.uleb128 0x1
 2027 000f 10       		.uleb128 0x10
 2028 0010 17       		.uleb128 0x17
 2029 0011 00       		.byte	0
 2030 0012 00       		.byte	0
 2031 0013 02       		.uleb128 0x2
 2032 0014 24       		.uleb128 0x24
 2033 0015 00       		.byte	0
 2034 0016 0B       		.uleb128 0xb
 2035 0017 0B       		.uleb128 0xb
 2036 0018 3E       		.uleb128 0x3e
 2037 0019 0B       		.uleb128 0xb
 2038 001a 03       		.uleb128 0x3
 2039 001b 0E       		.uleb128 0xe
 2040 001c 00       		.byte	0
 2041 001d 00       		.byte	0
 2042 001e 03       		.uleb128 0x3
 2043 001f 16       		.uleb128 0x16
 2044 0020 00       		.byte	0
 2045 0021 03       		.uleb128 0x3
 2046 0022 0E       		.uleb128 0xe
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 46


 2047 0023 3A       		.uleb128 0x3a
 2048 0024 0B       		.uleb128 0xb
 2049 0025 3B       		.uleb128 0x3b
 2050 0026 0B       		.uleb128 0xb
 2051 0027 49       		.uleb128 0x49
 2052 0028 13       		.uleb128 0x13
 2053 0029 00       		.byte	0
 2054 002a 00       		.byte	0
 2055 002b 04       		.uleb128 0x4
 2056 002c 24       		.uleb128 0x24
 2057 002d 00       		.byte	0
 2058 002e 0B       		.uleb128 0xb
 2059 002f 0B       		.uleb128 0xb
 2060 0030 3E       		.uleb128 0x3e
 2061 0031 0B       		.uleb128 0xb
 2062 0032 03       		.uleb128 0x3
 2063 0033 08       		.uleb128 0x8
 2064 0034 00       		.byte	0
 2065 0035 00       		.byte	0
 2066 0036 05       		.uleb128 0x5
 2067 0037 0F       		.uleb128 0xf
 2068 0038 00       		.byte	0
 2069 0039 0B       		.uleb128 0xb
 2070 003a 0B       		.uleb128 0xb
 2071 003b 49       		.uleb128 0x49
 2072 003c 13       		.uleb128 0x13
 2073 003d 00       		.byte	0
 2074 003e 00       		.byte	0
 2075 003f 06       		.uleb128 0x6
 2076 0040 16       		.uleb128 0x16
 2077 0041 00       		.byte	0
 2078 0042 03       		.uleb128 0x3
 2079 0043 0E       		.uleb128 0xe
 2080 0044 3A       		.uleb128 0x3a
 2081 0045 0B       		.uleb128 0xb
 2082 0046 3B       		.uleb128 0x3b
 2083 0047 05       		.uleb128 0x5
 2084 0048 49       		.uleb128 0x49
 2085 0049 13       		.uleb128 0x13
 2086 004a 00       		.byte	0
 2087 004b 00       		.byte	0
 2088 004c 07       		.uleb128 0x7
 2089 004d 13       		.uleb128 0x13
 2090 004e 01       		.byte	0x1
 2091 004f 03       		.uleb128 0x3
 2092 0050 0E       		.uleb128 0xe
 2093 0051 0B       		.uleb128 0xb
 2094 0052 0B       		.uleb128 0xb
 2095 0053 3A       		.uleb128 0x3a
 2096 0054 0B       		.uleb128 0xb
 2097 0055 3B       		.uleb128 0x3b
 2098 0056 0B       		.uleb128 0xb
 2099 0057 01       		.uleb128 0x1
 2100 0058 13       		.uleb128 0x13
 2101 0059 00       		.byte	0
 2102 005a 00       		.byte	0
 2103 005b 08       		.uleb128 0x8
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 47


 2104 005c 0D       		.uleb128 0xd
 2105 005d 00       		.byte	0
 2106 005e 03       		.uleb128 0x3
 2107 005f 0E       		.uleb128 0xe
 2108 0060 3A       		.uleb128 0x3a
 2109 0061 0B       		.uleb128 0xb
 2110 0062 3B       		.uleb128 0x3b
 2111 0063 0B       		.uleb128 0xb
 2112 0064 49       		.uleb128 0x49
 2113 0065 13       		.uleb128 0x13
 2114 0066 38       		.uleb128 0x38
 2115 0067 0B       		.uleb128 0xb
 2116 0068 00       		.byte	0
 2117 0069 00       		.byte	0
 2118 006a 09       		.uleb128 0x9
 2119 006b 2E       		.uleb128 0x2e
 2120 006c 00       		.byte	0
 2121 006d 3F       		.uleb128 0x3f
 2122 006e 19       		.uleb128 0x19
 2123 006f 03       		.uleb128 0x3
 2124 0070 0E       		.uleb128 0xe
 2125 0071 3A       		.uleb128 0x3a
 2126 0072 0B       		.uleb128 0xb
 2127 0073 3B       		.uleb128 0x3b
 2128 0074 0B       		.uleb128 0xb
 2129 0075 11       		.uleb128 0x11
 2130 0076 01       		.uleb128 0x1
 2131 0077 12       		.uleb128 0x12
 2132 0078 06       		.uleb128 0x6
 2133 0079 40       		.uleb128 0x40
 2134 007a 18       		.uleb128 0x18
 2135 007b 9642     		.uleb128 0x2116
 2136 007d 19       		.uleb128 0x19
 2137 007e 00       		.byte	0
 2138 007f 00       		.byte	0
 2139 0080 0A       		.uleb128 0xa
 2140 0081 2E       		.uleb128 0x2e
 2141 0082 01       		.byte	0x1
 2142 0083 3F       		.uleb128 0x3f
 2143 0084 19       		.uleb128 0x19
 2144 0085 03       		.uleb128 0x3
 2145 0086 0E       		.uleb128 0xe
 2146 0087 3A       		.uleb128 0x3a
 2147 0088 0B       		.uleb128 0xb
 2148 0089 3B       		.uleb128 0x3b
 2149 008a 0B       		.uleb128 0xb
 2150 008b 27       		.uleb128 0x27
 2151 008c 19       		.uleb128 0x19
 2152 008d 11       		.uleb128 0x11
 2153 008e 01       		.uleb128 0x1
 2154 008f 12       		.uleb128 0x12
 2155 0090 06       		.uleb128 0x6
 2156 0091 40       		.uleb128 0x40
 2157 0092 18       		.uleb128 0x18
 2158 0093 9642     		.uleb128 0x2116
 2159 0095 19       		.uleb128 0x19
 2160 0096 01       		.uleb128 0x1
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 48


 2161 0097 13       		.uleb128 0x13
 2162 0098 00       		.byte	0
 2163 0099 00       		.byte	0
 2164 009a 0B       		.uleb128 0xb
 2165 009b 05       		.uleb128 0x5
 2166 009c 00       		.byte	0
 2167 009d 03       		.uleb128 0x3
 2168 009e 08       		.uleb128 0x8
 2169 009f 3A       		.uleb128 0x3a
 2170 00a0 0B       		.uleb128 0xb
 2171 00a1 3B       		.uleb128 0x3b
 2172 00a2 0B       		.uleb128 0xb
 2173 00a3 49       		.uleb128 0x49
 2174 00a4 13       		.uleb128 0x13
 2175 00a5 02       		.uleb128 0x2
 2176 00a6 18       		.uleb128 0x18
 2177 00a7 00       		.byte	0
 2178 00a8 00       		.byte	0
 2179 00a9 0C       		.uleb128 0xc
 2180 00aa 34       		.uleb128 0x34
 2181 00ab 00       		.byte	0
 2182 00ac 03       		.uleb128 0x3
 2183 00ad 0E       		.uleb128 0xe
 2184 00ae 3A       		.uleb128 0x3a
 2185 00af 0B       		.uleb128 0xb
 2186 00b0 3B       		.uleb128 0x3b
 2187 00b1 0B       		.uleb128 0xb
 2188 00b2 49       		.uleb128 0x49
 2189 00b3 13       		.uleb128 0x13
 2190 00b4 02       		.uleb128 0x2
 2191 00b5 18       		.uleb128 0x18
 2192 00b6 00       		.byte	0
 2193 00b7 00       		.byte	0
 2194 00b8 0D       		.uleb128 0xd
 2195 00b9 2E       		.uleb128 0x2e
 2196 00ba 00       		.byte	0
 2197 00bb 3F       		.uleb128 0x3f
 2198 00bc 19       		.uleb128 0x19
 2199 00bd 03       		.uleb128 0x3
 2200 00be 0E       		.uleb128 0xe
 2201 00bf 3A       		.uleb128 0x3a
 2202 00c0 0B       		.uleb128 0xb
 2203 00c1 3B       		.uleb128 0x3b
 2204 00c2 0B       		.uleb128 0xb
 2205 00c3 27       		.uleb128 0x27
 2206 00c4 19       		.uleb128 0x19
 2207 00c5 11       		.uleb128 0x11
 2208 00c6 01       		.uleb128 0x1
 2209 00c7 12       		.uleb128 0x12
 2210 00c8 06       		.uleb128 0x6
 2211 00c9 40       		.uleb128 0x40
 2212 00ca 18       		.uleb128 0x18
 2213 00cb 9742     		.uleb128 0x2117
 2214 00cd 19       		.uleb128 0x19
 2215 00ce 00       		.byte	0
 2216 00cf 00       		.byte	0
 2217 00d0 0E       		.uleb128 0xe
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 49


 2218 00d1 2E       		.uleb128 0x2e
 2219 00d2 01       		.byte	0x1
 2220 00d3 3F       		.uleb128 0x3f
 2221 00d4 19       		.uleb128 0x19
 2222 00d5 03       		.uleb128 0x3
 2223 00d6 0E       		.uleb128 0xe
 2224 00d7 3A       		.uleb128 0x3a
 2225 00d8 0B       		.uleb128 0xb
 2226 00d9 3B       		.uleb128 0x3b
 2227 00da 0B       		.uleb128 0xb
 2228 00db 11       		.uleb128 0x11
 2229 00dc 01       		.uleb128 0x1
 2230 00dd 12       		.uleb128 0x12
 2231 00de 06       		.uleb128 0x6
 2232 00df 40       		.uleb128 0x40
 2233 00e0 18       		.uleb128 0x18
 2234 00e1 9642     		.uleb128 0x2116
 2235 00e3 19       		.uleb128 0x19
 2236 00e4 01       		.uleb128 0x1
 2237 00e5 13       		.uleb128 0x13
 2238 00e6 00       		.byte	0
 2239 00e7 00       		.byte	0
 2240 00e8 0F       		.uleb128 0xf
 2241 00e9 01       		.uleb128 0x1
 2242 00ea 01       		.byte	0x1
 2243 00eb 49       		.uleb128 0x49
 2244 00ec 13       		.uleb128 0x13
 2245 00ed 01       		.uleb128 0x1
 2246 00ee 13       		.uleb128 0x13
 2247 00ef 00       		.byte	0
 2248 00f0 00       		.byte	0
 2249 00f1 10       		.uleb128 0x10
 2250 00f2 21       		.uleb128 0x21
 2251 00f3 00       		.byte	0
 2252 00f4 49       		.uleb128 0x49
 2253 00f5 13       		.uleb128 0x13
 2254 00f6 2F       		.uleb128 0x2f
 2255 00f7 05       		.uleb128 0x5
 2256 00f8 00       		.byte	0
 2257 00f9 00       		.byte	0
 2258 00fa 11       		.uleb128 0x11
 2259 00fb 2E       		.uleb128 0x2e
 2260 00fc 00       		.byte	0
 2261 00fd 3F       		.uleb128 0x3f
 2262 00fe 19       		.uleb128 0x19
 2263 00ff 03       		.uleb128 0x3
 2264 0100 0E       		.uleb128 0xe
 2265 0101 3A       		.uleb128 0x3a
 2266 0102 0B       		.uleb128 0xb
 2267 0103 3B       		.uleb128 0x3b
 2268 0104 0B       		.uleb128 0xb
 2269 0105 27       		.uleb128 0x27
 2270 0106 19       		.uleb128 0x19
 2271 0107 11       		.uleb128 0x11
 2272 0108 01       		.uleb128 0x1
 2273 0109 12       		.uleb128 0x12
 2274 010a 06       		.uleb128 0x6
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 50


 2275 010b 40       		.uleb128 0x40
 2276 010c 18       		.uleb128 0x18
 2277 010d 9642     		.uleb128 0x2116
 2278 010f 19       		.uleb128 0x19
 2279 0110 00       		.byte	0
 2280 0111 00       		.byte	0
 2281 0112 12       		.uleb128 0x12
 2282 0113 2E       		.uleb128 0x2e
 2283 0114 01       		.byte	0x1
 2284 0115 3F       		.uleb128 0x3f
 2285 0116 19       		.uleb128 0x19
 2286 0117 03       		.uleb128 0x3
 2287 0118 0E       		.uleb128 0xe
 2288 0119 3A       		.uleb128 0x3a
 2289 011a 0B       		.uleb128 0xb
 2290 011b 3B       		.uleb128 0x3b
 2291 011c 0B       		.uleb128 0xb
 2292 011d 49       		.uleb128 0x49
 2293 011e 13       		.uleb128 0x13
 2294 011f 11       		.uleb128 0x11
 2295 0120 01       		.uleb128 0x1
 2296 0121 12       		.uleb128 0x12
 2297 0122 06       		.uleb128 0x6
 2298 0123 40       		.uleb128 0x40
 2299 0124 18       		.uleb128 0x18
 2300 0125 9642     		.uleb128 0x2116
 2301 0127 19       		.uleb128 0x19
 2302 0128 01       		.uleb128 0x1
 2303 0129 13       		.uleb128 0x13
 2304 012a 00       		.byte	0
 2305 012b 00       		.byte	0
 2306 012c 13       		.uleb128 0x13
 2307 012d 34       		.uleb128 0x34
 2308 012e 00       		.byte	0
 2309 012f 03       		.uleb128 0x3
 2310 0130 0E       		.uleb128 0xe
 2311 0131 3A       		.uleb128 0x3a
 2312 0132 0B       		.uleb128 0xb
 2313 0133 3B       		.uleb128 0x3b
 2314 0134 05       		.uleb128 0x5
 2315 0135 49       		.uleb128 0x49
 2316 0136 13       		.uleb128 0x13
 2317 0137 02       		.uleb128 0x2
 2318 0138 18       		.uleb128 0x18
 2319 0139 00       		.byte	0
 2320 013a 00       		.byte	0
 2321 013b 14       		.uleb128 0x14
 2322 013c 0B       		.uleb128 0xb
 2323 013d 01       		.byte	0x1
 2324 013e 11       		.uleb128 0x11
 2325 013f 01       		.uleb128 0x1
 2326 0140 12       		.uleb128 0x12
 2327 0141 06       		.uleb128 0x6
 2328 0142 00       		.byte	0
 2329 0143 00       		.byte	0
 2330 0144 15       		.uleb128 0x15
 2331 0145 2E       		.uleb128 0x2e
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 51


 2332 0146 01       		.byte	0x1
 2333 0147 3F       		.uleb128 0x3f
 2334 0148 19       		.uleb128 0x19
 2335 0149 03       		.uleb128 0x3
 2336 014a 0E       		.uleb128 0xe
 2337 014b 3A       		.uleb128 0x3a
 2338 014c 0B       		.uleb128 0xb
 2339 014d 3B       		.uleb128 0x3b
 2340 014e 05       		.uleb128 0x5
 2341 014f 49       		.uleb128 0x49
 2342 0150 13       		.uleb128 0x13
 2343 0151 11       		.uleb128 0x11
 2344 0152 01       		.uleb128 0x1
 2345 0153 12       		.uleb128 0x12
 2346 0154 06       		.uleb128 0x6
 2347 0155 40       		.uleb128 0x40
 2348 0156 18       		.uleb128 0x18
 2349 0157 9742     		.uleb128 0x2117
 2350 0159 19       		.uleb128 0x19
 2351 015a 01       		.uleb128 0x1
 2352 015b 13       		.uleb128 0x13
 2353 015c 00       		.byte	0
 2354 015d 00       		.byte	0
 2355 015e 16       		.uleb128 0x16
 2356 015f 34       		.uleb128 0x34
 2357 0160 00       		.byte	0
 2358 0161 03       		.uleb128 0x3
 2359 0162 08       		.uleb128 0x8
 2360 0163 3A       		.uleb128 0x3a
 2361 0164 0B       		.uleb128 0xb
 2362 0165 3B       		.uleb128 0x3b
 2363 0166 05       		.uleb128 0x5
 2364 0167 49       		.uleb128 0x49
 2365 0168 13       		.uleb128 0x13
 2366 0169 02       		.uleb128 0x2
 2367 016a 18       		.uleb128 0x18
 2368 016b 00       		.byte	0
 2369 016c 00       		.byte	0
 2370 016d 17       		.uleb128 0x17
 2371 016e 2E       		.uleb128 0x2e
 2372 016f 01       		.byte	0x1
 2373 0170 3F       		.uleb128 0x3f
 2374 0171 19       		.uleb128 0x19
 2375 0172 03       		.uleb128 0x3
 2376 0173 0E       		.uleb128 0xe
 2377 0174 3A       		.uleb128 0x3a
 2378 0175 0B       		.uleb128 0xb
 2379 0176 3B       		.uleb128 0x3b
 2380 0177 05       		.uleb128 0x5
 2381 0178 27       		.uleb128 0x27
 2382 0179 19       		.uleb128 0x19
 2383 017a 11       		.uleb128 0x11
 2384 017b 01       		.uleb128 0x1
 2385 017c 12       		.uleb128 0x12
 2386 017d 06       		.uleb128 0x6
 2387 017e 40       		.uleb128 0x40
 2388 017f 18       		.uleb128 0x18
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 52


 2389 0180 9642     		.uleb128 0x2116
 2390 0182 19       		.uleb128 0x19
 2391 0183 01       		.uleb128 0x1
 2392 0184 13       		.uleb128 0x13
 2393 0185 00       		.byte	0
 2394 0186 00       		.byte	0
 2395 0187 18       		.uleb128 0x18
 2396 0188 05       		.uleb128 0x5
 2397 0189 00       		.byte	0
 2398 018a 03       		.uleb128 0x3
 2399 018b 08       		.uleb128 0x8
 2400 018c 3A       		.uleb128 0x3a
 2401 018d 0B       		.uleb128 0xb
 2402 018e 3B       		.uleb128 0x3b
 2403 018f 05       		.uleb128 0x5
 2404 0190 49       		.uleb128 0x49
 2405 0191 13       		.uleb128 0x13
 2406 0192 02       		.uleb128 0x2
 2407 0193 18       		.uleb128 0x18
 2408 0194 00       		.byte	0
 2409 0195 00       		.byte	0
 2410 0196 19       		.uleb128 0x19
 2411 0197 2E       		.uleb128 0x2e
 2412 0198 01       		.byte	0x1
 2413 0199 3F       		.uleb128 0x3f
 2414 019a 19       		.uleb128 0x19
 2415 019b 03       		.uleb128 0x3
 2416 019c 0E       		.uleb128 0xe
 2417 019d 3A       		.uleb128 0x3a
 2418 019e 0B       		.uleb128 0xb
 2419 019f 3B       		.uleb128 0x3b
 2420 01a0 05       		.uleb128 0x5
 2421 01a1 11       		.uleb128 0x11
 2422 01a2 01       		.uleb128 0x1
 2423 01a3 12       		.uleb128 0x12
 2424 01a4 06       		.uleb128 0x6
 2425 01a5 40       		.uleb128 0x40
 2426 01a6 18       		.uleb128 0x18
 2427 01a7 9642     		.uleb128 0x2116
 2428 01a9 19       		.uleb128 0x19
 2429 01aa 01       		.uleb128 0x1
 2430 01ab 13       		.uleb128 0x13
 2431 01ac 00       		.byte	0
 2432 01ad 00       		.byte	0
 2433 01ae 1A       		.uleb128 0x1a
 2434 01af 35       		.uleb128 0x35
 2435 01b0 00       		.byte	0
 2436 01b1 49       		.uleb128 0x49
 2437 01b2 13       		.uleb128 0x13
 2438 01b3 00       		.byte	0
 2439 01b4 00       		.byte	0
 2440 01b5 1B       		.uleb128 0x1b
 2441 01b6 34       		.uleb128 0x34
 2442 01b7 00       		.byte	0
 2443 01b8 03       		.uleb128 0x3
 2444 01b9 0E       		.uleb128 0xe
 2445 01ba 3A       		.uleb128 0x3a
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 53


 2446 01bb 0B       		.uleb128 0xb
 2447 01bc 3B       		.uleb128 0x3b
 2448 01bd 05       		.uleb128 0x5
 2449 01be 49       		.uleb128 0x49
 2450 01bf 13       		.uleb128 0x13
 2451 01c0 3F       		.uleb128 0x3f
 2452 01c1 19       		.uleb128 0x19
 2453 01c2 3C       		.uleb128 0x3c
 2454 01c3 19       		.uleb128 0x19
 2455 01c4 00       		.byte	0
 2456 01c5 00       		.byte	0
 2457 01c6 1C       		.uleb128 0x1c
 2458 01c7 34       		.uleb128 0x34
 2459 01c8 00       		.byte	0
 2460 01c9 03       		.uleb128 0x3
 2461 01ca 08       		.uleb128 0x8
 2462 01cb 3A       		.uleb128 0x3a
 2463 01cc 0B       		.uleb128 0xb
 2464 01cd 3B       		.uleb128 0x3b
 2465 01ce 0B       		.uleb128 0xb
 2466 01cf 49       		.uleb128 0x49
 2467 01d0 13       		.uleb128 0x13
 2468 01d1 3F       		.uleb128 0x3f
 2469 01d2 19       		.uleb128 0x19
 2470 01d3 02       		.uleb128 0x2
 2471 01d4 18       		.uleb128 0x18
 2472 01d5 00       		.byte	0
 2473 01d6 00       		.byte	0
 2474 01d7 1D       		.uleb128 0x1d
 2475 01d8 34       		.uleb128 0x34
 2476 01d9 00       		.byte	0
 2477 01da 03       		.uleb128 0x3
 2478 01db 0E       		.uleb128 0xe
 2479 01dc 3A       		.uleb128 0x3a
 2480 01dd 0B       		.uleb128 0xb
 2481 01de 3B       		.uleb128 0x3b
 2482 01df 0B       		.uleb128 0xb
 2483 01e0 49       		.uleb128 0x49
 2484 01e1 13       		.uleb128 0x13
 2485 01e2 3F       		.uleb128 0x3f
 2486 01e3 19       		.uleb128 0x19
 2487 01e4 02       		.uleb128 0x2
 2488 01e5 18       		.uleb128 0x18
 2489 01e6 00       		.byte	0
 2490 01e7 00       		.byte	0
 2491 01e8 1E       		.uleb128 0x1e
 2492 01e9 21       		.uleb128 0x21
 2493 01ea 00       		.byte	0
 2494 01eb 49       		.uleb128 0x49
 2495 01ec 13       		.uleb128 0x13
 2496 01ed 2F       		.uleb128 0x2f
 2497 01ee 0B       		.uleb128 0xb
 2498 01ef 00       		.byte	0
 2499 01f0 00       		.byte	0
 2500 01f1 00       		.byte	0
 2501              		.section	.debug_aranges,"",%progbits
 2502 0000 8C000000 		.4byte	0x8c
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 54


 2503 0004 0200     		.2byte	0x2
 2504 0006 00000000 		.4byte	.Ldebug_info0
 2505 000a 04       		.byte	0x4
 2506 000b 00       		.byte	0
 2507 000c 0000     		.2byte	0
 2508 000e 0000     		.2byte	0
 2509 0010 00000000 		.4byte	.LFB64
 2510 0014 14000000 		.4byte	.LFE64-.LFB64
 2511 0018 00000000 		.4byte	.LFB65
 2512 001c 14000000 		.4byte	.LFE65-.LFB65
 2513 0020 00000000 		.4byte	.LFB66
 2514 0024 14000000 		.4byte	.LFE66-.LFB66
 2515 0028 00000000 		.4byte	.LFB67
 2516 002c 20000000 		.4byte	.LFE67-.LFB67
 2517 0030 00000000 		.4byte	.LFB68
 2518 0034 20000000 		.4byte	.LFE68-.LFB68
 2519 0038 00000000 		.4byte	.LFB69
 2520 003c BC000000 		.4byte	.LFE69-.LFB69
 2521 0040 00000000 		.4byte	.LFB70
 2522 0044 0C000000 		.4byte	.LFE70-.LFB70
 2523 0048 00000000 		.4byte	.LFB71
 2524 004c C0000000 		.4byte	.LFE71-.LFB71
 2525 0050 00000000 		.4byte	.LFB72
 2526 0054 2C000000 		.4byte	.LFE72-.LFB72
 2527 0058 00000000 		.4byte	.LFB73
 2528 005c 0C000000 		.4byte	.LFE73-.LFB73
 2529 0060 00000000 		.4byte	.LFB74
 2530 0064 1C010000 		.4byte	.LFE74-.LFB74
 2531 0068 00000000 		.4byte	.LFB75
 2532 006c 50000000 		.4byte	.LFE75-.LFB75
 2533 0070 00000000 		.4byte	.LFB76
 2534 0074 3E000000 		.4byte	.LFE76-.LFB76
 2535 0078 00000000 		.4byte	.LFB77
 2536 007c 26000000 		.4byte	.LFE77-.LFB77
 2537 0080 00000000 		.4byte	.LFB78
 2538 0084 CC000000 		.4byte	.LFE78-.LFB78
 2539 0088 00000000 		.4byte	0
 2540 008c 00000000 		.4byte	0
 2541              		.section	.debug_ranges,"",%progbits
 2542              	.Ldebug_ranges0:
 2543 0000 00000000 		.4byte	.LFB64
 2544 0004 14000000 		.4byte	.LFE64
 2545 0008 00000000 		.4byte	.LFB65
 2546 000c 14000000 		.4byte	.LFE65
 2547 0010 00000000 		.4byte	.LFB66
 2548 0014 14000000 		.4byte	.LFE66
 2549 0018 00000000 		.4byte	.LFB67
 2550 001c 20000000 		.4byte	.LFE67
 2551 0020 00000000 		.4byte	.LFB68
 2552 0024 20000000 		.4byte	.LFE68
 2553 0028 00000000 		.4byte	.LFB69
 2554 002c BC000000 		.4byte	.LFE69
 2555 0030 00000000 		.4byte	.LFB70
 2556 0034 0C000000 		.4byte	.LFE70
 2557 0038 00000000 		.4byte	.LFB71
 2558 003c C0000000 		.4byte	.LFE71
 2559 0040 00000000 		.4byte	.LFB72
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 55


 2560 0044 2C000000 		.4byte	.LFE72
 2561 0048 00000000 		.4byte	.LFB73
 2562 004c 0C000000 		.4byte	.LFE73
 2563 0050 00000000 		.4byte	.LFB74
 2564 0054 1C010000 		.4byte	.LFE74
 2565 0058 00000000 		.4byte	.LFB75
 2566 005c 50000000 		.4byte	.LFE75
 2567 0060 00000000 		.4byte	.LFB76
 2568 0064 3E000000 		.4byte	.LFE76
 2569 0068 00000000 		.4byte	.LFB77
 2570 006c 26000000 		.4byte	.LFE77
 2571 0070 00000000 		.4byte	.LFB78
 2572 0074 CC000000 		.4byte	.LFE78
 2573 0078 00000000 		.4byte	0
 2574 007c 00000000 		.4byte	0
 2575              		.section	.debug_line,"",%progbits
 2576              	.Ldebug_line0:
 2577 0000 06030000 		.section	.debug_str,"MS",%progbits,1
 2577      02005601 
 2577      00000201 
 2577      FB0E0D00 
 2577      01010101 
 2578              	.LASF39:
 2579 0000 6D6F746F 		.ascii	"motorStop\000"
 2579      7253746F 
 2579      7000
 2580              	.LASF57:
 2581 000a 6973725F 		.ascii	"isr_TS_Interrupt_sample\000"
 2581      54535F49 
 2581      6E746572 
 2581      72757074 
 2581      5F73616D 
 2582              	.LASF71:
 2583 0022 74735F65 		.ascii	"ts_enc\000"
 2583      6E6300
 2584              	.LASF14:
 2585 0029 646F7562 		.ascii	"double\000"
 2585      6C6500
 2586              	.LASF80:
 2587 0030 666C6167 		.ascii	"flag_packet\000"
 2587      5F706163 
 2587      6B657400 
 2588              	.LASF64:
 2589 003c 75736250 		.ascii	"usbPutChar\000"
 2589      75744368 
 2589      617200
 2590              	.LASF94:
 2591 0047 636F756E 		.ascii	"counteoc\000"
 2591      74656F63 
 2591      00
 2592              	.LASF42:
 2593 0050 6973725F 		.ascii	"isr_eoc_Interrupt_test\000"
 2593      656F635F 
 2593      496E7465 
 2593      72727570 
 2593      745F7465 
 2594              	.LASF38:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 56


 2595 0067 6D6F746F 		.ascii	"motorGoBackwards\000"
 2595      72476F42 
 2595      61636B77 
 2595      61726473 
 2595      00
 2596              	.LASF90:
 2597 0078 63686563 		.ascii	"checkLight\000"
 2597      6B4C6967 
 2597      687400
 2598              	.LASF33:
 2599 0083 67325F78 		.ascii	"g2_xpos\000"
 2599      706F7300 
 2600              	.LASF2:
 2601 008b 73686F72 		.ascii	"short int\000"
 2601      7420696E 
 2601      7400
 2602              	.LASF88:
 2603 0095 73797374 		.ascii	"system_state\000"
 2603      656D5F73 
 2603      74617465 
 2603      00
 2604              	.LASF10:
 2605 00a2 73697A65 		.ascii	"sizetype\000"
 2605      74797065 
 2605      00
 2606              	.LASF87:
 2607 00ab 75736242 		.ascii	"usbBuffer\000"
 2607      75666665 
 2607      7200
 2608              	.LASF97:
 2609 00b5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2609      43313120 
 2609      352E342E 
 2609      31203230 
 2609      31363036 
 2610 00e8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2610      20726576 
 2610      6973696F 
 2610      6E203233 
 2610      37373135 
 2611 011b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2611      66756E63 
 2611      74696F6E 
 2611      2D736563 
 2611      74696F6E 
 2612              	.LASF58:
 2613 0143 6D61696E 		.ascii	"main\000"
 2613      00
 2614              	.LASF55:
 2615 0148 6D6F746F 		.ascii	"motorRun\000"
 2615      7252756E 
 2615      00
 2616              	.LASF46:
 2617 0151 76616C75 		.ascii	"valueQ1\000"
 2617      65513100 
 2618              	.LASF47:
 2619 0159 76616C75 		.ascii	"valueQ2\000"
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 57


 2619      65513200 
 2620              	.LASF43:
 2621 0161 76616C75 		.ascii	"valueQ3\000"
 2621      65513300 
 2622              	.LASF44:
 2623 0169 76616C75 		.ascii	"valueQ4\000"
 2623      65513400 
 2624              	.LASF45:
 2625 0171 76616C75 		.ascii	"valueQ5\000"
 2625      65513500 
 2626              	.LASF48:
 2627 0179 76616C75 		.ascii	"valueQ6\000"
 2627      65513600 
 2628              	.LASF91:
 2629 0181 6C696768 		.ascii	"lightState\000"
 2629      74537461 
 2629      746500
 2630              	.LASF54:
 2631 018c 6D6F746F 		.ascii	"motor2String\000"
 2631      72325374 
 2631      72696E67 
 2631      00
 2632              	.LASF21:
 2633 0199 696E6465 		.ascii	"index\000"
 2633      7800
 2634              	.LASF19:
 2635 019f 696E7431 		.ascii	"int16\000"
 2635      3600
 2636              	.LASF16:
 2637 01a5 75696E74 		.ascii	"uint8\000"
 2637      3800
 2638              	.LASF99:
 2639 01ab 5C5C6669 		.ascii	"\\\\files.auckland.ac.nz\\myhome\\Documents\\GitHub"
 2639      6C65732E 
 2639      6175636B 
 2639      6C616E64 
 2639      2E61632E 
 2640 01d9 5C70726F 		.ascii	"\\project-project_group_11\\COMPSYS 301\\psoc stude"
 2640      6A656374 
 2640      2D70726F 
 2640      6A656374 
 2640      5F67726F 
 2641 0209 6E742070 		.ascii	"nt pack\\psoc student pack\\psoc_code_base\\CS301_C"
 2641      61636B5C 
 2641      70736F63 
 2641      20737475 
 2641      64656E74 
 2642 0239 6C617373 		.ascii	"lass.cydsn\000"
 2642      2E637964 
 2642      736E00
 2643              	.LASF89:
 2644 0244 6368616E 		.ascii	"changeMotor\000"
 2644      67654D6F 
 2644      746F7200 
 2645              	.LASF93:
 2646 0250 6C696768 		.ascii	"lightDetectedBack\000"
 2646      74446574 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 58


 2646      65637465 
 2646      64426163 
 2646      6B00
 2647              	.LASF15:
 2648 0262 666C6F61 		.ascii	"float\000"
 2648      7400
 2649              	.LASF56:
 2650 0268 6973725F 		.ascii	"isr_motor_interrupt_speed\000"
 2650      6D6F746F 
 2650      725F696E 
 2650      74657272 
 2650      7570745F 
 2651              	.LASF6:
 2652 0282 6C6F6E67 		.ascii	"long long int\000"
 2652      206C6F6E 
 2652      6720696E 
 2652      7400
 2653              	.LASF63:
 2654 0290 75736250 		.ascii	"usbPutString\000"
 2654      75745374 
 2654      72696E67 
 2654      00
 2655              	.LASF18:
 2656 029d 696E7438 		.ascii	"int8\000"
 2656      00
 2657              	.LASF76:
 2658 02a2 666C6167 		.ascii	"flag_ts_update\000"
 2658      5F74735F 
 2658      75706461 
 2658      746500
 2659              	.LASF34:
 2660 02b1 67325F79 		.ascii	"g2_ypos\000"
 2660      706F7300 
 2661              	.LASF28:
 2662 02b9 67305F64 		.ascii	"g0_direction\000"
 2662      69726563 
 2662      74696F6E 
 2662      00
 2663              	.LASF25:
 2664 02c6 67305F78 		.ascii	"g0_xpos\000"
 2664      706F7300 
 2665              	.LASF4:
 2666 02ce 6C6F6E67 		.ascii	"long int\000"
 2666      20696E74 
 2666      00
 2667              	.LASF49:
 2668 02d7 62656769 		.ascii	"beginningCountMotor1\000"
 2668      6E6E696E 
 2668      67436F75 
 2668      6E744D6F 
 2668      746F7231 
 2669              	.LASF50:
 2670 02ec 62656769 		.ascii	"beginningCountMotor2\000"
 2670      6E6E696E 
 2670      67436F75 
 2670      6E744D6F 
 2670      746F7232 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 59


 2671              	.LASF53:
 2672 0301 6D6F746F 		.ascii	"motor1String\000"
 2672      72315374 
 2672      72696E67 
 2672      00
 2673              	.LASF95:
 2674 030e 70726F63 		.ascii	"processSensors\000"
 2674      65737353 
 2674      656E736F 
 2674      727300
 2675              	.LASF85:
 2676 031d 6C696E65 		.ascii	"line\000"
 2676      00
 2677              	.LASF78:
 2678 0322 666C6167 		.ascii	"flag_ts_display\000"
 2678      5F74735F 
 2678      64697370 
 2678      6C617900 
 2679              	.LASF79:
 2680 0332 666C6167 		.ascii	"flag_rx\000"
 2680      5F727800 
 2681              	.LASF52:
 2682 033a 656E6443 		.ascii	"endCountMotor1\000"
 2682      6F756E74 
 2682      4D6F746F 
 2682      723100
 2683              	.LASF51:
 2684 0349 656E6443 		.ascii	"endCountMotor2\000"
 2684      6F756E74 
 2684      4D6F746F 
 2684      723200
 2685              	.LASF86:
 2686 0358 656E7472 		.ascii	"entry\000"
 2686      7900
 2687              	.LASF9:
 2688 035e 6C6F6E67 		.ascii	"long double\000"
 2688      20646F75 
 2688      626C6500 
 2689              	.LASF1:
 2690 036a 756E7369 		.ascii	"unsigned char\000"
 2690      676E6564 
 2690      20636861 
 2690      7200
 2691              	.LASF92:
 2692 0378 6C696768 		.ascii	"lightDetectedFront\000"
 2692      74446574 
 2692      65637465 
 2692      6446726F 
 2692      6E7400
 2693              	.LASF27:
 2694 038b 67305F73 		.ascii	"g0_speed\000"
 2694      70656564 
 2694      00
 2695              	.LASF82:
 2696 0394 64617461 		.ascii	"dataready_flag\000"
 2696      72656164 
 2696      795F666C 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 60


 2696      616700
 2697              	.LASF0:
 2698 03a3 7369676E 		.ascii	"signed char\000"
 2698      65642063 
 2698      68617200 
 2699              	.LASF7:
 2700 03af 6C6F6E67 		.ascii	"long long unsigned int\000"
 2700      206C6F6E 
 2700      6720756E 
 2700      7369676E 
 2700      65642069 
 2701              	.LASF8:
 2702 03c6 756E7369 		.ascii	"unsigned int\000"
 2702      676E6564 
 2702      20696E74 
 2702      00
 2703              	.LASF81:
 2704 03d3 666C6167 		.ascii	"flag_KB_string\000"
 2704      5F4B425F 
 2704      73747269 
 2704      6E6700
 2705              	.LASF68:
 2706 03e2 75736242 		.ascii	"usbBufCount\000"
 2706      7566436F 
 2706      756E7400 
 2707              	.LASF35:
 2708 03ee 67325F73 		.ascii	"g2_speed\000"
 2708      70656564 
 2708      00
 2709              	.LASF29:
 2710 03f7 67315F78 		.ascii	"g1_xpos\000"
 2710      706F7300 
 2711              	.LASF60:
 2712 03ff 6F706572 		.ascii	"operation\000"
 2712      6174696F 
 2712      6E00
 2713              	.LASF100:
 2714 0409 64617461 		.ascii	"data_main\000"
 2714      5F6D6169 
 2714      6E00
 2715              	.LASF11:
 2716 0413 63686172 		.ascii	"char\000"
 2716      00
 2717              	.LASF22:
 2718 0418 726F626F 		.ascii	"robot_xpos\000"
 2718      745F7870 
 2718      6F7300
 2719              	.LASF13:
 2720 0423 696E7433 		.ascii	"int32_t\000"
 2720      325F7400 
 2721              	.LASF30:
 2722 042b 67315F79 		.ascii	"g1_ypos\000"
 2722      706F7300 
 2723              	.LASF36:
 2724 0433 67325F64 		.ascii	"g2_direction\000"
 2724      69726563 
 2724      74696F6E 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 61


 2724      00
 2725              	.LASF3:
 2726 0440 73686F72 		.ascii	"short unsigned int\000"
 2726      7420756E 
 2726      7369676E 
 2726      65642069 
 2726      6E7400
 2727              	.LASF31:
 2728 0453 67315F73 		.ascii	"g1_speed\000"
 2728      70656564 
 2728      00
 2729              	.LASF84:
 2730 045c 64697370 		.ascii	"displaystring\000"
 2730      6C617973 
 2730      7472696E 
 2730      6700
 2731              	.LASF77:
 2732 046a 666C6167 		.ascii	"flag_ts_speed\000"
 2732      5F74735F 
 2732      73706565 
 2732      6400
 2733              	.LASF61:
 2734 0478 636F6E76 		.ascii	"convertSensorBinary\000"
 2734      65727453 
 2734      656E736F 
 2734      7242696E 
 2734      61727900 
 2735              	.LASF17:
 2736 048c 75696E74 		.ascii	"uint16\000"
 2736      313600
 2737              	.LASF98:
 2738 0493 6D61696E 		.ascii	"main.c\000"
 2738      2E6300
 2739              	.LASF5:
 2740 049a 6C6F6E67 		.ascii	"long unsigned int\000"
 2740      20756E73 
 2740      69676E65 
 2740      6420696E 
 2740      7400
 2741              	.LASF67:
 2742 04ac 75736253 		.ascii	"usbStarted\000"
 2742      74617274 
 2742      656400
 2743              	.LASF73:
 2744 04b7 74735F73 		.ascii	"ts_speed\000"
 2744      70656564 
 2744      00
 2745              	.LASF69:
 2746 04c0 636F756E 		.ascii	"count\000"
 2746      7400
 2747              	.LASF75:
 2748 04c6 666C6167 		.ascii	"flag_ts_enc\000"
 2748      5F74735F 
 2748      656E6300 
 2749              	.LASF12:
 2750 04d2 5F5F696E 		.ascii	"__int32_t\000"
 2750      7433325F 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 62


 2750      7400
 2751              	.LASF40:
 2752 04dc 6D6F746F 		.ascii	"motorTurnLeft\000"
 2752      72547572 
 2752      6E4C6566 
 2752      7400
 2753              	.LASF37:
 2754 04ea 6D6F746F 		.ascii	"motorGoStraight\000"
 2754      72476F53 
 2754      74726169 
 2754      67687400 
 2755              	.LASF65:
 2756 04fa 6D6F746F 		.ascii	"motorCount\000"
 2756      72436F75 
 2756      6E7400
 2757              	.LASF26:
 2758 0505 67305F79 		.ascii	"g0_ypos\000"
 2758      706F7300 
 2759              	.LASF74:
 2760 050d 74735F64 		.ascii	"ts_display\000"
 2760      6973706C 
 2760      617900
 2761              	.LASF72:
 2762 0518 74735F75 		.ascii	"ts_update\000"
 2762      70646174 
 2762      6500
 2763              	.LASF66:
 2764 0522 68616E64 		.ascii	"handle_usb\000"
 2764      6C655F75 
 2764      736200
 2765              	.LASF83:
 2766 052d 666C6167 		.ascii	"flag_rf_transmission_active\000"
 2766      5F72665F 
 2766      7472616E 
 2766      736D6973 
 2766      73696F6E 
 2767              	.LASF23:
 2768 0549 726F626F 		.ascii	"robot_ypos\000"
 2768      745F7970 
 2768      6F7300
 2769              	.LASF70:
 2770 0554 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2770      52784275 
 2770      66666572 
 2770      00
 2771              	.LASF62:
 2772 0561 76616C75 		.ascii	"value\000"
 2772      6500
 2773              	.LASF59:
 2774 0567 6F6E4C69 		.ascii	"onLine\000"
 2774      6E6500
 2775              	.LASF32:
 2776 056e 67315F64 		.ascii	"g1_direction\000"
 2776      69726563 
 2776      74696F6E 
 2776      00
 2777              	.LASF41:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccxmZCRd.s 			page 63


 2778 057b 6D6F746F 		.ascii	"motorTurnRight\000"
 2778      72547572 
 2778      6E526967 
 2778      687400
 2779              	.LASF96:
 2780 058a 6D696464 		.ascii	"middle\000"
 2780      6C6500
 2781              	.LASF20:
 2782 0591 72737369 		.ascii	"rssi\000"
 2782      00
 2783              	.LASF24:
 2784 0596 726F626F 		.ascii	"robot_orientation\000"
 2784      745F6F72 
 2784      69656E74 
 2784      6174696F 
 2784      6E00
 2785              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
