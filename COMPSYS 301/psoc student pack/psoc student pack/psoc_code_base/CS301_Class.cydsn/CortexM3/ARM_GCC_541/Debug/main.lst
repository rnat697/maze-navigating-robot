ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.section	.text.motorGoStraight,"ax",%progbits
 107              		.align	2
 108              		.global	motorGoStraight
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 3


 109              		.thumb
 110              		.thumb_func
 111              		.type	motorGoStraight, %function
 112              	motorGoStraight:
 113              	.LFB64:
 114              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <stdbool.h>
  19:main.c        **** #include <string.h>
  20:main.c        **** #include <stdlib.h>
  21:main.c        **** #include <math.h>
  22:main.c        **** #include <project.h>
  23:main.c        **** //* ========================================
  24:main.c        **** #include "defines.h"
  25:main.c        **** #include "vars.h"
  26:main.c        **** #include "isr_eoc.h"
  27:main.c        **** //* ========================================
  28:main.c        **** void usbPutString(char *s);
  29:main.c        **** void usbPutChar(char c);
  30:main.c        **** void handle_usb();
  31:main.c        **** //* ========================================
  32:main.c        **** 
  33:main.c        **** 
  34:main.c        **** #define rota180 500 //turns
  35:main.c        **** #define rota90Left 250
  36:main.c        **** 
  37:main.c        **** #define moveSlow 50
  38:main.c        **** #define travelDist 326 // how
  39:main.c        **** #define Q1CHANNEL 3
  40:main.c        **** #define Q2CHANNEL 5 
  41:main.c        **** #define Q3CHANNEL 0
  42:main.c        **** #define Q4CHANNEL 1
  43:main.c        **** #define Q5CHANNEL 2
  44:main.c        **** #define Q6CHANNEL 4
  45:main.c        **** 
  46:main.c        **** CY_ISR_PROTO(isr_eoc_Interrupt_test);
  47:main.c        **** CY_ISR_PROTO(isr_motor_interrupt_speed);
  48:main.c        **** CY_ISR_PROTO(isr_TS_interrupt_sample);
  49:main.c        **** int convertSensorBinary();
  50:main.c        **** 
  51:main.c        **** void motorGoStraight(){
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 4


 115              		.loc 1 51 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119 0000 80B5     		push	{r7, lr}
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 7, -8
 122              		.cfi_offset 14, -4
 123 0002 00AF     		add	r7, sp, #0
 124              		.cfi_def_cfa_register 7
  52:main.c        ****     ////PWM_1_WriteCompare(150); // left wheel near power switch is stronker than right wheel //150
  53:main.c        ****     //M1_IN2_Write(0);
  54:main.c        ****     PWM_1_WriteCompare(160);//200
 125              		.loc 1 54 0
 126 0004 A020     		movs	r0, #160
 127 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  55:main.c        ****     PWM_2_WriteCompare(93); //50
 128              		.loc 1 55 0
 129 000a 5D20     		movs	r0, #93
 130 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  56:main.c        **** }
 131              		.loc 1 56 0
 132 0010 00BF     		nop
 133 0012 80BD     		pop	{r7, pc}
 134              		.cfi_endproc
 135              	.LFE64:
 136              		.size	motorGoStraight, .-motorGoStraight
 137              		.section	.text.motorGoBackwards,"ax",%progbits
 138              		.align	2
 139              		.global	motorGoBackwards
 140              		.thumb
 141              		.thumb_func
 142              		.type	motorGoBackwards, %function
 143              	motorGoBackwards:
 144              	.LFB65:
  57:main.c        **** void motorGoBackwards(){
 145              		.loc 1 57 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 1, uses_anonymous_args = 0
 149 0000 80B5     		push	{r7, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 00AF     		add	r7, sp, #0
 154              		.cfi_def_cfa_register 7
  58:main.c        ****     
  59:main.c        ****     //M1_IN2_Write(0);
  60:main.c        ****     PWM_1_WriteCompare(55); //55
 155              		.loc 1 60 0
 156 0004 3720     		movs	r0, #55
 157 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  61:main.c        ****     PWM_2_WriteCompare(201); //201
 158              		.loc 1 61 0
 159 000a C920     		movs	r0, #201
 160 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  62:main.c        **** }
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 5


 161              		.loc 1 62 0
 162 0010 00BF     		nop
 163 0012 80BD     		pop	{r7, pc}
 164              		.cfi_endproc
 165              	.LFE65:
 166              		.size	motorGoBackwards, .-motorGoBackwards
 167              		.section	.text.motorStop,"ax",%progbits
 168              		.align	2
 169              		.global	motorStop
 170              		.thumb
 171              		.thumb_func
 172              		.type	motorStop, %function
 173              	motorStop:
 174              	.LFB66:
  63:main.c        **** void motorStop(){
 175              		.loc 1 63 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 1, uses_anonymous_args = 0
 179 0000 80B5     		push	{r7, lr}
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 7, -8
 182              		.cfi_offset 14, -4
 183 0002 00AF     		add	r7, sp, #0
 184              		.cfi_def_cfa_register 7
  64:main.c        ****     PWM_1_WriteCompare(127); 
 185              		.loc 1 64 0
 186 0004 7F20     		movs	r0, #127
 187 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  65:main.c        ****     PWM_2_WriteCompare(127);
 188              		.loc 1 65 0
 189 000a 7F20     		movs	r0, #127
 190 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  66:main.c        **** }
 191              		.loc 1 66 0
 192 0010 00BF     		nop
 193 0012 80BD     		pop	{r7, pc}
 194              		.cfi_endproc
 195              	.LFE66:
 196              		.size	motorStop, .-motorStop
 197              		.section	.text.motorTurnLeft,"ax",%progbits
 198              		.align	2
 199              		.global	motorTurnLeft
 200              		.thumb
 201              		.thumb_func
 202              		.type	motorTurnLeft, %function
 203              	motorTurnLeft:
 204              	.LFB67:
  67:main.c        **** 
  68:main.c        **** void motorTurnLeft(uint8 x){
 205              		.loc 1 68 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 8
 208              		@ frame_needed = 1, uses_anonymous_args = 0
 209 0000 80B5     		push	{r7, lr}
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 7, -8
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 6


 212              		.cfi_offset 14, -4
 213 0002 82B0     		sub	sp, sp, #8
 214              		.cfi_def_cfa_offset 16
 215 0004 00AF     		add	r7, sp, #0
 216              		.cfi_def_cfa_register 7
 217 0006 0346     		mov	r3, r0
 218 0008 FB71     		strb	r3, [r7, #7]
  69:main.c        ****     // TO DO
  70:main.c        ****     
  71:main.c        ****     PWM_1_WriteCompare(127); //55
 219              		.loc 1 71 0
 220 000a 7F20     		movs	r0, #127
 221 000c FFF7FEFF 		bl	PWM_1_WriteCompare
  72:main.c        ****     PWM_2_WriteCompare(x); //201
 222              		.loc 1 72 0
 223 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 224 0012 1846     		mov	r0, r3
 225 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
  73:main.c        ****     
  74:main.c        ****     
  75:main.c        ****     
  76:main.c        ****     //255
  77:main.c        **** }
 226              		.loc 1 77 0
 227 0018 00BF     		nop
 228 001a 0837     		adds	r7, r7, #8
 229              		.cfi_def_cfa_offset 8
 230 001c BD46     		mov	sp, r7
 231              		.cfi_def_cfa_register 13
 232              		@ sp needed
 233 001e 80BD     		pop	{r7, pc}
 234              		.cfi_endproc
 235              	.LFE67:
 236              		.size	motorTurnLeft, .-motorTurnLeft
 237              		.section	.text.motorTurnRight,"ax",%progbits
 238              		.align	2
 239              		.global	motorTurnRight
 240              		.thumb
 241              		.thumb_func
 242              		.type	motorTurnRight, %function
 243              	motorTurnRight:
 244              	.LFB68:
  78:main.c        **** 
  79:main.c        **** void motorTurnRight(int x){
 245              		.loc 1 79 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 8
 248              		@ frame_needed = 1, uses_anonymous_args = 0
 249 0000 80B5     		push	{r7, lr}
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 7, -8
 252              		.cfi_offset 14, -4
 253 0002 82B0     		sub	sp, sp, #8
 254              		.cfi_def_cfa_offset 16
 255 0004 00AF     		add	r7, sp, #0
 256              		.cfi_def_cfa_register 7
 257 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 7


  80:main.c        ****     // TO DO
  81:main.c        ****     
  82:main.c        ****     PWM_1_WriteCompare(x);//200
 258              		.loc 1 82 0
 259 0008 7B68     		ldr	r3, [r7, #4]
 260 000a DBB2     		uxtb	r3, r3
 261 000c 1846     		mov	r0, r3
 262 000e FFF7FEFF 		bl	PWM_1_WriteCompare
  83:main.c        ****     PWM_2_WriteCompare(127); //50
 263              		.loc 1 83 0
 264 0012 7F20     		movs	r0, #127
 265 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
  84:main.c        **** 
  85:main.c        **** }
 266              		.loc 1 85 0
 267 0018 00BF     		nop
 268 001a 0837     		adds	r7, r7, #8
 269              		.cfi_def_cfa_offset 8
 270 001c BD46     		mov	sp, r7
 271              		.cfi_def_cfa_register 13
 272              		@ sp needed
 273 001e 80BD     		pop	{r7, pc}
 274              		.cfi_endproc
 275              	.LFE68:
 276              		.size	motorTurnRight, .-motorTurnRight
 277              		.global	changeMotor
 278              		.bss
 279 0012 0000     		.align	2
 280              		.type	changeMotor, %object
 281              		.size	changeMotor, 4
 282              	changeMotor:
 283 0014 00000000 		.space	4
 284              		.global	checkLight
 285              		.align	2
 286              		.type	checkLight, %object
 287              		.size	checkLight, 4
 288              	checkLight:
 289 0018 00000000 		.space	4
 290              		.global	lightState
 291              		.align	2
 292              		.type	lightState, %object
 293              		.size	lightState, 4
 294              	lightState:
 295 001c 00000000 		.space	4
 296              		.global	lightDetectedFront
 297              		.align	2
 298              		.type	lightDetectedFront, %object
 299              		.size	lightDetectedFront, 12
 300              	lightDetectedFront:
 301 0020 00000000 		.space	12
 301      00000000 
 301      00000000 
 302              		.global	lightDetectedBack
 303              		.align	2
 304              		.type	lightDetectedBack, %object
 305              		.size	lightDetectedBack, 12
 306              	lightDetectedBack:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 8


 307 002c 00000000 		.space	12
 307      00000000 
 307      00000000 
 308              		.global	counteoc
 309              		.align	2
 310              		.type	counteoc, %object
 311              		.size	counteoc, 4
 312              	counteoc:
 313 0038 00000000 		.space	4
 314              		.global	processSensors
 315              		.align	2
 316              		.type	processSensors, %object
 317              		.size	processSensors, 4
 318              	processSensors:
 319 003c 00000000 		.space	4
 320              		.global	middle
 321              		.align	2
 322              		.type	middle, %object
 323              		.size	middle, 4
 324              	middle:
 325 0040 00000000 		.space	4
 326              		.section	.text.isr_eoc_Interrupt_test,"ax",%progbits
 327              		.align	2
 328              		.global	isr_eoc_Interrupt_test
 329              		.thumb
 330              		.thumb_func
 331              		.type	isr_eoc_Interrupt_test, %function
 332              	isr_eoc_Interrupt_test:
 333              	.LFB69:
  86:main.c        **** int changeMotor=0;
  87:main.c        **** int checkLight =0;
  88:main.c        **** int lightState=0;
  89:main.c        **** volatile int lightDetectedFront[3] = {0,0,0};
  90:main.c        **** volatile int lightDetectedBack[3] = {0,0,0};
  91:main.c        **** volatile int counteoc = 0;
  92:main.c        **** volatile int processSensors = 0;
  93:main.c        **** volatile int middle =0;
  94:main.c        **** CY_ISR(isr_eoc_Interrupt_test)
  95:main.c        **** {
 334              		.loc 1 95 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 16
 337              		@ frame_needed = 1, uses_anonymous_args = 0
 338 0000 80B5     		push	{r7, lr}
 339              		.cfi_def_cfa_offset 8
 340              		.cfi_offset 7, -8
 341              		.cfi_offset 14, -4
 342 0002 84B0     		sub	sp, sp, #16
 343              		.cfi_def_cfa_offset 24
 344 0004 00AF     		add	r7, sp, #0
 345              		.cfi_def_cfa_register 7
  96:main.c        ****     #ifdef isr_test_INTERRUPT_INTERRUPT_CALLBACK
  97:main.c        ****         isr_TS_Interrupt_InterruptCallback();
  98:main.c        ****     #endif /* isr_eoc_INTERRUPT_INTERRUPT_CALLBACK */ 
  99:main.c        **** 
 100:main.c        ****     /*  Place your Interrupt code here. */
 101:main.c        ****     /* `#START isr_eoc_Interrupt` */
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 9


 102:main.c        ****     int16 valueQ3 =  ADC_GetResult16(Q3CHANNEL);
 346              		.loc 1 102 0
 347 0006 0020     		movs	r0, #0
 348 0008 FFF7FEFF 		bl	ADC_GetResult16
 349 000c 0346     		mov	r3, r0
 350 000e FB81     		strh	r3, [r7, #14]	@ movhi
 103:main.c        ****     int16 valueQ4 =  ADC_GetResult16(Q4CHANNEL);
 351              		.loc 1 103 0
 352 0010 0120     		movs	r0, #1
 353 0012 FFF7FEFF 		bl	ADC_GetResult16
 354 0016 0346     		mov	r3, r0
 355 0018 BB81     		strh	r3, [r7, #12]	@ movhi
 104:main.c        ****     int16 valueQ5 =  ADC_GetResult16(Q5CHANNEL);
 356              		.loc 1 104 0
 357 001a 0220     		movs	r0, #2
 358 001c FFF7FEFF 		bl	ADC_GetResult16
 359 0020 0346     		mov	r3, r0
 360 0022 7B81     		strh	r3, [r7, #10]	@ movhi
 105:main.c        ****     
 106:main.c        ****     int16 valueQ1 =  ADC_GetResult16(Q1CHANNEL);
 361              		.loc 1 106 0
 362 0024 0320     		movs	r0, #3
 363 0026 FFF7FEFF 		bl	ADC_GetResult16
 364 002a 0346     		mov	r3, r0
 365 002c 3B81     		strh	r3, [r7, #8]	@ movhi
 107:main.c        ****     int16 valueQ2 =  ADC_GetResult16(Q2CHANNEL);
 366              		.loc 1 107 0
 367 002e 0520     		movs	r0, #5
 368 0030 FFF7FEFF 		bl	ADC_GetResult16
 369 0034 0346     		mov	r3, r0
 370 0036 FB80     		strh	r3, [r7, #6]	@ movhi
 108:main.c        ****     int16 valueQ6 =  ADC_GetResult16(Q6CHANNEL);
 371              		.loc 1 108 0
 372 0038 0420     		movs	r0, #4
 373 003a FFF7FEFF 		bl	ADC_GetResult16
 374 003e 0346     		mov	r3, r0
 375 0040 BB80     		strh	r3, [r7, #4]	@ movhi
 109:main.c        ****     
 110:main.c        ****     // get value from ADC then convert to DAC to send to external LEDs
 111:main.c        ****     if (counteoc < 10) {
 376              		.loc 1 111 0
 377 0042 1A4B     		ldr	r3, .L14
 378 0044 1B68     		ldr	r3, [r3]
 379 0046 092B     		cmp	r3, #9
 380 0048 29DC     		bgt	.L7
 112:main.c        ****         //2211
 113:main.c        ****         if (valueQ3 >= 2211) {
 381              		.loc 1 113 0
 382 004a B7F90E30 		ldrsh	r3, [r7, #14]
 383 004e 40F6A202 		movw	r2, #2210
 384 0052 9342     		cmp	r3, r2
 385 0054 02DD     		ble	.L8
 114:main.c        ****         //set flag for white light detected
 115:main.c        ****         lightDetectedFront[0] = 1;
 386              		.loc 1 115 0
 387 0056 164B     		ldr	r3, .L14+4
 388 0058 0122     		movs	r2, #1
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 10


 389 005a 1A60     		str	r2, [r3]
 390              	.L8:
 116:main.c        ****         }
 117:main.c        ****         if (valueQ4 >= 2211) {
 391              		.loc 1 117 0
 392 005c B7F90C30 		ldrsh	r3, [r7, #12]
 393 0060 40F6A202 		movw	r2, #2210
 394 0064 9342     		cmp	r3, r2
 395 0066 02DD     		ble	.L9
 118:main.c        ****         //set flag for white light detected
 119:main.c        ****         lightDetectedFront[1] = 1;
 396              		.loc 1 119 0
 397 0068 114B     		ldr	r3, .L14+4
 398 006a 0122     		movs	r2, #1
 399 006c 5A60     		str	r2, [r3, #4]
 400              	.L9:
 120:main.c        ****         }
 121:main.c        ****     
 122:main.c        ****         if (valueQ5 >= 2211) {
 401              		.loc 1 122 0
 402 006e B7F90A30 		ldrsh	r3, [r7, #10]
 403 0072 40F6A202 		movw	r2, #2210
 404 0076 9342     		cmp	r3, r2
 405 0078 02DD     		ble	.L10
 123:main.c        ****         //set flag for white light detected
 124:main.c        ****         lightDetectedFront[2] = 1;
 406              		.loc 1 124 0
 407 007a 0D4B     		ldr	r3, .L14+4
 408 007c 0122     		movs	r2, #1
 409 007e 9A60     		str	r2, [r3, #8]
 410              	.L10:
 125:main.c        ****         }
 126:main.c        ****         
 127:main.c        ****         if (valueQ1 >= 2211) {
 411              		.loc 1 127 0
 412 0080 B7F90830 		ldrsh	r3, [r7, #8]
 413 0084 40F6A202 		movw	r2, #2210
 414 0088 9342     		cmp	r3, r2
 415 008a 02DD     		ble	.L11
 128:main.c        ****         //set flag for white light detected
 129:main.c        ****             middle = 1;
 416              		.loc 1 129 0
 417 008c 094B     		ldr	r3, .L14+8
 418 008e 0122     		movs	r2, #1
 419 0090 1A60     		str	r2, [r3]
 420              	.L11:
 130:main.c        ****         }
 131:main.c        ****         
 132:main.c        ****         counteoc++;
 421              		.loc 1 132 0
 422 0092 064B     		ldr	r3, .L14
 423 0094 1B68     		ldr	r3, [r3]
 424 0096 0133     		adds	r3, r3, #1
 425 0098 044A     		ldr	r2, .L14
 426 009a 1360     		str	r3, [r2]
 133:main.c        ****     } else {
 134:main.c        ****         processSensors = 1;   
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 11


 135:main.c        ****        
 136:main.c        ****     }
 137:main.c        ****     /* `#END` */
 138:main.c        **** }
 427              		.loc 1 138 0
 428 009c 02E0     		b	.L13
 429              	.L7:
 134:main.c        ****        
 430              		.loc 1 134 0
 431 009e 064B     		ldr	r3, .L14+12
 432 00a0 0122     		movs	r2, #1
 433 00a2 1A60     		str	r2, [r3]
 434              	.L13:
 435              		.loc 1 138 0
 436 00a4 00BF     		nop
 437 00a6 1037     		adds	r7, r7, #16
 438              		.cfi_def_cfa_offset 8
 439 00a8 BD46     		mov	sp, r7
 440              		.cfi_def_cfa_register 13
 441              		@ sp needed
 442 00aa 80BD     		pop	{r7, pc}
 443              	.L15:
 444              		.align	2
 445              	.L14:
 446 00ac 00000000 		.word	counteoc
 447 00b0 00000000 		.word	lightDetectedFront
 448 00b4 00000000 		.word	middle
 449 00b8 00000000 		.word	processSensors
 450              		.cfi_endproc
 451              	.LFE69:
 452              		.size	isr_eoc_Interrupt_test, .-isr_eoc_Interrupt_test
 453              		.bss
 454              	count:
 455 0044 00       		.space	1
 456              		.section	.text.isr_motor_interrupt_speed,"ax",%progbits
 457              		.align	2
 458              		.global	isr_motor_interrupt_speed
 459              		.thumb
 460              		.thumb_func
 461              		.type	isr_motor_interrupt_speed, %function
 462              	isr_motor_interrupt_speed:
 463              	.LFB70:
 139:main.c        **** // NEED TO INCREASE/DECREASE SPEED TOO
 140:main.c        **** // AND IMPLEMENT LIGHT SENSOR THINGS
 141:main.c        **** volatile static int8 count;
 142:main.c        **** CY_ISR(isr_motor_interrupt_speed)
 143:main.c        **** {
 464              		.loc 1 143 0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 1, uses_anonymous_args = 0
 468              		@ link register save eliminated.
 469 0000 80B4     		push	{r7}
 470              		.cfi_def_cfa_offset 4
 471              		.cfi_offset 7, -4
 472 0002 00AF     		add	r7, sp, #0
 473              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 12


 144:main.c        ****     #ifdef isr_motor_INTERRUPT_INTERRUPT_CALLBACK
 145:main.c        ****         isr_motor_Interrupt_InterruptCallback();
 146:main.c        ****     #endif /* isr_motor_INTERRUPT_INTERRUPT_CALLBACK */ 
 147:main.c        **** 
 148:main.c        ****     /*  Place your Interrupt code here. */
 149:main.c        ****     /* `#START isr_motor_Interrupt` */
 150:main.c        ****       /*int16 currCountMotor2 = QuadDec_M2_GetCounter();
 151:main.c        ****       int16 currCountMotor1 = QuadDec_M1_GetCounter();  
 152:main.c        ****       
 153:main.c        ****      speedMotor1 = (currCountMotor1 - prevcountMotor1) / 0.2;
 154:main.c        ****      speedMotor2 = (currCountMotor2 - prevcountMotor2) / 0.2;
 155:main.c        ****     
 156:main.c        ****       prevcountMotor1 = currCountMotor1;
 157:main.c        ****       prevcountMotor2 = currCountMotor2;*/
 158:main.c        ****     
 159:main.c        ****     /* `#END` */
 160:main.c        **** }
 474              		.loc 1 160 0
 475 0004 00BF     		nop
 476 0006 BD46     		mov	sp, r7
 477              		.cfi_def_cfa_register 13
 478              		@ sp needed
 479 0008 80BC     		pop	{r7}
 480              		.cfi_restore 7
 481              		.cfi_def_cfa_offset 0
 482 000a 7047     		bx	lr
 483              		.cfi_endproc
 484              	.LFE70:
 485              		.size	isr_motor_interrupt_speed, .-isr_motor_interrupt_speed
 486              		.section	.rodata
 487              		.align	2
 488              	.LC0:
 489 0000 4D6F746F 		.ascii	"Motor 1 - start count: %d, end count: %d \012\000"
 489      72203120 
 489      2D207374 
 489      61727420 
 489      636F756E 
 490 002b 00       		.align	2
 491              	.LC1:
 492 002c 4D6F746F 		.ascii	"Motor 2 - start count: %d, end count: %d \012\000"
 492      72203220 
 492      2D207374 
 492      61727420 
 492      636F756E 
 493              		.section	.text.motorCount,"ax",%progbits
 494              		.align	2
 495              		.global	motorCount
 496              		.thumb
 497              		.thumb_func
 498              		.type	motorCount, %function
 499              	motorCount:
 500              	.LFB71:
 161:main.c        **** void motorCount(){
 501              		.loc 1 161 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 20008
 504              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 13


 505 0000 80B5     		push	{r7, lr}
 506              		.cfi_def_cfa_offset 8
 507              		.cfi_offset 7, -8
 508              		.cfi_offset 14, -4
 509 0002 ADF59C4D 		sub	sp, sp, #19968
 510              		.cfi_def_cfa_offset 19976
 511 0006 8AB0     		sub	sp, sp, #40
 512              		.cfi_def_cfa_offset 20016
 513 0008 00AF     		add	r7, sp, #0
 514              		.cfi_def_cfa_register 7
 162:main.c        ****     int16 beginningCountMotor1 = 0;
 515              		.loc 1 162 0
 516 000a 0023     		movs	r3, #0
 517 000c 07F59C42 		add	r2, r7, #19968
 518 0010 02F12602 		add	r2, r2, #38
 519 0014 1380     		strh	r3, [r2]	@ movhi
 163:main.c        ****     int16 beginningCountMotor2 = 0;
 520              		.loc 1 163 0
 521 0016 0023     		movs	r3, #0
 522 0018 07F59C42 		add	r2, r7, #19968
 523 001c 02F12402 		add	r2, r2, #36
 524 0020 1380     		strh	r3, [r2]	@ movhi
 164:main.c        ****     int16 endCountMotor2 = QuadDec_M2_GetCounter();
 525              		.loc 1 164 0
 526 0022 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 527 0026 0346     		mov	r3, r0
 528 0028 07F59C42 		add	r2, r7, #19968
 529 002c 02F12202 		add	r2, r2, #34
 530 0030 1380     		strh	r3, [r2]	@ movhi
 165:main.c        ****     int16 endCountMotor1 = QuadDec_M1_GetCounter();
 531              		.loc 1 165 0
 532 0032 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 533 0036 0346     		mov	r3, r0
 534 0038 07F59C42 		add	r2, r7, #19968
 535 003c 02F12002 		add	r2, r2, #32
 536 0040 1380     		strh	r3, [r2]	@ movhi
 166:main.c        ****     char motor1String[10000]; 
 167:main.c        ****     sprintf(motor1String,"Motor 1 - start count: %d, end count: %d \n", beginningCountMotor1, endCo
 537              		.loc 1 167 0
 538 0042 07F59C43 		add	r3, r7, #19968
 539 0046 03F12603 		add	r3, r3, #38
 540 004a B3F90020 		ldrsh	r2, [r3]
 541 004e 07F59C43 		add	r3, r7, #19968
 542 0052 03F12003 		add	r3, r3, #32
 543 0056 B3F90030 		ldrsh	r3, [r3]
 544 005a 07F51C50 		add	r0, r7, #9984
 545 005e 00F12800 		add	r0, r0, #40
 546 0062 1838     		subs	r0, r0, #24
 547 0064 1449     		ldr	r1, .L18
 548 0066 FFF7FEFF 		bl	sprintf
 168:main.c        ****     char motor2String[10000];
 169:main.c        ****     sprintf(motor2String,"Motor 2 - start count: %d, end count: %d \n", beginningCountMotor2 , endC
 549              		.loc 1 169 0
 550 006a 07F59C43 		add	r3, r7, #19968
 551 006e 03F12403 		add	r3, r3, #36
 552 0072 B3F90020 		ldrsh	r2, [r3]
 553 0076 07F59C43 		add	r3, r7, #19968
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 14


 554 007a 03F12203 		add	r3, r3, #34
 555 007e B3F90030 		ldrsh	r3, [r3]
 556 0082 07F12800 		add	r0, r7, #40
 557 0086 2838     		subs	r0, r0, #40
 558 0088 0C49     		ldr	r1, .L18+4
 559 008a FFF7FEFF 		bl	sprintf
 170:main.c        ****     
 171:main.c        ****     usbPutString(motor1String);
 560              		.loc 1 171 0
 561 008e 07F51C53 		add	r3, r7, #9984
 562 0092 03F12803 		add	r3, r3, #40
 563 0096 183B     		subs	r3, r3, #24
 564 0098 1846     		mov	r0, r3
 565 009a FFF7FEFF 		bl	usbPutString
 172:main.c        ****     usbPutString(motor2String);
 566              		.loc 1 172 0
 567 009e 07F12803 		add	r3, r7, #40
 568 00a2 283B     		subs	r3, r3, #40
 569 00a4 1846     		mov	r0, r3
 570 00a6 FFF7FEFF 		bl	usbPutString
 173:main.c        **** 
 174:main.c        **** }
 571              		.loc 1 174 0
 572 00aa 00BF     		nop
 573 00ac 07F59C47 		add	r7, r7, #19968
 574 00b0 2837     		adds	r7, r7, #40
 575              		.cfi_def_cfa_offset 8
 576 00b2 BD46     		mov	sp, r7
 577              		.cfi_def_cfa_register 13
 578              		@ sp needed
 579 00b4 80BD     		pop	{r7, pc}
 580              	.L19:
 581 00b6 00BF     		.align	2
 582              	.L18:
 583 00b8 00000000 		.word	.LC0
 584 00bc 2C000000 		.word	.LC1
 585              		.cfi_endproc
 586              	.LFE71:
 587              		.size	motorCount, .-motorCount
 588              		.section	.text.motorRun,"ax",%progbits
 589              		.align	2
 590              		.global	motorRun
 591              		.thumb
 592              		.thumb_func
 593              		.type	motorRun, %function
 594              	motorRun:
 595              	.LFB72:
 175:main.c        **** 
 176:main.c        **** void motorRun(){
 596              		.loc 1 176 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 1, uses_anonymous_args = 0
 600 0000 80B5     		push	{r7, lr}
 601              		.cfi_def_cfa_offset 8
 602              		.cfi_offset 7, -8
 603              		.cfi_offset 14, -4
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 15


 604 0002 00AF     		add	r7, sp, #0
 605              		.cfi_def_cfa_register 7
 177:main.c        ****     
 178:main.c        ****     
 179:main.c        ****     
 180:main.c        ****     PWM_1_Start();
 606              		.loc 1 180 0
 607 0004 FFF7FEFF 		bl	PWM_1_Start
 181:main.c        ****     PWM_2_Start();
 608              		.loc 1 181 0
 609 0008 FFF7FEFF 		bl	PWM_2_Start
 182:main.c        **** 
 183:main.c        **** 
 184:main.c        ****     motorStop();
 610              		.loc 1 184 0
 611 000c FFF7FEFF 		bl	motorStop
 185:main.c        ****     CyDelay(2000); // so we have time to set the robot up
 612              		.loc 1 185 0
 613 0010 4FF4FA60 		mov	r0, #2000
 614 0014 FFF7FEFF 		bl	CyDelay
 186:main.c        ****     motorGoStraight();
 615              		.loc 1 186 0
 616 0018 FFF7FEFF 		bl	motorGoStraight
 187:main.c        ****     CyDelay(2000);
 617              		.loc 1 187 0
 618 001c 4FF4FA60 		mov	r0, #2000
 619 0020 FFF7FEFF 		bl	CyDelay
 188:main.c        ****     motorStop();
 620              		.loc 1 188 0
 621 0024 FFF7FEFF 		bl	motorStop
 189:main.c        ****     
 190:main.c        ****     //motorGoBackwards();
 191:main.c        **** 
 192:main.c        ****     
 193:main.c        ****     //CyDelay(2000);
 194:main.c        ****  
 195:main.c        ****     //motorStop();
 196:main.c        ****     //motorCount();//checks count per second.
 197:main.c        **** 
 198:main.c        **** }
 622              		.loc 1 198 0
 623 0028 00BF     		nop
 624 002a 80BD     		pop	{r7, pc}
 625              		.cfi_endproc
 626              	.LFE72:
 627              		.size	motorRun, .-motorRun
 628              		.section	.text.isr_TS_Interrupt_sample,"ax",%progbits
 629              		.align	2
 630              		.global	isr_TS_Interrupt_sample
 631              		.thumb
 632              		.thumb_func
 633              		.type	isr_TS_Interrupt_sample, %function
 634              	isr_TS_Interrupt_sample:
 635              	.LFB73:
 199:main.c        **** CY_ISR(isr_TS_Interrupt_sample)
 200:main.c        **** {
 636              		.loc 1 200 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 16


 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 0
 639              		@ frame_needed = 1, uses_anonymous_args = 0
 640 0000 80B5     		push	{r7, lr}
 641              		.cfi_def_cfa_offset 8
 642              		.cfi_offset 7, -8
 643              		.cfi_offset 14, -4
 644 0002 00AF     		add	r7, sp, #0
 645              		.cfi_def_cfa_register 7
 201:main.c        ****     #ifdef isr_TS_INTERRUPT_INTERRUPT_CALLBACK
 202:main.c        ****         isr_TS_Interrupt_InterruptCallback();
 203:main.c        ****     #endif /* isr_TS_INTERRUPT_INTERRUPT_CALLBACK */ 
 204:main.c        ****         ADC_StartConvert();
 646              		.loc 1 204 0
 647 0004 FFF7FEFF 		bl	ADC_StartConvert
 205:main.c        ****     /*  Place your Interrupt code here. */
 206:main.c        ****     /* `#START isr_TS_Interrupt` */
 207:main.c        **** 
 208:main.c        ****     /* `#END` */
 209:main.c        **** }
 648              		.loc 1 209 0
 649 0008 00BF     		nop
 650 000a 80BD     		pop	{r7, pc}
 651              		.cfi_endproc
 652              	.LFE73:
 653              		.size	isr_TS_Interrupt_sample, .-isr_TS_Interrupt_sample
 654              		.section	.text.main,"ax",%progbits
 655              		.align	2
 656              		.global	main
 657              		.thumb
 658              		.thumb_func
 659              		.type	main, %function
 660              	main:
 661              	.LFB74:
 210:main.c        **** 
 211:main.c        **** 
 212:main.c        **** int main()
 213:main.c        **** {
 662              		.loc 1 213 0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 8
 665              		@ frame_needed = 1, uses_anonymous_args = 0
 666 0000 80B5     		push	{r7, lr}
 667              		.cfi_def_cfa_offset 8
 668              		.cfi_offset 7, -8
 669              		.cfi_offset 14, -4
 670 0002 82B0     		sub	sp, sp, #8
 671              		.cfi_def_cfa_offset 16
 672 0004 00AF     		add	r7, sp, #0
 673              		.cfi_def_cfa_register 7
 214:main.c        ****     
 215:main.c        **** 
 216:main.c        **** // --------------------------------    
 217:main.c        **** // ----- INITIALIZATIONS ----------
 218:main.c        ****     CYGlobalIntEnable;
 674              		.loc 1 218 0
 675              		.syntax unified
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 17


 676              	@ 218 "main.c" 1
 677 0006 62B6     		CPSIE   i
 678              	@ 0 "" 2
 219:main.c        ****     count  = 0;
 679              		.loc 1 219 0
 680              		.thumb
 681              		.syntax unified
 682 0008 4A4B     		ldr	r3, .L36
 683 000a 0022     		movs	r2, #0
 684 000c 1A70     		strb	r2, [r3]
 220:main.c        ****     
 221:main.c        ****     ADC_Start();
 685              		.loc 1 221 0
 686 000e FFF7FEFF 		bl	ADC_Start
 222:main.c        ****     Timer_TS_Start();
 687              		.loc 1 222 0
 688 0012 FFF7FEFF 		bl	Timer_TS_Start
 223:main.c        ****     Timer_Motor_Start();
 689              		.loc 1 223 0
 690 0016 FFF7FEFF 		bl	Timer_Motor_Start
 224:main.c        ****     QuadDec_M1_Start();
 691              		.loc 1 224 0
 692 001a FFF7FEFF 		bl	QuadDec_M1_Start
 225:main.c        ****     QuadDec_M2_Start(); //init the quadencoder,
 693              		.loc 1 225 0
 694 001e FFF7FEFF 		bl	QuadDec_M2_Start
 226:main.c        ****     //isr_motor_StartEx(isr_motor_interrupt_speed);
 227:main.c        ****     
 228:main.c        ****     isr_TS_StartEx(isr_TS_Interrupt_sample);
 695              		.loc 1 228 0
 696 0022 4548     		ldr	r0, .L36+4
 697 0024 FFF7FEFF 		bl	isr_TS_StartEx
 229:main.c        ****     isr_eoc_StartEx(isr_eoc_Interrupt_test);
 698              		.loc 1 229 0
 699 0028 4448     		ldr	r0, .L36+8
 700 002a FFF7FEFF 		bl	isr_eoc_StartEx
 230:main.c        ****     
 231:main.c        ****     
 232:main.c        ****     //ADC_StartConvert();
 233:main.c        ****     
 234:main.c        ****     PWM_1_Start();
 701              		.loc 1 234 0
 702 002e FFF7FEFF 		bl	PWM_1_Start
 235:main.c        ****     PWM_2_Start();
 703              		.loc 1 235 0
 704 0032 FFF7FEFF 		bl	PWM_2_Start
 236:main.c        ****     
 237:main.c        ****     LED_Write(0);
 705              		.loc 1 237 0
 706 0036 0020     		movs	r0, #0
 707 0038 FFF7FEFF 		bl	LED_Write
 238:main.c        ****     ///////IF NOT USINNG MOTOR RUN DO PWM START STUFF
 239:main.c        ****     // SO write compare is a measure of speed
 240:main.c        ****     // And Cy delay delays the running of the motor and duration that it travels
 241:main.c        ****     //look at motor RUn config above for more info.
 242:main.c        ****     motorStop();
 708              		.loc 1 242 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 18


 709 003c FFF7FEFF 		bl	motorStop
 243:main.c        ****     CyDelay(2000); // to prep PARTY PART!! WHOOP WHOOP
 710              		.loc 1 243 0
 711 0040 4FF4FA60 		mov	r0, #2000
 712 0044 FFF7FEFF 		bl	CyDelay
 244:main.c        ****    /* while(QuadDec_M1_GetCounter()<travelDist){
 245:main.c        ****     //where counter is value we want it to stop at.
 246:main.c        ****         motorGoStraight();
 247:main.c        ****     
 248:main.c        ****     
 249:main.c        ****     }*/
 250:main.c        **** 
 251:main.c        ****     
 252:main.c        ****     //motorStop();
 253:main.c        ****    // CyDelay(2000); // so we have time to set the robot up
 254:main.c        ****     //motorTurnLeft();
 255:main.c        ****     //motorStop();
 256:main.c        ****     //motorCount();//checks count per second.
 257:main.c        ****      
 258:main.c        ****     
 259:main.c        ****     
 260:main.c        **** 
 261:main.c        ****     
 262:main.c        **** 
 263:main.c        ****     
 264:main.c        **** // ------USB SETUP ----------------    
 265:main.c        **** //#ifdef USE_USB    
 266:main.c        **** //    USBUART_Start(0,USBUART_5V_OPERATION);
 267:main.c        **** //#endif        
 268:main.c        **** //        
 269:main.c        **** //    RF_BT_SELECT_Write(0);
 270:main.c        **** //    motorCount();//checks count per second.
 271:main.c        ****     int onLine=0; // tracks if line is between three sensors
 713              		.loc 1 271 0
 714 0048 0023     		movs	r3, #0
 715 004a 7B60     		str	r3, [r7, #4]
 716              	.L35:
 272:main.c        ****     //usbPutString(displaystring);
 273:main.c        ****     while(1)
 274:main.c        ****     {
 275:main.c        ****         /* Place your application code here. */
 276:main.c        ****         
 277:main.c        ****         //if Q3 SENSES BLACK LIGHT BUT Q4 DOES NOT SENSE THE BLACK LIGHT MOVE TOWARDS THE RIGHT TO 
 278:main.c        ****     // IF Q3 AND Q4 SENSES TURN 90 DEGREES LEFT - intersection
 279:main.c        ****     // IF Q5 BUT NOT Q4 SENSES BLACK LIGHT MOVE TOWARDS THE LEFT TO REALIGN CENTER
 280:main.c        ****     // IF Q5 AND Q4 TURN 90 DEGREES RIGHT - intersection
 281:main.c        ****        
 282:main.c        ****         if (processSensors == 1) {
 717              		.loc 1 282 0
 718 004c 3C4B     		ldr	r3, .L36+12
 719 004e 1B68     		ldr	r3, [r3]
 720 0050 012B     		cmp	r3, #1
 721 0052 FBD1     		bne	.L35
 722              	.LBB2:
 283:main.c        ****             
 284:main.c        ****             //make decision
 285:main.c        ****             
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 19


 286:main.c        ****             //checks intersection
 287:main.c        ****             //int leftIntersection= (lightDetectedFront[0] == 1 && lightDetectedFront[1]==1);
 288:main.c        ****             //int rightIntersection=  (lightDetectedFront[2] == 1 && lightDetectedFront[1]==1);
 289:main.c        ****             
 290:main.c        ****            //check intersectin
 291:main.c        ****             ///mazeIntersection(leftIntersection,rightIntersection);
 292:main.c        ****         
 293:main.c        ****             int operation = convertSensorBinary();
 723              		.loc 1 293 0
 724 0054 FFF7FEFF 		bl	convertSensorBinary
 725 0058 3860     		str	r0, [r7]
 294:main.c        ****             
 295:main.c        ****             if (onLine){
 726              		.loc 1 295 0
 727 005a 7B68     		ldr	r3, [r7, #4]
 728 005c 002B     		cmp	r3, #0
 729 005e 04D0     		beq	.L24
 296:main.c        ****               motorGoStraight();
 730              		.loc 1 296 0
 731 0060 FFF7FEFF 		bl	motorGoStraight
 297:main.c        ****               LED_Write(0);
 732              		.loc 1 297 0
 733 0064 0020     		movs	r0, #0
 734 0066 FFF7FEFF 		bl	LED_Write
 735              	.L24:
 298:main.c        ****             }
 299:main.c        ****             
 300:main.c        **** 
 301:main.c        ****             
 302:main.c        ****             
 303:main.c        ****             switch(operation){
 736              		.loc 1 303 0
 737 006a 3B68     		ldr	r3, [r7]
 738 006c 072B     		cmp	r3, #7
 739 006e 51D8     		bhi	.L25
 740 0070 01A2     		adr	r2, .L27
 741 0072 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 742 0076 00BF     		.p2align 2
 743              	.L27:
 744 0078 0F010000 		.word	.L26+1
 745 007c DF000000 		.word	.L28+1
 746 0080 15010000 		.word	.L25+1
 747 0084 AB000000 		.word	.L29+1
 748 0088 F7000000 		.word	.L30+1
 749 008c CF000000 		.word	.L31+1
 750 0090 BD000000 		.word	.L32+1
 751 0094 99000000 		.word	.L33+1
 752              		.p2align 1
 753              	.L33:
 304:main.c        ****             //where 1 is on white, 0 is on black.
 305:main.c        ****                 
 306:main.c        ****                 case 7: // 111 // all under white\\
 307:main.c        ****                     
 308:main.c        ****                     if (onLine==1){
 754              		.loc 1 308 0
 755 0098 7B68     		ldr	r3, [r7, #4]
 756 009a 012B     		cmp	r3, #1
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 20


 757 009c 02D1     		bne	.L34
 309:main.c        ****                     
 310:main.c        ****                     motorGoStraight();
 758              		.loc 1 310 0
 759 009e FFF7FEFF 		bl	motorGoStraight
 311:main.c        ****                     break;
 760              		.loc 1 311 0
 761 00a2 37E0     		b	.L25
 762              	.L34:
 312:main.c        ****                     }
 313:main.c        ****                     
 314:main.c        ****                     else{
 315:main.c        ****                     motorStop();
 763              		.loc 1 315 0
 764 00a4 FFF7FEFF 		bl	motorStop
 316:main.c        ****                     break;
 765              		.loc 1 316 0
 766 00a8 34E0     		b	.L25
 767              	.L29:
 317:main.c        ****                     }
 318:main.c        ****                     
 319:main.c        ****                 case 3:// 0 1 1 // Q3 under black
 320:main.c        ****                     onLine=0;
 768              		.loc 1 320 0
 769 00aa 0023     		movs	r3, #0
 770 00ac 7B60     		str	r3, [r7, #4]
 321:main.c        ****                     motorTurnLeft(50);
 771              		.loc 1 321 0
 772 00ae 3220     		movs	r0, #50
 773 00b0 FFF7FEFF 		bl	motorTurnLeft
 322:main.c        ****                     LED_Write(1);
 774              		.loc 1 322 0
 775 00b4 0120     		movs	r0, #1
 776 00b6 FFF7FEFF 		bl	LED_Write
 323:main.c        ****                     break;    
 777              		.loc 1 323 0
 778 00ba 2BE0     		b	.L25
 779              	.L32:
 324:main.c        ****                     
 325:main.c        ****                 case 6:// 1 1 0 // Q5 under black
 326:main.c        ****                     onLine=0;
 780              		.loc 1 326 0
 781 00bc 0023     		movs	r3, #0
 782 00be 7B60     		str	r3, [r7, #4]
 327:main.c        ****                     motorTurnRight(200);
 783              		.loc 1 327 0
 784 00c0 C820     		movs	r0, #200
 785 00c2 FFF7FEFF 		bl	motorTurnRight
 328:main.c        ****                     LED_Write(1);
 786              		.loc 1 328 0
 787 00c6 0120     		movs	r0, #1
 788 00c8 FFF7FEFF 		bl	LED_Write
 329:main.c        ****                     break;
 789              		.loc 1 329 0
 790 00cc 22E0     		b	.L25
 791              	.L31:
 330:main.c        ****                     
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 21


 331:main.c        ****                 case 5:// 101 // Q4 under black
 332:main.c        ****                     onLine=1;
 792              		.loc 1 332 0
 793 00ce 0123     		movs	r3, #1
 794 00d0 7B60     		str	r3, [r7, #4]
 333:main.c        ****                     motorGoStraight();
 795              		.loc 1 333 0
 796 00d2 FFF7FEFF 		bl	motorGoStraight
 334:main.c        ****                     LED_Write(0);
 797              		.loc 1 334 0
 798 00d6 0020     		movs	r0, #0
 799 00d8 FFF7FEFF 		bl	LED_Write
 335:main.c        ****                     break;
 800              		.loc 1 335 0
 801 00dc 1AE0     		b	.L25
 802              	.L28:
 336:main.c        ****                 case 1: // 001 --> left intersection
 337:main.c        ****                     motorStop();
 803              		.loc 1 337 0
 804 00de FFF7FEFF 		bl	motorStop
 338:main.c        ****                     CyDelay(50);
 805              		.loc 1 338 0
 806 00e2 3220     		movs	r0, #50
 807 00e4 FFF7FEFF 		bl	CyDelay
 339:main.c        ****                     motorTurnLeft(50);
 808              		.loc 1 339 0
 809 00e8 3220     		movs	r0, #50
 810 00ea FFF7FEFF 		bl	motorTurnLeft
 340:main.c        ****                     CyDelay(250);
 811              		.loc 1 340 0
 812 00ee FA20     		movs	r0, #250
 813 00f0 FFF7FEFF 		bl	CyDelay
 341:main.c        ****                     break;
 814              		.loc 1 341 0
 815 00f4 0EE0     		b	.L25
 816              	.L30:
 342:main.c        ****                 case 4: // 100 --> right intersection
 343:main.c        ****                     motorStop();
 817              		.loc 1 343 0
 818 00f6 FFF7FEFF 		bl	motorStop
 344:main.c        ****                     CyDelay(50);
 819              		.loc 1 344 0
 820 00fa 3220     		movs	r0, #50
 821 00fc FFF7FEFF 		bl	CyDelay
 345:main.c        ****                     motorTurnRight(200);
 822              		.loc 1 345 0
 823 0100 C820     		movs	r0, #200
 824 0102 FFF7FEFF 		bl	motorTurnRight
 346:main.c        ****                     CyDelay(250);
 825              		.loc 1 346 0
 826 0106 FA20     		movs	r0, #250
 827 0108 FFF7FEFF 		bl	CyDelay
 347:main.c        ****                     break;
 828              		.loc 1 347 0
 829 010c 02E0     		b	.L25
 830              	.L26:
 348:main.c        ****                     
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 22


 349:main.c        ****                 
 350:main.c        ****                 
 351:main.c        ****                 
 352:main.c        ****                     
 353:main.c        ****                 case 0: // 000 // ALL UNDER black
 354:main.c        ****                       
 355:main.c        ****                     motorGoStraight();
 831              		.loc 1 355 0
 832 010e FFF7FEFF 		bl	motorGoStraight
 356:main.c        ****                     break;    
 833              		.loc 1 356 0
 834 0112 00BF     		nop
 835              	.L25:
 357:main.c        **** 
 358:main.c        ****                
 359:main.c        ****                 
 360:main.c        ****                
 361:main.c        ****             
 362:main.c        ****             }
 363:main.c        ****             
 364:main.c        ****             
 365:main.c        ****             
 366:main.c        ****             
 367:main.c        **** //            if(leftIntersection){
 368:main.c        **** //                motorTurnLeft(55);
 369:main.c        **** //            
 370:main.c        **** //            
 371:main.c        **** //                CyDelay(250);
 372:main.c        **** //            }
 373:main.c        **** //            
 374:main.c        **** //            if(rightIntersection){
 375:main.c        **** //                motorTurnRight(55);
 376:main.c        **** //                
 377:main.c        **** //                CyDelay(250);//small rotation need small time
 378:main.c        **** //            
 379:main.c        **** //            }
 380:main.c        ****             
 381:main.c        **** //            //Slight turns
 382:main.c        **** //            if(lightDetectedFront[0] == 1 && lightDetectedFront[1]==0){
 383:main.c        **** //                motorTurnRight(140);
 384:main.c        **** //                CyDelay(20);//small rotation need small time
 385:main.c        **** //            }
 386:main.c        **** //            
 387:main.c        **** //            if(lightDetectedFront[2] == 0 && lightDetectedFront[1]==1){
 388:main.c        **** //                motorTurnLeft(140);
 389:main.c        **** //                CyDelay(20);//small rotation need small time
 390:main.c        **** //            }
 391:main.c        **** 
 392:main.c        ****        
 393:main.c        ****             //reset variable.
 394:main.c        ****             processSensors = 0;
 836              		.loc 1 394 0
 837 0114 0A4B     		ldr	r3, .L36+12
 838 0116 0022     		movs	r2, #0
 839 0118 1A60     		str	r2, [r3]
 395:main.c        ****             //reset counter
 396:main.c        **** 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 23


 397:main.c        ****              counteoc = 0;
 840              		.loc 1 397 0
 841 011a 0A4B     		ldr	r3, .L36+16
 842 011c 0022     		movs	r2, #0
 843 011e 1A60     		str	r2, [r3]
 398:main.c        ****             //reset flags for lightsensors because it checks every 10 iterations, adds delay/
 399:main.c        ****             lightDetectedFront[0] = 0;
 844              		.loc 1 399 0
 845 0120 094B     		ldr	r3, .L36+20
 846 0122 0022     		movs	r2, #0
 847 0124 1A60     		str	r2, [r3]
 400:main.c        ****             lightDetectedFront[1] = 0;
 848              		.loc 1 400 0
 849 0126 084B     		ldr	r3, .L36+20
 850 0128 0022     		movs	r2, #0
 851 012a 5A60     		str	r2, [r3, #4]
 401:main.c        ****             lightDetectedFront[2] = 0;
 852              		.loc 1 401 0
 853 012c 064B     		ldr	r3, .L36+20
 854 012e 0022     		movs	r2, #0
 855 0130 9A60     		str	r2, [r3, #8]
 856              	.LBE2:
 402:main.c        ****           
 403:main.c        ****         }
 404:main.c        ****         
 405:main.c        ****     }   
 857              		.loc 1 405 0
 858 0132 8BE7     		b	.L35
 859              	.L37:
 860              		.align	2
 861              	.L36:
 862 0134 44000000 		.word	count
 863 0138 00000000 		.word	isr_TS_Interrupt_sample
 864 013c 00000000 		.word	isr_eoc_Interrupt_test
 865 0140 00000000 		.word	processSensors
 866 0144 00000000 		.word	counteoc
 867 0148 00000000 		.word	lightDetectedFront
 868              		.cfi_endproc
 869              	.LFE74:
 870              		.size	main, .-main
 871              		.section	.text.convertSensorBinary,"ax",%progbits
 872              		.align	2
 873              		.global	convertSensorBinary
 874              		.thumb
 875              		.thumb_func
 876              		.type	convertSensorBinary, %function
 877              	convertSensorBinary:
 878              	.LFB75:
 406:main.c        **** }
 407:main.c        **** 
 408:main.c        ****   
 409:main.c        **** 
 410:main.c        **** 
 411:main.c        **** 
 412:main.c        **** int convertSensorBinary()
 413:main.c        **** {
 879              		.loc 1 413 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 24


 880              		.cfi_startproc
 881              		@ args = 0, pretend = 0, frame = 16
 882              		@ frame_needed = 1, uses_anonymous_args = 0
 883              		@ link register save eliminated.
 884 0000 80B4     		push	{r7}
 885              		.cfi_def_cfa_offset 4
 886              		.cfi_offset 7, -4
 887 0002 85B0     		sub	sp, sp, #20
 888              		.cfi_def_cfa_offset 24
 889 0004 00AF     		add	r7, sp, #0
 890              		.cfi_def_cfa_register 7
 414:main.c        ****    int value=0;
 891              		.loc 1 414 0
 892 0006 0023     		movs	r3, #0
 893 0008 FB60     		str	r3, [r7, #12]
 415:main.c        ****   int Q3 = lightDetectedFront[0];
 894              		.loc 1 415 0
 895 000a 104B     		ldr	r3, .L40
 896 000c 1B68     		ldr	r3, [r3]
 897 000e BB60     		str	r3, [r7, #8]
 416:main.c        ****   int Q4 = lightDetectedFront[1];
 898              		.loc 1 416 0
 899 0010 0E4B     		ldr	r3, .L40
 900 0012 5B68     		ldr	r3, [r3, #4]
 901 0014 7B60     		str	r3, [r7, #4]
 417:main.c        ****    int Q5 = lightDetectedFront[2];
 902              		.loc 1 417 0
 903 0016 0D4B     		ldr	r3, .L40
 904 0018 9B68     		ldr	r3, [r3, #8]
 905 001a 3B60     		str	r3, [r7]
 418:main.c        ****   value=value + lightDetectedFront[0]*4;
 906              		.loc 1 418 0
 907 001c 0B4B     		ldr	r3, .L40
 908 001e 1B68     		ldr	r3, [r3]
 909 0020 9B00     		lsls	r3, r3, #2
 910 0022 FA68     		ldr	r2, [r7, #12]
 911 0024 1344     		add	r3, r3, r2
 912 0026 FB60     		str	r3, [r7, #12]
 419:main.c        ****   value=value + lightDetectedFront[1]*2;
 913              		.loc 1 419 0
 914 0028 084B     		ldr	r3, .L40
 915 002a 5B68     		ldr	r3, [r3, #4]
 916 002c 5B00     		lsls	r3, r3, #1
 917 002e FA68     		ldr	r2, [r7, #12]
 918 0030 1344     		add	r3, r3, r2
 919 0032 FB60     		str	r3, [r7, #12]
 420:main.c        ****   value=value + lightDetectedFront[2]*1;
 920              		.loc 1 420 0
 921 0034 054B     		ldr	r3, .L40
 922 0036 9B68     		ldr	r3, [r3, #8]
 923 0038 FA68     		ldr	r2, [r7, #12]
 924 003a 1344     		add	r3, r3, r2
 925 003c FB60     		str	r3, [r7, #12]
 421:main.c        ****     return value;
 926              		.loc 1 421 0
 927 003e FB68     		ldr	r3, [r7, #12]
 422:main.c        **** }
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 25


 928              		.loc 1 422 0
 929 0040 1846     		mov	r0, r3
 930 0042 1437     		adds	r7, r7, #20
 931              		.cfi_def_cfa_offset 4
 932 0044 BD46     		mov	sp, r7
 933              		.cfi_def_cfa_register 13
 934              		@ sp needed
 935 0046 80BC     		pop	{r7}
 936              		.cfi_restore 7
 937              		.cfi_def_cfa_offset 0
 938 0048 7047     		bx	lr
 939              	.L41:
 940 004a 00BF     		.align	2
 941              	.L40:
 942 004c 00000000 		.word	lightDetectedFront
 943              		.cfi_endproc
 944              	.LFE75:
 945              		.size	convertSensorBinary, .-convertSensorBinary
 946              		.section	.text.usbPutString,"ax",%progbits
 947              		.align	2
 948              		.global	usbPutString
 949              		.thumb
 950              		.thumb_func
 951              		.type	usbPutString, %function
 952              	usbPutString:
 953              	.LFB76:
 423:main.c        **** //* ========================================
 424:main.c        **** void usbPutString(char *s)
 425:main.c        **** {
 954              		.loc 1 425 0
 955              		.cfi_startproc
 956              		@ args = 0, pretend = 0, frame = 8
 957              		@ frame_needed = 1, uses_anonymous_args = 0
 958 0000 80B5     		push	{r7, lr}
 959              		.cfi_def_cfa_offset 8
 960              		.cfi_offset 7, -8
 961              		.cfi_offset 14, -4
 962 0002 82B0     		sub	sp, sp, #8
 963              		.cfi_def_cfa_offset 16
 964 0004 00AF     		add	r7, sp, #0
 965              		.cfi_def_cfa_register 7
 966 0006 7860     		str	r0, [r7, #4]
 426:main.c        **** // !! Assumes that *s is a string with allocated space >=64 chars     
 427:main.c        **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 428:main.c        **** //  length to 62 char (63rd char is a '!')
 429:main.c        **** 
 430:main.c        **** #ifdef USE_USB     
 431:main.c        ****     while (USBUART_CDCIsReady() == 0);
 967              		.loc 1 431 0
 968 0008 00BF     		nop
 969              	.L43:
 970              		.loc 1 431 0 is_stmt 0 discriminator 1
 971 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 972 000e 0346     		mov	r3, r0
 973 0010 002B     		cmp	r3, #0
 974 0012 FAD0     		beq	.L43
 432:main.c        ****     s[63]='\0';
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 26


 975              		.loc 1 432 0 is_stmt 1
 976 0014 7B68     		ldr	r3, [r7, #4]
 977 0016 3F33     		adds	r3, r3, #63
 978 0018 0022     		movs	r2, #0
 979 001a 1A70     		strb	r2, [r3]
 433:main.c        ****     s[62]='!';
 980              		.loc 1 433 0
 981 001c 7B68     		ldr	r3, [r7, #4]
 982 001e 3E33     		adds	r3, r3, #62
 983 0020 2122     		movs	r2, #33
 984 0022 1A70     		strb	r2, [r3]
 434:main.c        ****     USBUART_PutData((uint8*)s,strlen(s));
 985              		.loc 1 434 0
 986 0024 7868     		ldr	r0, [r7, #4]
 987 0026 FFF7FEFF 		bl	strlen
 988 002a 0346     		mov	r3, r0
 989 002c 9BB2     		uxth	r3, r3
 990 002e 1946     		mov	r1, r3
 991 0030 7868     		ldr	r0, [r7, #4]
 992 0032 FFF7FEFF 		bl	USBUART_PutData
 435:main.c        **** #endif
 436:main.c        **** }
 993              		.loc 1 436 0
 994 0036 00BF     		nop
 995 0038 0837     		adds	r7, r7, #8
 996              		.cfi_def_cfa_offset 8
 997 003a BD46     		mov	sp, r7
 998              		.cfi_def_cfa_register 13
 999              		@ sp needed
 1000 003c 80BD     		pop	{r7, pc}
 1001              		.cfi_endproc
 1002              	.LFE76:
 1003              		.size	usbPutString, .-usbPutString
 1004 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 1005              		.align	2
 1006              		.global	usbPutChar
 1007              		.thumb
 1008              		.thumb_func
 1009              		.type	usbPutChar, %function
 1010              	usbPutChar:
 1011              	.LFB77:
 437:main.c        **** //* ========================================
 438:main.c        **** void usbPutChar(char c)
 439:main.c        **** {
 1012              		.loc 1 439 0
 1013              		.cfi_startproc
 1014              		@ args = 0, pretend = 0, frame = 8
 1015              		@ frame_needed = 1, uses_anonymous_args = 0
 1016 0000 80B5     		push	{r7, lr}
 1017              		.cfi_def_cfa_offset 8
 1018              		.cfi_offset 7, -8
 1019              		.cfi_offset 14, -4
 1020 0002 82B0     		sub	sp, sp, #8
 1021              		.cfi_def_cfa_offset 16
 1022 0004 00AF     		add	r7, sp, #0
 1023              		.cfi_def_cfa_register 7
 1024 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 27


 1025 0008 FB71     		strb	r3, [r7, #7]
 440:main.c        **** #ifdef USE_USB     
 441:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1026              		.loc 1 441 0
 1027 000a 00BF     		nop
 1028              	.L45:
 1029              		.loc 1 441 0 is_stmt 0 discriminator 1
 1030 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 1031 0010 0346     		mov	r3, r0
 1032 0012 002B     		cmp	r3, #0
 1033 0014 FAD0     		beq	.L45
 442:main.c        ****     USBUART_PutChar(c);
 1034              		.loc 1 442 0 is_stmt 1
 1035 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1036 0018 1846     		mov	r0, r3
 1037 001a FFF7FEFF 		bl	USBUART_PutChar
 443:main.c        **** #endif    
 444:main.c        **** }
 1038              		.loc 1 444 0
 1039 001e 00BF     		nop
 1040 0020 0837     		adds	r7, r7, #8
 1041              		.cfi_def_cfa_offset 8
 1042 0022 BD46     		mov	sp, r7
 1043              		.cfi_def_cfa_register 13
 1044              		@ sp needed
 1045 0024 80BD     		pop	{r7, pc}
 1046              		.cfi_endproc
 1047              	.LFE77:
 1048              		.size	usbPutChar, .-usbPutChar
 1049 0026 00BF     		.section	.text.handle_usb,"ax",%progbits
 1050              		.align	2
 1051              		.global	handle_usb
 1052              		.thumb
 1053              		.thumb_func
 1054              		.type	handle_usb, %function
 1055              	handle_usb:
 1056              	.LFB78:
 445:main.c        **** //* ========================================
 446:main.c        **** void handle_usb()
 447:main.c        **** {
 1057              		.loc 1 447 0
 1058              		.cfi_startproc
 1059              		@ args = 0, pretend = 0, frame = 8
 1060              		@ frame_needed = 1, uses_anonymous_args = 0
 1061 0000 80B5     		push	{r7, lr}
 1062              		.cfi_def_cfa_offset 8
 1063              		.cfi_offset 7, -8
 1064              		.cfi_offset 14, -4
 1065 0002 82B0     		sub	sp, sp, #8
 1066              		.cfi_def_cfa_offset 16
 1067 0004 00AF     		add	r7, sp, #0
 1068              		.cfi_def_cfa_register 7
 448:main.c        ****     // handles input at terminal, echos it back to the terminal
 449:main.c        ****     // turn echo OFF, key emulation: only CR
 450:main.c        ****     // entered string is made available in 'line' and 'flag_KB_string' is set
 451:main.c        ****     
 452:main.c        ****     static uint8 usbStarted = FALSE;
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 28


 453:main.c        ****     static uint16 usbBufCount = 0;
 454:main.c        ****     uint8 c = 0; 
 1069              		.loc 1 454 0
 1070 0006 0023     		movs	r3, #0
 1071 0008 FB71     		strb	r3, [r7, #7]
 455:main.c        ****     
 456:main.c        **** 
 457:main.c        ****     if (!usbStarted)
 1072              		.loc 1 457 0
 1073 000a 2B4B     		ldr	r3, .L56
 1074 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1075 000e 002B     		cmp	r3, #0
 1076 0010 0AD1     		bne	.L47
 458:main.c        ****     {
 459:main.c        ****         if (USBUART_GetConfiguration())
 1077              		.loc 1 459 0
 1078 0012 FFF7FEFF 		bl	USBUART_GetConfiguration
 1079 0016 0346     		mov	r3, r0
 1080 0018 002B     		cmp	r3, #0
 1081 001a 49D0     		beq	.L55
 460:main.c        ****         {
 461:main.c        ****             USBUART_CDC_Init();
 1082              		.loc 1 461 0
 1083 001c FFF7FEFF 		bl	USBUART_CDC_Init
 462:main.c        ****             usbStarted = TRUE;
 1084              		.loc 1 462 0
 1085 0020 254B     		ldr	r3, .L56
 1086 0022 0122     		movs	r2, #1
 1087 0024 1A70     		strb	r2, [r3]
 463:main.c        ****         }
 464:main.c        ****     }
 465:main.c        ****     else
 466:main.c        ****     {
 467:main.c        ****         if (USBUART_DataIsReady() != 0)
 468:main.c        ****         {  
 469:main.c        ****             c = USBUART_GetChar();
 470:main.c        **** 
 471:main.c        ****             if ((c == 13) || (c == 10))
 472:main.c        ****             {
 473:main.c        **** //                if (usbBufCount > 0)
 474:main.c        ****                 {
 475:main.c        ****                     entry[usbBufCount]= '\0';
 476:main.c        ****                     strcpy(line,entry);
 477:main.c        ****                     usbBufCount = 0;
 478:main.c        ****                     flag_KB_string = 1;
 479:main.c        ****                 }
 480:main.c        ****             }
 481:main.c        ****             else 
 482:main.c        ****             {
 483:main.c        ****                 if (((c == CHAR_BACKSP) || (c == CHAR_DEL) ) && (usbBufCount > 0) )
 484:main.c        ****                     usbBufCount--;
 485:main.c        ****                 else
 486:main.c        ****                 {
 487:main.c        ****                     if (usbBufCount > (BUF_SIZE-2) ) // one less else strtok triggers a crash
 488:main.c        ****                     {
 489:main.c        ****                        USBUART_PutChar('!');        
 490:main.c        ****                     }
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 29


 491:main.c        ****                     else
 492:main.c        ****                         entry[usbBufCount++] = c;  
 493:main.c        ****                 }  
 494:main.c        ****             }
 495:main.c        ****         }
 496:main.c        ****     }    
 497:main.c        **** }
 1088              		.loc 1 497 0
 1089 0026 43E0     		b	.L55
 1090              	.L47:
 467:main.c        ****         {  
 1091              		.loc 1 467 0
 1092 0028 FFF7FEFF 		bl	USBUART_DataIsReady
 1093 002c 0346     		mov	r3, r0
 1094 002e 002B     		cmp	r3, #0
 1095 0030 3ED0     		beq	.L55
 469:main.c        **** 
 1096              		.loc 1 469 0
 1097 0032 FFF7FEFF 		bl	USBUART_GetChar
 1098 0036 0346     		mov	r3, r0
 1099 0038 FB71     		strb	r3, [r7, #7]
 471:main.c        ****             {
 1100              		.loc 1 471 0
 1101 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1102 003c 0D2B     		cmp	r3, #13
 1103 003e 02D0     		beq	.L50
 471:main.c        ****             {
 1104              		.loc 1 471 0 is_stmt 0 discriminator 1
 1105 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1106 0042 0A2B     		cmp	r3, #10
 1107 0044 10D1     		bne	.L51
 1108              	.L50:
 475:main.c        ****                     strcpy(line,entry);
 1109              		.loc 1 475 0 is_stmt 1
 1110 0046 1D4B     		ldr	r3, .L56+4
 1111 0048 1B88     		ldrh	r3, [r3]
 1112 004a 1A46     		mov	r2, r3
 1113 004c 1C4B     		ldr	r3, .L56+8
 1114 004e 0021     		movs	r1, #0
 1115 0050 9954     		strb	r1, [r3, r2]
 476:main.c        ****                     usbBufCount = 0;
 1116              		.loc 1 476 0
 1117 0052 1B49     		ldr	r1, .L56+8
 1118 0054 1B48     		ldr	r0, .L56+12
 1119 0056 FFF7FEFF 		bl	strcpy
 477:main.c        ****                     flag_KB_string = 1;
 1120              		.loc 1 477 0
 1121 005a 184B     		ldr	r3, .L56+4
 1122 005c 0022     		movs	r2, #0
 1123 005e 1A80     		strh	r2, [r3]	@ movhi
 478:main.c        ****                 }
 1124              		.loc 1 478 0
 1125 0060 194B     		ldr	r3, .L56+16
 1126 0062 0122     		movs	r2, #1
 1127 0064 1A70     		strb	r2, [r3]
 1128 0066 23E0     		b	.L49
 1129              	.L51:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 30


 483:main.c        ****                     usbBufCount--;
 1130              		.loc 1 483 0
 1131 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1132 006a 082B     		cmp	r3, #8
 1133 006c 02D0     		beq	.L52
 483:main.c        ****                     usbBufCount--;
 1134              		.loc 1 483 0 is_stmt 0 discriminator 2
 1135 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1136 0070 7F2B     		cmp	r3, #127
 1137 0072 0AD1     		bne	.L53
 1138              	.L52:
 483:main.c        ****                     usbBufCount--;
 1139              		.loc 1 483 0 discriminator 3
 1140 0074 114B     		ldr	r3, .L56+4
 1141 0076 1B88     		ldrh	r3, [r3]
 1142 0078 002B     		cmp	r3, #0
 1143 007a 06D0     		beq	.L53
 484:main.c        ****                 else
 1144              		.loc 1 484 0 is_stmt 1
 1145 007c 0F4B     		ldr	r3, .L56+4
 1146 007e 1B88     		ldrh	r3, [r3]
 1147 0080 013B     		subs	r3, r3, #1
 1148 0082 9AB2     		uxth	r2, r3
 1149 0084 0D4B     		ldr	r3, .L56+4
 1150 0086 1A80     		strh	r2, [r3]	@ movhi
 1151 0088 12E0     		b	.L49
 1152              	.L53:
 487:main.c        ****                     {
 1153              		.loc 1 487 0
 1154 008a 0C4B     		ldr	r3, .L56+4
 1155 008c 1B88     		ldrh	r3, [r3]
 1156 008e 3E2B     		cmp	r3, #62
 1157 0090 03D9     		bls	.L54
 489:main.c        ****                     }
 1158              		.loc 1 489 0
 1159 0092 2120     		movs	r0, #33
 1160 0094 FFF7FEFF 		bl	USBUART_PutChar
 1161              		.loc 1 497 0
 1162 0098 0AE0     		b	.L55
 1163              	.L54:
 492:main.c        ****                 }  
 1164              		.loc 1 492 0
 1165 009a 084B     		ldr	r3, .L56+4
 1166 009c 1B88     		ldrh	r3, [r3]
 1167 009e 5A1C     		adds	r2, r3, #1
 1168 00a0 91B2     		uxth	r1, r2
 1169 00a2 064A     		ldr	r2, .L56+4
 1170 00a4 1180     		strh	r1, [r2]	@ movhi
 1171 00a6 1946     		mov	r1, r3
 1172 00a8 054A     		ldr	r2, .L56+8
 1173 00aa FB79     		ldrb	r3, [r7, #7]
 1174 00ac 5354     		strb	r3, [r2, r1]
 1175              		.loc 1 497 0
 1176 00ae FFE7     		b	.L55
 1177              	.L49:
 1178              	.L55:
 1179 00b0 00BF     		nop
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 31


 1180 00b2 0837     		adds	r7, r7, #8
 1181              		.cfi_def_cfa_offset 8
 1182 00b4 BD46     		mov	sp, r7
 1183              		.cfi_def_cfa_register 13
 1184              		@ sp needed
 1185 00b6 80BD     		pop	{r7, pc}
 1186              	.L57:
 1187              		.align	2
 1188              	.L56:
 1189 00b8 45000000 		.word	usbStarted.8799
 1190 00bc 46000000 		.word	usbBufCount.8800
 1191 00c0 00000000 		.word	entry
 1192 00c4 00000000 		.word	line
 1193 00c8 00000000 		.word	flag_KB_string
 1194              		.cfi_endproc
 1195              	.LFE78:
 1196              		.size	handle_usb, .-handle_usb
 1197              		.bss
 1198              	usbStarted.8799:
 1199 0045 00       		.space	1
 1200              		.align	1
 1201              	usbBufCount.8800:
 1202 0046 0000     		.space	2
 1203              		.text
 1204              	.Letext0:
 1205              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1206              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1207              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1208              		.file 5 "vars.h"
 1209              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1210              		.section	.debug_info,"",%progbits
 1211              	.Ldebug_info0:
 1212 0000 99060000 		.4byte	0x699
 1213 0004 0400     		.2byte	0x4
 1214 0006 00000000 		.4byte	.Ldebug_abbrev0
 1215 000a 04       		.byte	0x4
 1216 000b 01       		.uleb128 0x1
 1217 000c B5000000 		.4byte	.LASF97
 1218 0010 0C       		.byte	0xc
 1219 0011 93040000 		.4byte	.LASF98
 1220 0015 AB010000 		.4byte	.LASF99
 1221 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1222 001d 00000000 		.4byte	0
 1223 0021 00000000 		.4byte	.Ldebug_line0
 1224 0025 02       		.uleb128 0x2
 1225 0026 01       		.byte	0x1
 1226 0027 06       		.byte	0x6
 1227 0028 A3030000 		.4byte	.LASF0
 1228 002c 02       		.uleb128 0x2
 1229 002d 01       		.byte	0x1
 1230 002e 08       		.byte	0x8
 1231 002f 6A030000 		.4byte	.LASF1
 1232 0033 02       		.uleb128 0x2
 1233 0034 02       		.byte	0x2
 1234 0035 05       		.byte	0x5
 1235 0036 8B000000 		.4byte	.LASF2
 1236 003a 02       		.uleb128 0x2
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 32


 1237 003b 02       		.byte	0x2
 1238 003c 07       		.byte	0x7
 1239 003d 40040000 		.4byte	.LASF3
 1240 0041 03       		.uleb128 0x3
 1241 0042 D2040000 		.4byte	.LASF12
 1242 0046 02       		.byte	0x2
 1243 0047 3F       		.byte	0x3f
 1244 0048 4C000000 		.4byte	0x4c
 1245 004c 02       		.uleb128 0x2
 1246 004d 04       		.byte	0x4
 1247 004e 05       		.byte	0x5
 1248 004f CE020000 		.4byte	.LASF4
 1249 0053 02       		.uleb128 0x2
 1250 0054 04       		.byte	0x4
 1251 0055 07       		.byte	0x7
 1252 0056 9A040000 		.4byte	.LASF5
 1253 005a 02       		.uleb128 0x2
 1254 005b 08       		.byte	0x8
 1255 005c 05       		.byte	0x5
 1256 005d 82020000 		.4byte	.LASF6
 1257 0061 02       		.uleb128 0x2
 1258 0062 08       		.byte	0x8
 1259 0063 07       		.byte	0x7
 1260 0064 AF030000 		.4byte	.LASF7
 1261 0068 04       		.uleb128 0x4
 1262 0069 04       		.byte	0x4
 1263 006a 05       		.byte	0x5
 1264 006b 696E7400 		.ascii	"int\000"
 1265 006f 02       		.uleb128 0x2
 1266 0070 04       		.byte	0x4
 1267 0071 07       		.byte	0x7
 1268 0072 C6030000 		.4byte	.LASF8
 1269 0076 02       		.uleb128 0x2
 1270 0077 08       		.byte	0x8
 1271 0078 04       		.byte	0x4
 1272 0079 5E030000 		.4byte	.LASF9
 1273 007d 02       		.uleb128 0x2
 1274 007e 04       		.byte	0x4
 1275 007f 07       		.byte	0x7
 1276 0080 A2000000 		.4byte	.LASF10
 1277 0084 05       		.uleb128 0x5
 1278 0085 04       		.byte	0x4
 1279 0086 8A000000 		.4byte	0x8a
 1280 008a 02       		.uleb128 0x2
 1281 008b 01       		.byte	0x1
 1282 008c 08       		.byte	0x8
 1283 008d 13040000 		.4byte	.LASF11
 1284 0091 03       		.uleb128 0x3
 1285 0092 23040000 		.4byte	.LASF13
 1286 0096 03       		.byte	0x3
 1287 0097 2C       		.byte	0x2c
 1288 0098 41000000 		.4byte	0x41
 1289 009c 02       		.uleb128 0x2
 1290 009d 08       		.byte	0x8
 1291 009e 04       		.byte	0x4
 1292 009f 29000000 		.4byte	.LASF14
 1293 00a3 02       		.uleb128 0x2
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 33


 1294 00a4 04       		.byte	0x4
 1295 00a5 04       		.byte	0x4
 1296 00a6 62020000 		.4byte	.LASF15
 1297 00aa 06       		.uleb128 0x6
 1298 00ab A5010000 		.4byte	.LASF16
 1299 00af 04       		.byte	0x4
 1300 00b0 E401     		.2byte	0x1e4
 1301 00b2 2C000000 		.4byte	0x2c
 1302 00b6 06       		.uleb128 0x6
 1303 00b7 8C040000 		.4byte	.LASF17
 1304 00bb 04       		.byte	0x4
 1305 00bc E501     		.2byte	0x1e5
 1306 00be 3A000000 		.4byte	0x3a
 1307 00c2 06       		.uleb128 0x6
 1308 00c3 9D020000 		.4byte	.LASF18
 1309 00c7 04       		.byte	0x4
 1310 00c8 E701     		.2byte	0x1e7
 1311 00ca 25000000 		.4byte	0x25
 1312 00ce 06       		.uleb128 0x6
 1313 00cf 9F010000 		.4byte	.LASF19
 1314 00d3 04       		.byte	0x4
 1315 00d4 E801     		.2byte	0x1e8
 1316 00d6 33000000 		.4byte	0x33
 1317 00da 07       		.uleb128 0x7
 1318 00db 09040000 		.4byte	.LASF100
 1319 00df 20       		.byte	0x20
 1320 00e0 05       		.byte	0x5
 1321 00e1 29       		.byte	0x29
 1322 00e2 B3010000 		.4byte	0x1b3
 1323 00e6 08       		.uleb128 0x8
 1324 00e7 91050000 		.4byte	.LASF20
 1325 00eb 05       		.byte	0x5
 1326 00ec 2A       		.byte	0x2a
 1327 00ed C2000000 		.4byte	0xc2
 1328 00f1 00       		.byte	0
 1329 00f2 08       		.uleb128 0x8
 1330 00f3 99010000 		.4byte	.LASF21
 1331 00f7 05       		.byte	0x5
 1332 00f8 2B       		.byte	0x2b
 1333 00f9 AA000000 		.4byte	0xaa
 1334 00fd 01       		.byte	0x1
 1335 00fe 08       		.uleb128 0x8
 1336 00ff 18040000 		.4byte	.LASF22
 1337 0103 05       		.byte	0x5
 1338 0104 2C       		.byte	0x2c
 1339 0105 CE000000 		.4byte	0xce
 1340 0109 02       		.byte	0x2
 1341 010a 08       		.uleb128 0x8
 1342 010b 49050000 		.4byte	.LASF23
 1343 010f 05       		.byte	0x5
 1344 0110 2D       		.byte	0x2d
 1345 0111 CE000000 		.4byte	0xce
 1346 0115 04       		.byte	0x4
 1347 0116 08       		.uleb128 0x8
 1348 0117 96050000 		.4byte	.LASF24
 1349 011b 05       		.byte	0x5
 1350 011c 2E       		.byte	0x2e
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 34


 1351 011d CE000000 		.4byte	0xce
 1352 0121 06       		.byte	0x6
 1353 0122 08       		.uleb128 0x8
 1354 0123 C6020000 		.4byte	.LASF25
 1355 0127 05       		.byte	0x5
 1356 0128 2F       		.byte	0x2f
 1357 0129 CE000000 		.4byte	0xce
 1358 012d 08       		.byte	0x8
 1359 012e 08       		.uleb128 0x8
 1360 012f 05050000 		.4byte	.LASF26
 1361 0133 05       		.byte	0x5
 1362 0134 30       		.byte	0x30
 1363 0135 CE000000 		.4byte	0xce
 1364 0139 0A       		.byte	0xa
 1365 013a 08       		.uleb128 0x8
 1366 013b 8B030000 		.4byte	.LASF27
 1367 013f 05       		.byte	0x5
 1368 0140 31       		.byte	0x31
 1369 0141 CE000000 		.4byte	0xce
 1370 0145 0C       		.byte	0xc
 1371 0146 08       		.uleb128 0x8
 1372 0147 B9020000 		.4byte	.LASF28
 1373 014b 05       		.byte	0x5
 1374 014c 32       		.byte	0x32
 1375 014d CE000000 		.4byte	0xce
 1376 0151 0E       		.byte	0xe
 1377 0152 08       		.uleb128 0x8
 1378 0153 F7030000 		.4byte	.LASF29
 1379 0157 05       		.byte	0x5
 1380 0158 33       		.byte	0x33
 1381 0159 CE000000 		.4byte	0xce
 1382 015d 10       		.byte	0x10
 1383 015e 08       		.uleb128 0x8
 1384 015f 2B040000 		.4byte	.LASF30
 1385 0163 05       		.byte	0x5
 1386 0164 34       		.byte	0x34
 1387 0165 CE000000 		.4byte	0xce
 1388 0169 12       		.byte	0x12
 1389 016a 08       		.uleb128 0x8
 1390 016b 53040000 		.4byte	.LASF31
 1391 016f 05       		.byte	0x5
 1392 0170 35       		.byte	0x35
 1393 0171 CE000000 		.4byte	0xce
 1394 0175 14       		.byte	0x14
 1395 0176 08       		.uleb128 0x8
 1396 0177 6E050000 		.4byte	.LASF32
 1397 017b 05       		.byte	0x5
 1398 017c 36       		.byte	0x36
 1399 017d CE000000 		.4byte	0xce
 1400 0181 16       		.byte	0x16
 1401 0182 08       		.uleb128 0x8
 1402 0183 83000000 		.4byte	.LASF33
 1403 0187 05       		.byte	0x5
 1404 0188 37       		.byte	0x37
 1405 0189 CE000000 		.4byte	0xce
 1406 018d 18       		.byte	0x18
 1407 018e 08       		.uleb128 0x8
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 35


 1408 018f B1020000 		.4byte	.LASF34
 1409 0193 05       		.byte	0x5
 1410 0194 38       		.byte	0x38
 1411 0195 CE000000 		.4byte	0xce
 1412 0199 1A       		.byte	0x1a
 1413 019a 08       		.uleb128 0x8
 1414 019b EE030000 		.4byte	.LASF35
 1415 019f 05       		.byte	0x5
 1416 01a0 39       		.byte	0x39
 1417 01a1 CE000000 		.4byte	0xce
 1418 01a5 1C       		.byte	0x1c
 1419 01a6 08       		.uleb128 0x8
 1420 01a7 33040000 		.4byte	.LASF36
 1421 01ab 05       		.byte	0x5
 1422 01ac 3A       		.byte	0x3a
 1423 01ad CE000000 		.4byte	0xce
 1424 01b1 1E       		.byte	0x1e
 1425 01b2 00       		.byte	0
 1426 01b3 09       		.uleb128 0x9
 1427 01b4 EA040000 		.4byte	.LASF37
 1428 01b8 01       		.byte	0x1
 1429 01b9 33       		.byte	0x33
 1430 01ba 00000000 		.4byte	.LFB64
 1431 01be 14000000 		.4byte	.LFE64-.LFB64
 1432 01c2 01       		.uleb128 0x1
 1433 01c3 9C       		.byte	0x9c
 1434 01c4 09       		.uleb128 0x9
 1435 01c5 67000000 		.4byte	.LASF38
 1436 01c9 01       		.byte	0x1
 1437 01ca 39       		.byte	0x39
 1438 01cb 00000000 		.4byte	.LFB65
 1439 01cf 14000000 		.4byte	.LFE65-.LFB65
 1440 01d3 01       		.uleb128 0x1
 1441 01d4 9C       		.byte	0x9c
 1442 01d5 09       		.uleb128 0x9
 1443 01d6 00000000 		.4byte	.LASF39
 1444 01da 01       		.byte	0x1
 1445 01db 3F       		.byte	0x3f
 1446 01dc 00000000 		.4byte	.LFB66
 1447 01e0 14000000 		.4byte	.LFE66-.LFB66
 1448 01e4 01       		.uleb128 0x1
 1449 01e5 9C       		.byte	0x9c
 1450 01e6 0A       		.uleb128 0xa
 1451 01e7 DC040000 		.4byte	.LASF40
 1452 01eb 01       		.byte	0x1
 1453 01ec 44       		.byte	0x44
 1454 01ed 00000000 		.4byte	.LFB67
 1455 01f1 20000000 		.4byte	.LFE67-.LFB67
 1456 01f5 01       		.uleb128 0x1
 1457 01f6 9C       		.byte	0x9c
 1458 01f7 08020000 		.4byte	0x208
 1459 01fb 0B       		.uleb128 0xb
 1460 01fc 7800     		.ascii	"x\000"
 1461 01fe 01       		.byte	0x1
 1462 01ff 44       		.byte	0x44
 1463 0200 AA000000 		.4byte	0xaa
 1464 0204 02       		.uleb128 0x2
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 36


 1465 0205 91       		.byte	0x91
 1466 0206 77       		.sleb128 -9
 1467 0207 00       		.byte	0
 1468 0208 0A       		.uleb128 0xa
 1469 0209 7B050000 		.4byte	.LASF41
 1470 020d 01       		.byte	0x1
 1471 020e 4F       		.byte	0x4f
 1472 020f 00000000 		.4byte	.LFB68
 1473 0213 20000000 		.4byte	.LFE68-.LFB68
 1474 0217 01       		.uleb128 0x1
 1475 0218 9C       		.byte	0x9c
 1476 0219 2A020000 		.4byte	0x22a
 1477 021d 0B       		.uleb128 0xb
 1478 021e 7800     		.ascii	"x\000"
 1479 0220 01       		.byte	0x1
 1480 0221 4F       		.byte	0x4f
 1481 0222 68000000 		.4byte	0x68
 1482 0226 02       		.uleb128 0x2
 1483 0227 91       		.byte	0x91
 1484 0228 74       		.sleb128 -12
 1485 0229 00       		.byte	0
 1486 022a 0A       		.uleb128 0xa
 1487 022b 50000000 		.4byte	.LASF42
 1488 022f 01       		.byte	0x1
 1489 0230 5E       		.byte	0x5e
 1490 0231 00000000 		.4byte	.LFB69
 1491 0235 BC000000 		.4byte	.LFE69-.LFB69
 1492 0239 01       		.uleb128 0x1
 1493 023a 9C       		.byte	0x9c
 1494 023b 94020000 		.4byte	0x294
 1495 023f 0C       		.uleb128 0xc
 1496 0240 61010000 		.4byte	.LASF43
 1497 0244 01       		.byte	0x1
 1498 0245 66       		.byte	0x66
 1499 0246 CE000000 		.4byte	0xce
 1500 024a 02       		.uleb128 0x2
 1501 024b 91       		.byte	0x91
 1502 024c 76       		.sleb128 -10
 1503 024d 0C       		.uleb128 0xc
 1504 024e 69010000 		.4byte	.LASF44
 1505 0252 01       		.byte	0x1
 1506 0253 67       		.byte	0x67
 1507 0254 CE000000 		.4byte	0xce
 1508 0258 02       		.uleb128 0x2
 1509 0259 91       		.byte	0x91
 1510 025a 74       		.sleb128 -12
 1511 025b 0C       		.uleb128 0xc
 1512 025c 71010000 		.4byte	.LASF45
 1513 0260 01       		.byte	0x1
 1514 0261 68       		.byte	0x68
 1515 0262 CE000000 		.4byte	0xce
 1516 0266 02       		.uleb128 0x2
 1517 0267 91       		.byte	0x91
 1518 0268 72       		.sleb128 -14
 1519 0269 0C       		.uleb128 0xc
 1520 026a 51010000 		.4byte	.LASF46
 1521 026e 01       		.byte	0x1
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 37


 1522 026f 6A       		.byte	0x6a
 1523 0270 CE000000 		.4byte	0xce
 1524 0274 02       		.uleb128 0x2
 1525 0275 91       		.byte	0x91
 1526 0276 70       		.sleb128 -16
 1527 0277 0C       		.uleb128 0xc
 1528 0278 59010000 		.4byte	.LASF47
 1529 027c 01       		.byte	0x1
 1530 027d 6B       		.byte	0x6b
 1531 027e CE000000 		.4byte	0xce
 1532 0282 02       		.uleb128 0x2
 1533 0283 91       		.byte	0x91
 1534 0284 6E       		.sleb128 -18
 1535 0285 0C       		.uleb128 0xc
 1536 0286 79010000 		.4byte	.LASF48
 1537 028a 01       		.byte	0x1
 1538 028b 6C       		.byte	0x6c
 1539 028c CE000000 		.4byte	0xce
 1540 0290 02       		.uleb128 0x2
 1541 0291 91       		.byte	0x91
 1542 0292 6C       		.sleb128 -20
 1543 0293 00       		.byte	0
 1544 0294 0D       		.uleb128 0xd
 1545 0295 68020000 		.4byte	.LASF56
 1546 0299 01       		.byte	0x1
 1547 029a 8E       		.byte	0x8e
 1548 029b 00000000 		.4byte	.LFB70
 1549 029f 0C000000 		.4byte	.LFE70-.LFB70
 1550 02a3 01       		.uleb128 0x1
 1551 02a4 9C       		.byte	0x9c
 1552 02a5 0E       		.uleb128 0xe
 1553 02a6 FA040000 		.4byte	.LASF65
 1554 02aa 01       		.byte	0x1
 1555 02ab A1       		.byte	0xa1
 1556 02ac 00000000 		.4byte	.LFB71
 1557 02b0 C0000000 		.4byte	.LFE71-.LFB71
 1558 02b4 01       		.uleb128 0x1
 1559 02b5 9C       		.byte	0x9c
 1560 02b6 13030000 		.4byte	0x313
 1561 02ba 0C       		.uleb128 0xc
 1562 02bb D7020000 		.4byte	.LASF49
 1563 02bf 01       		.byte	0x1
 1564 02c0 A2       		.byte	0xa2
 1565 02c1 CE000000 		.4byte	0xce
 1566 02c5 02       		.uleb128 0x2
 1567 02c6 91       		.byte	0x91
 1568 02c7 76       		.sleb128 -10
 1569 02c8 0C       		.uleb128 0xc
 1570 02c9 EC020000 		.4byte	.LASF50
 1571 02cd 01       		.byte	0x1
 1572 02ce A3       		.byte	0xa3
 1573 02cf CE000000 		.4byte	0xce
 1574 02d3 02       		.uleb128 0x2
 1575 02d4 91       		.byte	0x91
 1576 02d5 74       		.sleb128 -12
 1577 02d6 0C       		.uleb128 0xc
 1578 02d7 49030000 		.4byte	.LASF51
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 38


 1579 02db 01       		.byte	0x1
 1580 02dc A4       		.byte	0xa4
 1581 02dd CE000000 		.4byte	0xce
 1582 02e1 02       		.uleb128 0x2
 1583 02e2 91       		.byte	0x91
 1584 02e3 72       		.sleb128 -14
 1585 02e4 0C       		.uleb128 0xc
 1586 02e5 3A030000 		.4byte	.LASF52
 1587 02e9 01       		.byte	0x1
 1588 02ea A5       		.byte	0xa5
 1589 02eb CE000000 		.4byte	0xce
 1590 02ef 02       		.uleb128 0x2
 1591 02f0 91       		.byte	0x91
 1592 02f1 70       		.sleb128 -16
 1593 02f2 0C       		.uleb128 0xc
 1594 02f3 01030000 		.4byte	.LASF53
 1595 02f7 01       		.byte	0x1
 1596 02f8 A6       		.byte	0xa6
 1597 02f9 13030000 		.4byte	0x313
 1598 02fd 04       		.uleb128 0x4
 1599 02fe 91       		.byte	0x91
 1600 02ff E0B17F   		.sleb128 -10016
 1601 0302 0C       		.uleb128 0xc
 1602 0303 8C010000 		.4byte	.LASF54
 1603 0307 01       		.byte	0x1
 1604 0308 A8       		.byte	0xa8
 1605 0309 13030000 		.4byte	0x313
 1606 030d 04       		.uleb128 0x4
 1607 030e 91       		.byte	0x91
 1608 030f D0E37E   		.sleb128 -20016
 1609 0312 00       		.byte	0
 1610 0313 0F       		.uleb128 0xf
 1611 0314 8A000000 		.4byte	0x8a
 1612 0318 24030000 		.4byte	0x324
 1613 031c 10       		.uleb128 0x10
 1614 031d 7D000000 		.4byte	0x7d
 1615 0321 0F27     		.2byte	0x270f
 1616 0323 00       		.byte	0
 1617 0324 09       		.uleb128 0x9
 1618 0325 48010000 		.4byte	.LASF55
 1619 0329 01       		.byte	0x1
 1620 032a B0       		.byte	0xb0
 1621 032b 00000000 		.4byte	.LFB72
 1622 032f 2C000000 		.4byte	.LFE72-.LFB72
 1623 0333 01       		.uleb128 0x1
 1624 0334 9C       		.byte	0x9c
 1625 0335 11       		.uleb128 0x11
 1626 0336 0A000000 		.4byte	.LASF57
 1627 033a 01       		.byte	0x1
 1628 033b C7       		.byte	0xc7
 1629 033c 00000000 		.4byte	.LFB73
 1630 0340 0C000000 		.4byte	.LFE73-.LFB73
 1631 0344 01       		.uleb128 0x1
 1632 0345 9C       		.byte	0x9c
 1633 0346 12       		.uleb128 0x12
 1634 0347 43010000 		.4byte	.LASF58
 1635 034b 01       		.byte	0x1
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 39


 1636 034c D4       		.byte	0xd4
 1637 034d 68000000 		.4byte	0x68
 1638 0351 00000000 		.4byte	.LFB74
 1639 0355 4C010000 		.4byte	.LFE74-.LFB74
 1640 0359 01       		.uleb128 0x1
 1641 035a 9C       		.byte	0x9c
 1642 035b 88030000 		.4byte	0x388
 1643 035f 13       		.uleb128 0x13
 1644 0360 67050000 		.4byte	.LASF59
 1645 0364 01       		.byte	0x1
 1646 0365 0F01     		.2byte	0x10f
 1647 0367 68000000 		.4byte	0x68
 1648 036b 02       		.uleb128 0x2
 1649 036c 91       		.byte	0x91
 1650 036d 74       		.sleb128 -12
 1651 036e 14       		.uleb128 0x14
 1652 036f 54000000 		.4byte	.LBB2
 1653 0373 DE000000 		.4byte	.LBE2-.LBB2
 1654 0377 13       		.uleb128 0x13
 1655 0378 FF030000 		.4byte	.LASF60
 1656 037c 01       		.byte	0x1
 1657 037d 2501     		.2byte	0x125
 1658 037f 68000000 		.4byte	0x68
 1659 0383 02       		.uleb128 0x2
 1660 0384 91       		.byte	0x91
 1661 0385 70       		.sleb128 -16
 1662 0386 00       		.byte	0
 1663 0387 00       		.byte	0
 1664 0388 15       		.uleb128 0x15
 1665 0389 78040000 		.4byte	.LASF61
 1666 038d 01       		.byte	0x1
 1667 038e 9C01     		.2byte	0x19c
 1668 0390 68000000 		.4byte	0x68
 1669 0394 00000000 		.4byte	.LFB75
 1670 0398 50000000 		.4byte	.LFE75-.LFB75
 1671 039c 01       		.uleb128 0x1
 1672 039d 9C       		.byte	0x9c
 1673 039e DC030000 		.4byte	0x3dc
 1674 03a2 13       		.uleb128 0x13
 1675 03a3 61050000 		.4byte	.LASF62
 1676 03a7 01       		.byte	0x1
 1677 03a8 9E01     		.2byte	0x19e
 1678 03aa 68000000 		.4byte	0x68
 1679 03ae 02       		.uleb128 0x2
 1680 03af 91       		.byte	0x91
 1681 03b0 74       		.sleb128 -12
 1682 03b1 16       		.uleb128 0x16
 1683 03b2 513300   		.ascii	"Q3\000"
 1684 03b5 01       		.byte	0x1
 1685 03b6 9F01     		.2byte	0x19f
 1686 03b8 68000000 		.4byte	0x68
 1687 03bc 02       		.uleb128 0x2
 1688 03bd 91       		.byte	0x91
 1689 03be 70       		.sleb128 -16
 1690 03bf 16       		.uleb128 0x16
 1691 03c0 513400   		.ascii	"Q4\000"
 1692 03c3 01       		.byte	0x1
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 40


 1693 03c4 A001     		.2byte	0x1a0
 1694 03c6 68000000 		.4byte	0x68
 1695 03ca 02       		.uleb128 0x2
 1696 03cb 91       		.byte	0x91
 1697 03cc 6C       		.sleb128 -20
 1698 03cd 16       		.uleb128 0x16
 1699 03ce 513500   		.ascii	"Q5\000"
 1700 03d1 01       		.byte	0x1
 1701 03d2 A101     		.2byte	0x1a1
 1702 03d4 68000000 		.4byte	0x68
 1703 03d8 02       		.uleb128 0x2
 1704 03d9 91       		.byte	0x91
 1705 03da 68       		.sleb128 -24
 1706 03db 00       		.byte	0
 1707 03dc 17       		.uleb128 0x17
 1708 03dd 90020000 		.4byte	.LASF63
 1709 03e1 01       		.byte	0x1
 1710 03e2 A801     		.2byte	0x1a8
 1711 03e4 00000000 		.4byte	.LFB76
 1712 03e8 3E000000 		.4byte	.LFE76-.LFB76
 1713 03ec 01       		.uleb128 0x1
 1714 03ed 9C       		.byte	0x9c
 1715 03ee 00040000 		.4byte	0x400
 1716 03f2 18       		.uleb128 0x18
 1717 03f3 7300     		.ascii	"s\000"
 1718 03f5 01       		.byte	0x1
 1719 03f6 A801     		.2byte	0x1a8
 1720 03f8 84000000 		.4byte	0x84
 1721 03fc 02       		.uleb128 0x2
 1722 03fd 91       		.byte	0x91
 1723 03fe 74       		.sleb128 -12
 1724 03ff 00       		.byte	0
 1725 0400 17       		.uleb128 0x17
 1726 0401 3C000000 		.4byte	.LASF64
 1727 0405 01       		.byte	0x1
 1728 0406 B601     		.2byte	0x1b6
 1729 0408 00000000 		.4byte	.LFB77
 1730 040c 26000000 		.4byte	.LFE77-.LFB77
 1731 0410 01       		.uleb128 0x1
 1732 0411 9C       		.byte	0x9c
 1733 0412 24040000 		.4byte	0x424
 1734 0416 18       		.uleb128 0x18
 1735 0417 6300     		.ascii	"c\000"
 1736 0419 01       		.byte	0x1
 1737 041a B601     		.2byte	0x1b6
 1738 041c 8A000000 		.4byte	0x8a
 1739 0420 02       		.uleb128 0x2
 1740 0421 91       		.byte	0x91
 1741 0422 77       		.sleb128 -9
 1742 0423 00       		.byte	0
 1743 0424 19       		.uleb128 0x19
 1744 0425 22050000 		.4byte	.LASF66
 1745 0429 01       		.byte	0x1
 1746 042a BE01     		.2byte	0x1be
 1747 042c 00000000 		.4byte	.LFB78
 1748 0430 CC000000 		.4byte	.LFE78-.LFB78
 1749 0434 01       		.uleb128 0x1
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 41


 1750 0435 9C       		.byte	0x9c
 1751 0436 6C040000 		.4byte	0x46c
 1752 043a 13       		.uleb128 0x13
 1753 043b AC040000 		.4byte	.LASF67
 1754 043f 01       		.byte	0x1
 1755 0440 C401     		.2byte	0x1c4
 1756 0442 AA000000 		.4byte	0xaa
 1757 0446 05       		.uleb128 0x5
 1758 0447 03       		.byte	0x3
 1759 0448 45000000 		.4byte	usbStarted.8799
 1760 044c 13       		.uleb128 0x13
 1761 044d E2030000 		.4byte	.LASF68
 1762 0451 01       		.byte	0x1
 1763 0452 C501     		.2byte	0x1c5
 1764 0454 B6000000 		.4byte	0xb6
 1765 0458 05       		.uleb128 0x5
 1766 0459 03       		.byte	0x3
 1767 045a 46000000 		.4byte	usbBufCount.8800
 1768 045e 16       		.uleb128 0x16
 1769 045f 6300     		.ascii	"c\000"
 1770 0461 01       		.byte	0x1
 1771 0462 C601     		.2byte	0x1c6
 1772 0464 AA000000 		.4byte	0xaa
 1773 0468 02       		.uleb128 0x2
 1774 0469 91       		.byte	0x91
 1775 046a 77       		.sleb128 -9
 1776 046b 00       		.byte	0
 1777 046c 0C       		.uleb128 0xc
 1778 046d C0040000 		.4byte	.LASF69
 1779 0471 01       		.byte	0x1
 1780 0472 8D       		.byte	0x8d
 1781 0473 7D040000 		.4byte	0x47d
 1782 0477 05       		.uleb128 0x5
 1783 0478 03       		.byte	0x3
 1784 0479 44000000 		.4byte	count
 1785 047d 1A       		.uleb128 0x1a
 1786 047e C2000000 		.4byte	0xc2
 1787 0482 1B       		.uleb128 0x1b
 1788 0483 54050000 		.4byte	.LASF70
 1789 0487 06       		.byte	0x6
 1790 0488 1207     		.2byte	0x712
 1791 048a 8E040000 		.4byte	0x48e
 1792 048e 1A       		.uleb128 0x1a
 1793 048f 91000000 		.4byte	0x91
 1794 0493 1C       		.uleb128 0x1c
 1795 0494 747300   		.ascii	"ts\000"
 1796 0497 05       		.byte	0x5
 1797 0498 10       		.byte	0x10
 1798 0499 AA000000 		.4byte	0xaa
 1799 049d 05       		.uleb128 0x5
 1800 049e 03       		.byte	0x3
 1801 049f 00000000 		.4byte	ts
 1802 04a3 1D       		.uleb128 0x1d
 1803 04a4 22000000 		.4byte	.LASF71
 1804 04a8 05       		.byte	0x5
 1805 04a9 11       		.byte	0x11
 1806 04aa B6000000 		.4byte	0xb6
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 42


 1807 04ae 05       		.uleb128 0x5
 1808 04af 03       		.byte	0x3
 1809 04b0 00000000 		.4byte	ts_enc
 1810 04b4 1D       		.uleb128 0x1d
 1811 04b5 18050000 		.4byte	.LASF72
 1812 04b9 05       		.byte	0x5
 1813 04ba 12       		.byte	0x12
 1814 04bb B6000000 		.4byte	0xb6
 1815 04bf 05       		.uleb128 0x5
 1816 04c0 03       		.byte	0x3
 1817 04c1 00000000 		.4byte	ts_update
 1818 04c5 1D       		.uleb128 0x1d
 1819 04c6 B7040000 		.4byte	.LASF73
 1820 04ca 05       		.byte	0x5
 1821 04cb 13       		.byte	0x13
 1822 04cc B6000000 		.4byte	0xb6
 1823 04d0 05       		.uleb128 0x5
 1824 04d1 03       		.byte	0x3
 1825 04d2 00000000 		.4byte	ts_speed
 1826 04d6 1D       		.uleb128 0x1d
 1827 04d7 0D050000 		.4byte	.LASF74
 1828 04db 05       		.byte	0x5
 1829 04dc 14       		.byte	0x14
 1830 04dd B6000000 		.4byte	0xb6
 1831 04e1 05       		.uleb128 0x5
 1832 04e2 03       		.byte	0x3
 1833 04e3 00000000 		.4byte	ts_display
 1834 04e7 1D       		.uleb128 0x1d
 1835 04e8 C6040000 		.4byte	.LASF75
 1836 04ec 05       		.byte	0x5
 1837 04ed 16       		.byte	0x16
 1838 04ee AA000000 		.4byte	0xaa
 1839 04f2 05       		.uleb128 0x5
 1840 04f3 03       		.byte	0x3
 1841 04f4 00000000 		.4byte	flag_ts_enc
 1842 04f8 1D       		.uleb128 0x1d
 1843 04f9 A2020000 		.4byte	.LASF76
 1844 04fd 05       		.byte	0x5
 1845 04fe 17       		.byte	0x17
 1846 04ff AA000000 		.4byte	0xaa
 1847 0503 05       		.uleb128 0x5
 1848 0504 03       		.byte	0x3
 1849 0505 00000000 		.4byte	flag_ts_update
 1850 0509 1D       		.uleb128 0x1d
 1851 050a 6A040000 		.4byte	.LASF77
 1852 050e 05       		.byte	0x5
 1853 050f 18       		.byte	0x18
 1854 0510 AA000000 		.4byte	0xaa
 1855 0514 05       		.uleb128 0x5
 1856 0515 03       		.byte	0x3
 1857 0516 00000000 		.4byte	flag_ts_speed
 1858 051a 1D       		.uleb128 0x1d
 1859 051b 22030000 		.4byte	.LASF78
 1860 051f 05       		.byte	0x5
 1861 0520 19       		.byte	0x19
 1862 0521 AA000000 		.4byte	0xaa
 1863 0525 05       		.uleb128 0x5
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 43


 1864 0526 03       		.byte	0x3
 1865 0527 00000000 		.4byte	flag_ts_display
 1866 052b 1D       		.uleb128 0x1d
 1867 052c 32030000 		.4byte	.LASF79
 1868 0530 05       		.byte	0x5
 1869 0531 1C       		.byte	0x1c
 1870 0532 AA000000 		.4byte	0xaa
 1871 0536 05       		.uleb128 0x5
 1872 0537 03       		.byte	0x3
 1873 0538 00000000 		.4byte	flag_rx
 1874 053c 1D       		.uleb128 0x1d
 1875 053d 30000000 		.4byte	.LASF80
 1876 0541 05       		.byte	0x5
 1877 0542 1D       		.byte	0x1d
 1878 0543 AA000000 		.4byte	0xaa
 1879 0547 05       		.uleb128 0x5
 1880 0548 03       		.byte	0x3
 1881 0549 00000000 		.4byte	flag_packet
 1882 054d 1D       		.uleb128 0x1d
 1883 054e D3030000 		.4byte	.LASF81
 1884 0552 05       		.byte	0x5
 1885 0553 1E       		.byte	0x1e
 1886 0554 AA000000 		.4byte	0xaa
 1887 0558 05       		.uleb128 0x5
 1888 0559 03       		.byte	0x3
 1889 055a 00000000 		.4byte	flag_KB_string
 1890 055e 1D       		.uleb128 0x1d
 1891 055f 94030000 		.4byte	.LASF82
 1892 0563 05       		.byte	0x5
 1893 0564 20       		.byte	0x20
 1894 0565 AA000000 		.4byte	0xaa
 1895 0569 05       		.uleb128 0x5
 1896 056a 03       		.byte	0x3
 1897 056b 00000000 		.4byte	dataready_flag
 1898 056f 1D       		.uleb128 0x1d
 1899 0570 2D050000 		.4byte	.LASF83
 1900 0574 05       		.byte	0x5
 1901 0575 22       		.byte	0x22
 1902 0576 AA000000 		.4byte	0xaa
 1903 057a 05       		.uleb128 0x5
 1904 057b 03       		.byte	0x3
 1905 057c 00000000 		.4byte	flag_rf_transmission_active
 1906 0580 0F       		.uleb128 0xf
 1907 0581 8A000000 		.4byte	0x8a
 1908 0585 90050000 		.4byte	0x590
 1909 0589 1E       		.uleb128 0x1e
 1910 058a 7D000000 		.4byte	0x7d
 1911 058e 3F       		.byte	0x3f
 1912 058f 00       		.byte	0
 1913 0590 1D       		.uleb128 0x1d
 1914 0591 5C040000 		.4byte	.LASF84
 1915 0595 05       		.byte	0x5
 1916 0596 25       		.byte	0x25
 1917 0597 80050000 		.4byte	0x580
 1918 059b 05       		.uleb128 0x5
 1919 059c 03       		.byte	0x3
 1920 059d 00000000 		.4byte	displaystring
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 44


 1921 05a1 1D       		.uleb128 0x1d
 1922 05a2 1D030000 		.4byte	.LASF85
 1923 05a6 05       		.byte	0x5
 1924 05a7 26       		.byte	0x26
 1925 05a8 80050000 		.4byte	0x580
 1926 05ac 05       		.uleb128 0x5
 1927 05ad 03       		.byte	0x3
 1928 05ae 00000000 		.4byte	line
 1929 05b2 1D       		.uleb128 0x1d
 1930 05b3 58030000 		.4byte	.LASF86
 1931 05b7 05       		.byte	0x5
 1932 05b8 26       		.byte	0x26
 1933 05b9 80050000 		.4byte	0x580
 1934 05bd 05       		.uleb128 0x5
 1935 05be 03       		.byte	0x3
 1936 05bf 00000000 		.4byte	entry
 1937 05c3 0F       		.uleb128 0xf
 1938 05c4 AA000000 		.4byte	0xaa
 1939 05c8 D3050000 		.4byte	0x5d3
 1940 05cc 1E       		.uleb128 0x1e
 1941 05cd 7D000000 		.4byte	0x7d
 1942 05d1 3F       		.byte	0x3f
 1943 05d2 00       		.byte	0
 1944 05d3 1D       		.uleb128 0x1d
 1945 05d4 AB000000 		.4byte	.LASF87
 1946 05d8 05       		.byte	0x5
 1947 05d9 27       		.byte	0x27
 1948 05da C3050000 		.4byte	0x5c3
 1949 05de 05       		.uleb128 0x5
 1950 05df 03       		.byte	0x3
 1951 05e0 00000000 		.4byte	usbBuffer
 1952 05e4 1D       		.uleb128 0x1d
 1953 05e5 95000000 		.4byte	.LASF88
 1954 05e9 05       		.byte	0x5
 1955 05ea 3C       		.byte	0x3c
 1956 05eb DA000000 		.4byte	0xda
 1957 05ef 05       		.uleb128 0x5
 1958 05f0 03       		.byte	0x3
 1959 05f1 00000000 		.4byte	system_state
 1960 05f5 1D       		.uleb128 0x1d
 1961 05f6 44020000 		.4byte	.LASF89
 1962 05fa 01       		.byte	0x1
 1963 05fb 56       		.byte	0x56
 1964 05fc 68000000 		.4byte	0x68
 1965 0600 05       		.uleb128 0x5
 1966 0601 03       		.byte	0x3
 1967 0602 00000000 		.4byte	changeMotor
 1968 0606 1D       		.uleb128 0x1d
 1969 0607 78000000 		.4byte	.LASF90
 1970 060b 01       		.byte	0x1
 1971 060c 57       		.byte	0x57
 1972 060d 68000000 		.4byte	0x68
 1973 0611 05       		.uleb128 0x5
 1974 0612 03       		.byte	0x3
 1975 0613 00000000 		.4byte	checkLight
 1976 0617 1D       		.uleb128 0x1d
 1977 0618 81010000 		.4byte	.LASF91
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 45


 1978 061c 01       		.byte	0x1
 1979 061d 58       		.byte	0x58
 1980 061e 68000000 		.4byte	0x68
 1981 0622 05       		.uleb128 0x5
 1982 0623 03       		.byte	0x3
 1983 0624 00000000 		.4byte	lightState
 1984 0628 0F       		.uleb128 0xf
 1985 0629 38060000 		.4byte	0x638
 1986 062d 38060000 		.4byte	0x638
 1987 0631 1E       		.uleb128 0x1e
 1988 0632 7D000000 		.4byte	0x7d
 1989 0636 02       		.byte	0x2
 1990 0637 00       		.byte	0
 1991 0638 1A       		.uleb128 0x1a
 1992 0639 68000000 		.4byte	0x68
 1993 063d 1D       		.uleb128 0x1d
 1994 063e 78030000 		.4byte	.LASF92
 1995 0642 01       		.byte	0x1
 1996 0643 59       		.byte	0x59
 1997 0644 4E060000 		.4byte	0x64e
 1998 0648 05       		.uleb128 0x5
 1999 0649 03       		.byte	0x3
 2000 064a 00000000 		.4byte	lightDetectedFront
 2001 064e 1A       		.uleb128 0x1a
 2002 064f 28060000 		.4byte	0x628
 2003 0653 1D       		.uleb128 0x1d
 2004 0654 50020000 		.4byte	.LASF93
 2005 0658 01       		.byte	0x1
 2006 0659 5A       		.byte	0x5a
 2007 065a 64060000 		.4byte	0x664
 2008 065e 05       		.uleb128 0x5
 2009 065f 03       		.byte	0x3
 2010 0660 00000000 		.4byte	lightDetectedBack
 2011 0664 1A       		.uleb128 0x1a
 2012 0665 28060000 		.4byte	0x628
 2013 0669 1D       		.uleb128 0x1d
 2014 066a 47000000 		.4byte	.LASF94
 2015 066e 01       		.byte	0x1
 2016 066f 5B       		.byte	0x5b
 2017 0670 38060000 		.4byte	0x638
 2018 0674 05       		.uleb128 0x5
 2019 0675 03       		.byte	0x3
 2020 0676 00000000 		.4byte	counteoc
 2021 067a 1D       		.uleb128 0x1d
 2022 067b 0E030000 		.4byte	.LASF95
 2023 067f 01       		.byte	0x1
 2024 0680 5C       		.byte	0x5c
 2025 0681 38060000 		.4byte	0x638
 2026 0685 05       		.uleb128 0x5
 2027 0686 03       		.byte	0x3
 2028 0687 00000000 		.4byte	processSensors
 2029 068b 1D       		.uleb128 0x1d
 2030 068c 8A050000 		.4byte	.LASF96
 2031 0690 01       		.byte	0x1
 2032 0691 5D       		.byte	0x5d
 2033 0692 38060000 		.4byte	0x638
 2034 0696 05       		.uleb128 0x5
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 46


 2035 0697 03       		.byte	0x3
 2036 0698 00000000 		.4byte	middle
 2037 069c 00       		.byte	0
 2038              		.section	.debug_abbrev,"",%progbits
 2039              	.Ldebug_abbrev0:
 2040 0000 01       		.uleb128 0x1
 2041 0001 11       		.uleb128 0x11
 2042 0002 01       		.byte	0x1
 2043 0003 25       		.uleb128 0x25
 2044 0004 0E       		.uleb128 0xe
 2045 0005 13       		.uleb128 0x13
 2046 0006 0B       		.uleb128 0xb
 2047 0007 03       		.uleb128 0x3
 2048 0008 0E       		.uleb128 0xe
 2049 0009 1B       		.uleb128 0x1b
 2050 000a 0E       		.uleb128 0xe
 2051 000b 55       		.uleb128 0x55
 2052 000c 17       		.uleb128 0x17
 2053 000d 11       		.uleb128 0x11
 2054 000e 01       		.uleb128 0x1
 2055 000f 10       		.uleb128 0x10
 2056 0010 17       		.uleb128 0x17
 2057 0011 00       		.byte	0
 2058 0012 00       		.byte	0
 2059 0013 02       		.uleb128 0x2
 2060 0014 24       		.uleb128 0x24
 2061 0015 00       		.byte	0
 2062 0016 0B       		.uleb128 0xb
 2063 0017 0B       		.uleb128 0xb
 2064 0018 3E       		.uleb128 0x3e
 2065 0019 0B       		.uleb128 0xb
 2066 001a 03       		.uleb128 0x3
 2067 001b 0E       		.uleb128 0xe
 2068 001c 00       		.byte	0
 2069 001d 00       		.byte	0
 2070 001e 03       		.uleb128 0x3
 2071 001f 16       		.uleb128 0x16
 2072 0020 00       		.byte	0
 2073 0021 03       		.uleb128 0x3
 2074 0022 0E       		.uleb128 0xe
 2075 0023 3A       		.uleb128 0x3a
 2076 0024 0B       		.uleb128 0xb
 2077 0025 3B       		.uleb128 0x3b
 2078 0026 0B       		.uleb128 0xb
 2079 0027 49       		.uleb128 0x49
 2080 0028 13       		.uleb128 0x13
 2081 0029 00       		.byte	0
 2082 002a 00       		.byte	0
 2083 002b 04       		.uleb128 0x4
 2084 002c 24       		.uleb128 0x24
 2085 002d 00       		.byte	0
 2086 002e 0B       		.uleb128 0xb
 2087 002f 0B       		.uleb128 0xb
 2088 0030 3E       		.uleb128 0x3e
 2089 0031 0B       		.uleb128 0xb
 2090 0032 03       		.uleb128 0x3
 2091 0033 08       		.uleb128 0x8
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 47


 2092 0034 00       		.byte	0
 2093 0035 00       		.byte	0
 2094 0036 05       		.uleb128 0x5
 2095 0037 0F       		.uleb128 0xf
 2096 0038 00       		.byte	0
 2097 0039 0B       		.uleb128 0xb
 2098 003a 0B       		.uleb128 0xb
 2099 003b 49       		.uleb128 0x49
 2100 003c 13       		.uleb128 0x13
 2101 003d 00       		.byte	0
 2102 003e 00       		.byte	0
 2103 003f 06       		.uleb128 0x6
 2104 0040 16       		.uleb128 0x16
 2105 0041 00       		.byte	0
 2106 0042 03       		.uleb128 0x3
 2107 0043 0E       		.uleb128 0xe
 2108 0044 3A       		.uleb128 0x3a
 2109 0045 0B       		.uleb128 0xb
 2110 0046 3B       		.uleb128 0x3b
 2111 0047 05       		.uleb128 0x5
 2112 0048 49       		.uleb128 0x49
 2113 0049 13       		.uleb128 0x13
 2114 004a 00       		.byte	0
 2115 004b 00       		.byte	0
 2116 004c 07       		.uleb128 0x7
 2117 004d 13       		.uleb128 0x13
 2118 004e 01       		.byte	0x1
 2119 004f 03       		.uleb128 0x3
 2120 0050 0E       		.uleb128 0xe
 2121 0051 0B       		.uleb128 0xb
 2122 0052 0B       		.uleb128 0xb
 2123 0053 3A       		.uleb128 0x3a
 2124 0054 0B       		.uleb128 0xb
 2125 0055 3B       		.uleb128 0x3b
 2126 0056 0B       		.uleb128 0xb
 2127 0057 01       		.uleb128 0x1
 2128 0058 13       		.uleb128 0x13
 2129 0059 00       		.byte	0
 2130 005a 00       		.byte	0
 2131 005b 08       		.uleb128 0x8
 2132 005c 0D       		.uleb128 0xd
 2133 005d 00       		.byte	0
 2134 005e 03       		.uleb128 0x3
 2135 005f 0E       		.uleb128 0xe
 2136 0060 3A       		.uleb128 0x3a
 2137 0061 0B       		.uleb128 0xb
 2138 0062 3B       		.uleb128 0x3b
 2139 0063 0B       		.uleb128 0xb
 2140 0064 49       		.uleb128 0x49
 2141 0065 13       		.uleb128 0x13
 2142 0066 38       		.uleb128 0x38
 2143 0067 0B       		.uleb128 0xb
 2144 0068 00       		.byte	0
 2145 0069 00       		.byte	0
 2146 006a 09       		.uleb128 0x9
 2147 006b 2E       		.uleb128 0x2e
 2148 006c 00       		.byte	0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 48


 2149 006d 3F       		.uleb128 0x3f
 2150 006e 19       		.uleb128 0x19
 2151 006f 03       		.uleb128 0x3
 2152 0070 0E       		.uleb128 0xe
 2153 0071 3A       		.uleb128 0x3a
 2154 0072 0B       		.uleb128 0xb
 2155 0073 3B       		.uleb128 0x3b
 2156 0074 0B       		.uleb128 0xb
 2157 0075 11       		.uleb128 0x11
 2158 0076 01       		.uleb128 0x1
 2159 0077 12       		.uleb128 0x12
 2160 0078 06       		.uleb128 0x6
 2161 0079 40       		.uleb128 0x40
 2162 007a 18       		.uleb128 0x18
 2163 007b 9642     		.uleb128 0x2116
 2164 007d 19       		.uleb128 0x19
 2165 007e 00       		.byte	0
 2166 007f 00       		.byte	0
 2167 0080 0A       		.uleb128 0xa
 2168 0081 2E       		.uleb128 0x2e
 2169 0082 01       		.byte	0x1
 2170 0083 3F       		.uleb128 0x3f
 2171 0084 19       		.uleb128 0x19
 2172 0085 03       		.uleb128 0x3
 2173 0086 0E       		.uleb128 0xe
 2174 0087 3A       		.uleb128 0x3a
 2175 0088 0B       		.uleb128 0xb
 2176 0089 3B       		.uleb128 0x3b
 2177 008a 0B       		.uleb128 0xb
 2178 008b 27       		.uleb128 0x27
 2179 008c 19       		.uleb128 0x19
 2180 008d 11       		.uleb128 0x11
 2181 008e 01       		.uleb128 0x1
 2182 008f 12       		.uleb128 0x12
 2183 0090 06       		.uleb128 0x6
 2184 0091 40       		.uleb128 0x40
 2185 0092 18       		.uleb128 0x18
 2186 0093 9642     		.uleb128 0x2116
 2187 0095 19       		.uleb128 0x19
 2188 0096 01       		.uleb128 0x1
 2189 0097 13       		.uleb128 0x13
 2190 0098 00       		.byte	0
 2191 0099 00       		.byte	0
 2192 009a 0B       		.uleb128 0xb
 2193 009b 05       		.uleb128 0x5
 2194 009c 00       		.byte	0
 2195 009d 03       		.uleb128 0x3
 2196 009e 08       		.uleb128 0x8
 2197 009f 3A       		.uleb128 0x3a
 2198 00a0 0B       		.uleb128 0xb
 2199 00a1 3B       		.uleb128 0x3b
 2200 00a2 0B       		.uleb128 0xb
 2201 00a3 49       		.uleb128 0x49
 2202 00a4 13       		.uleb128 0x13
 2203 00a5 02       		.uleb128 0x2
 2204 00a6 18       		.uleb128 0x18
 2205 00a7 00       		.byte	0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 49


 2206 00a8 00       		.byte	0
 2207 00a9 0C       		.uleb128 0xc
 2208 00aa 34       		.uleb128 0x34
 2209 00ab 00       		.byte	0
 2210 00ac 03       		.uleb128 0x3
 2211 00ad 0E       		.uleb128 0xe
 2212 00ae 3A       		.uleb128 0x3a
 2213 00af 0B       		.uleb128 0xb
 2214 00b0 3B       		.uleb128 0x3b
 2215 00b1 0B       		.uleb128 0xb
 2216 00b2 49       		.uleb128 0x49
 2217 00b3 13       		.uleb128 0x13
 2218 00b4 02       		.uleb128 0x2
 2219 00b5 18       		.uleb128 0x18
 2220 00b6 00       		.byte	0
 2221 00b7 00       		.byte	0
 2222 00b8 0D       		.uleb128 0xd
 2223 00b9 2E       		.uleb128 0x2e
 2224 00ba 00       		.byte	0
 2225 00bb 3F       		.uleb128 0x3f
 2226 00bc 19       		.uleb128 0x19
 2227 00bd 03       		.uleb128 0x3
 2228 00be 0E       		.uleb128 0xe
 2229 00bf 3A       		.uleb128 0x3a
 2230 00c0 0B       		.uleb128 0xb
 2231 00c1 3B       		.uleb128 0x3b
 2232 00c2 0B       		.uleb128 0xb
 2233 00c3 27       		.uleb128 0x27
 2234 00c4 19       		.uleb128 0x19
 2235 00c5 11       		.uleb128 0x11
 2236 00c6 01       		.uleb128 0x1
 2237 00c7 12       		.uleb128 0x12
 2238 00c8 06       		.uleb128 0x6
 2239 00c9 40       		.uleb128 0x40
 2240 00ca 18       		.uleb128 0x18
 2241 00cb 9742     		.uleb128 0x2117
 2242 00cd 19       		.uleb128 0x19
 2243 00ce 00       		.byte	0
 2244 00cf 00       		.byte	0
 2245 00d0 0E       		.uleb128 0xe
 2246 00d1 2E       		.uleb128 0x2e
 2247 00d2 01       		.byte	0x1
 2248 00d3 3F       		.uleb128 0x3f
 2249 00d4 19       		.uleb128 0x19
 2250 00d5 03       		.uleb128 0x3
 2251 00d6 0E       		.uleb128 0xe
 2252 00d7 3A       		.uleb128 0x3a
 2253 00d8 0B       		.uleb128 0xb
 2254 00d9 3B       		.uleb128 0x3b
 2255 00da 0B       		.uleb128 0xb
 2256 00db 11       		.uleb128 0x11
 2257 00dc 01       		.uleb128 0x1
 2258 00dd 12       		.uleb128 0x12
 2259 00de 06       		.uleb128 0x6
 2260 00df 40       		.uleb128 0x40
 2261 00e0 18       		.uleb128 0x18
 2262 00e1 9642     		.uleb128 0x2116
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 50


 2263 00e3 19       		.uleb128 0x19
 2264 00e4 01       		.uleb128 0x1
 2265 00e5 13       		.uleb128 0x13
 2266 00e6 00       		.byte	0
 2267 00e7 00       		.byte	0
 2268 00e8 0F       		.uleb128 0xf
 2269 00e9 01       		.uleb128 0x1
 2270 00ea 01       		.byte	0x1
 2271 00eb 49       		.uleb128 0x49
 2272 00ec 13       		.uleb128 0x13
 2273 00ed 01       		.uleb128 0x1
 2274 00ee 13       		.uleb128 0x13
 2275 00ef 00       		.byte	0
 2276 00f0 00       		.byte	0
 2277 00f1 10       		.uleb128 0x10
 2278 00f2 21       		.uleb128 0x21
 2279 00f3 00       		.byte	0
 2280 00f4 49       		.uleb128 0x49
 2281 00f5 13       		.uleb128 0x13
 2282 00f6 2F       		.uleb128 0x2f
 2283 00f7 05       		.uleb128 0x5
 2284 00f8 00       		.byte	0
 2285 00f9 00       		.byte	0
 2286 00fa 11       		.uleb128 0x11
 2287 00fb 2E       		.uleb128 0x2e
 2288 00fc 00       		.byte	0
 2289 00fd 3F       		.uleb128 0x3f
 2290 00fe 19       		.uleb128 0x19
 2291 00ff 03       		.uleb128 0x3
 2292 0100 0E       		.uleb128 0xe
 2293 0101 3A       		.uleb128 0x3a
 2294 0102 0B       		.uleb128 0xb
 2295 0103 3B       		.uleb128 0x3b
 2296 0104 0B       		.uleb128 0xb
 2297 0105 27       		.uleb128 0x27
 2298 0106 19       		.uleb128 0x19
 2299 0107 11       		.uleb128 0x11
 2300 0108 01       		.uleb128 0x1
 2301 0109 12       		.uleb128 0x12
 2302 010a 06       		.uleb128 0x6
 2303 010b 40       		.uleb128 0x40
 2304 010c 18       		.uleb128 0x18
 2305 010d 9642     		.uleb128 0x2116
 2306 010f 19       		.uleb128 0x19
 2307 0110 00       		.byte	0
 2308 0111 00       		.byte	0
 2309 0112 12       		.uleb128 0x12
 2310 0113 2E       		.uleb128 0x2e
 2311 0114 01       		.byte	0x1
 2312 0115 3F       		.uleb128 0x3f
 2313 0116 19       		.uleb128 0x19
 2314 0117 03       		.uleb128 0x3
 2315 0118 0E       		.uleb128 0xe
 2316 0119 3A       		.uleb128 0x3a
 2317 011a 0B       		.uleb128 0xb
 2318 011b 3B       		.uleb128 0x3b
 2319 011c 0B       		.uleb128 0xb
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 51


 2320 011d 49       		.uleb128 0x49
 2321 011e 13       		.uleb128 0x13
 2322 011f 11       		.uleb128 0x11
 2323 0120 01       		.uleb128 0x1
 2324 0121 12       		.uleb128 0x12
 2325 0122 06       		.uleb128 0x6
 2326 0123 40       		.uleb128 0x40
 2327 0124 18       		.uleb128 0x18
 2328 0125 9642     		.uleb128 0x2116
 2329 0127 19       		.uleb128 0x19
 2330 0128 01       		.uleb128 0x1
 2331 0129 13       		.uleb128 0x13
 2332 012a 00       		.byte	0
 2333 012b 00       		.byte	0
 2334 012c 13       		.uleb128 0x13
 2335 012d 34       		.uleb128 0x34
 2336 012e 00       		.byte	0
 2337 012f 03       		.uleb128 0x3
 2338 0130 0E       		.uleb128 0xe
 2339 0131 3A       		.uleb128 0x3a
 2340 0132 0B       		.uleb128 0xb
 2341 0133 3B       		.uleb128 0x3b
 2342 0134 05       		.uleb128 0x5
 2343 0135 49       		.uleb128 0x49
 2344 0136 13       		.uleb128 0x13
 2345 0137 02       		.uleb128 0x2
 2346 0138 18       		.uleb128 0x18
 2347 0139 00       		.byte	0
 2348 013a 00       		.byte	0
 2349 013b 14       		.uleb128 0x14
 2350 013c 0B       		.uleb128 0xb
 2351 013d 01       		.byte	0x1
 2352 013e 11       		.uleb128 0x11
 2353 013f 01       		.uleb128 0x1
 2354 0140 12       		.uleb128 0x12
 2355 0141 06       		.uleb128 0x6
 2356 0142 00       		.byte	0
 2357 0143 00       		.byte	0
 2358 0144 15       		.uleb128 0x15
 2359 0145 2E       		.uleb128 0x2e
 2360 0146 01       		.byte	0x1
 2361 0147 3F       		.uleb128 0x3f
 2362 0148 19       		.uleb128 0x19
 2363 0149 03       		.uleb128 0x3
 2364 014a 0E       		.uleb128 0xe
 2365 014b 3A       		.uleb128 0x3a
 2366 014c 0B       		.uleb128 0xb
 2367 014d 3B       		.uleb128 0x3b
 2368 014e 05       		.uleb128 0x5
 2369 014f 49       		.uleb128 0x49
 2370 0150 13       		.uleb128 0x13
 2371 0151 11       		.uleb128 0x11
 2372 0152 01       		.uleb128 0x1
 2373 0153 12       		.uleb128 0x12
 2374 0154 06       		.uleb128 0x6
 2375 0155 40       		.uleb128 0x40
 2376 0156 18       		.uleb128 0x18
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 52


 2377 0157 9742     		.uleb128 0x2117
 2378 0159 19       		.uleb128 0x19
 2379 015a 01       		.uleb128 0x1
 2380 015b 13       		.uleb128 0x13
 2381 015c 00       		.byte	0
 2382 015d 00       		.byte	0
 2383 015e 16       		.uleb128 0x16
 2384 015f 34       		.uleb128 0x34
 2385 0160 00       		.byte	0
 2386 0161 03       		.uleb128 0x3
 2387 0162 08       		.uleb128 0x8
 2388 0163 3A       		.uleb128 0x3a
 2389 0164 0B       		.uleb128 0xb
 2390 0165 3B       		.uleb128 0x3b
 2391 0166 05       		.uleb128 0x5
 2392 0167 49       		.uleb128 0x49
 2393 0168 13       		.uleb128 0x13
 2394 0169 02       		.uleb128 0x2
 2395 016a 18       		.uleb128 0x18
 2396 016b 00       		.byte	0
 2397 016c 00       		.byte	0
 2398 016d 17       		.uleb128 0x17
 2399 016e 2E       		.uleb128 0x2e
 2400 016f 01       		.byte	0x1
 2401 0170 3F       		.uleb128 0x3f
 2402 0171 19       		.uleb128 0x19
 2403 0172 03       		.uleb128 0x3
 2404 0173 0E       		.uleb128 0xe
 2405 0174 3A       		.uleb128 0x3a
 2406 0175 0B       		.uleb128 0xb
 2407 0176 3B       		.uleb128 0x3b
 2408 0177 05       		.uleb128 0x5
 2409 0178 27       		.uleb128 0x27
 2410 0179 19       		.uleb128 0x19
 2411 017a 11       		.uleb128 0x11
 2412 017b 01       		.uleb128 0x1
 2413 017c 12       		.uleb128 0x12
 2414 017d 06       		.uleb128 0x6
 2415 017e 40       		.uleb128 0x40
 2416 017f 18       		.uleb128 0x18
 2417 0180 9642     		.uleb128 0x2116
 2418 0182 19       		.uleb128 0x19
 2419 0183 01       		.uleb128 0x1
 2420 0184 13       		.uleb128 0x13
 2421 0185 00       		.byte	0
 2422 0186 00       		.byte	0
 2423 0187 18       		.uleb128 0x18
 2424 0188 05       		.uleb128 0x5
 2425 0189 00       		.byte	0
 2426 018a 03       		.uleb128 0x3
 2427 018b 08       		.uleb128 0x8
 2428 018c 3A       		.uleb128 0x3a
 2429 018d 0B       		.uleb128 0xb
 2430 018e 3B       		.uleb128 0x3b
 2431 018f 05       		.uleb128 0x5
 2432 0190 49       		.uleb128 0x49
 2433 0191 13       		.uleb128 0x13
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 53


 2434 0192 02       		.uleb128 0x2
 2435 0193 18       		.uleb128 0x18
 2436 0194 00       		.byte	0
 2437 0195 00       		.byte	0
 2438 0196 19       		.uleb128 0x19
 2439 0197 2E       		.uleb128 0x2e
 2440 0198 01       		.byte	0x1
 2441 0199 3F       		.uleb128 0x3f
 2442 019a 19       		.uleb128 0x19
 2443 019b 03       		.uleb128 0x3
 2444 019c 0E       		.uleb128 0xe
 2445 019d 3A       		.uleb128 0x3a
 2446 019e 0B       		.uleb128 0xb
 2447 019f 3B       		.uleb128 0x3b
 2448 01a0 05       		.uleb128 0x5
 2449 01a1 11       		.uleb128 0x11
 2450 01a2 01       		.uleb128 0x1
 2451 01a3 12       		.uleb128 0x12
 2452 01a4 06       		.uleb128 0x6
 2453 01a5 40       		.uleb128 0x40
 2454 01a6 18       		.uleb128 0x18
 2455 01a7 9642     		.uleb128 0x2116
 2456 01a9 19       		.uleb128 0x19
 2457 01aa 01       		.uleb128 0x1
 2458 01ab 13       		.uleb128 0x13
 2459 01ac 00       		.byte	0
 2460 01ad 00       		.byte	0
 2461 01ae 1A       		.uleb128 0x1a
 2462 01af 35       		.uleb128 0x35
 2463 01b0 00       		.byte	0
 2464 01b1 49       		.uleb128 0x49
 2465 01b2 13       		.uleb128 0x13
 2466 01b3 00       		.byte	0
 2467 01b4 00       		.byte	0
 2468 01b5 1B       		.uleb128 0x1b
 2469 01b6 34       		.uleb128 0x34
 2470 01b7 00       		.byte	0
 2471 01b8 03       		.uleb128 0x3
 2472 01b9 0E       		.uleb128 0xe
 2473 01ba 3A       		.uleb128 0x3a
 2474 01bb 0B       		.uleb128 0xb
 2475 01bc 3B       		.uleb128 0x3b
 2476 01bd 05       		.uleb128 0x5
 2477 01be 49       		.uleb128 0x49
 2478 01bf 13       		.uleb128 0x13
 2479 01c0 3F       		.uleb128 0x3f
 2480 01c1 19       		.uleb128 0x19
 2481 01c2 3C       		.uleb128 0x3c
 2482 01c3 19       		.uleb128 0x19
 2483 01c4 00       		.byte	0
 2484 01c5 00       		.byte	0
 2485 01c6 1C       		.uleb128 0x1c
 2486 01c7 34       		.uleb128 0x34
 2487 01c8 00       		.byte	0
 2488 01c9 03       		.uleb128 0x3
 2489 01ca 08       		.uleb128 0x8
 2490 01cb 3A       		.uleb128 0x3a
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 54


 2491 01cc 0B       		.uleb128 0xb
 2492 01cd 3B       		.uleb128 0x3b
 2493 01ce 0B       		.uleb128 0xb
 2494 01cf 49       		.uleb128 0x49
 2495 01d0 13       		.uleb128 0x13
 2496 01d1 3F       		.uleb128 0x3f
 2497 01d2 19       		.uleb128 0x19
 2498 01d3 02       		.uleb128 0x2
 2499 01d4 18       		.uleb128 0x18
 2500 01d5 00       		.byte	0
 2501 01d6 00       		.byte	0
 2502 01d7 1D       		.uleb128 0x1d
 2503 01d8 34       		.uleb128 0x34
 2504 01d9 00       		.byte	0
 2505 01da 03       		.uleb128 0x3
 2506 01db 0E       		.uleb128 0xe
 2507 01dc 3A       		.uleb128 0x3a
 2508 01dd 0B       		.uleb128 0xb
 2509 01de 3B       		.uleb128 0x3b
 2510 01df 0B       		.uleb128 0xb
 2511 01e0 49       		.uleb128 0x49
 2512 01e1 13       		.uleb128 0x13
 2513 01e2 3F       		.uleb128 0x3f
 2514 01e3 19       		.uleb128 0x19
 2515 01e4 02       		.uleb128 0x2
 2516 01e5 18       		.uleb128 0x18
 2517 01e6 00       		.byte	0
 2518 01e7 00       		.byte	0
 2519 01e8 1E       		.uleb128 0x1e
 2520 01e9 21       		.uleb128 0x21
 2521 01ea 00       		.byte	0
 2522 01eb 49       		.uleb128 0x49
 2523 01ec 13       		.uleb128 0x13
 2524 01ed 2F       		.uleb128 0x2f
 2525 01ee 0B       		.uleb128 0xb
 2526 01ef 00       		.byte	0
 2527 01f0 00       		.byte	0
 2528 01f1 00       		.byte	0
 2529              		.section	.debug_aranges,"",%progbits
 2530 0000 8C000000 		.4byte	0x8c
 2531 0004 0200     		.2byte	0x2
 2532 0006 00000000 		.4byte	.Ldebug_info0
 2533 000a 04       		.byte	0x4
 2534 000b 00       		.byte	0
 2535 000c 0000     		.2byte	0
 2536 000e 0000     		.2byte	0
 2537 0010 00000000 		.4byte	.LFB64
 2538 0014 14000000 		.4byte	.LFE64-.LFB64
 2539 0018 00000000 		.4byte	.LFB65
 2540 001c 14000000 		.4byte	.LFE65-.LFB65
 2541 0020 00000000 		.4byte	.LFB66
 2542 0024 14000000 		.4byte	.LFE66-.LFB66
 2543 0028 00000000 		.4byte	.LFB67
 2544 002c 20000000 		.4byte	.LFE67-.LFB67
 2545 0030 00000000 		.4byte	.LFB68
 2546 0034 20000000 		.4byte	.LFE68-.LFB68
 2547 0038 00000000 		.4byte	.LFB69
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 55


 2548 003c BC000000 		.4byte	.LFE69-.LFB69
 2549 0040 00000000 		.4byte	.LFB70
 2550 0044 0C000000 		.4byte	.LFE70-.LFB70
 2551 0048 00000000 		.4byte	.LFB71
 2552 004c C0000000 		.4byte	.LFE71-.LFB71
 2553 0050 00000000 		.4byte	.LFB72
 2554 0054 2C000000 		.4byte	.LFE72-.LFB72
 2555 0058 00000000 		.4byte	.LFB73
 2556 005c 0C000000 		.4byte	.LFE73-.LFB73
 2557 0060 00000000 		.4byte	.LFB74
 2558 0064 4C010000 		.4byte	.LFE74-.LFB74
 2559 0068 00000000 		.4byte	.LFB75
 2560 006c 50000000 		.4byte	.LFE75-.LFB75
 2561 0070 00000000 		.4byte	.LFB76
 2562 0074 3E000000 		.4byte	.LFE76-.LFB76
 2563 0078 00000000 		.4byte	.LFB77
 2564 007c 26000000 		.4byte	.LFE77-.LFB77
 2565 0080 00000000 		.4byte	.LFB78
 2566 0084 CC000000 		.4byte	.LFE78-.LFB78
 2567 0088 00000000 		.4byte	0
 2568 008c 00000000 		.4byte	0
 2569              		.section	.debug_ranges,"",%progbits
 2570              	.Ldebug_ranges0:
 2571 0000 00000000 		.4byte	.LFB64
 2572 0004 14000000 		.4byte	.LFE64
 2573 0008 00000000 		.4byte	.LFB65
 2574 000c 14000000 		.4byte	.LFE65
 2575 0010 00000000 		.4byte	.LFB66
 2576 0014 14000000 		.4byte	.LFE66
 2577 0018 00000000 		.4byte	.LFB67
 2578 001c 20000000 		.4byte	.LFE67
 2579 0020 00000000 		.4byte	.LFB68
 2580 0024 20000000 		.4byte	.LFE68
 2581 0028 00000000 		.4byte	.LFB69
 2582 002c BC000000 		.4byte	.LFE69
 2583 0030 00000000 		.4byte	.LFB70
 2584 0034 0C000000 		.4byte	.LFE70
 2585 0038 00000000 		.4byte	.LFB71
 2586 003c C0000000 		.4byte	.LFE71
 2587 0040 00000000 		.4byte	.LFB72
 2588 0044 2C000000 		.4byte	.LFE72
 2589 0048 00000000 		.4byte	.LFB73
 2590 004c 0C000000 		.4byte	.LFE73
 2591 0050 00000000 		.4byte	.LFB74
 2592 0054 4C010000 		.4byte	.LFE74
 2593 0058 00000000 		.4byte	.LFB75
 2594 005c 50000000 		.4byte	.LFE75
 2595 0060 00000000 		.4byte	.LFB76
 2596 0064 3E000000 		.4byte	.LFE76
 2597 0068 00000000 		.4byte	.LFB77
 2598 006c 26000000 		.4byte	.LFE77
 2599 0070 00000000 		.4byte	.LFB78
 2600 0074 CC000000 		.4byte	.LFE78
 2601 0078 00000000 		.4byte	0
 2602 007c 00000000 		.4byte	0
 2603              		.section	.debug_line,"",%progbits
 2604              	.Ldebug_line0:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 56


 2605 0000 10030000 		.section	.debug_str,"MS",%progbits,1
 2605      02005601 
 2605      00000201 
 2605      FB0E0D00 
 2605      01010101 
 2606              	.LASF39:
 2607 0000 6D6F746F 		.ascii	"motorStop\000"
 2607      7253746F 
 2607      7000
 2608              	.LASF57:
 2609 000a 6973725F 		.ascii	"isr_TS_Interrupt_sample\000"
 2609      54535F49 
 2609      6E746572 
 2609      72757074 
 2609      5F73616D 
 2610              	.LASF71:
 2611 0022 74735F65 		.ascii	"ts_enc\000"
 2611      6E6300
 2612              	.LASF14:
 2613 0029 646F7562 		.ascii	"double\000"
 2613      6C6500
 2614              	.LASF80:
 2615 0030 666C6167 		.ascii	"flag_packet\000"
 2615      5F706163 
 2615      6B657400 
 2616              	.LASF64:
 2617 003c 75736250 		.ascii	"usbPutChar\000"
 2617      75744368 
 2617      617200
 2618              	.LASF94:
 2619 0047 636F756E 		.ascii	"counteoc\000"
 2619      74656F63 
 2619      00
 2620              	.LASF42:
 2621 0050 6973725F 		.ascii	"isr_eoc_Interrupt_test\000"
 2621      656F635F 
 2621      496E7465 
 2621      72727570 
 2621      745F7465 
 2622              	.LASF38:
 2623 0067 6D6F746F 		.ascii	"motorGoBackwards\000"
 2623      72476F42 
 2623      61636B77 
 2623      61726473 
 2623      00
 2624              	.LASF90:
 2625 0078 63686563 		.ascii	"checkLight\000"
 2625      6B4C6967 
 2625      687400
 2626              	.LASF33:
 2627 0083 67325F78 		.ascii	"g2_xpos\000"
 2627      706F7300 
 2628              	.LASF2:
 2629 008b 73686F72 		.ascii	"short int\000"
 2629      7420696E 
 2629      7400
 2630              	.LASF88:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 57


 2631 0095 73797374 		.ascii	"system_state\000"
 2631      656D5F73 
 2631      74617465 
 2631      00
 2632              	.LASF10:
 2633 00a2 73697A65 		.ascii	"sizetype\000"
 2633      74797065 
 2633      00
 2634              	.LASF87:
 2635 00ab 75736242 		.ascii	"usbBuffer\000"
 2635      75666665 
 2635      7200
 2636              	.LASF97:
 2637 00b5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2637      43313120 
 2637      352E342E 
 2637      31203230 
 2637      31363036 
 2638 00e8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2638      20726576 
 2638      6973696F 
 2638      6E203233 
 2638      37373135 
 2639 011b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2639      66756E63 
 2639      74696F6E 
 2639      2D736563 
 2639      74696F6E 
 2640              	.LASF58:
 2641 0143 6D61696E 		.ascii	"main\000"
 2641      00
 2642              	.LASF55:
 2643 0148 6D6F746F 		.ascii	"motorRun\000"
 2643      7252756E 
 2643      00
 2644              	.LASF46:
 2645 0151 76616C75 		.ascii	"valueQ1\000"
 2645      65513100 
 2646              	.LASF47:
 2647 0159 76616C75 		.ascii	"valueQ2\000"
 2647      65513200 
 2648              	.LASF43:
 2649 0161 76616C75 		.ascii	"valueQ3\000"
 2649      65513300 
 2650              	.LASF44:
 2651 0169 76616C75 		.ascii	"valueQ4\000"
 2651      65513400 
 2652              	.LASF45:
 2653 0171 76616C75 		.ascii	"valueQ5\000"
 2653      65513500 
 2654              	.LASF48:
 2655 0179 76616C75 		.ascii	"valueQ6\000"
 2655      65513600 
 2656              	.LASF91:
 2657 0181 6C696768 		.ascii	"lightState\000"
 2657      74537461 
 2657      746500
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 58


 2658              	.LASF54:
 2659 018c 6D6F746F 		.ascii	"motor2String\000"
 2659      72325374 
 2659      72696E67 
 2659      00
 2660              	.LASF21:
 2661 0199 696E6465 		.ascii	"index\000"
 2661      7800
 2662              	.LASF19:
 2663 019f 696E7431 		.ascii	"int16\000"
 2663      3600
 2664              	.LASF16:
 2665 01a5 75696E74 		.ascii	"uint8\000"
 2665      3800
 2666              	.LASF99:
 2667 01ab 5C5C6669 		.ascii	"\\\\files.auckland.ac.nz\\myhome\\Documents\\GitHub"
 2667      6C65732E 
 2667      6175636B 
 2667      6C616E64 
 2667      2E61632E 
 2668 01d9 5C70726F 		.ascii	"\\project-project_group_11\\COMPSYS 301\\psoc stude"
 2668      6A656374 
 2668      2D70726F 
 2668      6A656374 
 2668      5F67726F 
 2669 0209 6E742070 		.ascii	"nt pack\\psoc student pack\\psoc_code_base\\CS301_C"
 2669      61636B5C 
 2669      70736F63 
 2669      20737475 
 2669      64656E74 
 2670 0239 6C617373 		.ascii	"lass.cydsn\000"
 2670      2E637964 
 2670      736E00
 2671              	.LASF89:
 2672 0244 6368616E 		.ascii	"changeMotor\000"
 2672      67654D6F 
 2672      746F7200 
 2673              	.LASF93:
 2674 0250 6C696768 		.ascii	"lightDetectedBack\000"
 2674      74446574 
 2674      65637465 
 2674      64426163 
 2674      6B00
 2675              	.LASF15:
 2676 0262 666C6F61 		.ascii	"float\000"
 2676      7400
 2677              	.LASF56:
 2678 0268 6973725F 		.ascii	"isr_motor_interrupt_speed\000"
 2678      6D6F746F 
 2678      725F696E 
 2678      74657272 
 2678      7570745F 
 2679              	.LASF6:
 2680 0282 6C6F6E67 		.ascii	"long long int\000"
 2680      206C6F6E 
 2680      6720696E 
 2680      7400
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 59


 2681              	.LASF63:
 2682 0290 75736250 		.ascii	"usbPutString\000"
 2682      75745374 
 2682      72696E67 
 2682      00
 2683              	.LASF18:
 2684 029d 696E7438 		.ascii	"int8\000"
 2684      00
 2685              	.LASF76:
 2686 02a2 666C6167 		.ascii	"flag_ts_update\000"
 2686      5F74735F 
 2686      75706461 
 2686      746500
 2687              	.LASF34:
 2688 02b1 67325F79 		.ascii	"g2_ypos\000"
 2688      706F7300 
 2689              	.LASF28:
 2690 02b9 67305F64 		.ascii	"g0_direction\000"
 2690      69726563 
 2690      74696F6E 
 2690      00
 2691              	.LASF25:
 2692 02c6 67305F78 		.ascii	"g0_xpos\000"
 2692      706F7300 
 2693              	.LASF4:
 2694 02ce 6C6F6E67 		.ascii	"long int\000"
 2694      20696E74 
 2694      00
 2695              	.LASF49:
 2696 02d7 62656769 		.ascii	"beginningCountMotor1\000"
 2696      6E6E696E 
 2696      67436F75 
 2696      6E744D6F 
 2696      746F7231 
 2697              	.LASF50:
 2698 02ec 62656769 		.ascii	"beginningCountMotor2\000"
 2698      6E6E696E 
 2698      67436F75 
 2698      6E744D6F 
 2698      746F7232 
 2699              	.LASF53:
 2700 0301 6D6F746F 		.ascii	"motor1String\000"
 2700      72315374 
 2700      72696E67 
 2700      00
 2701              	.LASF95:
 2702 030e 70726F63 		.ascii	"processSensors\000"
 2702      65737353 
 2702      656E736F 
 2702      727300
 2703              	.LASF85:
 2704 031d 6C696E65 		.ascii	"line\000"
 2704      00
 2705              	.LASF78:
 2706 0322 666C6167 		.ascii	"flag_ts_display\000"
 2706      5F74735F 
 2706      64697370 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 60


 2706      6C617900 
 2707              	.LASF79:
 2708 0332 666C6167 		.ascii	"flag_rx\000"
 2708      5F727800 
 2709              	.LASF52:
 2710 033a 656E6443 		.ascii	"endCountMotor1\000"
 2710      6F756E74 
 2710      4D6F746F 
 2710      723100
 2711              	.LASF51:
 2712 0349 656E6443 		.ascii	"endCountMotor2\000"
 2712      6F756E74 
 2712      4D6F746F 
 2712      723200
 2713              	.LASF86:
 2714 0358 656E7472 		.ascii	"entry\000"
 2714      7900
 2715              	.LASF9:
 2716 035e 6C6F6E67 		.ascii	"long double\000"
 2716      20646F75 
 2716      626C6500 
 2717              	.LASF1:
 2718 036a 756E7369 		.ascii	"unsigned char\000"
 2718      676E6564 
 2718      20636861 
 2718      7200
 2719              	.LASF92:
 2720 0378 6C696768 		.ascii	"lightDetectedFront\000"
 2720      74446574 
 2720      65637465 
 2720      6446726F 
 2720      6E7400
 2721              	.LASF27:
 2722 038b 67305F73 		.ascii	"g0_speed\000"
 2722      70656564 
 2722      00
 2723              	.LASF82:
 2724 0394 64617461 		.ascii	"dataready_flag\000"
 2724      72656164 
 2724      795F666C 
 2724      616700
 2725              	.LASF0:
 2726 03a3 7369676E 		.ascii	"signed char\000"
 2726      65642063 
 2726      68617200 
 2727              	.LASF7:
 2728 03af 6C6F6E67 		.ascii	"long long unsigned int\000"
 2728      206C6F6E 
 2728      6720756E 
 2728      7369676E 
 2728      65642069 
 2729              	.LASF8:
 2730 03c6 756E7369 		.ascii	"unsigned int\000"
 2730      676E6564 
 2730      20696E74 
 2730      00
 2731              	.LASF81:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 61


 2732 03d3 666C6167 		.ascii	"flag_KB_string\000"
 2732      5F4B425F 
 2732      73747269 
 2732      6E6700
 2733              	.LASF68:
 2734 03e2 75736242 		.ascii	"usbBufCount\000"
 2734      7566436F 
 2734      756E7400 
 2735              	.LASF35:
 2736 03ee 67325F73 		.ascii	"g2_speed\000"
 2736      70656564 
 2736      00
 2737              	.LASF29:
 2738 03f7 67315F78 		.ascii	"g1_xpos\000"
 2738      706F7300 
 2739              	.LASF60:
 2740 03ff 6F706572 		.ascii	"operation\000"
 2740      6174696F 
 2740      6E00
 2741              	.LASF100:
 2742 0409 64617461 		.ascii	"data_main\000"
 2742      5F6D6169 
 2742      6E00
 2743              	.LASF11:
 2744 0413 63686172 		.ascii	"char\000"
 2744      00
 2745              	.LASF22:
 2746 0418 726F626F 		.ascii	"robot_xpos\000"
 2746      745F7870 
 2746      6F7300
 2747              	.LASF13:
 2748 0423 696E7433 		.ascii	"int32_t\000"
 2748      325F7400 
 2749              	.LASF30:
 2750 042b 67315F79 		.ascii	"g1_ypos\000"
 2750      706F7300 
 2751              	.LASF36:
 2752 0433 67325F64 		.ascii	"g2_direction\000"
 2752      69726563 
 2752      74696F6E 
 2752      00
 2753              	.LASF3:
 2754 0440 73686F72 		.ascii	"short unsigned int\000"
 2754      7420756E 
 2754      7369676E 
 2754      65642069 
 2754      6E7400
 2755              	.LASF31:
 2756 0453 67315F73 		.ascii	"g1_speed\000"
 2756      70656564 
 2756      00
 2757              	.LASF84:
 2758 045c 64697370 		.ascii	"displaystring\000"
 2758      6C617973 
 2758      7472696E 
 2758      6700
 2759              	.LASF77:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 62


 2760 046a 666C6167 		.ascii	"flag_ts_speed\000"
 2760      5F74735F 
 2760      73706565 
 2760      6400
 2761              	.LASF61:
 2762 0478 636F6E76 		.ascii	"convertSensorBinary\000"
 2762      65727453 
 2762      656E736F 
 2762      7242696E 
 2762      61727900 
 2763              	.LASF17:
 2764 048c 75696E74 		.ascii	"uint16\000"
 2764      313600
 2765              	.LASF98:
 2766 0493 6D61696E 		.ascii	"main.c\000"
 2766      2E6300
 2767              	.LASF5:
 2768 049a 6C6F6E67 		.ascii	"long unsigned int\000"
 2768      20756E73 
 2768      69676E65 
 2768      6420696E 
 2768      7400
 2769              	.LASF67:
 2770 04ac 75736253 		.ascii	"usbStarted\000"
 2770      74617274 
 2770      656400
 2771              	.LASF73:
 2772 04b7 74735F73 		.ascii	"ts_speed\000"
 2772      70656564 
 2772      00
 2773              	.LASF69:
 2774 04c0 636F756E 		.ascii	"count\000"
 2774      7400
 2775              	.LASF75:
 2776 04c6 666C6167 		.ascii	"flag_ts_enc\000"
 2776      5F74735F 
 2776      656E6300 
 2777              	.LASF12:
 2778 04d2 5F5F696E 		.ascii	"__int32_t\000"
 2778      7433325F 
 2778      7400
 2779              	.LASF40:
 2780 04dc 6D6F746F 		.ascii	"motorTurnLeft\000"
 2780      72547572 
 2780      6E4C6566 
 2780      7400
 2781              	.LASF37:
 2782 04ea 6D6F746F 		.ascii	"motorGoStraight\000"
 2782      72476F53 
 2782      74726169 
 2782      67687400 
 2783              	.LASF65:
 2784 04fa 6D6F746F 		.ascii	"motorCount\000"
 2784      72436F75 
 2784      6E7400
 2785              	.LASF26:
 2786 0505 67305F79 		.ascii	"g0_ypos\000"
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 63


 2786      706F7300 
 2787              	.LASF74:
 2788 050d 74735F64 		.ascii	"ts_display\000"
 2788      6973706C 
 2788      617900
 2789              	.LASF72:
 2790 0518 74735F75 		.ascii	"ts_update\000"
 2790      70646174 
 2790      6500
 2791              	.LASF66:
 2792 0522 68616E64 		.ascii	"handle_usb\000"
 2792      6C655F75 
 2792      736200
 2793              	.LASF83:
 2794 052d 666C6167 		.ascii	"flag_rf_transmission_active\000"
 2794      5F72665F 
 2794      7472616E 
 2794      736D6973 
 2794      73696F6E 
 2795              	.LASF23:
 2796 0549 726F626F 		.ascii	"robot_ypos\000"
 2796      745F7970 
 2796      6F7300
 2797              	.LASF70:
 2798 0554 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2798      52784275 
 2798      66666572 
 2798      00
 2799              	.LASF62:
 2800 0561 76616C75 		.ascii	"value\000"
 2800      6500
 2801              	.LASF59:
 2802 0567 6F6E4C69 		.ascii	"onLine\000"
 2802      6E6500
 2803              	.LASF32:
 2804 056e 67315F64 		.ascii	"g1_direction\000"
 2804      69726563 
 2804      74696F6E 
 2804      00
 2805              	.LASF41:
 2806 057b 6D6F746F 		.ascii	"motorTurnRight\000"
 2806      72547572 
 2806      6E526967 
 2806      687400
 2807              	.LASF96:
 2808 058a 6D696464 		.ascii	"middle\000"
 2808      6C6500
 2809              	.LASF20:
 2810 0591 72737369 		.ascii	"rssi\000"
 2810      00
 2811              	.LASF24:
 2812 0596 726F626F 		.ascii	"robot_orientation\000"
 2812      745F6F72 
 2812      69656E74 
 2812      6174696F 
 2812      6E00
 2813              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\cccmaJSh.s 			page 64


