ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.section	.text.motorGoStraight,"ax",%progbits
 107              		.align	2
 108              		.global	motorGoStraight
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 3


 109              		.thumb
 110              		.thumb_func
 111              		.type	motorGoStraight, %function
 112              	motorGoStraight:
 113              	.LFB64:
 114              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <stdbool.h>
  19:main.c        **** #include <string.h>
  20:main.c        **** #include <stdlib.h>
  21:main.c        **** #include <math.h>
  22:main.c        **** #include <project.h>
  23:main.c        **** //* ========================================
  24:main.c        **** #include "defines.h"
  25:main.c        **** #include "vars.h"
  26:main.c        **** #include "isr_eoc.h"
  27:main.c        **** //* ========================================
  28:main.c        **** void usbPutString(char *s);
  29:main.c        **** void usbPutChar(char c);
  30:main.c        **** void handle_usb();
  31:main.c        **** //* ========================================
  32:main.c        **** 
  33:main.c        **** 
  34:main.c        **** #define rota180 500 //turns
  35:main.c        **** #define rota90Left 250
  36:main.c        **** 
  37:main.c        **** #define moveSlow 50
  38:main.c        **** #define travelDist 326 // how
  39:main.c        **** #define Q1CHANNEL 3
  40:main.c        **** #define Q2CHANNEL 5 
  41:main.c        **** #define Q3CHANNEL 0
  42:main.c        **** #define Q4CHANNEL 1
  43:main.c        **** #define Q5CHANNEL 2
  44:main.c        **** #define Q6CHANNEL 4
  45:main.c        **** 
  46:main.c        **** CY_ISR_PROTO(isr_eoc_Interrupt_test);
  47:main.c        **** CY_ISR_PROTO(isr_motor_interrupt_speed);
  48:main.c        **** CY_ISR_PROTO(isr_TS_interrupt_sample);
  49:main.c        **** int convertSensorBinary();
  50:main.c        **** int convertBackBinary();
  51:main.c        **** 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 4


  52:main.c        **** void motorGoStraight(){
 115              		.loc 1 52 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119 0000 80B5     		push	{r7, lr}
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 7, -8
 122              		.cfi_offset 14, -4
 123 0002 00AF     		add	r7, sp, #0
 124              		.cfi_def_cfa_register 7
  53:main.c        ****     ////PWM_1_WriteCompare(150); // left wheel near power switch is stronker than right wheel //150
  54:main.c        ****     //M1_IN2_Write(0);
  55:main.c        ****     PWM_1_WriteCompare(160);//200 //180 //160
 125              		.loc 1 55 0
 126 0004 A020     		movs	r0, #160
 127 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  56:main.c        ****     PWM_2_WriteCompare(93); //52 //72 //93
 128              		.loc 1 56 0
 129 000a 5D20     		movs	r0, #93
 130 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  57:main.c        **** }
 131              		.loc 1 57 0
 132 0010 00BF     		nop
 133 0012 80BD     		pop	{r7, pc}
 134              		.cfi_endproc
 135              	.LFE64:
 136              		.size	motorGoStraight, .-motorGoStraight
 137              		.section	.text.motorSetSpeed,"ax",%progbits
 138              		.align	2
 139              		.global	motorSetSpeed
 140              		.thumb
 141              		.thumb_func
 142              		.type	motorSetSpeed, %function
 143              	motorSetSpeed:
 144              	.LFB65:
  58:main.c        **** void motorSetSpeed(int x){
 145              		.loc 1 58 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 8
 148              		@ frame_needed = 1, uses_anonymous_args = 0
 149 0000 80B5     		push	{r7, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 82B0     		sub	sp, sp, #8
 154              		.cfi_def_cfa_offset 16
 155 0004 00AF     		add	r7, sp, #0
 156              		.cfi_def_cfa_register 7
 157 0006 7860     		str	r0, [r7, #4]
  59:main.c        ****     ////PWM_1_WriteCompare(150); // left wheel near power switch is stronker than right wheel //150
  60:main.c        ****     //M1_IN2_Write(0);
  61:main.c        ****     
  62:main.c        ****     //fastest speed
  63:main.c        ****     PWM_1_WriteCompare(200+x);//200 //180 //160
 158              		.loc 1 63 0
 159 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 5


 160 000a DBB2     		uxtb	r3, r3
 161 000c 383B     		subs	r3, r3, #56
 162 000e DBB2     		uxtb	r3, r3
 163 0010 1846     		mov	r0, r3
 164 0012 FFF7FEFF 		bl	PWM_1_WriteCompare
  64:main.c        ****     PWM_2_WriteCompare(52-x); //52 //72 //93
 165              		.loc 1 64 0
 166 0016 7B68     		ldr	r3, [r7, #4]
 167 0018 DBB2     		uxtb	r3, r3
 168 001a C3F13403 		rsb	r3, r3, #52
 169 001e DBB2     		uxtb	r3, r3
 170 0020 1846     		mov	r0, r3
 171 0022 FFF7FEFF 		bl	PWM_2_WriteCompare
  65:main.c        **** }
 172              		.loc 1 65 0
 173 0026 00BF     		nop
 174 0028 0837     		adds	r7, r7, #8
 175              		.cfi_def_cfa_offset 8
 176 002a BD46     		mov	sp, r7
 177              		.cfi_def_cfa_register 13
 178              		@ sp needed
 179 002c 80BD     		pop	{r7, pc}
 180              		.cfi_endproc
 181              	.LFE65:
 182              		.size	motorSetSpeed, .-motorSetSpeed
 183 002e 00BF     		.section	.text.motorGoBackwards,"ax",%progbits
 184              		.align	2
 185              		.global	motorGoBackwards
 186              		.thumb
 187              		.thumb_func
 188              		.type	motorGoBackwards, %function
 189              	motorGoBackwards:
 190              	.LFB66:
  66:main.c        **** void motorGoBackwards(){
 191              		.loc 1 66 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 1, uses_anonymous_args = 0
 195 0000 80B5     		push	{r7, lr}
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 7, -8
 198              		.cfi_offset 14, -4
 199 0002 00AF     		add	r7, sp, #0
 200              		.cfi_def_cfa_register 7
  67:main.c        ****     
  68:main.c        ****     //M1_IN2_Write(0);
  69:main.c        ****     PWM_1_WriteCompare(55); //55
 201              		.loc 1 69 0
 202 0004 3720     		movs	r0, #55
 203 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  70:main.c        ****     PWM_2_WriteCompare(201); //201
 204              		.loc 1 70 0
 205 000a C920     		movs	r0, #201
 206 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  71:main.c        **** }
 207              		.loc 1 71 0
 208 0010 00BF     		nop
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 6


 209 0012 80BD     		pop	{r7, pc}
 210              		.cfi_endproc
 211              	.LFE66:
 212              		.size	motorGoBackwards, .-motorGoBackwards
 213              		.section	.text.motorStop,"ax",%progbits
 214              		.align	2
 215              		.global	motorStop
 216              		.thumb
 217              		.thumb_func
 218              		.type	motorStop, %function
 219              	motorStop:
 220              	.LFB67:
  72:main.c        **** void motorStop(){
 221              		.loc 1 72 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 1, uses_anonymous_args = 0
 225 0000 80B5     		push	{r7, lr}
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 7, -8
 228              		.cfi_offset 14, -4
 229 0002 00AF     		add	r7, sp, #0
 230              		.cfi_def_cfa_register 7
  73:main.c        ****     PWM_1_WriteCompare(127); 
 231              		.loc 1 73 0
 232 0004 7F20     		movs	r0, #127
 233 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  74:main.c        ****     PWM_2_WriteCompare(127);
 234              		.loc 1 74 0
 235 000a 7F20     		movs	r0, #127
 236 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  75:main.c        **** }
 237              		.loc 1 75 0
 238 0010 00BF     		nop
 239 0012 80BD     		pop	{r7, pc}
 240              		.cfi_endproc
 241              	.LFE67:
 242              		.size	motorStop, .-motorStop
 243              		.section	.text.motorBeyblade,"ax",%progbits
 244              		.align	2
 245              		.global	motorBeyblade
 246              		.thumb
 247              		.thumb_func
 248              		.type	motorBeyblade, %function
 249              	motorBeyblade:
 250              	.LFB68:
  76:main.c        **** 
  77:main.c        **** void motorBeyblade(uint8 x){
 251              		.loc 1 77 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 8
 254              		@ frame_needed = 1, uses_anonymous_args = 0
 255 0000 80B5     		push	{r7, lr}
 256              		.cfi_def_cfa_offset 8
 257              		.cfi_offset 7, -8
 258              		.cfi_offset 14, -4
 259 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 7


 260              		.cfi_def_cfa_offset 16
 261 0004 00AF     		add	r7, sp, #0
 262              		.cfi_def_cfa_register 7
 263 0006 0346     		mov	r3, r0
 264 0008 FB71     		strb	r3, [r7, #7]
  78:main.c        ****     // TO DO
  79:main.c        ****     
  80:main.c        ****     PWM_1_WriteCompare(x); //55
 265              		.loc 1 80 0
 266 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 267 000c 1846     		mov	r0, r3
 268 000e FFF7FEFF 		bl	PWM_1_WriteCompare
  81:main.c        ****     PWM_2_WriteCompare(x); //201
 269              		.loc 1 81 0
 270 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 271 0014 1846     		mov	r0, r3
 272 0016 FFF7FEFF 		bl	PWM_2_WriteCompare
  82:main.c        ****     
  83:main.c        **** }
 273              		.loc 1 83 0
 274 001a 00BF     		nop
 275 001c 0837     		adds	r7, r7, #8
 276              		.cfi_def_cfa_offset 8
 277 001e BD46     		mov	sp, r7
 278              		.cfi_def_cfa_register 13
 279              		@ sp needed
 280 0020 80BD     		pop	{r7, pc}
 281              		.cfi_endproc
 282              	.LFE68:
 283              		.size	motorBeyblade, .-motorBeyblade
 284 0022 00BF     		.section	.text.motorTurnLeft,"ax",%progbits
 285              		.align	2
 286              		.global	motorTurnLeft
 287              		.thumb
 288              		.thumb_func
 289              		.type	motorTurnLeft, %function
 290              	motorTurnLeft:
 291              	.LFB69:
  84:main.c        **** void motorTurnLeft(uint8 x){
 292              		.loc 1 84 0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 8
 295              		@ frame_needed = 1, uses_anonymous_args = 0
 296 0000 80B5     		push	{r7, lr}
 297              		.cfi_def_cfa_offset 8
 298              		.cfi_offset 7, -8
 299              		.cfi_offset 14, -4
 300 0002 82B0     		sub	sp, sp, #8
 301              		.cfi_def_cfa_offset 16
 302 0004 00AF     		add	r7, sp, #0
 303              		.cfi_def_cfa_register 7
 304 0006 0346     		mov	r3, r0
 305 0008 FB71     		strb	r3, [r7, #7]
  85:main.c        ****     // TO DO
  86:main.c        ****     
  87:main.c        ****     PWM_1_WriteCompare(127); //55
 306              		.loc 1 87 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 8


 307 000a 7F20     		movs	r0, #127
 308 000c FFF7FEFF 		bl	PWM_1_WriteCompare
  88:main.c        ****     PWM_2_WriteCompare(x); //201
 309              		.loc 1 88 0
 310 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 311 0012 1846     		mov	r0, r3
 312 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
  89:main.c        ****     
  90:main.c        ****     
  91:main.c        ****     
  92:main.c        ****     //255
  93:main.c        **** }
 313              		.loc 1 93 0
 314 0018 00BF     		nop
 315 001a 0837     		adds	r7, r7, #8
 316              		.cfi_def_cfa_offset 8
 317 001c BD46     		mov	sp, r7
 318              		.cfi_def_cfa_register 13
 319              		@ sp needed
 320 001e 80BD     		pop	{r7, pc}
 321              		.cfi_endproc
 322              	.LFE69:
 323              		.size	motorTurnLeft, .-motorTurnLeft
 324              		.section	.text.motorTurnRight,"ax",%progbits
 325              		.align	2
 326              		.global	motorTurnRight
 327              		.thumb
 328              		.thumb_func
 329              		.type	motorTurnRight, %function
 330              	motorTurnRight:
 331              	.LFB70:
  94:main.c        **** 
  95:main.c        **** void motorTurnRight(int x){
 332              		.loc 1 95 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 8
 335              		@ frame_needed = 1, uses_anonymous_args = 0
 336 0000 80B5     		push	{r7, lr}
 337              		.cfi_def_cfa_offset 8
 338              		.cfi_offset 7, -8
 339              		.cfi_offset 14, -4
 340 0002 82B0     		sub	sp, sp, #8
 341              		.cfi_def_cfa_offset 16
 342 0004 00AF     		add	r7, sp, #0
 343              		.cfi_def_cfa_register 7
 344 0006 7860     		str	r0, [r7, #4]
  96:main.c        ****     // TO DO
  97:main.c        ****     
  98:main.c        ****     PWM_1_WriteCompare(x);//200
 345              		.loc 1 98 0
 346 0008 7B68     		ldr	r3, [r7, #4]
 347 000a DBB2     		uxtb	r3, r3
 348 000c 1846     		mov	r0, r3
 349 000e FFF7FEFF 		bl	PWM_1_WriteCompare
  99:main.c        ****     PWM_2_WriteCompare(127); //50
 350              		.loc 1 99 0
 351 0012 7F20     		movs	r0, #127
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 9


 352 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
 100:main.c        **** 
 101:main.c        **** }
 353              		.loc 1 101 0
 354 0018 00BF     		nop
 355 001a 0837     		adds	r7, r7, #8
 356              		.cfi_def_cfa_offset 8
 357 001c BD46     		mov	sp, r7
 358              		.cfi_def_cfa_register 13
 359              		@ sp needed
 360 001e 80BD     		pop	{r7, pc}
 361              		.cfi_endproc
 362              	.LFE70:
 363              		.size	motorTurnRight, .-motorTurnRight
 364              		.section	.text.motorCircle,"ax",%progbits
 365              		.align	2
 366              		.global	motorCircle
 367              		.thumb
 368              		.thumb_func
 369              		.type	motorCircle, %function
 370              	motorCircle:
 371              	.LFB71:
 102:main.c        **** 
 103:main.c        **** 
 104:main.c        **** void motorCircle(uint8 x){
 372              		.loc 1 104 0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 8
 375              		@ frame_needed = 1, uses_anonymous_args = 0
 376 0000 80B5     		push	{r7, lr}
 377              		.cfi_def_cfa_offset 8
 378              		.cfi_offset 7, -8
 379              		.cfi_offset 14, -4
 380 0002 82B0     		sub	sp, sp, #8
 381              		.cfi_def_cfa_offset 16
 382 0004 00AF     		add	r7, sp, #0
 383              		.cfi_def_cfa_register 7
 384 0006 0346     		mov	r3, r0
 385 0008 FB71     		strb	r3, [r7, #7]
 105:main.c        ****     // TO DO
 106:main.c        ****     //positive value turns left
 107:main.c        ****     //negative value turns right
 108:main.c        ****     PWM_1_WriteCompare(127+x); //147
 386              		.loc 1 108 0
 387 000a FB79     		ldrb	r3, [r7, #7]
 388 000c 7F33     		adds	r3, r3, #127
 389 000e DBB2     		uxtb	r3, r3
 390 0010 1846     		mov	r0, r3
 391 0012 FFF7FEFF 		bl	PWM_1_WriteCompare
 109:main.c        ****     PWM_2_WriteCompare(127+x); //
 392              		.loc 1 109 0
 393 0016 FB79     		ldrb	r3, [r7, #7]
 394 0018 7F33     		adds	r3, r3, #127
 395 001a DBB2     		uxtb	r3, r3
 396 001c 1846     		mov	r0, r3
 397 001e FFF7FEFF 		bl	PWM_2_WriteCompare
 110:main.c        ****     
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 10


 111:main.c        ****     
 112:main.c        ****     
 113:main.c        ****     //255
 114:main.c        **** }
 398              		.loc 1 114 0
 399 0022 00BF     		nop
 400 0024 0837     		adds	r7, r7, #8
 401              		.cfi_def_cfa_offset 8
 402 0026 BD46     		mov	sp, r7
 403              		.cfi_def_cfa_register 13
 404              		@ sp needed
 405 0028 80BD     		pop	{r7, pc}
 406              		.cfi_endproc
 407              	.LFE71:
 408              		.size	motorCircle, .-motorCircle
 409              		.global	changeMotor
 410 002a 00BF     		.bss
 411 0012 0000     		.align	2
 412              		.type	changeMotor, %object
 413              		.size	changeMotor, 4
 414              	changeMotor:
 415 0014 00000000 		.space	4
 416              		.global	checkLight
 417              		.align	2
 418              		.type	checkLight, %object
 419              		.size	checkLight, 4
 420              	checkLight:
 421 0018 00000000 		.space	4
 422              		.global	lightState
 423              		.align	2
 424              		.type	lightState, %object
 425              		.size	lightState, 4
 426              	lightState:
 427 001c 00000000 		.space	4
 428              		.global	lightDetectedFront
 429              		.align	2
 430              		.type	lightDetectedFront, %object
 431              		.size	lightDetectedFront, 12
 432              	lightDetectedFront:
 433 0020 00000000 		.space	12
 433      00000000 
 433      00000000 
 434              		.global	lightDetectedBack
 435              		.align	2
 436              		.type	lightDetectedBack, %object
 437              		.size	lightDetectedBack, 12
 438              	lightDetectedBack:
 439 002c 00000000 		.space	12
 439      00000000 
 439      00000000 
 440              		.global	counteoc
 441              		.align	2
 442              		.type	counteoc, %object
 443              		.size	counteoc, 4
 444              	counteoc:
 445 0038 00000000 		.space	4
 446              		.global	processSensors
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 11


 447              		.align	2
 448              		.type	processSensors, %object
 449              		.size	processSensors, 4
 450              	processSensors:
 451 003c 00000000 		.space	4
 452              		.global	middle
 453              		.align	2
 454              		.type	middle, %object
 455              		.size	middle, 4
 456              	middle:
 457 0040 00000000 		.space	4
 458              		.section	.text.isr_eoc_Interrupt_test,"ax",%progbits
 459              		.align	2
 460              		.global	isr_eoc_Interrupt_test
 461              		.thumb
 462              		.thumb_func
 463              		.type	isr_eoc_Interrupt_test, %function
 464              	isr_eoc_Interrupt_test:
 465              	.LFB72:
 115:main.c        **** int changeMotor=0;
 116:main.c        **** int checkLight =0;
 117:main.c        **** int lightState=0;
 118:main.c        **** volatile int lightDetectedFront[3] = {0,0,0};
 119:main.c        **** volatile int lightDetectedBack[3] = {0,0,0};
 120:main.c        **** volatile int counteoc = 0;
 121:main.c        **** volatile int processSensors = 0;
 122:main.c        **** volatile int middle =0;
 123:main.c        **** CY_ISR(isr_eoc_Interrupt_test)
 124:main.c        **** {
 466              		.loc 1 124 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 16
 469              		@ frame_needed = 1, uses_anonymous_args = 0
 470 0000 80B5     		push	{r7, lr}
 471              		.cfi_def_cfa_offset 8
 472              		.cfi_offset 7, -8
 473              		.cfi_offset 14, -4
 474 0002 84B0     		sub	sp, sp, #16
 475              		.cfi_def_cfa_offset 24
 476 0004 00AF     		add	r7, sp, #0
 477              		.cfi_def_cfa_register 7
 125:main.c        ****     #ifdef isr_test_INTERRUPT_INTERRUPT_CALLBACK
 126:main.c        ****         isr_TS_Interrupt_InterruptCallback();
 127:main.c        ****     #endif /* isr_eoc_INTERRUPT_INTERRUPT_CALLBACK */ 
 128:main.c        **** 
 129:main.c        ****     /*  Place your Interrupt code here. */
 130:main.c        ****     /* `#START isr_eoc_Interrupt` */
 131:main.c        ****     
 132:main.c        ****     
 133:main.c        ****     // get value from ADC then convert to DAC to send to external LEDs
 134:main.c        ****     if (counteoc < 13){//10
 478              		.loc 1 134 0
 479 0006 324B     		ldr	r3, .L19
 480 0008 1B68     		ldr	r3, [r3]
 481 000a 0C2B     		cmp	r3, #12
 482 000c 59DC     		bgt	.L10
 483              	.LBB2:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 12


 135:main.c        ****         
 136:main.c        ****         int16 valueQ3 =  ADC_GetResult16(Q3CHANNEL);
 484              		.loc 1 136 0
 485 000e 0020     		movs	r0, #0
 486 0010 FFF7FEFF 		bl	ADC_GetResult16
 487 0014 0346     		mov	r3, r0
 488 0016 FB81     		strh	r3, [r7, #14]	@ movhi
 137:main.c        ****         int16 valueQ4 =  ADC_GetResult16(Q4CHANNEL);
 489              		.loc 1 137 0
 490 0018 0120     		movs	r0, #1
 491 001a FFF7FEFF 		bl	ADC_GetResult16
 492 001e 0346     		mov	r3, r0
 493 0020 BB81     		strh	r3, [r7, #12]	@ movhi
 138:main.c        ****         int16 valueQ5 =  ADC_GetResult16(Q5CHANNEL);
 494              		.loc 1 138 0
 495 0022 0220     		movs	r0, #2
 496 0024 FFF7FEFF 		bl	ADC_GetResult16
 497 0028 0346     		mov	r3, r0
 498 002a 7B81     		strh	r3, [r7, #10]	@ movhi
 139:main.c        ****     
 140:main.c        ****         int16 valueQ1 =  ADC_GetResult16(Q1CHANNEL);
 499              		.loc 1 140 0
 500 002c 0320     		movs	r0, #3
 501 002e FFF7FEFF 		bl	ADC_GetResult16
 502 0032 0346     		mov	r3, r0
 503 0034 3B81     		strh	r3, [r7, #8]	@ movhi
 141:main.c        ****         int16 valueQ2 =  ADC_GetResult16(Q2CHANNEL);
 504              		.loc 1 141 0
 505 0036 0520     		movs	r0, #5
 506 0038 FFF7FEFF 		bl	ADC_GetResult16
 507 003c 0346     		mov	r3, r0
 508 003e FB80     		strh	r3, [r7, #6]	@ movhi
 142:main.c        ****         int16 valueQ6 =  ADC_GetResult16(Q6CHANNEL);
 509              		.loc 1 142 0
 510 0040 0420     		movs	r0, #4
 511 0042 FFF7FEFF 		bl	ADC_GetResult16
 512 0046 0346     		mov	r3, r0
 513 0048 BB80     		strh	r3, [r7, #4]	@ movhi
 143:main.c        ****         
 144:main.c        ****         
 145:main.c        ****         //2211
 146:main.c        ****         if (valueQ3 >= 2211) {
 514              		.loc 1 146 0
 515 004a B7F90E30 		ldrsh	r3, [r7, #14]
 516 004e 40F6A202 		movw	r2, #2210
 517 0052 9342     		cmp	r3, r2
 518 0054 02DD     		ble	.L11
 147:main.c        ****         //set flag for white light detected
 148:main.c        ****         lightDetectedFront[0] = 1;
 519              		.loc 1 148 0
 520 0056 1F4B     		ldr	r3, .L19+4
 521 0058 0122     		movs	r2, #1
 522 005a 1A60     		str	r2, [r3]
 523              	.L11:
 149:main.c        ****         }
 150:main.c        ****         if (valueQ4 >= 2211) {
 524              		.loc 1 150 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 13


 525 005c B7F90C30 		ldrsh	r3, [r7, #12]
 526 0060 40F6A202 		movw	r2, #2210
 527 0064 9342     		cmp	r3, r2
 528 0066 02DD     		ble	.L12
 151:main.c        ****         //set flag for white light detected
 152:main.c        ****         lightDetectedFront[1] = 1;
 529              		.loc 1 152 0
 530 0068 1A4B     		ldr	r3, .L19+4
 531 006a 0122     		movs	r2, #1
 532 006c 5A60     		str	r2, [r3, #4]
 533              	.L12:
 153:main.c        ****         }
 154:main.c        ****     
 155:main.c        ****         if (valueQ5 >= 2211) {
 534              		.loc 1 155 0
 535 006e B7F90A30 		ldrsh	r3, [r7, #10]
 536 0072 40F6A202 		movw	r2, #2210
 537 0076 9342     		cmp	r3, r2
 538 0078 02DD     		ble	.L13
 156:main.c        ****         //set flag for white light detected
 157:main.c        ****         lightDetectedFront[2] = 1;
 539              		.loc 1 157 0
 540 007a 164B     		ldr	r3, .L19+4
 541 007c 0122     		movs	r2, #1
 542 007e 9A60     		str	r2, [r3, #8]
 543              	.L13:
 158:main.c        ****         }
 159:main.c        ****         
 160:main.c        ****         if (valueQ1 >= 2211) {
 544              		.loc 1 160 0
 545 0080 B7F90830 		ldrsh	r3, [r7, #8]
 546 0084 40F6A202 		movw	r2, #2210
 547 0088 9342     		cmp	r3, r2
 548 008a 02DD     		ble	.L14
 161:main.c        ****         //set flag for white light detected
 162:main.c        ****             lightDetectedBack[1] = 1;
 549              		.loc 1 162 0
 550 008c 124B     		ldr	r3, .L19+8
 551 008e 0122     		movs	r2, #1
 552 0090 5A60     		str	r2, [r3, #4]
 553              	.L14:
 163:main.c        ****         }
 164:main.c        ****         
 165:main.c        ****         if (valueQ2 >= 2211) {
 554              		.loc 1 165 0
 555 0092 B7F90630 		ldrsh	r3, [r7, #6]
 556 0096 40F6A202 		movw	r2, #2210
 557 009a 9342     		cmp	r3, r2
 558 009c 02DD     		ble	.L15
 166:main.c        ****         //set flag for white light detected
 167:main.c        ****             lightDetectedBack[2] = 1;
 559              		.loc 1 167 0
 560 009e 0E4B     		ldr	r3, .L19+8
 561 00a0 0122     		movs	r2, #1
 562 00a2 9A60     		str	r2, [r3, #8]
 563              	.L15:
 168:main.c        ****         }
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 14


 169:main.c        ****                 
 170:main.c        ****                 
 171:main.c        ****         if (valueQ6 >= 2211) {
 564              		.loc 1 171 0
 565 00a4 B7F90430 		ldrsh	r3, [r7, #4]
 566 00a8 40F6A202 		movw	r2, #2210
 567 00ac 9342     		cmp	r3, r2
 568 00ae 02DD     		ble	.L16
 172:main.c        ****         //set flag for white light detected
 173:main.c        ****             lightDetectedBack[0] = 1;
 569              		.loc 1 173 0
 570 00b0 094B     		ldr	r3, .L19+8
 571 00b2 0122     		movs	r2, #1
 572 00b4 1A60     		str	r2, [r3]
 573              	.L16:
 174:main.c        ****         }
 175:main.c        ****         
 176:main.c        ****         counteoc++;
 574              		.loc 1 176 0
 575 00b6 064B     		ldr	r3, .L19
 576 00b8 1B68     		ldr	r3, [r3]
 577 00ba 0133     		adds	r3, r3, #1
 578 00bc 044A     		ldr	r2, .L19
 579 00be 1360     		str	r3, [r2]
 580              	.LBE2:
 177:main.c        ****     } else {
 178:main.c        ****         processSensors = 1;   
 179:main.c        ****        
 180:main.c        ****     }
 181:main.c        ****     /* `#END` */
 182:main.c        **** }
 581              		.loc 1 182 0
 582 00c0 02E0     		b	.L18
 583              	.L10:
 178:main.c        ****        
 584              		.loc 1 178 0
 585 00c2 064B     		ldr	r3, .L19+12
 586 00c4 0122     		movs	r2, #1
 587 00c6 1A60     		str	r2, [r3]
 588              	.L18:
 589              		.loc 1 182 0
 590 00c8 00BF     		nop
 591 00ca 1037     		adds	r7, r7, #16
 592              		.cfi_def_cfa_offset 8
 593 00cc BD46     		mov	sp, r7
 594              		.cfi_def_cfa_register 13
 595              		@ sp needed
 596 00ce 80BD     		pop	{r7, pc}
 597              	.L20:
 598              		.align	2
 599              	.L19:
 600 00d0 00000000 		.word	counteoc
 601 00d4 00000000 		.word	lightDetectedFront
 602 00d8 00000000 		.word	lightDetectedBack
 603 00dc 00000000 		.word	processSensors
 604              		.cfi_endproc
 605              	.LFE72:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 15


 606              		.size	isr_eoc_Interrupt_test, .-isr_eoc_Interrupt_test
 607              		.bss
 608              	count:
 609 0044 00       		.space	1
 610              		.section	.text.isr_motor_interrupt_speed,"ax",%progbits
 611              		.align	2
 612              		.global	isr_motor_interrupt_speed
 613              		.thumb
 614              		.thumb_func
 615              		.type	isr_motor_interrupt_speed, %function
 616              	isr_motor_interrupt_speed:
 617              	.LFB73:
 183:main.c        **** // NEED TO INCREASE/DECREASE SPEED TOO
 184:main.c        **** // AND IMPLEMENT LIGHT SENSOR THINGS
 185:main.c        **** volatile static int8 count;
 186:main.c        **** CY_ISR(isr_motor_interrupt_speed)
 187:main.c        **** {
 618              		.loc 1 187 0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 0
 621              		@ frame_needed = 1, uses_anonymous_args = 0
 622              		@ link register save eliminated.
 623 0000 80B4     		push	{r7}
 624              		.cfi_def_cfa_offset 4
 625              		.cfi_offset 7, -4
 626 0002 00AF     		add	r7, sp, #0
 627              		.cfi_def_cfa_register 7
 188:main.c        ****     #ifdef isr_motor_INTERRUPT_INTERRUPT_CALLBACK
 189:main.c        ****         isr_motor_Interrupt_InterruptCallback();
 190:main.c        ****     #endif /* isr_motor_INTERRUPT_INTERRUPT_CALLBACK */ 
 191:main.c        **** 
 192:main.c        ****     /*  Place your Interrupt code here. */
 193:main.c        ****     /* `#START isr_motor_Interrupt` */
 194:main.c        ****       /*int16 currCountMotor2 = QuadDec_M2_GetCounter();
 195:main.c        ****       int16 currCountMotor1 = QuadDec_M1_GetCounter();  
 196:main.c        ****       
 197:main.c        ****      speedMotor1 = (currCountMotor1 - prevcountMotor1) / 0.2;
 198:main.c        ****      speedMotor2 = (currCountMotor2 - prevcountMotor2) / 0.2;
 199:main.c        ****     
 200:main.c        ****       prevcountMotor1 = currCountMotor1;
 201:main.c        ****       prevcountMotor2 = currCountMotor2;*/
 202:main.c        ****     
 203:main.c        ****     /* `#END` */
 204:main.c        **** }
 628              		.loc 1 204 0
 629 0004 00BF     		nop
 630 0006 BD46     		mov	sp, r7
 631              		.cfi_def_cfa_register 13
 632              		@ sp needed
 633 0008 80BC     		pop	{r7}
 634              		.cfi_restore 7
 635              		.cfi_def_cfa_offset 0
 636 000a 7047     		bx	lr
 637              		.cfi_endproc
 638              	.LFE73:
 639              		.size	isr_motor_interrupt_speed, .-isr_motor_interrupt_speed
 640              		.section	.rodata
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 16


 641              		.align	2
 642              	.LC0:
 643 0000 4D6F746F 		.ascii	"Motor 1 - start count: %d, end count: %d \012\000"
 643      72203120 
 643      2D207374 
 643      61727420 
 643      636F756E 
 644 002b 00       		.align	2
 645              	.LC1:
 646 002c 4D6F746F 		.ascii	"Motor 2 - start count: %d, end count: %d \012\000"
 646      72203220 
 646      2D207374 
 646      61727420 
 646      636F756E 
 647              		.section	.text.motorCount,"ax",%progbits
 648              		.align	2
 649              		.global	motorCount
 650              		.thumb
 651              		.thumb_func
 652              		.type	motorCount, %function
 653              	motorCount:
 654              	.LFB74:
 205:main.c        **** void motorCount(){
 655              		.loc 1 205 0
 656              		.cfi_startproc
 657              		@ args = 0, pretend = 0, frame = 20008
 658              		@ frame_needed = 1, uses_anonymous_args = 0
 659 0000 80B5     		push	{r7, lr}
 660              		.cfi_def_cfa_offset 8
 661              		.cfi_offset 7, -8
 662              		.cfi_offset 14, -4
 663 0002 ADF59C4D 		sub	sp, sp, #19968
 664              		.cfi_def_cfa_offset 19976
 665 0006 8AB0     		sub	sp, sp, #40
 666              		.cfi_def_cfa_offset 20016
 667 0008 00AF     		add	r7, sp, #0
 668              		.cfi_def_cfa_register 7
 206:main.c        ****     int16 beginningCountMotor1 = 0;
 669              		.loc 1 206 0
 670 000a 0023     		movs	r3, #0
 671 000c 07F59C42 		add	r2, r7, #19968
 672 0010 02F12602 		add	r2, r2, #38
 673 0014 1380     		strh	r3, [r2]	@ movhi
 207:main.c        ****     int16 beginningCountMotor2 = 0;
 674              		.loc 1 207 0
 675 0016 0023     		movs	r3, #0
 676 0018 07F59C42 		add	r2, r7, #19968
 677 001c 02F12402 		add	r2, r2, #36
 678 0020 1380     		strh	r3, [r2]	@ movhi
 208:main.c        ****     int16 endCountMotor2 = QuadDec_M2_GetCounter();
 679              		.loc 1 208 0
 680 0022 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 681 0026 0346     		mov	r3, r0
 682 0028 07F59C42 		add	r2, r7, #19968
 683 002c 02F12202 		add	r2, r2, #34
 684 0030 1380     		strh	r3, [r2]	@ movhi
 209:main.c        ****     int16 endCountMotor1 = QuadDec_M1_GetCounter();
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 17


 685              		.loc 1 209 0
 686 0032 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 687 0036 0346     		mov	r3, r0
 688 0038 07F59C42 		add	r2, r7, #19968
 689 003c 02F12002 		add	r2, r2, #32
 690 0040 1380     		strh	r3, [r2]	@ movhi
 210:main.c        ****     char motor1String[10000]; 
 211:main.c        ****     sprintf(motor1String,"Motor 1 - start count: %d, end count: %d \n", beginningCountMotor1, endCo
 691              		.loc 1 211 0
 692 0042 07F59C43 		add	r3, r7, #19968
 693 0046 03F12603 		add	r3, r3, #38
 694 004a B3F90020 		ldrsh	r2, [r3]
 695 004e 07F59C43 		add	r3, r7, #19968
 696 0052 03F12003 		add	r3, r3, #32
 697 0056 B3F90030 		ldrsh	r3, [r3]
 698 005a 07F51C50 		add	r0, r7, #9984
 699 005e 00F12800 		add	r0, r0, #40
 700 0062 1838     		subs	r0, r0, #24
 701 0064 1449     		ldr	r1, .L23
 702 0066 FFF7FEFF 		bl	sprintf
 212:main.c        ****     char motor2String[10000];
 213:main.c        ****     sprintf(motor2String,"Motor 2 - start count: %d, end count: %d \n", beginningCountMotor2 , endC
 703              		.loc 1 213 0
 704 006a 07F59C43 		add	r3, r7, #19968
 705 006e 03F12403 		add	r3, r3, #36
 706 0072 B3F90020 		ldrsh	r2, [r3]
 707 0076 07F59C43 		add	r3, r7, #19968
 708 007a 03F12203 		add	r3, r3, #34
 709 007e B3F90030 		ldrsh	r3, [r3]
 710 0082 07F12800 		add	r0, r7, #40
 711 0086 2838     		subs	r0, r0, #40
 712 0088 0C49     		ldr	r1, .L23+4
 713 008a FFF7FEFF 		bl	sprintf
 214:main.c        ****     
 215:main.c        ****     usbPutString(motor1String);
 714              		.loc 1 215 0
 715 008e 07F51C53 		add	r3, r7, #9984
 716 0092 03F12803 		add	r3, r3, #40
 717 0096 183B     		subs	r3, r3, #24
 718 0098 1846     		mov	r0, r3
 719 009a FFF7FEFF 		bl	usbPutString
 216:main.c        ****     usbPutString(motor2String);
 720              		.loc 1 216 0
 721 009e 07F12803 		add	r3, r7, #40
 722 00a2 283B     		subs	r3, r3, #40
 723 00a4 1846     		mov	r0, r3
 724 00a6 FFF7FEFF 		bl	usbPutString
 217:main.c        **** 
 218:main.c        **** }
 725              		.loc 1 218 0
 726 00aa 00BF     		nop
 727 00ac 07F59C47 		add	r7, r7, #19968
 728 00b0 2837     		adds	r7, r7, #40
 729              		.cfi_def_cfa_offset 8
 730 00b2 BD46     		mov	sp, r7
 731              		.cfi_def_cfa_register 13
 732              		@ sp needed
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 18


 733 00b4 80BD     		pop	{r7, pc}
 734              	.L24:
 735 00b6 00BF     		.align	2
 736              	.L23:
 737 00b8 00000000 		.word	.LC0
 738 00bc 2C000000 		.word	.LC1
 739              		.cfi_endproc
 740              	.LFE74:
 741              		.size	motorCount, .-motorCount
 742              		.section	.text.motorRun,"ax",%progbits
 743              		.align	2
 744              		.global	motorRun
 745              		.thumb
 746              		.thumb_func
 747              		.type	motorRun, %function
 748              	motorRun:
 749              	.LFB75:
 219:main.c        **** 
 220:main.c        **** void motorRun(int x){
 750              		.loc 1 220 0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 8
 753              		@ frame_needed = 1, uses_anonymous_args = 0
 754 0000 80B5     		push	{r7, lr}
 755              		.cfi_def_cfa_offset 8
 756              		.cfi_offset 7, -8
 757              		.cfi_offset 14, -4
 758 0002 82B0     		sub	sp, sp, #8
 759              		.cfi_def_cfa_offset 16
 760 0004 00AF     		add	r7, sp, #0
 761              		.cfi_def_cfa_register 7
 762 0006 7860     		str	r0, [r7, #4]
 221:main.c        ****     
 222:main.c        ****     
 223:main.c        ****     
 224:main.c        ****     //PWM_1_Start();
 225:main.c        ****     //PWM_2_Start();
 226:main.c        **** 
 227:main.c        **** 
 228:main.c        ****     //motorStop();
 229:main.c        ****     //CyDelay(time); // so we have time to set the robot up
 230:main.c        ****     motorSetSpeed(x);
 763              		.loc 1 230 0
 764 0008 7868     		ldr	r0, [r7, #4]
 765 000a FFF7FEFF 		bl	motorSetSpeed
 231:main.c        ****     //CyDelay(time);
 232:main.c        ****     motorStop();
 766              		.loc 1 232 0
 767 000e FFF7FEFF 		bl	motorStop
 233:main.c        ****     
 234:main.c        ****     //motorGoBackwards();
 235:main.c        **** 
 236:main.c        ****     
 237:main.c        ****     //CyDelay(2000);
 238:main.c        ****  
 239:main.c        ****     //motorStop();
 240:main.c        ****     //motorCount();//checks count per second.
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 19


 241:main.c        **** 
 242:main.c        ****     
 243:main.c        **** }
 768              		.loc 1 243 0
 769 0012 00BF     		nop
 770 0014 0837     		adds	r7, r7, #8
 771              		.cfi_def_cfa_offset 8
 772 0016 BD46     		mov	sp, r7
 773              		.cfi_def_cfa_register 13
 774              		@ sp needed
 775 0018 80BD     		pop	{r7, pc}
 776              		.cfi_endproc
 777              	.LFE75:
 778              		.size	motorRun, .-motorRun
 779 001a 00BF     		.section	.text.isr_TS_Interrupt_sample,"ax",%progbits
 780              		.align	2
 781              		.global	isr_TS_Interrupt_sample
 782              		.thumb
 783              		.thumb_func
 784              		.type	isr_TS_Interrupt_sample, %function
 785              	isr_TS_Interrupt_sample:
 786              	.LFB76:
 244:main.c        **** CY_ISR(isr_TS_Interrupt_sample)
 245:main.c        **** {
 787              		.loc 1 245 0
 788              		.cfi_startproc
 789              		@ args = 0, pretend = 0, frame = 0
 790              		@ frame_needed = 1, uses_anonymous_args = 0
 791 0000 80B5     		push	{r7, lr}
 792              		.cfi_def_cfa_offset 8
 793              		.cfi_offset 7, -8
 794              		.cfi_offset 14, -4
 795 0002 00AF     		add	r7, sp, #0
 796              		.cfi_def_cfa_register 7
 246:main.c        ****     #ifdef isr_TS_INTERRUPT_INTERRUPT_CALLBACK
 247:main.c        ****         isr_TS_Interrupt_InterruptCallback();
 248:main.c        ****     #endif /* isr_TS_INTERRUPT_INTERRUPT_CALLBACK */ 
 249:main.c        ****         ADC_StartConvert();
 797              		.loc 1 249 0
 798 0004 FFF7FEFF 		bl	ADC_StartConvert
 250:main.c        ****     /*  Place your Interrupt code here. */
 251:main.c        ****     /* `#START isr_TS_Interrupt` */
 252:main.c        **** 
 253:main.c        ****     /* `#END` */
 254:main.c        **** }
 799              		.loc 1 254 0
 800 0008 00BF     		nop
 801 000a 80BD     		pop	{r7, pc}
 802              		.cfi_endproc
 803              	.LFE76:
 804              		.size	isr_TS_Interrupt_sample, .-isr_TS_Interrupt_sample
 805              		.section	.text.main,"ax",%progbits
 806              		.align	2
 807              		.global	main
 808              		.thumb
 809              		.thumb_func
 810              		.type	main, %function
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 20


 811              	main:
 812              	.LFB77:
 255:main.c        **** 
 256:main.c        **** 
 257:main.c        **** int main()
 258:main.c        **** {
 813              		.loc 1 258 0
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 4040
 816              		@ frame_needed = 1, uses_anonymous_args = 0
 817 0000 80B5     		push	{r7, lr}
 818              		.cfi_def_cfa_offset 8
 819              		.cfi_offset 7, -8
 820              		.cfi_offset 14, -4
 821 0002 ADF6C87D 		subw	sp, sp, #4040
 822              		.cfi_def_cfa_offset 4048
 823 0006 00AF     		add	r7, sp, #0
 824              		.cfi_def_cfa_register 7
 259:main.c        ****     
 260:main.c        **** 
 261:main.c        **** // --------------------------------    
 262:main.c        **** // ----- INITIALIZATIONS ----------
 263:main.c        ****     CYGlobalIntEnable;
 825              		.loc 1 263 0
 826              		.syntax unified
 827              	@ 263 "main.c" 1
 828 0008 62B6     		CPSIE   i
 829              	@ 0 "" 2
 264:main.c        ****     count  = 0;
 830              		.loc 1 264 0
 831              		.thumb
 832              		.syntax unified
 833 000a 934B     		ldr	r3, .L52
 834 000c 0022     		movs	r2, #0
 835 000e 1A70     		strb	r2, [r3]
 265:main.c        ****     
 266:main.c        ****     ADC_Start();
 836              		.loc 1 266 0
 837 0010 FFF7FEFF 		bl	ADC_Start
 267:main.c        ****     Timer_TS_Start();
 838              		.loc 1 267 0
 839 0014 FFF7FEFF 		bl	Timer_TS_Start
 268:main.c        ****     Timer_Motor_Start();
 840              		.loc 1 268 0
 841 0018 FFF7FEFF 		bl	Timer_Motor_Start
 269:main.c        ****     QuadDec_M1_Start();
 842              		.loc 1 269 0
 843 001c FFF7FEFF 		bl	QuadDec_M1_Start
 270:main.c        ****     QuadDec_M2_Start(); //init the quadencoder,
 844              		.loc 1 270 0
 845 0020 FFF7FEFF 		bl	QuadDec_M2_Start
 271:main.c        ****     //isr_motor_StartEx(isr_motor_interrupt_speed);
 272:main.c        ****     
 273:main.c        ****     isr_TS_StartEx(isr_TS_Interrupt_sample);
 846              		.loc 1 273 0
 847 0024 8D48     		ldr	r0, .L52+4
 848 0026 FFF7FEFF 		bl	isr_TS_StartEx
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 21


 274:main.c        ****     isr_eoc_StartEx(isr_eoc_Interrupt_test);
 849              		.loc 1 274 0
 850 002a 8D48     		ldr	r0, .L52+8
 851 002c FFF7FEFF 		bl	isr_eoc_StartEx
 275:main.c        ****     
 276:main.c        ****     
 277:main.c        ****     //ADC_StartConvert();
 278:main.c        ****     
 279:main.c        ****     PWM_1_Start();
 852              		.loc 1 279 0
 853 0030 FFF7FEFF 		bl	PWM_1_Start
 280:main.c        ****     PWM_2_Start();
 854              		.loc 1 280 0
 855 0034 FFF7FEFF 		bl	PWM_2_Start
 281:main.c        ****     LED_Write(0);
 856              		.loc 1 281 0
 857 0038 0020     		movs	r0, #0
 858 003a FFF7FEFF 		bl	LED_Write
 282:main.c        ****     motorStop();
 859              		.loc 1 282 0
 860 003e FFF7FEFF 		bl	motorStop
 283:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION)   ; 
 861              		.loc 1 283 0
 862 0042 0121     		movs	r1, #1
 863 0044 0020     		movs	r0, #0
 864 0046 FFF7FEFF 		bl	USBUART_Start
 284:main.c        ****     ////////////////////////////////
 285:main.c        ****     
 286:main.c        ****     // Speed//
 287:main.c        ****     //int speed = -33;
 288:main.c        ****     //int time = 2000;
 289:main.c        ****    // motorRun(speed,time);
 290:main.c        **** 
 291:main.c        ****     /////////////////////////////////////////////
 292:main.c        ****     int lastState=0;
 865              		.loc 1 292 0
 866 004a 0023     		movs	r3, #0
 867 004c C7F8B83F 		str	r3, [r7, #4024]
 293:main.c        ****     //usbPutString(displaystring);
 294:main.c        ****      //87cm motor 1 945, motor2 -958. 2seconds.
 295:main.c        ****     //10.8 counts per cm for distance.
 296:main.c        ****    //for speed,43.5cm/s 
 297:main.c        ****     
 298:main.c        **** //    
 299:main.c        **** // ----------      //distance ---------
 300:main.c        ****  int travelDis = 1740;//10.8 * travelDis
 868              		.loc 1 300 0
 869 0050 40F2CC63 		movw	r3, #1740
 870 0054 C7F8B43F 		str	r3, [r7, #4020]
 301:main.c        ****     /*
 302:main.c        ****   while(QuadDec_M1_GetCounter()<travelDis){
 303:main.c        ****         if (processSensors == 1) {
 304:main.c        ****     
 305:main.c        ****             int operation = convertSensorBinary();
 306:main.c        ****             
 307:main.c        ****     
 308:main.c        ****             switch(operation){
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 22


 309:main.c        ****                 case 3:// 0 1 1 // Q3 under black
 310:main.c        ****                     motorTurnLeft(50);//decrease go fast used to be 50 by 6
 311:main.c        ****                     LED_Write(1);
 312:main.c        ****                     break;    
 313:main.c        ****                     
 314:main.c        ****                 case 6:// 1 1 0 // Q5 under black  
 315:main.c        ****                     motorTurnRight(200);//increase 200 by 6
 316:main.c        ****                     LED_Write(1);
 317:main.c        ****                     break;
 318:main.c        ****                     
 319:main.c        ****                 case 5:// 101 // Q4 under black
 320:main.c        ****                     motorSetSpeed(-7); //-40 is original
 321:main.c        ****                     LED_Write(0);
 322:main.c        ****                     break;
 323:main.c        ****             }
 324:main.c        ****             
 325:main.c        ****              processSensors = 0;
 326:main.c        ****             //reset counter
 327:main.c        **** 
 328:main.c        ****             counteoc = 0;
 329:main.c        ****             //reset flags for lightsensors because it checks every 10 iterations, adds delay/
 330:main.c        ****             lightDetectedFront[0] = 0;
 331:main.c        ****             lightDetectedFront[1] = 0;
 332:main.c        ****             lightDetectedFront[2] = 0;
 333:main.c        ****             lightDetectedBack[0] = 0;
 334:main.c        ****             lightDetectedBack[1] = 0;
 335:main.c        ****             lightDetectedBack[2] = 0;
 336:main.c        ****           
 337:main.c        ****             
 338:main.c        ****     
 339:main.c        ****         }
 340:main.c        ****     }
 341:main.c        ****     motorStop();
 342:main.c        ****     motorCount();
 343:main.c        ****     
 344:main.c        ****     /// ---------End here----------
 345:main.c        ****     
 346:main.c        ****     
 347:main.c        ****         
 348:main.c        ****    
 349:main.c        ****     
 350:main.c        ****     */
 351:main.c        ****     int decisionflag =0;
 871              		.loc 1 351 0
 872 0058 0023     		movs	r3, #0
 873 005a C7F8C43F 		str	r3, [r7, #4036]
 352:main.c        ****     
 353:main.c        ****     // 0 go straight
 354:main.c        ****     // 1 go right
 355:main.c        ****     //5 is die
 356:main.c        ****     
 357:main.c        ****     int queue[1000] = {5};
 874              		.loc 1 357 0
 875 005e 3B1D     		adds	r3, r7, #4
 876 0060 1846     		mov	r0, r3
 877 0062 4FF47A63 		mov	r3, #4000
 878 0066 1A46     		mov	r2, r3
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 23


 879 0068 0021     		movs	r1, #0
 880 006a FFF7FEFF 		bl	memset
 881 006e 3B1D     		adds	r3, r7, #4
 882 0070 0522     		movs	r2, #5
 883 0072 1A60     		str	r2, [r3]
 358:main.c        ****     int indexPointer = 0;
 884              		.loc 1 358 0
 885 0074 0023     		movs	r3, #0
 886 0076 C7F8C03F 		str	r3, [r7, #4032]
 359:main.c        ****     int queueSize = 1;
 887              		.loc 1 359 0
 888 007a 0123     		movs	r3, #1
 889 007c C7F8B03F 		str	r3, [r7, #4016]
 360:main.c        ****     int motoerFlagSTOP=0;
 890              		.loc 1 360 0
 891 0080 0023     		movs	r3, #0
 892 0082 C7F8BC3F 		str	r3, [r7, #4028]
 893              	.L50:
 361:main.c        ****             
 362:main.c        ****     
 363:main.c        ****    ///////////////////////////////////////// LINE TRACKING////////
 364:main.c        ****     
 365:main.c        ****     while(1)
 366:main.c        ****     {
 367:main.c        ****         /* Place your application code here. */
 368:main.c        ****        
 369:main.c        ****         if (processSensors == 1) {
 894              		.loc 1 369 0
 895 0086 774B     		ldr	r3, .L52+12
 896 0088 1B68     		ldr	r3, [r3]
 897 008a 012B     		cmp	r3, #1
 898 008c FBD1     		bne	.L50
 899              	.LBB3:
 370:main.c        ****             CYGlobalIntDisable;
 900              		.loc 1 370 0
 901              		.syntax unified
 902              	@ 370 "main.c" 1
 903 008e 72B6     		CPSID   i
 904              	@ 0 "" 2
 371:main.c        ****                    
 372:main.c        ****             int operation = convertSensorBinary();
 905              		.loc 1 372 0
 906              		.thumb
 907              		.syntax unified
 908 0090 FFF7FEFF 		bl	convertSensorBinary
 909 0094 C7F8AC0F 		str	r0, [r7, #4012]
 373:main.c        ****             int backOps = convertBackBinary();
 910              		.loc 1 373 0
 911 0098 FFF7FEFF 		bl	convertBackBinary
 912 009c C7F8A80F 		str	r0, [r7, #4008]
 374:main.c        **** 
 375:main.c        ****                 switch(operation){
 913              		.loc 1 375 0
 914 00a0 D7F8AC3F 		ldr	r3, [r7, #4012]
 915 00a4 072B     		cmp	r3, #7
 916 00a6 50D8     		bhi	.L29
 917 00a8 01A2     		adr	r2, .L31
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 24


 918 00aa 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 919 00ae 00BF     		.p2align 2
 920              	.L31:
 921 00b0 25010000 		.word	.L30+1
 922 00b4 31010000 		.word	.L32+1
 923 00b8 4B010000 		.word	.L29+1
 924 00bc FD000000 		.word	.L33+1
 925 00c0 3D010000 		.word	.L34+1
 926 00c4 19010000 		.word	.L35+1
 927 00c8 0B010000 		.word	.L36+1
 928 00cc D1000000 		.word	.L37+1
 929              		.p2align 1
 930              	.L37:
 376:main.c        ****                 //where 1 is on white, 0 is on black.
 377:main.c        ****                     
 378:main.c        ****                     case 7: // 111 // all under white\\
 379:main.c        ****                         
 380:main.c        ****                     
 381:main.c        ****                   
 382:main.c        ****                             if(backOps == 7){
 931              		.loc 1 382 0
 932 00d0 D7F8A83F 		ldr	r3, [r7, #4008]
 933 00d4 072B     		cmp	r3, #7
 934 00d6 0AD1     		bne	.L38
 383:main.c        ****                                 
 384:main.c        ****                                 if (motoerFlagSTOP==1){
 935              		.loc 1 384 0
 936 00d8 D7F8BC3F 		ldr	r3, [r7, #4028]
 937 00dc 012B     		cmp	r3, #1
 938 00de 02D1     		bne	.L39
 385:main.c        ****                                     motorStop();
 939              		.loc 1 385 0
 940 00e0 FFF7FEFF 		bl	motorStop
 386:main.c        ****                                 }
 387:main.c        ****                                 else{
 388:main.c        ****                                 motorCircle(40);
 389:main.c        ****                                 }
 390:main.c        ****                             }
 391:main.c        ****                             
 392:main.c        ****                         
 393:main.c        ****                             else if(backOps <= 5){
 394:main.c        ****                                 motorGoStraight();
 395:main.c        ****                             }   
 396:main.c        ****                             break;
 941              		.loc 1 396 0
 942 00e4 30E0     		b	.L51
 943              	.L39:
 388:main.c        ****                                 }
 944              		.loc 1 388 0
 945 00e6 2820     		movs	r0, #40
 946 00e8 FFF7FEFF 		bl	motorCircle
 947              		.loc 1 396 0
 948 00ec 2CE0     		b	.L51
 949              	.L38:
 393:main.c        ****                                 motorGoStraight();
 950              		.loc 1 393 0
 951 00ee D7F8A83F 		ldr	r3, [r7, #4008]
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 25


 952 00f2 052B     		cmp	r3, #5
 953 00f4 28DC     		bgt	.L51
 394:main.c        ****                             }   
 954              		.loc 1 394 0
 955 00f6 FFF7FEFF 		bl	motorGoStraight
 956              		.loc 1 396 0
 957 00fa 25E0     		b	.L51
 958              	.L33:
 397:main.c        ****                         
 398:main.c        ****                     case 3:// 0 1 1 // Q3 under black
 399:main.c        ****                         motorTurnLeft(70);//decrease go fast used to be 50 by 6
 959              		.loc 1 399 0
 960 00fc 4620     		movs	r0, #70
 961 00fe FFF7FEFF 		bl	motorTurnLeft
 400:main.c        ****                         LED_Write(1);
 962              		.loc 1 400 0
 963 0102 0120     		movs	r0, #1
 964 0104 FFF7FEFF 		bl	LED_Write
 401:main.c        ****                         break;    
 965              		.loc 1 401 0
 966 0108 1FE0     		b	.L29
 967              	.L36:
 402:main.c        ****                         
 403:main.c        ****                     case 6:// 1 1 0 // Q5 under black  
 404:main.c        ****                         motorTurnRight(180);//increase 200 by 6``
 968              		.loc 1 404 0
 969 010a B420     		movs	r0, #180
 970 010c FFF7FEFF 		bl	motorTurnRight
 405:main.c        ****                         LED_Write(1);
 971              		.loc 1 405 0
 972 0110 0120     		movs	r0, #1
 973 0112 FFF7FEFF 		bl	LED_Write
 406:main.c        ****                         break;
 974              		.loc 1 406 0
 975 0116 18E0     		b	.L29
 976              	.L35:
 407:main.c        ****                         
 408:main.c        ****                     case 5:// 101 // Q4 under black
 409:main.c        ****                         motorGoStraight();
 977              		.loc 1 409 0
 978 0118 FFF7FEFF 		bl	motorGoStraight
 410:main.c        ****                         LED_Write(0);
 979              		.loc 1 410 0
 980 011c 0020     		movs	r0, #0
 981 011e FFF7FEFF 		bl	LED_Write
 411:main.c        ****                         break;
 982              		.loc 1 411 0
 983 0122 12E0     		b	.L29
 984              	.L30:
 412:main.c        ****                     
 413:main.c        ****                     case 0:  // 000 // ALL UNDER black
 414:main.c        ****                         motorStop();
 985              		.loc 1 414 0
 986 0124 FFF7FEFF 		bl	motorStop
 415:main.c        ****                         decisionflag = 1;
 987              		.loc 1 415 0
 988 0128 0123     		movs	r3, #1
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 26


 989 012a C7F8C43F 		str	r3, [r7, #4036]
 416:main.c        ****                         break;
 990              		.loc 1 416 0
 991 012e 0CE0     		b	.L29
 992              	.L32:
 417:main.c        ****                     case 1: // 001 --> left intersection # 65 turn for 500s
 418:main.c        ****                         //lastState=1;
 419:main.c        ****                         motorStop();
 993              		.loc 1 419 0
 994 0130 FFF7FEFF 		bl	motorStop
 420:main.c        ****                         decisionflag = 1;
 995              		.loc 1 420 0
 996 0134 0123     		movs	r3, #1
 997 0136 C7F8C43F 		str	r3, [r7, #4036]
 421:main.c        ****                         break;
 998              		.loc 1 421 0
 999 013a 06E0     		b	.L29
 1000              	.L34:
 422:main.c        ****                     case 4: // 100 --> right intersection #180 turn for 500s
 423:main.c        ****                        // lastState=2;
 424:main.c        ****                         motorStop();
 1001              		.loc 1 424 0
 1002 013c FFF7FEFF 		bl	motorStop
 425:main.c        ****                         decisionflag = 1;
 1003              		.loc 1 425 0
 1004 0140 0123     		movs	r3, #1
 1005 0142 C7F8C43F 		str	r3, [r7, #4036]
 426:main.c        ****                         break;
 1006              		.loc 1 426 0
 1007 0146 00E0     		b	.L29
 1008              	.L51:
 396:main.c        ****                         
 1009              		.loc 1 396 0
 1010 0148 00BF     		nop
 1011              	.L29:
 427:main.c        ****                         
 428:main.c        ****                     
 429:main.c        ****                    
 430:main.c        ****                 
 431:main.c        ****                 }
 432:main.c        ****                 
 433:main.c        ****                 
 434:main.c        ****                 
 435:main.c        ****                 
 436:main.c        ****                 //make decision at intersection 
 437:main.c        ****                 if ((decisionflag == 1) && (motoerFlagSTOP == 0)){
 1012              		.loc 1 437 0
 1013 014a D7F8C43F 		ldr	r3, [r7, #4036]
 1014 014e 012B     		cmp	r3, #1
 1015 0150 68D1     		bne	.L42
 1016              		.loc 1 437 0 is_stmt 0 discriminator 1
 1017 0152 D7F8BC3F 		ldr	r3, [r7, #4028]
 1018 0156 002B     		cmp	r3, #0
 1019 0158 64D1     		bne	.L42
 1020              	.LBB4:
 438:main.c        ****                     //CYGlobalIntDisable;
 439:main.c        ****         
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 27


 440:main.c        ****                     
 441:main.c        ****                     //get overall size of array
 442:main.c        ****                     
 443:main.c        ****                     //0 - left, 1 -straight, 2 - right 
 444:main.c        ****                     
 445:main.c        ****                     int decision = queue[indexPointer];
 1021              		.loc 1 445 0 is_stmt 1
 1022 015a 3B1D     		adds	r3, r7, #4
 1023 015c D7F8C02F 		ldr	r2, [r7, #4032]
 1024 0160 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1025 0164 C7F8A43F 		str	r3, [r7, #4004]
 446:main.c        ****                     
 447:main.c        ****                     switch(decision) {
 1026              		.loc 1 447 0
 1027 0168 D7F8A43F 		ldr	r3, [r7, #4004]
 1028 016c 052B     		cmp	r3, #5
 1029 016e 45D8     		bhi	.L43
 1030 0170 01A2     		adr	r2, .L45
 1031 0172 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1032 0176 00BF     		.p2align 2
 1033              	.L45:
 1034 0178 91010000 		.word	.L44+1
 1035 017c AD010000 		.word	.L46+1
 1036 0180 C7010000 		.word	.L47+1
 1037 0184 FD010000 		.word	.L43+1
 1038 0188 FD010000 		.word	.L43+1
 1039 018c E3010000 		.word	.L48+1
 1040              		.p2align 1
 1041              	.L44:
 448:main.c        ****                       case 0:
 449:main.c        ****                         //turn left
 450:main.c        ****                         motorStop();
 1042              		.loc 1 450 0
 1043 0190 FFF7FEFF 		bl	motorStop
 451:main.c        ****                         CyDelay(400);
 1044              		.loc 1 451 0
 1045 0194 4FF4C870 		mov	r0, #400
 1046 0198 FFF7FEFF 		bl	CyDelay
 452:main.c        ****                         motorTurnLeft(65);
 1047              		.loc 1 452 0
 1048 019c 4120     		movs	r0, #65
 1049 019e FFF7FEFF 		bl	motorTurnLeft
 453:main.c        ****                         CyDelay(500);
 1050              		.loc 1 453 0
 1051 01a2 4FF4FA70 		mov	r0, #500
 1052 01a6 FFF7FEFF 		bl	CyDelay
 454:main.c        ****                         
 455:main.c        ****                         break;
 1053              		.loc 1 455 0
 1054 01aa 27E0     		b	.L43
 1055              	.L46:
 456:main.c        ****                       case 1:
 457:main.c        ****                         //go straight
 458:main.c        ****                         motorStop();
 1056              		.loc 1 458 0
 1057 01ac FFF7FEFF 		bl	motorStop
 459:main.c        ****                         CyDelay(400);
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 28


 1058              		.loc 1 459 0
 1059 01b0 4FF4C870 		mov	r0, #400
 1060 01b4 FFF7FEFF 		bl	CyDelay
 460:main.c        ****                         motorGoStraight();
 1061              		.loc 1 460 0
 1062 01b8 FFF7FEFF 		bl	motorGoStraight
 461:main.c        ****                         CyDelay(400);
 1063              		.loc 1 461 0
 1064 01bc 4FF4C870 		mov	r0, #400
 1065 01c0 FFF7FEFF 		bl	CyDelay
 462:main.c        ****                         
 463:main.c        ****                         break;
 1066              		.loc 1 463 0
 1067 01c4 1AE0     		b	.L43
 1068              	.L47:
 464:main.c        ****                       case 2:
 465:main.c        ****                         //turn right
 466:main.c        ****                         motorStop();
 1069              		.loc 1 466 0
 1070 01c6 FFF7FEFF 		bl	motorStop
 467:main.c        ****                         CyDelay(400);
 1071              		.loc 1 467 0
 1072 01ca 4FF4C870 		mov	r0, #400
 1073 01ce FFF7FEFF 		bl	CyDelay
 468:main.c        ****                         motorTurnRight(180);
 1074              		.loc 1 468 0
 1075 01d2 B420     		movs	r0, #180
 1076 01d4 FFF7FEFF 		bl	motorTurnRight
 469:main.c        ****                         CyDelay(500);
 1077              		.loc 1 469 0
 1078 01d8 4FF4FA70 		mov	r0, #500
 1079 01dc FFF7FEFF 		bl	CyDelay
 470:main.c        ****                         
 471:main.c        ****                         break;
 1080              		.loc 1 471 0
 1081 01e0 0CE0     		b	.L43
 1082              	.L48:
 472:main.c        ****                         
 473:main.c        ****                         case 5:
 474:main.c        ****                         motorStop();
 1083              		.loc 1 474 0
 1084 01e2 FFF7FEFF 		bl	motorStop
 475:main.c        ****                         CyDelay(400);
 1085              		.loc 1 475 0
 1086 01e6 4FF4C870 		mov	r0, #400
 1087 01ea FFF7FEFF 		bl	CyDelay
 476:main.c        ****                         motorBeyblade(170);
 1088              		.loc 1 476 0
 1089 01ee AA20     		movs	r0, #170
 1090 01f0 FFF7FEFF 		bl	motorBeyblade
 477:main.c        ****                         CyDelay(800);
 1091              		.loc 1 477 0
 1092 01f4 4FF44870 		mov	r0, #800
 1093 01f8 FFF7FEFF 		bl	CyDelay
 1094              	.L43:
 478:main.c        ****                     }
 479:main.c        ****                     
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 29


 480:main.c        ****                     indexPointer++;
 1095              		.loc 1 480 0
 1096 01fc D7F8C03F 		ldr	r3, [r7, #4032]
 1097 0200 0133     		adds	r3, r3, #1
 1098 0202 C7F8C03F 		str	r3, [r7, #4032]
 481:main.c        ****                     
 482:main.c        ****                     if (indexPointer+1 > queueSize ) {
 1099              		.loc 1 482 0
 1100 0206 D7F8C03F 		ldr	r3, [r7, #4032]
 1101 020a 5A1C     		adds	r2, r3, #1
 1102 020c D7F8B03F 		ldr	r3, [r7, #4016]
 1103 0210 9A42     		cmp	r2, r3
 1104 0212 04DD     		ble	.L49
 483:main.c        ****                         motorStop();
 1105              		.loc 1 483 0
 1106 0214 FFF7FEFF 		bl	motorStop
 484:main.c        ****                         motoerFlagSTOP = 1;
 1107              		.loc 1 484 0
 1108 0218 0123     		movs	r3, #1
 1109 021a C7F8BC3F 		str	r3, [r7, #4028]
 1110              	.L49:
 485:main.c        ****                         //while(1){};   
 486:main.c        ****                     }
 487:main.c        ****                     
 488:main.c        ****                     //reset decision
 489:main.c        ****                     decisionflag = 0;
 1111              		.loc 1 489 0
 1112 021e 0023     		movs	r3, #0
 1113 0220 C7F8C43F 		str	r3, [r7, #4036]
 1114              	.L42:
 1115              	.LBE4:
 490:main.c        ****         
 491:main.c        ****                 
 492:main.c        ****            //renable interrupt
 493:main.c        ****                 //CYGlobalIntEnable;
 494:main.c        ****             }
 495:main.c        ****             //reset variable.
 496:main.c        ****             processSensors = 0;
 1116              		.loc 1 496 0
 1117 0224 0F4B     		ldr	r3, .L52+12
 1118 0226 0022     		movs	r2, #0
 1119 0228 1A60     		str	r2, [r3]
 497:main.c        ****             //reset counter
 498:main.c        **** 
 499:main.c        ****              counteoc = 0;
 1120              		.loc 1 499 0
 1121 022a 0F4B     		ldr	r3, .L52+16
 1122 022c 0022     		movs	r2, #0
 1123 022e 1A60     		str	r2, [r3]
 500:main.c        ****             //reset flags for lightsensors because it checks every 10 iterations, adds delay/
 501:main.c        ****             lightDetectedFront[0] = 0;
 1124              		.loc 1 501 0
 1125 0230 0E4B     		ldr	r3, .L52+20
 1126 0232 0022     		movs	r2, #0
 1127 0234 1A60     		str	r2, [r3]
 502:main.c        ****             lightDetectedFront[1] = 0;
 1128              		.loc 1 502 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 30


 1129 0236 0D4B     		ldr	r3, .L52+20
 1130 0238 0022     		movs	r2, #0
 1131 023a 5A60     		str	r2, [r3, #4]
 503:main.c        ****             lightDetectedFront[2] = 0;
 1132              		.loc 1 503 0
 1133 023c 0B4B     		ldr	r3, .L52+20
 1134 023e 0022     		movs	r2, #0
 1135 0240 9A60     		str	r2, [r3, #8]
 504:main.c        ****             lightDetectedBack[0] = 0;
 1136              		.loc 1 504 0
 1137 0242 0B4B     		ldr	r3, .L52+24
 1138 0244 0022     		movs	r2, #0
 1139 0246 1A60     		str	r2, [r3]
 505:main.c        ****             lightDetectedBack[1] = 0;
 1140              		.loc 1 505 0
 1141 0248 094B     		ldr	r3, .L52+24
 1142 024a 0022     		movs	r2, #0
 1143 024c 5A60     		str	r2, [r3, #4]
 506:main.c        ****             lightDetectedBack[2] = 0;
 1144              		.loc 1 506 0
 1145 024e 084B     		ldr	r3, .L52+24
 1146 0250 0022     		movs	r2, #0
 1147 0252 9A60     		str	r2, [r3, #8]
 507:main.c        ****             
 508:main.c        ****             CYGlobalIntEnable;
 1148              		.loc 1 508 0
 1149              		.syntax unified
 1150              	@ 508 "main.c" 1
 1151 0254 62B6     		CPSIE   i
 1152              	@ 0 "" 2
 1153              		.thumb
 1154              		.syntax unified
 1155              	.LBE3:
 509:main.c        ****           
 510:main.c        ****         }
 511:main.c        ****         
 512:main.c        ****         
 513:main.c        ****     }   
 1156              		.loc 1 513 0
 1157 0256 16E7     		b	.L50
 1158              	.L53:
 1159              		.align	2
 1160              	.L52:
 1161 0258 44000000 		.word	count
 1162 025c 00000000 		.word	isr_TS_Interrupt_sample
 1163 0260 00000000 		.word	isr_eoc_Interrupt_test
 1164 0264 00000000 		.word	processSensors
 1165 0268 00000000 		.word	counteoc
 1166 026c 00000000 		.word	lightDetectedFront
 1167 0270 00000000 		.word	lightDetectedBack
 1168              		.cfi_endproc
 1169              	.LFE77:
 1170              		.size	main, .-main
 1171              		.section	.text.convertBackBinary,"ax",%progbits
 1172              		.align	2
 1173              		.global	convertBackBinary
 1174              		.thumb
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 31


 1175              		.thumb_func
 1176              		.type	convertBackBinary, %function
 1177              	convertBackBinary:
 1178              	.LFB78:
 514:main.c        ****     
 515:main.c        **** //////////////////////////////////////
 516:main.c        **** }
 517:main.c        **** 
 518:main.c        ****   
 519:main.c        **** 
 520:main.c        **** int convertBackBinary(){
 1179              		.loc 1 520 0
 1180              		.cfi_startproc
 1181              		@ args = 0, pretend = 0, frame = 16
 1182              		@ frame_needed = 1, uses_anonymous_args = 0
 1183              		@ link register save eliminated.
 1184 0000 80B4     		push	{r7}
 1185              		.cfi_def_cfa_offset 4
 1186              		.cfi_offset 7, -4
 1187 0002 85B0     		sub	sp, sp, #20
 1188              		.cfi_def_cfa_offset 24
 1189 0004 00AF     		add	r7, sp, #0
 1190              		.cfi_def_cfa_register 7
 521:main.c        **** 
 522:main.c        ****     int value1=0;
 1191              		.loc 1 522 0
 1192 0006 0023     		movs	r3, #0
 1193 0008 FB60     		str	r3, [r7, #12]
 523:main.c        ****     int Q1 = lightDetectedBack[1] ;
 1194              		.loc 1 523 0
 1195 000a 104B     		ldr	r3, .L56
 1196 000c 5B68     		ldr	r3, [r3, #4]
 1197 000e BB60     		str	r3, [r7, #8]
 524:main.c        ****     int Q2 = lightDetectedBack[2];
 1198              		.loc 1 524 0
 1199 0010 0E4B     		ldr	r3, .L56
 1200 0012 9B68     		ldr	r3, [r3, #8]
 1201 0014 7B60     		str	r3, [r7, #4]
 525:main.c        ****     int Q6 =lightDetectedBack[0];
 1202              		.loc 1 525 0
 1203 0016 0D4B     		ldr	r3, .L56
 1204 0018 1B68     		ldr	r3, [r3]
 1205 001a 3B60     		str	r3, [r7]
 526:main.c        ****     value1 =  value1 + lightDetectedBack[1] *2;
 1206              		.loc 1 526 0
 1207 001c 0B4B     		ldr	r3, .L56
 1208 001e 5B68     		ldr	r3, [r3, #4]
 1209 0020 5B00     		lsls	r3, r3, #1
 1210 0022 FA68     		ldr	r2, [r7, #12]
 1211 0024 1344     		add	r3, r3, r2
 1212 0026 FB60     		str	r3, [r7, #12]
 527:main.c        ****     value1 = value1 +  lightDetectedBack[2] *4;
 1213              		.loc 1 527 0
 1214 0028 084B     		ldr	r3, .L56
 1215 002a 9B68     		ldr	r3, [r3, #8]
 1216 002c 9B00     		lsls	r3, r3, #2
 1217 002e FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 32


 1218 0030 1344     		add	r3, r3, r2
 1219 0032 FB60     		str	r3, [r7, #12]
 528:main.c        ****     value1 = value1 + lightDetectedBack[0] *1;
 1220              		.loc 1 528 0
 1221 0034 054B     		ldr	r3, .L56
 1222 0036 1B68     		ldr	r3, [r3]
 1223 0038 FA68     		ldr	r2, [r7, #12]
 1224 003a 1344     		add	r3, r3, r2
 1225 003c FB60     		str	r3, [r7, #12]
 529:main.c        **** 
 530:main.c        ****     return value1;
 1226              		.loc 1 530 0
 1227 003e FB68     		ldr	r3, [r7, #12]
 531:main.c        **** 
 532:main.c        **** }
 1228              		.loc 1 532 0
 1229 0040 1846     		mov	r0, r3
 1230 0042 1437     		adds	r7, r7, #20
 1231              		.cfi_def_cfa_offset 4
 1232 0044 BD46     		mov	sp, r7
 1233              		.cfi_def_cfa_register 13
 1234              		@ sp needed
 1235 0046 80BC     		pop	{r7}
 1236              		.cfi_restore 7
 1237              		.cfi_def_cfa_offset 0
 1238 0048 7047     		bx	lr
 1239              	.L57:
 1240 004a 00BF     		.align	2
 1241              	.L56:
 1242 004c 00000000 		.word	lightDetectedBack
 1243              		.cfi_endproc
 1244              	.LFE78:
 1245              		.size	convertBackBinary, .-convertBackBinary
 1246              		.section	.text.convertSensorBinary,"ax",%progbits
 1247              		.align	2
 1248              		.global	convertSensorBinary
 1249              		.thumb
 1250              		.thumb_func
 1251              		.type	convertSensorBinary, %function
 1252              	convertSensorBinary:
 1253              	.LFB79:
 533:main.c        **** 
 534:main.c        **** int convertSensorBinary()
 535:main.c        **** {
 1254              		.loc 1 535 0
 1255              		.cfi_startproc
 1256              		@ args = 0, pretend = 0, frame = 16
 1257              		@ frame_needed = 1, uses_anonymous_args = 0
 1258              		@ link register save eliminated.
 1259 0000 80B4     		push	{r7}
 1260              		.cfi_def_cfa_offset 4
 1261              		.cfi_offset 7, -4
 1262 0002 85B0     		sub	sp, sp, #20
 1263              		.cfi_def_cfa_offset 24
 1264 0004 00AF     		add	r7, sp, #0
 1265              		.cfi_def_cfa_register 7
 536:main.c        ****    int value=0;
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 33


 1266              		.loc 1 536 0
 1267 0006 0023     		movs	r3, #0
 1268 0008 FB60     		str	r3, [r7, #12]
 537:main.c        ****   int Q3 = lightDetectedFront[0];
 1269              		.loc 1 537 0
 1270 000a 104B     		ldr	r3, .L60
 1271 000c 1B68     		ldr	r3, [r3]
 1272 000e BB60     		str	r3, [r7, #8]
 538:main.c        ****   int Q4 = lightDetectedFront[1];
 1273              		.loc 1 538 0
 1274 0010 0E4B     		ldr	r3, .L60
 1275 0012 5B68     		ldr	r3, [r3, #4]
 1276 0014 7B60     		str	r3, [r7, #4]
 539:main.c        ****    int Q5 = lightDetectedFront[2];
 1277              		.loc 1 539 0
 1278 0016 0D4B     		ldr	r3, .L60
 1279 0018 9B68     		ldr	r3, [r3, #8]
 1280 001a 3B60     		str	r3, [r7]
 540:main.c        ****   value=value + lightDetectedFront[0]*4;
 1281              		.loc 1 540 0
 1282 001c 0B4B     		ldr	r3, .L60
 1283 001e 1B68     		ldr	r3, [r3]
 1284 0020 9B00     		lsls	r3, r3, #2
 1285 0022 FA68     		ldr	r2, [r7, #12]
 1286 0024 1344     		add	r3, r3, r2
 1287 0026 FB60     		str	r3, [r7, #12]
 541:main.c        ****   value=value + lightDetectedFront[1]*2;
 1288              		.loc 1 541 0
 1289 0028 084B     		ldr	r3, .L60
 1290 002a 5B68     		ldr	r3, [r3, #4]
 1291 002c 5B00     		lsls	r3, r3, #1
 1292 002e FA68     		ldr	r2, [r7, #12]
 1293 0030 1344     		add	r3, r3, r2
 1294 0032 FB60     		str	r3, [r7, #12]
 542:main.c        ****   value=value + lightDetectedFront[2]*1;
 1295              		.loc 1 542 0
 1296 0034 054B     		ldr	r3, .L60
 1297 0036 9B68     		ldr	r3, [r3, #8]
 1298 0038 FA68     		ldr	r2, [r7, #12]
 1299 003a 1344     		add	r3, r3, r2
 1300 003c FB60     		str	r3, [r7, #12]
 543:main.c        ****     return value;
 1301              		.loc 1 543 0
 1302 003e FB68     		ldr	r3, [r7, #12]
 544:main.c        **** }
 1303              		.loc 1 544 0
 1304 0040 1846     		mov	r0, r3
 1305 0042 1437     		adds	r7, r7, #20
 1306              		.cfi_def_cfa_offset 4
 1307 0044 BD46     		mov	sp, r7
 1308              		.cfi_def_cfa_register 13
 1309              		@ sp needed
 1310 0046 80BC     		pop	{r7}
 1311              		.cfi_restore 7
 1312              		.cfi_def_cfa_offset 0
 1313 0048 7047     		bx	lr
 1314              	.L61:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 34


 1315 004a 00BF     		.align	2
 1316              	.L60:
 1317 004c 00000000 		.word	lightDetectedFront
 1318              		.cfi_endproc
 1319              	.LFE79:
 1320              		.size	convertSensorBinary, .-convertSensorBinary
 1321              		.section	.text.usbPutString,"ax",%progbits
 1322              		.align	2
 1323              		.global	usbPutString
 1324              		.thumb
 1325              		.thumb_func
 1326              		.type	usbPutString, %function
 1327              	usbPutString:
 1328              	.LFB80:
 545:main.c        **** //* ========================================
 546:main.c        **** void usbPutString(char *s)
 547:main.c        **** {
 1329              		.loc 1 547 0
 1330              		.cfi_startproc
 1331              		@ args = 0, pretend = 0, frame = 8
 1332              		@ frame_needed = 1, uses_anonymous_args = 0
 1333 0000 80B5     		push	{r7, lr}
 1334              		.cfi_def_cfa_offset 8
 1335              		.cfi_offset 7, -8
 1336              		.cfi_offset 14, -4
 1337 0002 82B0     		sub	sp, sp, #8
 1338              		.cfi_def_cfa_offset 16
 1339 0004 00AF     		add	r7, sp, #0
 1340              		.cfi_def_cfa_register 7
 1341 0006 7860     		str	r0, [r7, #4]
 548:main.c        **** // !! Assumes that *s is a string with allocated space >=64 chars     
 549:main.c        **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 550:main.c        **** //  length to 62 char (63rd char is a '!')
 551:main.c        **** 
 552:main.c        **** #ifdef USE_USB     
 553:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1342              		.loc 1 553 0
 1343 0008 00BF     		nop
 1344              	.L63:
 1345              		.loc 1 553 0 is_stmt 0 discriminator 1
 1346 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 1347 000e 0346     		mov	r3, r0
 1348 0010 002B     		cmp	r3, #0
 1349 0012 FAD0     		beq	.L63
 554:main.c        ****     s[63]='\0';
 1350              		.loc 1 554 0 is_stmt 1
 1351 0014 7B68     		ldr	r3, [r7, #4]
 1352 0016 3F33     		adds	r3, r3, #63
 1353 0018 0022     		movs	r2, #0
 1354 001a 1A70     		strb	r2, [r3]
 555:main.c        ****     s[62]='!';
 1355              		.loc 1 555 0
 1356 001c 7B68     		ldr	r3, [r7, #4]
 1357 001e 3E33     		adds	r3, r3, #62
 1358 0020 2122     		movs	r2, #33
 1359 0022 1A70     		strb	r2, [r3]
 556:main.c        ****     USBUART_PutData((uint8*)s,strlen(s));
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 35


 1360              		.loc 1 556 0
 1361 0024 7868     		ldr	r0, [r7, #4]
 1362 0026 FFF7FEFF 		bl	strlen
 1363 002a 0346     		mov	r3, r0
 1364 002c 9BB2     		uxth	r3, r3
 1365 002e 1946     		mov	r1, r3
 1366 0030 7868     		ldr	r0, [r7, #4]
 1367 0032 FFF7FEFF 		bl	USBUART_PutData
 557:main.c        **** #endif
 558:main.c        **** }
 1368              		.loc 1 558 0
 1369 0036 00BF     		nop
 1370 0038 0837     		adds	r7, r7, #8
 1371              		.cfi_def_cfa_offset 8
 1372 003a BD46     		mov	sp, r7
 1373              		.cfi_def_cfa_register 13
 1374              		@ sp needed
 1375 003c 80BD     		pop	{r7, pc}
 1376              		.cfi_endproc
 1377              	.LFE80:
 1378              		.size	usbPutString, .-usbPutString
 1379 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 1380              		.align	2
 1381              		.global	usbPutChar
 1382              		.thumb
 1383              		.thumb_func
 1384              		.type	usbPutChar, %function
 1385              	usbPutChar:
 1386              	.LFB81:
 559:main.c        **** //* ========================================
 560:main.c        **** void usbPutChar(char c)
 561:main.c        **** {
 1387              		.loc 1 561 0
 1388              		.cfi_startproc
 1389              		@ args = 0, pretend = 0, frame = 8
 1390              		@ frame_needed = 1, uses_anonymous_args = 0
 1391 0000 80B5     		push	{r7, lr}
 1392              		.cfi_def_cfa_offset 8
 1393              		.cfi_offset 7, -8
 1394              		.cfi_offset 14, -4
 1395 0002 82B0     		sub	sp, sp, #8
 1396              		.cfi_def_cfa_offset 16
 1397 0004 00AF     		add	r7, sp, #0
 1398              		.cfi_def_cfa_register 7
 1399 0006 0346     		mov	r3, r0
 1400 0008 FB71     		strb	r3, [r7, #7]
 562:main.c        **** #ifdef USE_USB     
 563:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1401              		.loc 1 563 0
 1402 000a 00BF     		nop
 1403              	.L65:
 1404              		.loc 1 563 0 is_stmt 0 discriminator 1
 1405 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 1406 0010 0346     		mov	r3, r0
 1407 0012 002B     		cmp	r3, #0
 1408 0014 FAD0     		beq	.L65
 564:main.c        ****     USBUART_PutChar(c);
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 36


 1409              		.loc 1 564 0 is_stmt 1
 1410 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1411 0018 1846     		mov	r0, r3
 1412 001a FFF7FEFF 		bl	USBUART_PutChar
 565:main.c        **** #endif    
 566:main.c        **** }
 1413              		.loc 1 566 0
 1414 001e 00BF     		nop
 1415 0020 0837     		adds	r7, r7, #8
 1416              		.cfi_def_cfa_offset 8
 1417 0022 BD46     		mov	sp, r7
 1418              		.cfi_def_cfa_register 13
 1419              		@ sp needed
 1420 0024 80BD     		pop	{r7, pc}
 1421              		.cfi_endproc
 1422              	.LFE81:
 1423              		.size	usbPutChar, .-usbPutChar
 1424 0026 00BF     		.section	.text.handle_usb,"ax",%progbits
 1425              		.align	2
 1426              		.global	handle_usb
 1427              		.thumb
 1428              		.thumb_func
 1429              		.type	handle_usb, %function
 1430              	handle_usb:
 1431              	.LFB82:
 567:main.c        **** //* ========================================
 568:main.c        **** void handle_usb()
 569:main.c        **** {
 1432              		.loc 1 569 0
 1433              		.cfi_startproc
 1434              		@ args = 0, pretend = 0, frame = 8
 1435              		@ frame_needed = 1, uses_anonymous_args = 0
 1436 0000 80B5     		push	{r7, lr}
 1437              		.cfi_def_cfa_offset 8
 1438              		.cfi_offset 7, -8
 1439              		.cfi_offset 14, -4
 1440 0002 82B0     		sub	sp, sp, #8
 1441              		.cfi_def_cfa_offset 16
 1442 0004 00AF     		add	r7, sp, #0
 1443              		.cfi_def_cfa_register 7
 570:main.c        ****     // handles input at terminal, echos it back to the terminal
 571:main.c        ****     // turn echo OFF, key emulation: only CR
 572:main.c        ****     // entered string is made available in 'line' and 'flag_KB_string' is set
 573:main.c        ****     
 574:main.c        ****     static uint8 usbStarted = FALSE;
 575:main.c        ****     static uint16 usbBufCount = 0;
 576:main.c        ****     uint8 c = 0; 
 1444              		.loc 1 576 0
 1445 0006 0023     		movs	r3, #0
 1446 0008 FB71     		strb	r3, [r7, #7]
 577:main.c        ****     
 578:main.c        **** 
 579:main.c        ****     if (!usbStarted)
 1447              		.loc 1 579 0
 1448 000a 2B4B     		ldr	r3, .L76
 1449 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1450 000e 002B     		cmp	r3, #0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 37


 1451 0010 0AD1     		bne	.L67
 580:main.c        ****     {
 581:main.c        ****         if (USBUART_GetConfiguration())
 1452              		.loc 1 581 0
 1453 0012 FFF7FEFF 		bl	USBUART_GetConfiguration
 1454 0016 0346     		mov	r3, r0
 1455 0018 002B     		cmp	r3, #0
 1456 001a 49D0     		beq	.L75
 582:main.c        ****         {
 583:main.c        ****             USBUART_CDC_Init();
 1457              		.loc 1 583 0
 1458 001c FFF7FEFF 		bl	USBUART_CDC_Init
 584:main.c        ****             usbStarted = TRUE;
 1459              		.loc 1 584 0
 1460 0020 254B     		ldr	r3, .L76
 1461 0022 0122     		movs	r2, #1
 1462 0024 1A70     		strb	r2, [r3]
 585:main.c        ****         }
 586:main.c        ****     }
 587:main.c        ****     else
 588:main.c        ****     {
 589:main.c        ****         if (USBUART_DataIsReady() != 0)
 590:main.c        ****         {  
 591:main.c        ****             c = USBUART_GetChar();
 592:main.c        **** 
 593:main.c        ****             if ((c == 13) || (c == 10))
 594:main.c        ****             {
 595:main.c        **** //                if (usbBufCount > 0)
 596:main.c        ****                 {
 597:main.c        ****                     entry[usbBufCount]= '\0';
 598:main.c        ****                     strcpy(line,entry);
 599:main.c        ****                     usbBufCount = 0;
 600:main.c        ****                     flag_KB_string = 1;
 601:main.c        ****                 }
 602:main.c        ****             }
 603:main.c        ****             else 
 604:main.c        ****             {
 605:main.c        ****                 if (((c == CHAR_BACKSP) || (c == CHAR_DEL) ) && (usbBufCount > 0) )
 606:main.c        ****                     usbBufCount--;
 607:main.c        ****                 else
 608:main.c        ****                 {
 609:main.c        ****                     if (usbBufCount > (BUF_SIZE-2) ) // one less else strtok triggers a crash
 610:main.c        ****                     {
 611:main.c        ****                        USBUART_PutChar('!');        
 612:main.c        ****                     }
 613:main.c        ****                     else
 614:main.c        ****                         entry[usbBufCount++] = c;  
 615:main.c        ****                 }  
 616:main.c        ****             }
 617:main.c        ****         }
 618:main.c        ****     }    
 619:main.c        **** }
 1463              		.loc 1 619 0
 1464 0026 43E0     		b	.L75
 1465              	.L67:
 589:main.c        ****         {  
 1466              		.loc 1 589 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 38


 1467 0028 FFF7FEFF 		bl	USBUART_DataIsReady
 1468 002c 0346     		mov	r3, r0
 1469 002e 002B     		cmp	r3, #0
 1470 0030 3ED0     		beq	.L75
 591:main.c        **** 
 1471              		.loc 1 591 0
 1472 0032 FFF7FEFF 		bl	USBUART_GetChar
 1473 0036 0346     		mov	r3, r0
 1474 0038 FB71     		strb	r3, [r7, #7]
 593:main.c        ****             {
 1475              		.loc 1 593 0
 1476 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1477 003c 0D2B     		cmp	r3, #13
 1478 003e 02D0     		beq	.L70
 593:main.c        ****             {
 1479              		.loc 1 593 0 is_stmt 0 discriminator 1
 1480 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1481 0042 0A2B     		cmp	r3, #10
 1482 0044 10D1     		bne	.L71
 1483              	.L70:
 597:main.c        ****                     strcpy(line,entry);
 1484              		.loc 1 597 0 is_stmt 1
 1485 0046 1D4B     		ldr	r3, .L76+4
 1486 0048 1B88     		ldrh	r3, [r3]
 1487 004a 1A46     		mov	r2, r3
 1488 004c 1C4B     		ldr	r3, .L76+8
 1489 004e 0021     		movs	r1, #0
 1490 0050 9954     		strb	r1, [r3, r2]
 598:main.c        ****                     usbBufCount = 0;
 1491              		.loc 1 598 0
 1492 0052 1B49     		ldr	r1, .L76+8
 1493 0054 1B48     		ldr	r0, .L76+12
 1494 0056 FFF7FEFF 		bl	strcpy
 599:main.c        ****                     flag_KB_string = 1;
 1495              		.loc 1 599 0
 1496 005a 184B     		ldr	r3, .L76+4
 1497 005c 0022     		movs	r2, #0
 1498 005e 1A80     		strh	r2, [r3]	@ movhi
 600:main.c        ****                 }
 1499              		.loc 1 600 0
 1500 0060 194B     		ldr	r3, .L76+16
 1501 0062 0122     		movs	r2, #1
 1502 0064 1A70     		strb	r2, [r3]
 1503 0066 23E0     		b	.L69
 1504              	.L71:
 605:main.c        ****                     usbBufCount--;
 1505              		.loc 1 605 0
 1506 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1507 006a 082B     		cmp	r3, #8
 1508 006c 02D0     		beq	.L72
 605:main.c        ****                     usbBufCount--;
 1509              		.loc 1 605 0 is_stmt 0 discriminator 2
 1510 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1511 0070 7F2B     		cmp	r3, #127
 1512 0072 0AD1     		bne	.L73
 1513              	.L72:
 605:main.c        ****                     usbBufCount--;
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 39


 1514              		.loc 1 605 0 discriminator 3
 1515 0074 114B     		ldr	r3, .L76+4
 1516 0076 1B88     		ldrh	r3, [r3]
 1517 0078 002B     		cmp	r3, #0
 1518 007a 06D0     		beq	.L73
 606:main.c        ****                 else
 1519              		.loc 1 606 0 is_stmt 1
 1520 007c 0F4B     		ldr	r3, .L76+4
 1521 007e 1B88     		ldrh	r3, [r3]
 1522 0080 013B     		subs	r3, r3, #1
 1523 0082 9AB2     		uxth	r2, r3
 1524 0084 0D4B     		ldr	r3, .L76+4
 1525 0086 1A80     		strh	r2, [r3]	@ movhi
 1526 0088 12E0     		b	.L69
 1527              	.L73:
 609:main.c        ****                     {
 1528              		.loc 1 609 0
 1529 008a 0C4B     		ldr	r3, .L76+4
 1530 008c 1B88     		ldrh	r3, [r3]
 1531 008e 3E2B     		cmp	r3, #62
 1532 0090 03D9     		bls	.L74
 611:main.c        ****                     }
 1533              		.loc 1 611 0
 1534 0092 2120     		movs	r0, #33
 1535 0094 FFF7FEFF 		bl	USBUART_PutChar
 1536              		.loc 1 619 0
 1537 0098 0AE0     		b	.L75
 1538              	.L74:
 614:main.c        ****                 }  
 1539              		.loc 1 614 0
 1540 009a 084B     		ldr	r3, .L76+4
 1541 009c 1B88     		ldrh	r3, [r3]
 1542 009e 5A1C     		adds	r2, r3, #1
 1543 00a0 91B2     		uxth	r1, r2
 1544 00a2 064A     		ldr	r2, .L76+4
 1545 00a4 1180     		strh	r1, [r2]	@ movhi
 1546 00a6 1946     		mov	r1, r3
 1547 00a8 054A     		ldr	r2, .L76+8
 1548 00aa FB79     		ldrb	r3, [r7, #7]
 1549 00ac 5354     		strb	r3, [r2, r1]
 1550              		.loc 1 619 0
 1551 00ae FFE7     		b	.L75
 1552              	.L69:
 1553              	.L75:
 1554 00b0 00BF     		nop
 1555 00b2 0837     		adds	r7, r7, #8
 1556              		.cfi_def_cfa_offset 8
 1557 00b4 BD46     		mov	sp, r7
 1558              		.cfi_def_cfa_register 13
 1559              		@ sp needed
 1560 00b6 80BD     		pop	{r7, pc}
 1561              	.L77:
 1562              		.align	2
 1563              	.L76:
 1564 00b8 45000000 		.word	usbStarted.8829
 1565 00bc 46000000 		.word	usbBufCount.8830
 1566 00c0 00000000 		.word	entry
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 40


 1567 00c4 00000000 		.word	line
 1568 00c8 00000000 		.word	flag_KB_string
 1569              		.cfi_endproc
 1570              	.LFE82:
 1571              		.size	handle_usb, .-handle_usb
 1572              		.bss
 1573              	usbStarted.8829:
 1574 0045 00       		.space	1
 1575              		.align	1
 1576              	usbBufCount.8830:
 1577 0046 0000     		.space	2
 1578              		.text
 1579              	.Letext0:
 1580              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1581              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1582              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1583              		.file 5 "vars.h"
 1584              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1585              		.section	.debug_info,"",%progbits
 1586              	.Ldebug_info0:
 1587 0000 03080000 		.4byte	0x803
 1588 0004 0400     		.2byte	0x4
 1589 0006 00000000 		.4byte	.Ldebug_abbrev0
 1590 000a 04       		.byte	0x4
 1591 000b 01       		.uleb128 0x1
 1592 000c CC000000 		.4byte	.LASF110
 1593 0010 0C       		.byte	0xc
 1594 0011 11050000 		.4byte	.LASF111
 1595 0015 CD010000 		.4byte	.LASF112
 1596 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1597 001d 00000000 		.4byte	0
 1598 0021 00000000 		.4byte	.Ldebug_line0
 1599 0025 02       		.uleb128 0x2
 1600 0026 01       		.byte	0x1
 1601 0027 06       		.byte	0x6
 1602 0028 E3030000 		.4byte	.LASF0
 1603 002c 02       		.uleb128 0x2
 1604 002d 01       		.byte	0x1
 1605 002e 08       		.byte	0x8
 1606 002f A1030000 		.4byte	.LASF1
 1607 0033 02       		.uleb128 0x2
 1608 0034 02       		.byte	0x2
 1609 0035 05       		.byte	0x5
 1610 0036 98000000 		.4byte	.LASF2
 1611 003a 02       		.uleb128 0x2
 1612 003b 02       		.byte	0x2
 1613 003c 07       		.byte	0x7
 1614 003d FE040000 		.4byte	.LASF3
 1615 0041 03       		.uleb128 0x3
 1616 0042 5A050000 		.4byte	.LASF12
 1617 0046 02       		.byte	0x2
 1618 0047 3F       		.byte	0x3f
 1619 0048 4C000000 		.4byte	0x4c
 1620 004c 02       		.uleb128 0x2
 1621 004d 04       		.byte	0x4
 1622 004e 05       		.byte	0x5
 1623 004f F0020000 		.4byte	.LASF4
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 41


 1624 0053 02       		.uleb128 0x2
 1625 0054 04       		.byte	0x4
 1626 0055 07       		.byte	0x7
 1627 0056 18050000 		.4byte	.LASF5
 1628 005a 02       		.uleb128 0x2
 1629 005b 08       		.byte	0x8
 1630 005c 05       		.byte	0x5
 1631 005d A4020000 		.4byte	.LASF6
 1632 0061 02       		.uleb128 0x2
 1633 0062 08       		.byte	0x8
 1634 0063 07       		.byte	0x7
 1635 0064 EF030000 		.4byte	.LASF7
 1636 0068 04       		.uleb128 0x4
 1637 0069 04       		.byte	0x4
 1638 006a 05       		.byte	0x5
 1639 006b 696E7400 		.ascii	"int\000"
 1640 006f 02       		.uleb128 0x2
 1641 0070 04       		.byte	0x4
 1642 0071 07       		.byte	0x7
 1643 0072 21040000 		.4byte	.LASF8
 1644 0076 02       		.uleb128 0x2
 1645 0077 08       		.byte	0x8
 1646 0078 04       		.byte	0x4
 1647 0079 8E030000 		.4byte	.LASF9
 1648 007d 02       		.uleb128 0x2
 1649 007e 04       		.byte	0x4
 1650 007f 07       		.byte	0x7
 1651 0080 AF000000 		.4byte	.LASF10
 1652 0084 05       		.uleb128 0x5
 1653 0085 04       		.byte	0x4
 1654 0086 8A000000 		.4byte	0x8a
 1655 008a 02       		.uleb128 0x2
 1656 008b 01       		.byte	0x1
 1657 008c 08       		.byte	0x8
 1658 008d 76040000 		.4byte	.LASF11
 1659 0091 03       		.uleb128 0x3
 1660 0092 86040000 		.4byte	.LASF13
 1661 0096 03       		.byte	0x3
 1662 0097 2C       		.byte	0x2c
 1663 0098 41000000 		.4byte	0x41
 1664 009c 02       		.uleb128 0x2
 1665 009d 08       		.byte	0x8
 1666 009e 04       		.byte	0x4
 1667 009f 36000000 		.4byte	.LASF14
 1668 00a3 02       		.uleb128 0x2
 1669 00a4 04       		.byte	0x4
 1670 00a5 04       		.byte	0x4
 1671 00a6 84020000 		.4byte	.LASF15
 1672 00aa 06       		.uleb128 0x6
 1673 00ab B7040000 		.4byte	.LASF16
 1674 00af 04       		.byte	0x4
 1675 00b0 E401     		.2byte	0x1e4
 1676 00b2 2C000000 		.4byte	0x2c
 1677 00b6 06       		.uleb128 0x6
 1678 00b7 A3010000 		.4byte	.LASF17
 1679 00bb 04       		.byte	0x4
 1680 00bc E501     		.2byte	0x1e5
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 42


 1681 00be 3A000000 		.4byte	0x3a
 1682 00c2 06       		.uleb128 0x6
 1683 00c3 BF020000 		.4byte	.LASF18
 1684 00c7 04       		.byte	0x4
 1685 00c8 E701     		.2byte	0x1e7
 1686 00ca 25000000 		.4byte	0x25
 1687 00ce 06       		.uleb128 0x6
 1688 00cf BA010000 		.4byte	.LASF19
 1689 00d3 04       		.byte	0x4
 1690 00d4 E801     		.2byte	0x1e8
 1691 00d6 33000000 		.4byte	0x33
 1692 00da 07       		.uleb128 0x7
 1693 00db B0010000 		.4byte	.LASF113
 1694 00df 20       		.byte	0x20
 1695 00e0 05       		.byte	0x5
 1696 00e1 29       		.byte	0x29
 1697 00e2 B3010000 		.4byte	0x1b3
 1698 00e6 08       		.uleb128 0x8
 1699 00e7 29060000 		.4byte	.LASF20
 1700 00eb 05       		.byte	0x5
 1701 00ec 2A       		.byte	0x2a
 1702 00ed C2000000 		.4byte	0xc2
 1703 00f1 00       		.byte	0
 1704 00f2 08       		.uleb128 0x8
 1705 00f3 AA010000 		.4byte	.LASF21
 1706 00f7 05       		.byte	0x5
 1707 00f8 2B       		.byte	0x2b
 1708 00f9 AA000000 		.4byte	0xaa
 1709 00fd 01       		.byte	0x1
 1710 00fe 08       		.uleb128 0x8
 1711 00ff 7B040000 		.4byte	.LASF22
 1712 0103 05       		.byte	0x5
 1713 0104 2C       		.byte	0x2c
 1714 0105 CE000000 		.4byte	0xce
 1715 0109 02       		.byte	0x2
 1716 010a 08       		.uleb128 0x8
 1717 010b DB050000 		.4byte	.LASF23
 1718 010f 05       		.byte	0x5
 1719 0110 2D       		.byte	0x2d
 1720 0111 CE000000 		.4byte	0xce
 1721 0115 04       		.byte	0x4
 1722 0116 08       		.uleb128 0x8
 1723 0117 2E060000 		.4byte	.LASF24
 1724 011b 05       		.byte	0x5
 1725 011c 2E       		.byte	0x2e
 1726 011d CE000000 		.4byte	0xce
 1727 0121 06       		.byte	0x6
 1728 0122 08       		.uleb128 0x8
 1729 0123 E8020000 		.4byte	.LASF25
 1730 0127 05       		.byte	0x5
 1731 0128 2F       		.byte	0x2f
 1732 0129 CE000000 		.4byte	0xce
 1733 012d 08       		.byte	0x8
 1734 012e 08       		.uleb128 0x8
 1735 012f 8D050000 		.4byte	.LASF26
 1736 0133 05       		.byte	0x5
 1737 0134 30       		.byte	0x30
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 43


 1738 0135 CE000000 		.4byte	0xce
 1739 0139 0A       		.byte	0xa
 1740 013a 08       		.uleb128 0x8
 1741 013b C2030000 		.4byte	.LASF27
 1742 013f 05       		.byte	0x5
 1743 0140 31       		.byte	0x31
 1744 0141 CE000000 		.4byte	0xce
 1745 0145 0C       		.byte	0xc
 1746 0146 08       		.uleb128 0x8
 1747 0147 DB020000 		.4byte	.LASF28
 1748 014b 05       		.byte	0x5
 1749 014c 32       		.byte	0x32
 1750 014d CE000000 		.4byte	0xce
 1751 0151 0E       		.byte	0xe
 1752 0152 08       		.uleb128 0x8
 1753 0153 52040000 		.4byte	.LASF29
 1754 0157 05       		.byte	0x5
 1755 0158 33       		.byte	0x33
 1756 0159 CE000000 		.4byte	0xce
 1757 015d 10       		.byte	0x10
 1758 015e 08       		.uleb128 0x8
 1759 015f 8E040000 		.4byte	.LASF30
 1760 0163 05       		.byte	0x5
 1761 0164 34       		.byte	0x34
 1762 0165 CE000000 		.4byte	0xce
 1763 0169 12       		.byte	0x12
 1764 016a 08       		.uleb128 0x8
 1765 016b CB030000 		.4byte	.LASF31
 1766 016f 05       		.byte	0x5
 1767 0170 35       		.byte	0x35
 1768 0171 CE000000 		.4byte	0xce
 1769 0175 14       		.byte	0x14
 1770 0176 08       		.uleb128 0x8
 1771 0177 06060000 		.4byte	.LASF32
 1772 017b 05       		.byte	0x5
 1773 017c 36       		.byte	0x36
 1774 017d CE000000 		.4byte	0xce
 1775 0181 16       		.byte	0x16
 1776 0182 08       		.uleb128 0x8
 1777 0183 90000000 		.4byte	.LASF33
 1778 0187 05       		.byte	0x5
 1779 0188 37       		.byte	0x37
 1780 0189 CE000000 		.4byte	0xce
 1781 018d 18       		.byte	0x18
 1782 018e 08       		.uleb128 0x8
 1783 018f D3020000 		.4byte	.LASF34
 1784 0193 05       		.byte	0x5
 1785 0194 38       		.byte	0x38
 1786 0195 CE000000 		.4byte	0xce
 1787 0199 1A       		.byte	0x1a
 1788 019a 08       		.uleb128 0x8
 1789 019b 49040000 		.4byte	.LASF35
 1790 019f 05       		.byte	0x5
 1791 01a0 39       		.byte	0x39
 1792 01a1 CE000000 		.4byte	0xce
 1793 01a5 1C       		.byte	0x1c
 1794 01a6 08       		.uleb128 0x8
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 44


 1795 01a7 96040000 		.4byte	.LASF36
 1796 01ab 05       		.byte	0x5
 1797 01ac 3A       		.byte	0x3a
 1798 01ad CE000000 		.4byte	0xce
 1799 01b1 1E       		.byte	0x1e
 1800 01b2 00       		.byte	0
 1801 01b3 09       		.uleb128 0x9
 1802 01b4 72050000 		.4byte	.LASF37
 1803 01b8 01       		.byte	0x1
 1804 01b9 34       		.byte	0x34
 1805 01ba 00000000 		.4byte	.LFB64
 1806 01be 14000000 		.4byte	.LFE64-.LFB64
 1807 01c2 01       		.uleb128 0x1
 1808 01c3 9C       		.byte	0x9c
 1809 01c4 0A       		.uleb128 0xa
 1810 01c5 A9040000 		.4byte	.LASF40
 1811 01c9 01       		.byte	0x1
 1812 01ca 3A       		.byte	0x3a
 1813 01cb 00000000 		.4byte	.LFB65
 1814 01cf 2E000000 		.4byte	.LFE65-.LFB65
 1815 01d3 01       		.uleb128 0x1
 1816 01d4 9C       		.byte	0x9c
 1817 01d5 E6010000 		.4byte	0x1e6
 1818 01d9 0B       		.uleb128 0xb
 1819 01da 7800     		.ascii	"x\000"
 1820 01dc 01       		.byte	0x1
 1821 01dd 3A       		.byte	0x3a
 1822 01de 68000000 		.4byte	0x68
 1823 01e2 02       		.uleb128 0x2
 1824 01e3 91       		.byte	0x91
 1825 01e4 74       		.sleb128 -12
 1826 01e5 00       		.byte	0
 1827 01e6 09       		.uleb128 0x9
 1828 01e7 74000000 		.4byte	.LASF38
 1829 01eb 01       		.byte	0x1
 1830 01ec 42       		.byte	0x42
 1831 01ed 00000000 		.4byte	.LFB66
 1832 01f1 14000000 		.4byte	.LFE66-.LFB66
 1833 01f5 01       		.uleb128 0x1
 1834 01f6 9C       		.byte	0x9c
 1835 01f7 09       		.uleb128 0x9
 1836 01f8 00000000 		.4byte	.LASF39
 1837 01fc 01       		.byte	0x1
 1838 01fd 48       		.byte	0x48
 1839 01fe 00000000 		.4byte	.LFB67
 1840 0202 14000000 		.4byte	.LFE67-.LFB67
 1841 0206 01       		.uleb128 0x1
 1842 0207 9C       		.byte	0x9c
 1843 0208 0A       		.uleb128 0xa
 1844 0209 23030000 		.4byte	.LASF41
 1845 020d 01       		.byte	0x1
 1846 020e 4D       		.byte	0x4d
 1847 020f 00000000 		.4byte	.LFB68
 1848 0213 22000000 		.4byte	.LFE68-.LFB68
 1849 0217 01       		.uleb128 0x1
 1850 0218 9C       		.byte	0x9c
 1851 0219 2A020000 		.4byte	0x22a
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 45


 1852 021d 0B       		.uleb128 0xb
 1853 021e 7800     		.ascii	"x\000"
 1854 0220 01       		.byte	0x1
 1855 0221 4D       		.byte	0x4d
 1856 0222 AA000000 		.4byte	0xaa
 1857 0226 02       		.uleb128 0x2
 1858 0227 91       		.byte	0x91
 1859 0228 77       		.sleb128 -9
 1860 0229 00       		.byte	0
 1861 022a 0A       		.uleb128 0xa
 1862 022b 64050000 		.4byte	.LASF42
 1863 022f 01       		.byte	0x1
 1864 0230 54       		.byte	0x54
 1865 0231 00000000 		.4byte	.LFB69
 1866 0235 20000000 		.4byte	.LFE69-.LFB69
 1867 0239 01       		.uleb128 0x1
 1868 023a 9C       		.byte	0x9c
 1869 023b 4C020000 		.4byte	0x24c
 1870 023f 0B       		.uleb128 0xb
 1871 0240 7800     		.ascii	"x\000"
 1872 0242 01       		.byte	0x1
 1873 0243 54       		.byte	0x54
 1874 0244 AA000000 		.4byte	0xaa
 1875 0248 02       		.uleb128 0x2
 1876 0249 91       		.byte	0x91
 1877 024a 77       		.sleb128 -9
 1878 024b 00       		.byte	0
 1879 024c 0A       		.uleb128 0xa
 1880 024d 13060000 		.4byte	.LASF43
 1881 0251 01       		.byte	0x1
 1882 0252 5F       		.byte	0x5f
 1883 0253 00000000 		.4byte	.LFB70
 1884 0257 20000000 		.4byte	.LFE70-.LFB70
 1885 025b 01       		.uleb128 0x1
 1886 025c 9C       		.byte	0x9c
 1887 025d 6E020000 		.4byte	0x26e
 1888 0261 0B       		.uleb128 0xb
 1889 0262 7800     		.ascii	"x\000"
 1890 0264 01       		.byte	0x1
 1891 0265 5F       		.byte	0x5f
 1892 0266 68000000 		.4byte	0x68
 1893 026a 02       		.uleb128 0x2
 1894 026b 91       		.byte	0x91
 1895 026c 74       		.sleb128 -12
 1896 026d 00       		.byte	0
 1897 026e 0A       		.uleb128 0xa
 1898 026f 15040000 		.4byte	.LASF44
 1899 0273 01       		.byte	0x1
 1900 0274 68       		.byte	0x68
 1901 0275 00000000 		.4byte	.LFB71
 1902 0279 2A000000 		.4byte	.LFE71-.LFB71
 1903 027d 01       		.uleb128 0x1
 1904 027e 9C       		.byte	0x9c
 1905 027f 90020000 		.4byte	0x290
 1906 0283 0B       		.uleb128 0xb
 1907 0284 7800     		.ascii	"x\000"
 1908 0286 01       		.byte	0x1
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 46


 1909 0287 68       		.byte	0x68
 1910 0288 AA000000 		.4byte	0xaa
 1911 028c 02       		.uleb128 0x2
 1912 028d 91       		.byte	0x91
 1913 028e 77       		.sleb128 -9
 1914 028f 00       		.byte	0
 1915 0290 0A       		.uleb128 0xa
 1916 0291 5D000000 		.4byte	.LASF45
 1917 0295 01       		.byte	0x1
 1918 0296 7B       		.byte	0x7b
 1919 0297 00000000 		.4byte	.LFB72
 1920 029b E0000000 		.4byte	.LFE72-.LFB72
 1921 029f 01       		.uleb128 0x1
 1922 02a0 9C       		.byte	0x9c
 1923 02a1 04030000 		.4byte	0x304
 1924 02a5 0C       		.uleb128 0xc
 1925 02a6 0E000000 		.4byte	.LBB2
 1926 02aa B2000000 		.4byte	.LBE2-.LBB2
 1927 02ae 0D       		.uleb128 0xd
 1928 02af 78010000 		.4byte	.LASF46
 1929 02b3 01       		.byte	0x1
 1930 02b4 88       		.byte	0x88
 1931 02b5 CE000000 		.4byte	0xce
 1932 02b9 02       		.uleb128 0x2
 1933 02ba 91       		.byte	0x91
 1934 02bb 76       		.sleb128 -10
 1935 02bc 0D       		.uleb128 0xd
 1936 02bd 80010000 		.4byte	.LASF47
 1937 02c1 01       		.byte	0x1
 1938 02c2 89       		.byte	0x89
 1939 02c3 CE000000 		.4byte	0xce
 1940 02c7 02       		.uleb128 0x2
 1941 02c8 91       		.byte	0x91
 1942 02c9 74       		.sleb128 -12
 1943 02ca 0D       		.uleb128 0xd
 1944 02cb 88010000 		.4byte	.LASF48
 1945 02cf 01       		.byte	0x1
 1946 02d0 8A       		.byte	0x8a
 1947 02d1 CE000000 		.4byte	0xce
 1948 02d5 02       		.uleb128 0x2
 1949 02d6 91       		.byte	0x91
 1950 02d7 72       		.sleb128 -14
 1951 02d8 0D       		.uleb128 0xd
 1952 02d9 68010000 		.4byte	.LASF49
 1953 02dd 01       		.byte	0x1
 1954 02de 8C       		.byte	0x8c
 1955 02df CE000000 		.4byte	0xce
 1956 02e3 02       		.uleb128 0x2
 1957 02e4 91       		.byte	0x91
 1958 02e5 70       		.sleb128 -16
 1959 02e6 0D       		.uleb128 0xd
 1960 02e7 70010000 		.4byte	.LASF50
 1961 02eb 01       		.byte	0x1
 1962 02ec 8D       		.byte	0x8d
 1963 02ed CE000000 		.4byte	0xce
 1964 02f1 02       		.uleb128 0x2
 1965 02f2 91       		.byte	0x91
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 47


 1966 02f3 6E       		.sleb128 -18
 1967 02f4 0D       		.uleb128 0xd
 1968 02f5 90010000 		.4byte	.LASF51
 1969 02f9 01       		.byte	0x1
 1970 02fa 8E       		.byte	0x8e
 1971 02fb CE000000 		.4byte	0xce
 1972 02ff 02       		.uleb128 0x2
 1973 0300 91       		.byte	0x91
 1974 0301 6C       		.sleb128 -20
 1975 0302 00       		.byte	0
 1976 0303 00       		.byte	0
 1977 0304 0E       		.uleb128 0xe
 1978 0305 8A020000 		.4byte	.LASF59
 1979 0309 01       		.byte	0x1
 1980 030a BA       		.byte	0xba
 1981 030b 00000000 		.4byte	.LFB73
 1982 030f 0C000000 		.4byte	.LFE73-.LFB73
 1983 0313 01       		.uleb128 0x1
 1984 0314 9C       		.byte	0x9c
 1985 0315 0F       		.uleb128 0xf
 1986 0316 82050000 		.4byte	.LASF78
 1987 031a 01       		.byte	0x1
 1988 031b CD       		.byte	0xcd
 1989 031c 00000000 		.4byte	.LFB74
 1990 0320 C0000000 		.4byte	.LFE74-.LFB74
 1991 0324 01       		.uleb128 0x1
 1992 0325 9C       		.byte	0x9c
 1993 0326 83030000 		.4byte	0x383
 1994 032a 0D       		.uleb128 0xd
 1995 032b F9020000 		.4byte	.LASF52
 1996 032f 01       		.byte	0x1
 1997 0330 CE       		.byte	0xce
 1998 0331 CE000000 		.4byte	0xce
 1999 0335 02       		.uleb128 0x2
 2000 0336 91       		.byte	0x91
 2001 0337 76       		.sleb128 -10
 2002 0338 0D       		.uleb128 0xd
 2003 0339 0E030000 		.4byte	.LASF53
 2004 033d 01       		.byte	0x1
 2005 033e CF       		.byte	0xcf
 2006 033f CE000000 		.4byte	0xce
 2007 0343 02       		.uleb128 0x2
 2008 0344 91       		.byte	0x91
 2009 0345 74       		.sleb128 -12
 2010 0346 0D       		.uleb128 0xd
 2011 0347 79030000 		.4byte	.LASF54
 2012 034b 01       		.byte	0x1
 2013 034c D0       		.byte	0xd0
 2014 034d CE000000 		.4byte	0xce
 2015 0351 02       		.uleb128 0x2
 2016 0352 91       		.byte	0x91
 2017 0353 72       		.sleb128 -14
 2018 0354 0D       		.uleb128 0xd
 2019 0355 6A030000 		.4byte	.LASF55
 2020 0359 01       		.byte	0x1
 2021 035a D1       		.byte	0xd1
 2022 035b CE000000 		.4byte	0xce
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 48


 2023 035f 02       		.uleb128 0x2
 2024 0360 91       		.byte	0x91
 2025 0361 70       		.sleb128 -16
 2026 0362 0D       		.uleb128 0xd
 2027 0363 31030000 		.4byte	.LASF56
 2028 0367 01       		.byte	0x1
 2029 0368 D2       		.byte	0xd2
 2030 0369 83030000 		.4byte	0x383
 2031 036d 04       		.uleb128 0x4
 2032 036e 91       		.byte	0x91
 2033 036f E0B17F   		.sleb128 -10016
 2034 0372 0D       		.uleb128 0xd
 2035 0373 F9050000 		.4byte	.LASF57
 2036 0377 01       		.byte	0x1
 2037 0378 D4       		.byte	0xd4
 2038 0379 83030000 		.4byte	0x383
 2039 037d 04       		.uleb128 0x4
 2040 037e 91       		.byte	0x91
 2041 037f D0E37E   		.sleb128 -20016
 2042 0382 00       		.byte	0
 2043 0383 10       		.uleb128 0x10
 2044 0384 8A000000 		.4byte	0x8a
 2045 0388 94030000 		.4byte	0x394
 2046 038c 11       		.uleb128 0x11
 2047 038d 7D000000 		.4byte	0x7d
 2048 0391 0F27     		.2byte	0x270f
 2049 0393 00       		.byte	0
 2050 0394 0A       		.uleb128 0xa
 2051 0395 5F010000 		.4byte	.LASF58
 2052 0399 01       		.byte	0x1
 2053 039a DC       		.byte	0xdc
 2054 039b 00000000 		.4byte	.LFB75
 2055 039f 1A000000 		.4byte	.LFE75-.LFB75
 2056 03a3 01       		.uleb128 0x1
 2057 03a4 9C       		.byte	0x9c
 2058 03a5 B6030000 		.4byte	0x3b6
 2059 03a9 0B       		.uleb128 0xb
 2060 03aa 7800     		.ascii	"x\000"
 2061 03ac 01       		.byte	0x1
 2062 03ad DC       		.byte	0xdc
 2063 03ae 68000000 		.4byte	0x68
 2064 03b2 02       		.uleb128 0x2
 2065 03b3 91       		.byte	0x91
 2066 03b4 74       		.sleb128 -12
 2067 03b5 00       		.byte	0
 2068 03b6 12       		.uleb128 0x12
 2069 03b7 0A000000 		.4byte	.LASF60
 2070 03bb 01       		.byte	0x1
 2071 03bc F4       		.byte	0xf4
 2072 03bd 00000000 		.4byte	.LFB76
 2073 03c1 0C000000 		.4byte	.LFE76-.LFB76
 2074 03c5 01       		.uleb128 0x1
 2075 03c6 9C       		.byte	0x9c
 2076 03c7 13       		.uleb128 0x13
 2077 03c8 5A010000 		.4byte	.LASF61
 2078 03cc 01       		.byte	0x1
 2079 03cd 0101     		.2byte	0x101
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 49


 2080 03cf 68000000 		.4byte	0x68
 2081 03d3 00000000 		.4byte	.LFB77
 2082 03d7 74020000 		.4byte	.LFE77-.LFB77
 2083 03db 01       		.uleb128 0x1
 2084 03dc 9C       		.byte	0x9c
 2085 03dd 8D040000 		.4byte	0x48d
 2086 03e1 14       		.uleb128 0x14
 2087 03e2 A0050000 		.4byte	.LASF62
 2088 03e6 01       		.byte	0x1
 2089 03e7 2401     		.2byte	0x124
 2090 03e9 68000000 		.4byte	0x68
 2091 03ed 02       		.uleb128 0x2
 2092 03ee 91       		.byte	0x91
 2093 03ef 68       		.sleb128 -24
 2094 03f0 14       		.uleb128 0x14
 2095 03f1 35050000 		.4byte	.LASF63
 2096 03f5 01       		.byte	0x1
 2097 03f6 2C01     		.2byte	0x12c
 2098 03f8 68000000 		.4byte	0x68
 2099 03fc 02       		.uleb128 0x2
 2100 03fd 91       		.byte	0x91
 2101 03fe 64       		.sleb128 -28
 2102 03ff 14       		.uleb128 0x14
 2103 0400 22000000 		.4byte	.LASF64
 2104 0404 01       		.byte	0x1
 2105 0405 5F01     		.2byte	0x15f
 2106 0407 68000000 		.4byte	0x68
 2107 040b 02       		.uleb128 0x2
 2108 040c 91       		.byte	0x91
 2109 040d 74       		.sleb128 -12
 2110 040e 14       		.uleb128 0x14
 2111 040f A3040000 		.4byte	.LASF65
 2112 0413 01       		.byte	0x1
 2113 0414 6501     		.2byte	0x165
 2114 0416 8D040000 		.4byte	0x48d
 2115 041a 03       		.uleb128 0x3
 2116 041b 91       		.byte	0x91
 2117 041c B460     		.sleb128 -4044
 2118 041e 14       		.uleb128 0x14
 2119 041f C0010000 		.4byte	.LASF66
 2120 0423 01       		.byte	0x1
 2121 0424 6601     		.2byte	0x166
 2122 0426 68000000 		.4byte	0x68
 2123 042a 02       		.uleb128 0x2
 2124 042b 91       		.byte	0x91
 2125 042c 70       		.sleb128 -16
 2126 042d 14       		.uleb128 0x14
 2127 042e B8000000 		.4byte	.LASF67
 2128 0432 01       		.byte	0x1
 2129 0433 6701     		.2byte	0x167
 2130 0435 68000000 		.4byte	0x68
 2131 0439 02       		.uleb128 0x2
 2132 043a 91       		.byte	0x91
 2133 043b 60       		.sleb128 -32
 2134 043c 14       		.uleb128 0x14
 2135 043d 06040000 		.4byte	.LASF68
 2136 0441 01       		.byte	0x1
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 50


 2137 0442 6801     		.2byte	0x168
 2138 0444 68000000 		.4byte	0x68
 2139 0448 02       		.uleb128 0x2
 2140 0449 91       		.byte	0x91
 2141 044a 6C       		.sleb128 -20
 2142 044b 0C       		.uleb128 0xc
 2143 044c 8E000000 		.4byte	.LBB3
 2144 0450 C8010000 		.4byte	.LBE3-.LBB3
 2145 0454 14       		.uleb128 0x14
 2146 0455 5A040000 		.4byte	.LASF69
 2147 0459 01       		.byte	0x1
 2148 045a 7401     		.2byte	0x174
 2149 045c 68000000 		.4byte	0x68
 2150 0460 02       		.uleb128 0x2
 2151 0461 91       		.byte	0x91
 2152 0462 5C       		.sleb128 -36
 2153 0463 14       		.uleb128 0x14
 2154 0464 BD040000 		.4byte	.LASF70
 2155 0468 01       		.byte	0x1
 2156 0469 7501     		.2byte	0x175
 2157 046b 68000000 		.4byte	0x68
 2158 046f 02       		.uleb128 0x2
 2159 0470 91       		.byte	0x91
 2160 0471 58       		.sleb128 -40
 2161 0472 0C       		.uleb128 0xc
 2162 0473 5A010000 		.4byte	.LBB4
 2163 0477 CA000000 		.4byte	.LBE4-.LBB4
 2164 047b 14       		.uleb128 0x14
 2165 047c D3040000 		.4byte	.LASF71
 2166 0480 01       		.byte	0x1
 2167 0481 BD01     		.2byte	0x1bd
 2168 0483 68000000 		.4byte	0x68
 2169 0487 02       		.uleb128 0x2
 2170 0488 91       		.byte	0x91
 2171 0489 54       		.sleb128 -44
 2172 048a 00       		.byte	0
 2173 048b 00       		.byte	0
 2174 048c 00       		.byte	0
 2175 048d 10       		.uleb128 0x10
 2176 048e 68000000 		.4byte	0x68
 2177 0492 9E040000 		.4byte	0x49e
 2178 0496 11       		.uleb128 0x11
 2179 0497 7D000000 		.4byte	0x7d
 2180 049b E703     		.2byte	0x3e7
 2181 049d 00       		.byte	0
 2182 049e 15       		.uleb128 0x15
 2183 049f 64040000 		.4byte	.LASF72
 2184 04a3 01       		.byte	0x1
 2185 04a4 0802     		.2byte	0x208
 2186 04a6 68000000 		.4byte	0x68
 2187 04aa 00000000 		.4byte	.LFB78
 2188 04ae 50000000 		.4byte	.LFE78-.LFB78
 2189 04b2 01       		.uleb128 0x1
 2190 04b3 9C       		.byte	0x9c
 2191 04b4 F2040000 		.4byte	0x4f2
 2192 04b8 14       		.uleb128 0x14
 2193 04b9 9A030000 		.4byte	.LASF73
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 51


 2194 04bd 01       		.byte	0x1
 2195 04be 0A02     		.2byte	0x20a
 2196 04c0 68000000 		.4byte	0x68
 2197 04c4 02       		.uleb128 0x2
 2198 04c5 91       		.byte	0x91
 2199 04c6 74       		.sleb128 -12
 2200 04c7 16       		.uleb128 0x16
 2201 04c8 513100   		.ascii	"Q1\000"
 2202 04cb 01       		.byte	0x1
 2203 04cc 0B02     		.2byte	0x20b
 2204 04ce 68000000 		.4byte	0x68
 2205 04d2 02       		.uleb128 0x2
 2206 04d3 91       		.byte	0x91
 2207 04d4 70       		.sleb128 -16
 2208 04d5 16       		.uleb128 0x16
 2209 04d6 513200   		.ascii	"Q2\000"
 2210 04d9 01       		.byte	0x1
 2211 04da 0C02     		.2byte	0x20c
 2212 04dc 68000000 		.4byte	0x68
 2213 04e0 02       		.uleb128 0x2
 2214 04e1 91       		.byte	0x91
 2215 04e2 6C       		.sleb128 -20
 2216 04e3 16       		.uleb128 0x16
 2217 04e4 513600   		.ascii	"Q6\000"
 2218 04e7 01       		.byte	0x1
 2219 04e8 0D02     		.2byte	0x20d
 2220 04ea 68000000 		.4byte	0x68
 2221 04ee 02       		.uleb128 0x2
 2222 04ef 91       		.byte	0x91
 2223 04f0 68       		.sleb128 -24
 2224 04f1 00       		.byte	0
 2225 04f2 15       		.uleb128 0x15
 2226 04f3 EA040000 		.4byte	.LASF74
 2227 04f7 01       		.byte	0x1
 2228 04f8 1602     		.2byte	0x216
 2229 04fa 68000000 		.4byte	0x68
 2230 04fe 00000000 		.4byte	.LFB79
 2231 0502 50000000 		.4byte	.LFE79-.LFB79
 2232 0506 01       		.uleb128 0x1
 2233 0507 9C       		.byte	0x9c
 2234 0508 46050000 		.4byte	0x546
 2235 050c 14       		.uleb128 0x14
 2236 050d F3050000 		.4byte	.LASF75
 2237 0511 01       		.byte	0x1
 2238 0512 1802     		.2byte	0x218
 2239 0514 68000000 		.4byte	0x68
 2240 0518 02       		.uleb128 0x2
 2241 0519 91       		.byte	0x91
 2242 051a 74       		.sleb128 -12
 2243 051b 16       		.uleb128 0x16
 2244 051c 513300   		.ascii	"Q3\000"
 2245 051f 01       		.byte	0x1
 2246 0520 1902     		.2byte	0x219
 2247 0522 68000000 		.4byte	0x68
 2248 0526 02       		.uleb128 0x2
 2249 0527 91       		.byte	0x91
 2250 0528 70       		.sleb128 -16
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 52


 2251 0529 16       		.uleb128 0x16
 2252 052a 513400   		.ascii	"Q4\000"
 2253 052d 01       		.byte	0x1
 2254 052e 1A02     		.2byte	0x21a
 2255 0530 68000000 		.4byte	0x68
 2256 0534 02       		.uleb128 0x2
 2257 0535 91       		.byte	0x91
 2258 0536 6C       		.sleb128 -20
 2259 0537 16       		.uleb128 0x16
 2260 0538 513500   		.ascii	"Q5\000"
 2261 053b 01       		.byte	0x1
 2262 053c 1B02     		.2byte	0x21b
 2263 053e 68000000 		.4byte	0x68
 2264 0542 02       		.uleb128 0x2
 2265 0543 91       		.byte	0x91
 2266 0544 68       		.sleb128 -24
 2267 0545 00       		.byte	0
 2268 0546 17       		.uleb128 0x17
 2269 0547 B2020000 		.4byte	.LASF76
 2270 054b 01       		.byte	0x1
 2271 054c 2202     		.2byte	0x222
 2272 054e 00000000 		.4byte	.LFB80
 2273 0552 3E000000 		.4byte	.LFE80-.LFB80
 2274 0556 01       		.uleb128 0x1
 2275 0557 9C       		.byte	0x9c
 2276 0558 6A050000 		.4byte	0x56a
 2277 055c 18       		.uleb128 0x18
 2278 055d 7300     		.ascii	"s\000"
 2279 055f 01       		.byte	0x1
 2280 0560 2202     		.2byte	0x222
 2281 0562 84000000 		.4byte	0x84
 2282 0566 02       		.uleb128 0x2
 2283 0567 91       		.byte	0x91
 2284 0568 74       		.sleb128 -12
 2285 0569 00       		.byte	0
 2286 056a 17       		.uleb128 0x17
 2287 056b 49000000 		.4byte	.LASF77
 2288 056f 01       		.byte	0x1
 2289 0570 3002     		.2byte	0x230
 2290 0572 00000000 		.4byte	.LFB81
 2291 0576 26000000 		.4byte	.LFE81-.LFB81
 2292 057a 01       		.uleb128 0x1
 2293 057b 9C       		.byte	0x9c
 2294 057c 8E050000 		.4byte	0x58e
 2295 0580 18       		.uleb128 0x18
 2296 0581 6300     		.ascii	"c\000"
 2297 0583 01       		.byte	0x1
 2298 0584 3002     		.2byte	0x230
 2299 0586 8A000000 		.4byte	0x8a
 2300 058a 02       		.uleb128 0x2
 2301 058b 91       		.byte	0x91
 2302 058c 77       		.sleb128 -9
 2303 058d 00       		.byte	0
 2304 058e 19       		.uleb128 0x19
 2305 058f B4050000 		.4byte	.LASF79
 2306 0593 01       		.byte	0x1
 2307 0594 3802     		.2byte	0x238
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 53


 2308 0596 00000000 		.4byte	.LFB82
 2309 059a CC000000 		.4byte	.LFE82-.LFB82
 2310 059e 01       		.uleb128 0x1
 2311 059f 9C       		.byte	0x9c
 2312 05a0 D6050000 		.4byte	0x5d6
 2313 05a4 14       		.uleb128 0x14
 2314 05a5 2A050000 		.4byte	.LASF80
 2315 05a9 01       		.byte	0x1
 2316 05aa 3E02     		.2byte	0x23e
 2317 05ac AA000000 		.4byte	0xaa
 2318 05b0 05       		.uleb128 0x5
 2319 05b1 03       		.byte	0x3
 2320 05b2 45000000 		.4byte	usbStarted.8829
 2321 05b6 14       		.uleb128 0x14
 2322 05b7 3D040000 		.4byte	.LASF81
 2323 05bb 01       		.byte	0x1
 2324 05bc 3F02     		.2byte	0x23f
 2325 05be B6000000 		.4byte	0xb6
 2326 05c2 05       		.uleb128 0x5
 2327 05c3 03       		.byte	0x3
 2328 05c4 46000000 		.4byte	usbBufCount.8830
 2329 05c8 16       		.uleb128 0x16
 2330 05c9 6300     		.ascii	"c\000"
 2331 05cb 01       		.byte	0x1
 2332 05cc 4002     		.2byte	0x240
 2333 05ce AA000000 		.4byte	0xaa
 2334 05d2 02       		.uleb128 0x2
 2335 05d3 91       		.byte	0x91
 2336 05d4 77       		.sleb128 -9
 2337 05d5 00       		.byte	0
 2338 05d6 0D       		.uleb128 0xd
 2339 05d7 48050000 		.4byte	.LASF82
 2340 05db 01       		.byte	0x1
 2341 05dc B9       		.byte	0xb9
 2342 05dd E7050000 		.4byte	0x5e7
 2343 05e1 05       		.uleb128 0x5
 2344 05e2 03       		.byte	0x3
 2345 05e3 44000000 		.4byte	count
 2346 05e7 1A       		.uleb128 0x1a
 2347 05e8 C2000000 		.4byte	0xc2
 2348 05ec 1B       		.uleb128 0x1b
 2349 05ed E6050000 		.4byte	.LASF83
 2350 05f1 06       		.byte	0x6
 2351 05f2 1207     		.2byte	0x712
 2352 05f4 F8050000 		.4byte	0x5f8
 2353 05f8 1A       		.uleb128 0x1a
 2354 05f9 91000000 		.4byte	0x91
 2355 05fd 1C       		.uleb128 0x1c
 2356 05fe 747300   		.ascii	"ts\000"
 2357 0601 05       		.byte	0x5
 2358 0602 10       		.byte	0x10
 2359 0603 AA000000 		.4byte	0xaa
 2360 0607 05       		.uleb128 0x5
 2361 0608 03       		.byte	0x3
 2362 0609 00000000 		.4byte	ts
 2363 060d 1D       		.uleb128 0x1d
 2364 060e 2F000000 		.4byte	.LASF84
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 54


 2365 0612 05       		.byte	0x5
 2366 0613 11       		.byte	0x11
 2367 0614 B6000000 		.4byte	0xb6
 2368 0618 05       		.uleb128 0x5
 2369 0619 03       		.byte	0x3
 2370 061a 00000000 		.4byte	ts_enc
 2371 061e 1D       		.uleb128 0x1d
 2372 061f AA050000 		.4byte	.LASF85
 2373 0623 05       		.byte	0x5
 2374 0624 12       		.byte	0x12
 2375 0625 B6000000 		.4byte	0xb6
 2376 0629 05       		.uleb128 0x5
 2377 062a 03       		.byte	0x3
 2378 062b 00000000 		.4byte	ts_update
 2379 062f 1D       		.uleb128 0x1d
 2380 0630 3F050000 		.4byte	.LASF86
 2381 0634 05       		.byte	0x5
 2382 0635 13       		.byte	0x13
 2383 0636 B6000000 		.4byte	0xb6
 2384 063a 05       		.uleb128 0x5
 2385 063b 03       		.byte	0x3
 2386 063c 00000000 		.4byte	ts_speed
 2387 0640 1D       		.uleb128 0x1d
 2388 0641 95050000 		.4byte	.LASF87
 2389 0645 05       		.byte	0x5
 2390 0646 14       		.byte	0x14
 2391 0647 B6000000 		.4byte	0xb6
 2392 064b 05       		.uleb128 0x5
 2393 064c 03       		.byte	0x3
 2394 064d 00000000 		.4byte	ts_display
 2395 0651 1D       		.uleb128 0x1d
 2396 0652 4E050000 		.4byte	.LASF88
 2397 0656 05       		.byte	0x5
 2398 0657 16       		.byte	0x16
 2399 0658 AA000000 		.4byte	0xaa
 2400 065c 05       		.uleb128 0x5
 2401 065d 03       		.byte	0x3
 2402 065e 00000000 		.4byte	flag_ts_enc
 2403 0662 1D       		.uleb128 0x1d
 2404 0663 C4020000 		.4byte	.LASF89
 2405 0667 05       		.byte	0x5
 2406 0668 17       		.byte	0x17
 2407 0669 AA000000 		.4byte	0xaa
 2408 066d 05       		.uleb128 0x5
 2409 066e 03       		.byte	0x3
 2410 066f 00000000 		.4byte	flag_ts_update
 2411 0673 1D       		.uleb128 0x1d
 2412 0674 DC040000 		.4byte	.LASF90
 2413 0678 05       		.byte	0x5
 2414 0679 18       		.byte	0x18
 2415 067a AA000000 		.4byte	0xaa
 2416 067e 05       		.uleb128 0x5
 2417 067f 03       		.byte	0x3
 2418 0680 00000000 		.4byte	flag_ts_speed
 2419 0684 1D       		.uleb128 0x1d
 2420 0685 52030000 		.4byte	.LASF91
 2421 0689 05       		.byte	0x5
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 55


 2422 068a 19       		.byte	0x19
 2423 068b AA000000 		.4byte	0xaa
 2424 068f 05       		.uleb128 0x5
 2425 0690 03       		.byte	0x3
 2426 0691 00000000 		.4byte	flag_ts_display
 2427 0695 1D       		.uleb128 0x1d
 2428 0696 62030000 		.4byte	.LASF92
 2429 069a 05       		.byte	0x5
 2430 069b 1C       		.byte	0x1c
 2431 069c AA000000 		.4byte	0xaa
 2432 06a0 05       		.uleb128 0x5
 2433 06a1 03       		.byte	0x3
 2434 06a2 00000000 		.4byte	flag_rx
 2435 06a6 1D       		.uleb128 0x1d
 2436 06a7 3D000000 		.4byte	.LASF93
 2437 06ab 05       		.byte	0x5
 2438 06ac 1D       		.byte	0x1d
 2439 06ad AA000000 		.4byte	0xaa
 2440 06b1 05       		.uleb128 0x5
 2441 06b2 03       		.byte	0x3
 2442 06b3 00000000 		.4byte	flag_packet
 2443 06b7 1D       		.uleb128 0x1d
 2444 06b8 2E040000 		.4byte	.LASF94
 2445 06bc 05       		.byte	0x5
 2446 06bd 1E       		.byte	0x1e
 2447 06be AA000000 		.4byte	0xaa
 2448 06c2 05       		.uleb128 0x5
 2449 06c3 03       		.byte	0x3
 2450 06c4 00000000 		.4byte	flag_KB_string
 2451 06c8 1D       		.uleb128 0x1d
 2452 06c9 D4030000 		.4byte	.LASF95
 2453 06cd 05       		.byte	0x5
 2454 06ce 20       		.byte	0x20
 2455 06cf AA000000 		.4byte	0xaa
 2456 06d3 05       		.uleb128 0x5
 2457 06d4 03       		.byte	0x3
 2458 06d5 00000000 		.4byte	dataready_flag
 2459 06d9 1D       		.uleb128 0x1d
 2460 06da BF050000 		.4byte	.LASF96
 2461 06de 05       		.byte	0x5
 2462 06df 22       		.byte	0x22
 2463 06e0 AA000000 		.4byte	0xaa
 2464 06e4 05       		.uleb128 0x5
 2465 06e5 03       		.byte	0x3
 2466 06e6 00000000 		.4byte	flag_rf_transmission_active
 2467 06ea 10       		.uleb128 0x10
 2468 06eb 8A000000 		.4byte	0x8a
 2469 06ef FA060000 		.4byte	0x6fa
 2470 06f3 1E       		.uleb128 0x1e
 2471 06f4 7D000000 		.4byte	0x7d
 2472 06f8 3F       		.byte	0x3f
 2473 06f9 00       		.byte	0
 2474 06fa 1D       		.uleb128 0x1d
 2475 06fb C5040000 		.4byte	.LASF97
 2476 06ff 05       		.byte	0x5
 2477 0700 25       		.byte	0x25
 2478 0701 EA060000 		.4byte	0x6ea
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 56


 2479 0705 05       		.uleb128 0x5
 2480 0706 03       		.byte	0x3
 2481 0707 00000000 		.4byte	displaystring
 2482 070b 1D       		.uleb128 0x1d
 2483 070c 4D030000 		.4byte	.LASF98
 2484 0710 05       		.byte	0x5
 2485 0711 26       		.byte	0x26
 2486 0712 EA060000 		.4byte	0x6ea
 2487 0716 05       		.uleb128 0x5
 2488 0717 03       		.byte	0x3
 2489 0718 00000000 		.4byte	line
 2490 071c 1D       		.uleb128 0x1d
 2491 071d 88030000 		.4byte	.LASF99
 2492 0721 05       		.byte	0x5
 2493 0722 26       		.byte	0x26
 2494 0723 EA060000 		.4byte	0x6ea
 2495 0727 05       		.uleb128 0x5
 2496 0728 03       		.byte	0x3
 2497 0729 00000000 		.4byte	entry
 2498 072d 10       		.uleb128 0x10
 2499 072e AA000000 		.4byte	0xaa
 2500 0732 3D070000 		.4byte	0x73d
 2501 0736 1E       		.uleb128 0x1e
 2502 0737 7D000000 		.4byte	0x7d
 2503 073b 3F       		.byte	0x3f
 2504 073c 00       		.byte	0
 2505 073d 1D       		.uleb128 0x1d
 2506 073e C2000000 		.4byte	.LASF100
 2507 0742 05       		.byte	0x5
 2508 0743 27       		.byte	0x27
 2509 0744 2D070000 		.4byte	0x72d
 2510 0748 05       		.uleb128 0x5
 2511 0749 03       		.byte	0x3
 2512 074a 00000000 		.4byte	usbBuffer
 2513 074e 1D       		.uleb128 0x1d
 2514 074f A2000000 		.4byte	.LASF101
 2515 0753 05       		.byte	0x5
 2516 0754 3C       		.byte	0x3c
 2517 0755 DA000000 		.4byte	0xda
 2518 0759 05       		.uleb128 0x5
 2519 075a 03       		.byte	0x3
 2520 075b 00000000 		.4byte	system_state
 2521 075f 1D       		.uleb128 0x1d
 2522 0760 66020000 		.4byte	.LASF102
 2523 0764 01       		.byte	0x1
 2524 0765 73       		.byte	0x73
 2525 0766 68000000 		.4byte	0x68
 2526 076a 05       		.uleb128 0x5
 2527 076b 03       		.byte	0x3
 2528 076c 00000000 		.4byte	changeMotor
 2529 0770 1D       		.uleb128 0x1d
 2530 0771 85000000 		.4byte	.LASF103
 2531 0775 01       		.byte	0x1
 2532 0776 74       		.byte	0x74
 2533 0777 68000000 		.4byte	0x68
 2534 077b 05       		.uleb128 0x5
 2535 077c 03       		.byte	0x3
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 57


 2536 077d 00000000 		.4byte	checkLight
 2537 0781 1D       		.uleb128 0x1d
 2538 0782 98010000 		.4byte	.LASF104
 2539 0786 01       		.byte	0x1
 2540 0787 75       		.byte	0x75
 2541 0788 68000000 		.4byte	0x68
 2542 078c 05       		.uleb128 0x5
 2543 078d 03       		.byte	0x3
 2544 078e 00000000 		.4byte	lightState
 2545 0792 10       		.uleb128 0x10
 2546 0793 A2070000 		.4byte	0x7a2
 2547 0797 A2070000 		.4byte	0x7a2
 2548 079b 1E       		.uleb128 0x1e
 2549 079c 7D000000 		.4byte	0x7d
 2550 07a0 02       		.byte	0x2
 2551 07a1 00       		.byte	0
 2552 07a2 1A       		.uleb128 0x1a
 2553 07a3 68000000 		.4byte	0x68
 2554 07a7 1D       		.uleb128 0x1d
 2555 07a8 AF030000 		.4byte	.LASF105
 2556 07ac 01       		.byte	0x1
 2557 07ad 76       		.byte	0x76
 2558 07ae B8070000 		.4byte	0x7b8
 2559 07b2 05       		.uleb128 0x5
 2560 07b3 03       		.byte	0x3
 2561 07b4 00000000 		.4byte	lightDetectedFront
 2562 07b8 1A       		.uleb128 0x1a
 2563 07b9 92070000 		.4byte	0x792
 2564 07bd 1D       		.uleb128 0x1d
 2565 07be 72020000 		.4byte	.LASF106
 2566 07c2 01       		.byte	0x1
 2567 07c3 77       		.byte	0x77
 2568 07c4 CE070000 		.4byte	0x7ce
 2569 07c8 05       		.uleb128 0x5
 2570 07c9 03       		.byte	0x3
 2571 07ca 00000000 		.4byte	lightDetectedBack
 2572 07ce 1A       		.uleb128 0x1a
 2573 07cf 92070000 		.4byte	0x792
 2574 07d3 1D       		.uleb128 0x1d
 2575 07d4 54000000 		.4byte	.LASF107
 2576 07d8 01       		.byte	0x1
 2577 07d9 78       		.byte	0x78
 2578 07da A2070000 		.4byte	0x7a2
 2579 07de 05       		.uleb128 0x5
 2580 07df 03       		.byte	0x3
 2581 07e0 00000000 		.4byte	counteoc
 2582 07e4 1D       		.uleb128 0x1d
 2583 07e5 3E030000 		.4byte	.LASF108
 2584 07e9 01       		.byte	0x1
 2585 07ea 79       		.byte	0x79
 2586 07eb A2070000 		.4byte	0x7a2
 2587 07ef 05       		.uleb128 0x5
 2588 07f0 03       		.byte	0x3
 2589 07f1 00000000 		.4byte	processSensors
 2590 07f5 1D       		.uleb128 0x1d
 2591 07f6 22060000 		.4byte	.LASF109
 2592 07fa 01       		.byte	0x1
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 58


 2593 07fb 7A       		.byte	0x7a
 2594 07fc A2070000 		.4byte	0x7a2
 2595 0800 05       		.uleb128 0x5
 2596 0801 03       		.byte	0x3
 2597 0802 00000000 		.4byte	middle
 2598 0806 00       		.byte	0
 2599              		.section	.debug_abbrev,"",%progbits
 2600              	.Ldebug_abbrev0:
 2601 0000 01       		.uleb128 0x1
 2602 0001 11       		.uleb128 0x11
 2603 0002 01       		.byte	0x1
 2604 0003 25       		.uleb128 0x25
 2605 0004 0E       		.uleb128 0xe
 2606 0005 13       		.uleb128 0x13
 2607 0006 0B       		.uleb128 0xb
 2608 0007 03       		.uleb128 0x3
 2609 0008 0E       		.uleb128 0xe
 2610 0009 1B       		.uleb128 0x1b
 2611 000a 0E       		.uleb128 0xe
 2612 000b 55       		.uleb128 0x55
 2613 000c 17       		.uleb128 0x17
 2614 000d 11       		.uleb128 0x11
 2615 000e 01       		.uleb128 0x1
 2616 000f 10       		.uleb128 0x10
 2617 0010 17       		.uleb128 0x17
 2618 0011 00       		.byte	0
 2619 0012 00       		.byte	0
 2620 0013 02       		.uleb128 0x2
 2621 0014 24       		.uleb128 0x24
 2622 0015 00       		.byte	0
 2623 0016 0B       		.uleb128 0xb
 2624 0017 0B       		.uleb128 0xb
 2625 0018 3E       		.uleb128 0x3e
 2626 0019 0B       		.uleb128 0xb
 2627 001a 03       		.uleb128 0x3
 2628 001b 0E       		.uleb128 0xe
 2629 001c 00       		.byte	0
 2630 001d 00       		.byte	0
 2631 001e 03       		.uleb128 0x3
 2632 001f 16       		.uleb128 0x16
 2633 0020 00       		.byte	0
 2634 0021 03       		.uleb128 0x3
 2635 0022 0E       		.uleb128 0xe
 2636 0023 3A       		.uleb128 0x3a
 2637 0024 0B       		.uleb128 0xb
 2638 0025 3B       		.uleb128 0x3b
 2639 0026 0B       		.uleb128 0xb
 2640 0027 49       		.uleb128 0x49
 2641 0028 13       		.uleb128 0x13
 2642 0029 00       		.byte	0
 2643 002a 00       		.byte	0
 2644 002b 04       		.uleb128 0x4
 2645 002c 24       		.uleb128 0x24
 2646 002d 00       		.byte	0
 2647 002e 0B       		.uleb128 0xb
 2648 002f 0B       		.uleb128 0xb
 2649 0030 3E       		.uleb128 0x3e
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 59


 2650 0031 0B       		.uleb128 0xb
 2651 0032 03       		.uleb128 0x3
 2652 0033 08       		.uleb128 0x8
 2653 0034 00       		.byte	0
 2654 0035 00       		.byte	0
 2655 0036 05       		.uleb128 0x5
 2656 0037 0F       		.uleb128 0xf
 2657 0038 00       		.byte	0
 2658 0039 0B       		.uleb128 0xb
 2659 003a 0B       		.uleb128 0xb
 2660 003b 49       		.uleb128 0x49
 2661 003c 13       		.uleb128 0x13
 2662 003d 00       		.byte	0
 2663 003e 00       		.byte	0
 2664 003f 06       		.uleb128 0x6
 2665 0040 16       		.uleb128 0x16
 2666 0041 00       		.byte	0
 2667 0042 03       		.uleb128 0x3
 2668 0043 0E       		.uleb128 0xe
 2669 0044 3A       		.uleb128 0x3a
 2670 0045 0B       		.uleb128 0xb
 2671 0046 3B       		.uleb128 0x3b
 2672 0047 05       		.uleb128 0x5
 2673 0048 49       		.uleb128 0x49
 2674 0049 13       		.uleb128 0x13
 2675 004a 00       		.byte	0
 2676 004b 00       		.byte	0
 2677 004c 07       		.uleb128 0x7
 2678 004d 13       		.uleb128 0x13
 2679 004e 01       		.byte	0x1
 2680 004f 03       		.uleb128 0x3
 2681 0050 0E       		.uleb128 0xe
 2682 0051 0B       		.uleb128 0xb
 2683 0052 0B       		.uleb128 0xb
 2684 0053 3A       		.uleb128 0x3a
 2685 0054 0B       		.uleb128 0xb
 2686 0055 3B       		.uleb128 0x3b
 2687 0056 0B       		.uleb128 0xb
 2688 0057 01       		.uleb128 0x1
 2689 0058 13       		.uleb128 0x13
 2690 0059 00       		.byte	0
 2691 005a 00       		.byte	0
 2692 005b 08       		.uleb128 0x8
 2693 005c 0D       		.uleb128 0xd
 2694 005d 00       		.byte	0
 2695 005e 03       		.uleb128 0x3
 2696 005f 0E       		.uleb128 0xe
 2697 0060 3A       		.uleb128 0x3a
 2698 0061 0B       		.uleb128 0xb
 2699 0062 3B       		.uleb128 0x3b
 2700 0063 0B       		.uleb128 0xb
 2701 0064 49       		.uleb128 0x49
 2702 0065 13       		.uleb128 0x13
 2703 0066 38       		.uleb128 0x38
 2704 0067 0B       		.uleb128 0xb
 2705 0068 00       		.byte	0
 2706 0069 00       		.byte	0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 60


 2707 006a 09       		.uleb128 0x9
 2708 006b 2E       		.uleb128 0x2e
 2709 006c 00       		.byte	0
 2710 006d 3F       		.uleb128 0x3f
 2711 006e 19       		.uleb128 0x19
 2712 006f 03       		.uleb128 0x3
 2713 0070 0E       		.uleb128 0xe
 2714 0071 3A       		.uleb128 0x3a
 2715 0072 0B       		.uleb128 0xb
 2716 0073 3B       		.uleb128 0x3b
 2717 0074 0B       		.uleb128 0xb
 2718 0075 11       		.uleb128 0x11
 2719 0076 01       		.uleb128 0x1
 2720 0077 12       		.uleb128 0x12
 2721 0078 06       		.uleb128 0x6
 2722 0079 40       		.uleb128 0x40
 2723 007a 18       		.uleb128 0x18
 2724 007b 9642     		.uleb128 0x2116
 2725 007d 19       		.uleb128 0x19
 2726 007e 00       		.byte	0
 2727 007f 00       		.byte	0
 2728 0080 0A       		.uleb128 0xa
 2729 0081 2E       		.uleb128 0x2e
 2730 0082 01       		.byte	0x1
 2731 0083 3F       		.uleb128 0x3f
 2732 0084 19       		.uleb128 0x19
 2733 0085 03       		.uleb128 0x3
 2734 0086 0E       		.uleb128 0xe
 2735 0087 3A       		.uleb128 0x3a
 2736 0088 0B       		.uleb128 0xb
 2737 0089 3B       		.uleb128 0x3b
 2738 008a 0B       		.uleb128 0xb
 2739 008b 27       		.uleb128 0x27
 2740 008c 19       		.uleb128 0x19
 2741 008d 11       		.uleb128 0x11
 2742 008e 01       		.uleb128 0x1
 2743 008f 12       		.uleb128 0x12
 2744 0090 06       		.uleb128 0x6
 2745 0091 40       		.uleb128 0x40
 2746 0092 18       		.uleb128 0x18
 2747 0093 9642     		.uleb128 0x2116
 2748 0095 19       		.uleb128 0x19
 2749 0096 01       		.uleb128 0x1
 2750 0097 13       		.uleb128 0x13
 2751 0098 00       		.byte	0
 2752 0099 00       		.byte	0
 2753 009a 0B       		.uleb128 0xb
 2754 009b 05       		.uleb128 0x5
 2755 009c 00       		.byte	0
 2756 009d 03       		.uleb128 0x3
 2757 009e 08       		.uleb128 0x8
 2758 009f 3A       		.uleb128 0x3a
 2759 00a0 0B       		.uleb128 0xb
 2760 00a1 3B       		.uleb128 0x3b
 2761 00a2 0B       		.uleb128 0xb
 2762 00a3 49       		.uleb128 0x49
 2763 00a4 13       		.uleb128 0x13
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 61


 2764 00a5 02       		.uleb128 0x2
 2765 00a6 18       		.uleb128 0x18
 2766 00a7 00       		.byte	0
 2767 00a8 00       		.byte	0
 2768 00a9 0C       		.uleb128 0xc
 2769 00aa 0B       		.uleb128 0xb
 2770 00ab 01       		.byte	0x1
 2771 00ac 11       		.uleb128 0x11
 2772 00ad 01       		.uleb128 0x1
 2773 00ae 12       		.uleb128 0x12
 2774 00af 06       		.uleb128 0x6
 2775 00b0 00       		.byte	0
 2776 00b1 00       		.byte	0
 2777 00b2 0D       		.uleb128 0xd
 2778 00b3 34       		.uleb128 0x34
 2779 00b4 00       		.byte	0
 2780 00b5 03       		.uleb128 0x3
 2781 00b6 0E       		.uleb128 0xe
 2782 00b7 3A       		.uleb128 0x3a
 2783 00b8 0B       		.uleb128 0xb
 2784 00b9 3B       		.uleb128 0x3b
 2785 00ba 0B       		.uleb128 0xb
 2786 00bb 49       		.uleb128 0x49
 2787 00bc 13       		.uleb128 0x13
 2788 00bd 02       		.uleb128 0x2
 2789 00be 18       		.uleb128 0x18
 2790 00bf 00       		.byte	0
 2791 00c0 00       		.byte	0
 2792 00c1 0E       		.uleb128 0xe
 2793 00c2 2E       		.uleb128 0x2e
 2794 00c3 00       		.byte	0
 2795 00c4 3F       		.uleb128 0x3f
 2796 00c5 19       		.uleb128 0x19
 2797 00c6 03       		.uleb128 0x3
 2798 00c7 0E       		.uleb128 0xe
 2799 00c8 3A       		.uleb128 0x3a
 2800 00c9 0B       		.uleb128 0xb
 2801 00ca 3B       		.uleb128 0x3b
 2802 00cb 0B       		.uleb128 0xb
 2803 00cc 27       		.uleb128 0x27
 2804 00cd 19       		.uleb128 0x19
 2805 00ce 11       		.uleb128 0x11
 2806 00cf 01       		.uleb128 0x1
 2807 00d0 12       		.uleb128 0x12
 2808 00d1 06       		.uleb128 0x6
 2809 00d2 40       		.uleb128 0x40
 2810 00d3 18       		.uleb128 0x18
 2811 00d4 9742     		.uleb128 0x2117
 2812 00d6 19       		.uleb128 0x19
 2813 00d7 00       		.byte	0
 2814 00d8 00       		.byte	0
 2815 00d9 0F       		.uleb128 0xf
 2816 00da 2E       		.uleb128 0x2e
 2817 00db 01       		.byte	0x1
 2818 00dc 3F       		.uleb128 0x3f
 2819 00dd 19       		.uleb128 0x19
 2820 00de 03       		.uleb128 0x3
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 62


 2821 00df 0E       		.uleb128 0xe
 2822 00e0 3A       		.uleb128 0x3a
 2823 00e1 0B       		.uleb128 0xb
 2824 00e2 3B       		.uleb128 0x3b
 2825 00e3 0B       		.uleb128 0xb
 2826 00e4 11       		.uleb128 0x11
 2827 00e5 01       		.uleb128 0x1
 2828 00e6 12       		.uleb128 0x12
 2829 00e7 06       		.uleb128 0x6
 2830 00e8 40       		.uleb128 0x40
 2831 00e9 18       		.uleb128 0x18
 2832 00ea 9642     		.uleb128 0x2116
 2833 00ec 19       		.uleb128 0x19
 2834 00ed 01       		.uleb128 0x1
 2835 00ee 13       		.uleb128 0x13
 2836 00ef 00       		.byte	0
 2837 00f0 00       		.byte	0
 2838 00f1 10       		.uleb128 0x10
 2839 00f2 01       		.uleb128 0x1
 2840 00f3 01       		.byte	0x1
 2841 00f4 49       		.uleb128 0x49
 2842 00f5 13       		.uleb128 0x13
 2843 00f6 01       		.uleb128 0x1
 2844 00f7 13       		.uleb128 0x13
 2845 00f8 00       		.byte	0
 2846 00f9 00       		.byte	0
 2847 00fa 11       		.uleb128 0x11
 2848 00fb 21       		.uleb128 0x21
 2849 00fc 00       		.byte	0
 2850 00fd 49       		.uleb128 0x49
 2851 00fe 13       		.uleb128 0x13
 2852 00ff 2F       		.uleb128 0x2f
 2853 0100 05       		.uleb128 0x5
 2854 0101 00       		.byte	0
 2855 0102 00       		.byte	0
 2856 0103 12       		.uleb128 0x12
 2857 0104 2E       		.uleb128 0x2e
 2858 0105 00       		.byte	0
 2859 0106 3F       		.uleb128 0x3f
 2860 0107 19       		.uleb128 0x19
 2861 0108 03       		.uleb128 0x3
 2862 0109 0E       		.uleb128 0xe
 2863 010a 3A       		.uleb128 0x3a
 2864 010b 0B       		.uleb128 0xb
 2865 010c 3B       		.uleb128 0x3b
 2866 010d 0B       		.uleb128 0xb
 2867 010e 27       		.uleb128 0x27
 2868 010f 19       		.uleb128 0x19
 2869 0110 11       		.uleb128 0x11
 2870 0111 01       		.uleb128 0x1
 2871 0112 12       		.uleb128 0x12
 2872 0113 06       		.uleb128 0x6
 2873 0114 40       		.uleb128 0x40
 2874 0115 18       		.uleb128 0x18
 2875 0116 9642     		.uleb128 0x2116
 2876 0118 19       		.uleb128 0x19
 2877 0119 00       		.byte	0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 63


 2878 011a 00       		.byte	0
 2879 011b 13       		.uleb128 0x13
 2880 011c 2E       		.uleb128 0x2e
 2881 011d 01       		.byte	0x1
 2882 011e 3F       		.uleb128 0x3f
 2883 011f 19       		.uleb128 0x19
 2884 0120 03       		.uleb128 0x3
 2885 0121 0E       		.uleb128 0xe
 2886 0122 3A       		.uleb128 0x3a
 2887 0123 0B       		.uleb128 0xb
 2888 0124 3B       		.uleb128 0x3b
 2889 0125 05       		.uleb128 0x5
 2890 0126 49       		.uleb128 0x49
 2891 0127 13       		.uleb128 0x13
 2892 0128 11       		.uleb128 0x11
 2893 0129 01       		.uleb128 0x1
 2894 012a 12       		.uleb128 0x12
 2895 012b 06       		.uleb128 0x6
 2896 012c 40       		.uleb128 0x40
 2897 012d 18       		.uleb128 0x18
 2898 012e 9642     		.uleb128 0x2116
 2899 0130 19       		.uleb128 0x19
 2900 0131 01       		.uleb128 0x1
 2901 0132 13       		.uleb128 0x13
 2902 0133 00       		.byte	0
 2903 0134 00       		.byte	0
 2904 0135 14       		.uleb128 0x14
 2905 0136 34       		.uleb128 0x34
 2906 0137 00       		.byte	0
 2907 0138 03       		.uleb128 0x3
 2908 0139 0E       		.uleb128 0xe
 2909 013a 3A       		.uleb128 0x3a
 2910 013b 0B       		.uleb128 0xb
 2911 013c 3B       		.uleb128 0x3b
 2912 013d 05       		.uleb128 0x5
 2913 013e 49       		.uleb128 0x49
 2914 013f 13       		.uleb128 0x13
 2915 0140 02       		.uleb128 0x2
 2916 0141 18       		.uleb128 0x18
 2917 0142 00       		.byte	0
 2918 0143 00       		.byte	0
 2919 0144 15       		.uleb128 0x15
 2920 0145 2E       		.uleb128 0x2e
 2921 0146 01       		.byte	0x1
 2922 0147 3F       		.uleb128 0x3f
 2923 0148 19       		.uleb128 0x19
 2924 0149 03       		.uleb128 0x3
 2925 014a 0E       		.uleb128 0xe
 2926 014b 3A       		.uleb128 0x3a
 2927 014c 0B       		.uleb128 0xb
 2928 014d 3B       		.uleb128 0x3b
 2929 014e 05       		.uleb128 0x5
 2930 014f 49       		.uleb128 0x49
 2931 0150 13       		.uleb128 0x13
 2932 0151 11       		.uleb128 0x11
 2933 0152 01       		.uleb128 0x1
 2934 0153 12       		.uleb128 0x12
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 64


 2935 0154 06       		.uleb128 0x6
 2936 0155 40       		.uleb128 0x40
 2937 0156 18       		.uleb128 0x18
 2938 0157 9742     		.uleb128 0x2117
 2939 0159 19       		.uleb128 0x19
 2940 015a 01       		.uleb128 0x1
 2941 015b 13       		.uleb128 0x13
 2942 015c 00       		.byte	0
 2943 015d 00       		.byte	0
 2944 015e 16       		.uleb128 0x16
 2945 015f 34       		.uleb128 0x34
 2946 0160 00       		.byte	0
 2947 0161 03       		.uleb128 0x3
 2948 0162 08       		.uleb128 0x8
 2949 0163 3A       		.uleb128 0x3a
 2950 0164 0B       		.uleb128 0xb
 2951 0165 3B       		.uleb128 0x3b
 2952 0166 05       		.uleb128 0x5
 2953 0167 49       		.uleb128 0x49
 2954 0168 13       		.uleb128 0x13
 2955 0169 02       		.uleb128 0x2
 2956 016a 18       		.uleb128 0x18
 2957 016b 00       		.byte	0
 2958 016c 00       		.byte	0
 2959 016d 17       		.uleb128 0x17
 2960 016e 2E       		.uleb128 0x2e
 2961 016f 01       		.byte	0x1
 2962 0170 3F       		.uleb128 0x3f
 2963 0171 19       		.uleb128 0x19
 2964 0172 03       		.uleb128 0x3
 2965 0173 0E       		.uleb128 0xe
 2966 0174 3A       		.uleb128 0x3a
 2967 0175 0B       		.uleb128 0xb
 2968 0176 3B       		.uleb128 0x3b
 2969 0177 05       		.uleb128 0x5
 2970 0178 27       		.uleb128 0x27
 2971 0179 19       		.uleb128 0x19
 2972 017a 11       		.uleb128 0x11
 2973 017b 01       		.uleb128 0x1
 2974 017c 12       		.uleb128 0x12
 2975 017d 06       		.uleb128 0x6
 2976 017e 40       		.uleb128 0x40
 2977 017f 18       		.uleb128 0x18
 2978 0180 9642     		.uleb128 0x2116
 2979 0182 19       		.uleb128 0x19
 2980 0183 01       		.uleb128 0x1
 2981 0184 13       		.uleb128 0x13
 2982 0185 00       		.byte	0
 2983 0186 00       		.byte	0
 2984 0187 18       		.uleb128 0x18
 2985 0188 05       		.uleb128 0x5
 2986 0189 00       		.byte	0
 2987 018a 03       		.uleb128 0x3
 2988 018b 08       		.uleb128 0x8
 2989 018c 3A       		.uleb128 0x3a
 2990 018d 0B       		.uleb128 0xb
 2991 018e 3B       		.uleb128 0x3b
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 65


 2992 018f 05       		.uleb128 0x5
 2993 0190 49       		.uleb128 0x49
 2994 0191 13       		.uleb128 0x13
 2995 0192 02       		.uleb128 0x2
 2996 0193 18       		.uleb128 0x18
 2997 0194 00       		.byte	0
 2998 0195 00       		.byte	0
 2999 0196 19       		.uleb128 0x19
 3000 0197 2E       		.uleb128 0x2e
 3001 0198 01       		.byte	0x1
 3002 0199 3F       		.uleb128 0x3f
 3003 019a 19       		.uleb128 0x19
 3004 019b 03       		.uleb128 0x3
 3005 019c 0E       		.uleb128 0xe
 3006 019d 3A       		.uleb128 0x3a
 3007 019e 0B       		.uleb128 0xb
 3008 019f 3B       		.uleb128 0x3b
 3009 01a0 05       		.uleb128 0x5
 3010 01a1 11       		.uleb128 0x11
 3011 01a2 01       		.uleb128 0x1
 3012 01a3 12       		.uleb128 0x12
 3013 01a4 06       		.uleb128 0x6
 3014 01a5 40       		.uleb128 0x40
 3015 01a6 18       		.uleb128 0x18
 3016 01a7 9642     		.uleb128 0x2116
 3017 01a9 19       		.uleb128 0x19
 3018 01aa 01       		.uleb128 0x1
 3019 01ab 13       		.uleb128 0x13
 3020 01ac 00       		.byte	0
 3021 01ad 00       		.byte	0
 3022 01ae 1A       		.uleb128 0x1a
 3023 01af 35       		.uleb128 0x35
 3024 01b0 00       		.byte	0
 3025 01b1 49       		.uleb128 0x49
 3026 01b2 13       		.uleb128 0x13
 3027 01b3 00       		.byte	0
 3028 01b4 00       		.byte	0
 3029 01b5 1B       		.uleb128 0x1b
 3030 01b6 34       		.uleb128 0x34
 3031 01b7 00       		.byte	0
 3032 01b8 03       		.uleb128 0x3
 3033 01b9 0E       		.uleb128 0xe
 3034 01ba 3A       		.uleb128 0x3a
 3035 01bb 0B       		.uleb128 0xb
 3036 01bc 3B       		.uleb128 0x3b
 3037 01bd 05       		.uleb128 0x5
 3038 01be 49       		.uleb128 0x49
 3039 01bf 13       		.uleb128 0x13
 3040 01c0 3F       		.uleb128 0x3f
 3041 01c1 19       		.uleb128 0x19
 3042 01c2 3C       		.uleb128 0x3c
 3043 01c3 19       		.uleb128 0x19
 3044 01c4 00       		.byte	0
 3045 01c5 00       		.byte	0
 3046 01c6 1C       		.uleb128 0x1c
 3047 01c7 34       		.uleb128 0x34
 3048 01c8 00       		.byte	0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 66


 3049 01c9 03       		.uleb128 0x3
 3050 01ca 08       		.uleb128 0x8
 3051 01cb 3A       		.uleb128 0x3a
 3052 01cc 0B       		.uleb128 0xb
 3053 01cd 3B       		.uleb128 0x3b
 3054 01ce 0B       		.uleb128 0xb
 3055 01cf 49       		.uleb128 0x49
 3056 01d0 13       		.uleb128 0x13
 3057 01d1 3F       		.uleb128 0x3f
 3058 01d2 19       		.uleb128 0x19
 3059 01d3 02       		.uleb128 0x2
 3060 01d4 18       		.uleb128 0x18
 3061 01d5 00       		.byte	0
 3062 01d6 00       		.byte	0
 3063 01d7 1D       		.uleb128 0x1d
 3064 01d8 34       		.uleb128 0x34
 3065 01d9 00       		.byte	0
 3066 01da 03       		.uleb128 0x3
 3067 01db 0E       		.uleb128 0xe
 3068 01dc 3A       		.uleb128 0x3a
 3069 01dd 0B       		.uleb128 0xb
 3070 01de 3B       		.uleb128 0x3b
 3071 01df 0B       		.uleb128 0xb
 3072 01e0 49       		.uleb128 0x49
 3073 01e1 13       		.uleb128 0x13
 3074 01e2 3F       		.uleb128 0x3f
 3075 01e3 19       		.uleb128 0x19
 3076 01e4 02       		.uleb128 0x2
 3077 01e5 18       		.uleb128 0x18
 3078 01e6 00       		.byte	0
 3079 01e7 00       		.byte	0
 3080 01e8 1E       		.uleb128 0x1e
 3081 01e9 21       		.uleb128 0x21
 3082 01ea 00       		.byte	0
 3083 01eb 49       		.uleb128 0x49
 3084 01ec 13       		.uleb128 0x13
 3085 01ed 2F       		.uleb128 0x2f
 3086 01ee 0B       		.uleb128 0xb
 3087 01ef 00       		.byte	0
 3088 01f0 00       		.byte	0
 3089 01f1 00       		.byte	0
 3090              		.section	.debug_aranges,"",%progbits
 3091 0000 AC000000 		.4byte	0xac
 3092 0004 0200     		.2byte	0x2
 3093 0006 00000000 		.4byte	.Ldebug_info0
 3094 000a 04       		.byte	0x4
 3095 000b 00       		.byte	0
 3096 000c 0000     		.2byte	0
 3097 000e 0000     		.2byte	0
 3098 0010 00000000 		.4byte	.LFB64
 3099 0014 14000000 		.4byte	.LFE64-.LFB64
 3100 0018 00000000 		.4byte	.LFB65
 3101 001c 2E000000 		.4byte	.LFE65-.LFB65
 3102 0020 00000000 		.4byte	.LFB66
 3103 0024 14000000 		.4byte	.LFE66-.LFB66
 3104 0028 00000000 		.4byte	.LFB67
 3105 002c 14000000 		.4byte	.LFE67-.LFB67
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 67


 3106 0030 00000000 		.4byte	.LFB68
 3107 0034 22000000 		.4byte	.LFE68-.LFB68
 3108 0038 00000000 		.4byte	.LFB69
 3109 003c 20000000 		.4byte	.LFE69-.LFB69
 3110 0040 00000000 		.4byte	.LFB70
 3111 0044 20000000 		.4byte	.LFE70-.LFB70
 3112 0048 00000000 		.4byte	.LFB71
 3113 004c 2A000000 		.4byte	.LFE71-.LFB71
 3114 0050 00000000 		.4byte	.LFB72
 3115 0054 E0000000 		.4byte	.LFE72-.LFB72
 3116 0058 00000000 		.4byte	.LFB73
 3117 005c 0C000000 		.4byte	.LFE73-.LFB73
 3118 0060 00000000 		.4byte	.LFB74
 3119 0064 C0000000 		.4byte	.LFE74-.LFB74
 3120 0068 00000000 		.4byte	.LFB75
 3121 006c 1A000000 		.4byte	.LFE75-.LFB75
 3122 0070 00000000 		.4byte	.LFB76
 3123 0074 0C000000 		.4byte	.LFE76-.LFB76
 3124 0078 00000000 		.4byte	.LFB77
 3125 007c 74020000 		.4byte	.LFE77-.LFB77
 3126 0080 00000000 		.4byte	.LFB78
 3127 0084 50000000 		.4byte	.LFE78-.LFB78
 3128 0088 00000000 		.4byte	.LFB79
 3129 008c 50000000 		.4byte	.LFE79-.LFB79
 3130 0090 00000000 		.4byte	.LFB80
 3131 0094 3E000000 		.4byte	.LFE80-.LFB80
 3132 0098 00000000 		.4byte	.LFB81
 3133 009c 26000000 		.4byte	.LFE81-.LFB81
 3134 00a0 00000000 		.4byte	.LFB82
 3135 00a4 CC000000 		.4byte	.LFE82-.LFB82
 3136 00a8 00000000 		.4byte	0
 3137 00ac 00000000 		.4byte	0
 3138              		.section	.debug_ranges,"",%progbits
 3139              	.Ldebug_ranges0:
 3140 0000 00000000 		.4byte	.LFB64
 3141 0004 14000000 		.4byte	.LFE64
 3142 0008 00000000 		.4byte	.LFB65
 3143 000c 2E000000 		.4byte	.LFE65
 3144 0010 00000000 		.4byte	.LFB66
 3145 0014 14000000 		.4byte	.LFE66
 3146 0018 00000000 		.4byte	.LFB67
 3147 001c 14000000 		.4byte	.LFE67
 3148 0020 00000000 		.4byte	.LFB68
 3149 0024 22000000 		.4byte	.LFE68
 3150 0028 00000000 		.4byte	.LFB69
 3151 002c 20000000 		.4byte	.LFE69
 3152 0030 00000000 		.4byte	.LFB70
 3153 0034 20000000 		.4byte	.LFE70
 3154 0038 00000000 		.4byte	.LFB71
 3155 003c 2A000000 		.4byte	.LFE71
 3156 0040 00000000 		.4byte	.LFB72
 3157 0044 E0000000 		.4byte	.LFE72
 3158 0048 00000000 		.4byte	.LFB73
 3159 004c 0C000000 		.4byte	.LFE73
 3160 0050 00000000 		.4byte	.LFB74
 3161 0054 C0000000 		.4byte	.LFE74
 3162 0058 00000000 		.4byte	.LFB75
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 68


 3163 005c 1A000000 		.4byte	.LFE75
 3164 0060 00000000 		.4byte	.LFB76
 3165 0064 0C000000 		.4byte	.LFE76
 3166 0068 00000000 		.4byte	.LFB77
 3167 006c 74020000 		.4byte	.LFE77
 3168 0070 00000000 		.4byte	.LFB78
 3169 0074 50000000 		.4byte	.LFE78
 3170 0078 00000000 		.4byte	.LFB79
 3171 007c 50000000 		.4byte	.LFE79
 3172 0080 00000000 		.4byte	.LFB80
 3173 0084 3E000000 		.4byte	.LFE80
 3174 0088 00000000 		.4byte	.LFB81
 3175 008c 26000000 		.4byte	.LFE81
 3176 0090 00000000 		.4byte	.LFB82
 3177 0094 CC000000 		.4byte	.LFE82
 3178 0098 00000000 		.4byte	0
 3179 009c 00000000 		.4byte	0
 3180              		.section	.debug_line,"",%progbits
 3181              	.Ldebug_line0:
 3182 0000 97030000 		.section	.debug_str,"MS",%progbits,1
 3182      02005601 
 3182      00000201 
 3182      FB0E0D00 
 3182      01010101 
 3183              	.LASF39:
 3184 0000 6D6F746F 		.ascii	"motorStop\000"
 3184      7253746F 
 3184      7000
 3185              	.LASF60:
 3186 000a 6973725F 		.ascii	"isr_TS_Interrupt_sample\000"
 3186      54535F49 
 3186      6E746572 
 3186      72757074 
 3186      5F73616D 
 3187              	.LASF64:
 3188 0022 64656369 		.ascii	"decisionflag\000"
 3188      73696F6E 
 3188      666C6167 
 3188      00
 3189              	.LASF84:
 3190 002f 74735F65 		.ascii	"ts_enc\000"
 3190      6E6300
 3191              	.LASF14:
 3192 0036 646F7562 		.ascii	"double\000"
 3192      6C6500
 3193              	.LASF93:
 3194 003d 666C6167 		.ascii	"flag_packet\000"
 3194      5F706163 
 3194      6B657400 
 3195              	.LASF77:
 3196 0049 75736250 		.ascii	"usbPutChar\000"
 3196      75744368 
 3196      617200
 3197              	.LASF107:
 3198 0054 636F756E 		.ascii	"counteoc\000"
 3198      74656F63 
 3198      00
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 69


 3199              	.LASF45:
 3200 005d 6973725F 		.ascii	"isr_eoc_Interrupt_test\000"
 3200      656F635F 
 3200      496E7465 
 3200      72727570 
 3200      745F7465 
 3201              	.LASF38:
 3202 0074 6D6F746F 		.ascii	"motorGoBackwards\000"
 3202      72476F42 
 3202      61636B77 
 3202      61726473 
 3202      00
 3203              	.LASF103:
 3204 0085 63686563 		.ascii	"checkLight\000"
 3204      6B4C6967 
 3204      687400
 3205              	.LASF33:
 3206 0090 67325F78 		.ascii	"g2_xpos\000"
 3206      706F7300 
 3207              	.LASF2:
 3208 0098 73686F72 		.ascii	"short int\000"
 3208      7420696E 
 3208      7400
 3209              	.LASF101:
 3210 00a2 73797374 		.ascii	"system_state\000"
 3210      656D5F73 
 3210      74617465 
 3210      00
 3211              	.LASF10:
 3212 00af 73697A65 		.ascii	"sizetype\000"
 3212      74797065 
 3212      00
 3213              	.LASF67:
 3214 00b8 71756575 		.ascii	"queueSize\000"
 3214      6553697A 
 3214      6500
 3215              	.LASF100:
 3216 00c2 75736242 		.ascii	"usbBuffer\000"
 3216      75666665 
 3216      7200
 3217              	.LASF110:
 3218 00cc 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3218      43313120 
 3218      352E342E 
 3218      31203230 
 3218      31363036 
 3219 00ff 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3219      20726576 
 3219      6973696F 
 3219      6E203233 
 3219      37373135 
 3220 0132 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3220      66756E63 
 3220      74696F6E 
 3220      2D736563 
 3220      74696F6E 
 3221              	.LASF61:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 70


 3222 015a 6D61696E 		.ascii	"main\000"
 3222      00
 3223              	.LASF58:
 3224 015f 6D6F746F 		.ascii	"motorRun\000"
 3224      7252756E 
 3224      00
 3225              	.LASF49:
 3226 0168 76616C75 		.ascii	"valueQ1\000"
 3226      65513100 
 3227              	.LASF50:
 3228 0170 76616C75 		.ascii	"valueQ2\000"
 3228      65513200 
 3229              	.LASF46:
 3230 0178 76616C75 		.ascii	"valueQ3\000"
 3230      65513300 
 3231              	.LASF47:
 3232 0180 76616C75 		.ascii	"valueQ4\000"
 3232      65513400 
 3233              	.LASF48:
 3234 0188 76616C75 		.ascii	"valueQ5\000"
 3234      65513500 
 3235              	.LASF51:
 3236 0190 76616C75 		.ascii	"valueQ6\000"
 3236      65513600 
 3237              	.LASF104:
 3238 0198 6C696768 		.ascii	"lightState\000"
 3238      74537461 
 3238      746500
 3239              	.LASF17:
 3240 01a3 75696E74 		.ascii	"uint16\000"
 3240      313600
 3241              	.LASF21:
 3242 01aa 696E6465 		.ascii	"index\000"
 3242      7800
 3243              	.LASF113:
 3244 01b0 64617461 		.ascii	"data_main\000"
 3244      5F6D6169 
 3244      6E00
 3245              	.LASF19:
 3246 01ba 696E7431 		.ascii	"int16\000"
 3246      3600
 3247              	.LASF66:
 3248 01c0 696E6465 		.ascii	"indexPointer\000"
 3248      78506F69 
 3248      6E746572 
 3248      00
 3249              	.LASF112:
 3250 01cd 5C5C6669 		.ascii	"\\\\files.auckland.ac.nz\\myhome\\Documents\\GitHub"
 3250      6C65732E 
 3250      6175636B 
 3250      6C616E64 
 3250      2E61632E 
 3251 01fb 5C70726F 		.ascii	"\\project-project_group_11\\COMPSYS 301\\psoc stude"
 3251      6A656374 
 3251      2D70726F 
 3251      6A656374 
 3251      5F67726F 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 71


 3252 022b 6E742070 		.ascii	"nt pack\\psoc student pack\\psoc_code_base\\CS301_C"
 3252      61636B5C 
 3252      70736F63 
 3252      20737475 
 3252      64656E74 
 3253 025b 6C617373 		.ascii	"lass.cydsn\000"
 3253      2E637964 
 3253      736E00
 3254              	.LASF102:
 3255 0266 6368616E 		.ascii	"changeMotor\000"
 3255      67654D6F 
 3255      746F7200 
 3256              	.LASF106:
 3257 0272 6C696768 		.ascii	"lightDetectedBack\000"
 3257      74446574 
 3257      65637465 
 3257      64426163 
 3257      6B00
 3258              	.LASF15:
 3259 0284 666C6F61 		.ascii	"float\000"
 3259      7400
 3260              	.LASF59:
 3261 028a 6973725F 		.ascii	"isr_motor_interrupt_speed\000"
 3261      6D6F746F 
 3261      725F696E 
 3261      74657272 
 3261      7570745F 
 3262              	.LASF6:
 3263 02a4 6C6F6E67 		.ascii	"long long int\000"
 3263      206C6F6E 
 3263      6720696E 
 3263      7400
 3264              	.LASF76:
 3265 02b2 75736250 		.ascii	"usbPutString\000"
 3265      75745374 
 3265      72696E67 
 3265      00
 3266              	.LASF18:
 3267 02bf 696E7438 		.ascii	"int8\000"
 3267      00
 3268              	.LASF89:
 3269 02c4 666C6167 		.ascii	"flag_ts_update\000"
 3269      5F74735F 
 3269      75706461 
 3269      746500
 3270              	.LASF34:
 3271 02d3 67325F79 		.ascii	"g2_ypos\000"
 3271      706F7300 
 3272              	.LASF28:
 3273 02db 67305F64 		.ascii	"g0_direction\000"
 3273      69726563 
 3273      74696F6E 
 3273      00
 3274              	.LASF25:
 3275 02e8 67305F78 		.ascii	"g0_xpos\000"
 3275      706F7300 
 3276              	.LASF4:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 72


 3277 02f0 6C6F6E67 		.ascii	"long int\000"
 3277      20696E74 
 3277      00
 3278              	.LASF52:
 3279 02f9 62656769 		.ascii	"beginningCountMotor1\000"
 3279      6E6E696E 
 3279      67436F75 
 3279      6E744D6F 
 3279      746F7231 
 3280              	.LASF53:
 3281 030e 62656769 		.ascii	"beginningCountMotor2\000"
 3281      6E6E696E 
 3281      67436F75 
 3281      6E744D6F 
 3281      746F7232 
 3282              	.LASF41:
 3283 0323 6D6F746F 		.ascii	"motorBeyblade\000"
 3283      72426579 
 3283      626C6164 
 3283      6500
 3284              	.LASF56:
 3285 0331 6D6F746F 		.ascii	"motor1String\000"
 3285      72315374 
 3285      72696E67 
 3285      00
 3286              	.LASF108:
 3287 033e 70726F63 		.ascii	"processSensors\000"
 3287      65737353 
 3287      656E736F 
 3287      727300
 3288              	.LASF98:
 3289 034d 6C696E65 		.ascii	"line\000"
 3289      00
 3290              	.LASF91:
 3291 0352 666C6167 		.ascii	"flag_ts_display\000"
 3291      5F74735F 
 3291      64697370 
 3291      6C617900 
 3292              	.LASF92:
 3293 0362 666C6167 		.ascii	"flag_rx\000"
 3293      5F727800 
 3294              	.LASF55:
 3295 036a 656E6443 		.ascii	"endCountMotor1\000"
 3295      6F756E74 
 3295      4D6F746F 
 3295      723100
 3296              	.LASF54:
 3297 0379 656E6443 		.ascii	"endCountMotor2\000"
 3297      6F756E74 
 3297      4D6F746F 
 3297      723200
 3298              	.LASF99:
 3299 0388 656E7472 		.ascii	"entry\000"
 3299      7900
 3300              	.LASF9:
 3301 038e 6C6F6E67 		.ascii	"long double\000"
 3301      20646F75 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 73


 3301      626C6500 
 3302              	.LASF73:
 3303 039a 76616C75 		.ascii	"value1\000"
 3303      653100
 3304              	.LASF1:
 3305 03a1 756E7369 		.ascii	"unsigned char\000"
 3305      676E6564 
 3305      20636861 
 3305      7200
 3306              	.LASF105:
 3307 03af 6C696768 		.ascii	"lightDetectedFront\000"
 3307      74446574 
 3307      65637465 
 3307      6446726F 
 3307      6E7400
 3308              	.LASF27:
 3309 03c2 67305F73 		.ascii	"g0_speed\000"
 3309      70656564 
 3309      00
 3310              	.LASF31:
 3311 03cb 67315F73 		.ascii	"g1_speed\000"
 3311      70656564 
 3311      00
 3312              	.LASF95:
 3313 03d4 64617461 		.ascii	"dataready_flag\000"
 3313      72656164 
 3313      795F666C 
 3313      616700
 3314              	.LASF0:
 3315 03e3 7369676E 		.ascii	"signed char\000"
 3315      65642063 
 3315      68617200 
 3316              	.LASF7:
 3317 03ef 6C6F6E67 		.ascii	"long long unsigned int\000"
 3317      206C6F6E 
 3317      6720756E 
 3317      7369676E 
 3317      65642069 
 3318              	.LASF68:
 3319 0406 6D6F746F 		.ascii	"motoerFlagSTOP\000"
 3319      6572466C 
 3319      61675354 
 3319      4F5000
 3320              	.LASF44:
 3321 0415 6D6F746F 		.ascii	"motorCircle\000"
 3321      72436972 
 3321      636C6500 
 3322              	.LASF8:
 3323 0421 756E7369 		.ascii	"unsigned int\000"
 3323      676E6564 
 3323      20696E74 
 3323      00
 3324              	.LASF94:
 3325 042e 666C6167 		.ascii	"flag_KB_string\000"
 3325      5F4B425F 
 3325      73747269 
 3325      6E6700
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 74


 3326              	.LASF81:
 3327 043d 75736242 		.ascii	"usbBufCount\000"
 3327      7566436F 
 3327      756E7400 
 3328              	.LASF35:
 3329 0449 67325F73 		.ascii	"g2_speed\000"
 3329      70656564 
 3329      00
 3330              	.LASF29:
 3331 0452 67315F78 		.ascii	"g1_xpos\000"
 3331      706F7300 
 3332              	.LASF69:
 3333 045a 6F706572 		.ascii	"operation\000"
 3333      6174696F 
 3333      6E00
 3334              	.LASF72:
 3335 0464 636F6E76 		.ascii	"convertBackBinary\000"
 3335      65727442 
 3335      61636B42 
 3335      696E6172 
 3335      7900
 3336              	.LASF11:
 3337 0476 63686172 		.ascii	"char\000"
 3337      00
 3338              	.LASF22:
 3339 047b 726F626F 		.ascii	"robot_xpos\000"
 3339      745F7870 
 3339      6F7300
 3340              	.LASF13:
 3341 0486 696E7433 		.ascii	"int32_t\000"
 3341      325F7400 
 3342              	.LASF30:
 3343 048e 67315F79 		.ascii	"g1_ypos\000"
 3343      706F7300 
 3344              	.LASF36:
 3345 0496 67325F64 		.ascii	"g2_direction\000"
 3345      69726563 
 3345      74696F6E 
 3345      00
 3346              	.LASF65:
 3347 04a3 71756575 		.ascii	"queue\000"
 3347      6500
 3348              	.LASF40:
 3349 04a9 6D6F746F 		.ascii	"motorSetSpeed\000"
 3349      72536574 
 3349      53706565 
 3349      6400
 3350              	.LASF16:
 3351 04b7 75696E74 		.ascii	"uint8\000"
 3351      3800
 3352              	.LASF70:
 3353 04bd 6261636B 		.ascii	"backOps\000"
 3353      4F707300 
 3354              	.LASF97:
 3355 04c5 64697370 		.ascii	"displaystring\000"
 3355      6C617973 
 3355      7472696E 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 75


 3355      6700
 3356              	.LASF71:
 3357 04d3 64656369 		.ascii	"decision\000"
 3357      73696F6E 
 3357      00
 3358              	.LASF90:
 3359 04dc 666C6167 		.ascii	"flag_ts_speed\000"
 3359      5F74735F 
 3359      73706565 
 3359      6400
 3360              	.LASF74:
 3361 04ea 636F6E76 		.ascii	"convertSensorBinary\000"
 3361      65727453 
 3361      656E736F 
 3361      7242696E 
 3361      61727900 
 3362              	.LASF3:
 3363 04fe 73686F72 		.ascii	"short unsigned int\000"
 3363      7420756E 
 3363      7369676E 
 3363      65642069 
 3363      6E7400
 3364              	.LASF111:
 3365 0511 6D61696E 		.ascii	"main.c\000"
 3365      2E6300
 3366              	.LASF5:
 3367 0518 6C6F6E67 		.ascii	"long unsigned int\000"
 3367      20756E73 
 3367      69676E65 
 3367      6420696E 
 3367      7400
 3368              	.LASF80:
 3369 052a 75736253 		.ascii	"usbStarted\000"
 3369      74617274 
 3369      656400
 3370              	.LASF63:
 3371 0535 74726176 		.ascii	"travelDis\000"
 3371      656C4469 
 3371      7300
 3372              	.LASF86:
 3373 053f 74735F73 		.ascii	"ts_speed\000"
 3373      70656564 
 3373      00
 3374              	.LASF82:
 3375 0548 636F756E 		.ascii	"count\000"
 3375      7400
 3376              	.LASF88:
 3377 054e 666C6167 		.ascii	"flag_ts_enc\000"
 3377      5F74735F 
 3377      656E6300 
 3378              	.LASF12:
 3379 055a 5F5F696E 		.ascii	"__int32_t\000"
 3379      7433325F 
 3379      7400
 3380              	.LASF42:
 3381 0564 6D6F746F 		.ascii	"motorTurnLeft\000"
 3381      72547572 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 76


 3381      6E4C6566 
 3381      7400
 3382              	.LASF37:
 3383 0572 6D6F746F 		.ascii	"motorGoStraight\000"
 3383      72476F53 
 3383      74726169 
 3383      67687400 
 3384              	.LASF78:
 3385 0582 6D6F746F 		.ascii	"motorCount\000"
 3385      72436F75 
 3385      6E7400
 3386              	.LASF26:
 3387 058d 67305F79 		.ascii	"g0_ypos\000"
 3387      706F7300 
 3388              	.LASF87:
 3389 0595 74735F64 		.ascii	"ts_display\000"
 3389      6973706C 
 3389      617900
 3390              	.LASF62:
 3391 05a0 6C617374 		.ascii	"lastState\000"
 3391      53746174 
 3391      6500
 3392              	.LASF85:
 3393 05aa 74735F75 		.ascii	"ts_update\000"
 3393      70646174 
 3393      6500
 3394              	.LASF79:
 3395 05b4 68616E64 		.ascii	"handle_usb\000"
 3395      6C655F75 
 3395      736200
 3396              	.LASF96:
 3397 05bf 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3397      5F72665F 
 3397      7472616E 
 3397      736D6973 
 3397      73696F6E 
 3398              	.LASF23:
 3399 05db 726F626F 		.ascii	"robot_ypos\000"
 3399      745F7970 
 3399      6F7300
 3400              	.LASF83:
 3401 05e6 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3401      52784275 
 3401      66666572 
 3401      00
 3402              	.LASF75:
 3403 05f3 76616C75 		.ascii	"value\000"
 3403      6500
 3404              	.LASF57:
 3405 05f9 6D6F746F 		.ascii	"motor2String\000"
 3405      72325374 
 3405      72696E67 
 3405      00
 3406              	.LASF32:
 3407 0606 67315F64 		.ascii	"g1_direction\000"
 3407      69726563 
 3407      74696F6E 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccsXM9zb.s 			page 77


 3407      00
 3408              	.LASF43:
 3409 0613 6D6F746F 		.ascii	"motorTurnRight\000"
 3409      72547572 
 3409      6E526967 
 3409      687400
 3410              	.LASF109:
 3411 0622 6D696464 		.ascii	"middle\000"
 3411      6C6500
 3412              	.LASF20:
 3413 0629 72737369 		.ascii	"rssi\000"
 3413      00
 3414              	.LASF24:
 3415 062e 726F626F 		.ascii	"robot_orientation\000"
 3415      745F6F72 
 3415      69656E74 
 3415      6174696F 
 3415      6E00
 3416              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
