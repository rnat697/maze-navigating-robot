ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.section	.text.motorGoStraight,"ax",%progbits
 107              		.align	2
 108              		.global	motorGoStraight
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 3


 109              		.thumb
 110              		.thumb_func
 111              		.type	motorGoStraight, %function
 112              	motorGoStraight:
 113              	.LFB64:
 114              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <stdbool.h>
  19:main.c        **** #include <string.h>
  20:main.c        **** #include <stdlib.h>
  21:main.c        **** #include <project.h>
  22:main.c        **** //* ========================================
  23:main.c        **** #include "defines.h"
  24:main.c        **** #include "vars.h"
  25:main.c        **** #include "isr_eoc.h"
  26:main.c        **** //* ========================================
  27:main.c        **** void usbPutString(char *s);
  28:main.c        **** void usbPutChar(char c);
  29:main.c        **** void handle_usb();
  30:main.c        **** //* ========================================
  31:main.c        **** 
  32:main.c        **** 
  33:main.c        **** #define rota180 500 //turns
  34:main.c        **** #define rota90Left 250
  35:main.c        **** 
  36:main.c        **** #define moveSlow 50
  37:main.c        **** #define travelDist 326 // how
  38:main.c        **** #define Q1CHANNEL 3
  39:main.c        **** #define Q2CHANNEL 5 
  40:main.c        **** #define Q3CHANNEL 0
  41:main.c        **** #define Q4CHANNEL 1
  42:main.c        **** #define Q5CHANNEL 2
  43:main.c        **** #define Q6CHANNEL 4
  44:main.c        **** 
  45:main.c        **** CY_ISR_PROTO(isr_eoc_Interrupt_test);
  46:main.c        **** CY_ISR_PROTO(isr_motor_interrupt_speed);
  47:main.c        **** CY_ISR_PROTO(isr_TS_interrupt_sample);
  48:main.c        **** int convertSensorBinary();
  49:main.c        **** 
  50:main.c        **** void motorGoStraight(){
 115              		.loc 1 50 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 4


 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119 0000 80B5     		push	{r7, lr}
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 7, -8
 122              		.cfi_offset 14, -4
 123 0002 00AF     		add	r7, sp, #0
 124              		.cfi_def_cfa_register 7
  51:main.c        ****     ////PWM_1_WriteCompare(150); // left wheel near power switch is stronker than right wheel //150
  52:main.c        ****     //M1_IN2_Write(0);
  53:main.c        ****     PWM_1_WriteCompare(200);//200
 125              		.loc 1 53 0
 126 0004 C820     		movs	r0, #200
 127 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  54:main.c        ****     PWM_2_WriteCompare(50); //50
 128              		.loc 1 54 0
 129 000a 3220     		movs	r0, #50
 130 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  55:main.c        **** }
 131              		.loc 1 55 0
 132 0010 00BF     		nop
 133 0012 80BD     		pop	{r7, pc}
 134              		.cfi_endproc
 135              	.LFE64:
 136              		.size	motorGoStraight, .-motorGoStraight
 137              		.section	.text.motorGoBackwards,"ax",%progbits
 138              		.align	2
 139              		.global	motorGoBackwards
 140              		.thumb
 141              		.thumb_func
 142              		.type	motorGoBackwards, %function
 143              	motorGoBackwards:
 144              	.LFB65:
  56:main.c        **** void motorGoBackwards(){
 145              		.loc 1 56 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 1, uses_anonymous_args = 0
 149 0000 80B5     		push	{r7, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 00AF     		add	r7, sp, #0
 154              		.cfi_def_cfa_register 7
  57:main.c        ****     
  58:main.c        ****     //M1_IN2_Write(0);
  59:main.c        ****     PWM_1_WriteCompare(55); //55
 155              		.loc 1 59 0
 156 0004 3720     		movs	r0, #55
 157 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  60:main.c        ****     PWM_2_WriteCompare(201); //201
 158              		.loc 1 60 0
 159 000a C920     		movs	r0, #201
 160 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  61:main.c        **** }
 161              		.loc 1 61 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 5


 162 0010 00BF     		nop
 163 0012 80BD     		pop	{r7, pc}
 164              		.cfi_endproc
 165              	.LFE65:
 166              		.size	motorGoBackwards, .-motorGoBackwards
 167              		.section	.text.motorStop,"ax",%progbits
 168              		.align	2
 169              		.global	motorStop
 170              		.thumb
 171              		.thumb_func
 172              		.type	motorStop, %function
 173              	motorStop:
 174              	.LFB66:
  62:main.c        **** void motorStop(){
 175              		.loc 1 62 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 1, uses_anonymous_args = 0
 179 0000 80B5     		push	{r7, lr}
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 7, -8
 182              		.cfi_offset 14, -4
 183 0002 00AF     		add	r7, sp, #0
 184              		.cfi_def_cfa_register 7
  63:main.c        ****     PWM_1_WriteCompare(127); // left wheel near power switch is stronker than right wheel
 185              		.loc 1 63 0
 186 0004 7F20     		movs	r0, #127
 187 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  64:main.c        ****     PWM_2_WriteCompare(127);
 188              		.loc 1 64 0
 189 000a 7F20     		movs	r0, #127
 190 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  65:main.c        **** }
 191              		.loc 1 65 0
 192 0010 00BF     		nop
 193 0012 80BD     		pop	{r7, pc}
 194              		.cfi_endproc
 195              	.LFE66:
 196              		.size	motorStop, .-motorStop
 197              		.section	.text.motorTurnLeft,"ax",%progbits
 198              		.align	2
 199              		.global	motorTurnLeft
 200              		.thumb
 201              		.thumb_func
 202              		.type	motorTurnLeft, %function
 203              	motorTurnLeft:
 204              	.LFB67:
  66:main.c        **** 
  67:main.c        **** void motorTurnLeft(uint8 x){
 205              		.loc 1 67 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 8
 208              		@ frame_needed = 1, uses_anonymous_args = 0
 209 0000 80B5     		push	{r7, lr}
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 7, -8
 212              		.cfi_offset 14, -4
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 6


 213 0002 82B0     		sub	sp, sp, #8
 214              		.cfi_def_cfa_offset 16
 215 0004 00AF     		add	r7, sp, #0
 216              		.cfi_def_cfa_register 7
 217 0006 0346     		mov	r3, r0
 218 0008 FB71     		strb	r3, [r7, #7]
  68:main.c        ****     // TO DO
  69:main.c        ****     
  70:main.c        ****     PWM_1_WriteCompare(x); //55
 219              		.loc 1 70 0
 220 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 221 000c 1846     		mov	r0, r3
 222 000e FFF7FEFF 		bl	PWM_1_WriteCompare
  71:main.c        ****     PWM_2_WriteCompare(125); //201
 223              		.loc 1 71 0
 224 0012 7D20     		movs	r0, #125
 225 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
  72:main.c        ****     
  73:main.c        ****     
  74:main.c        ****     
  75:main.c        ****     //255
  76:main.c        **** }
 226              		.loc 1 76 0
 227 0018 00BF     		nop
 228 001a 0837     		adds	r7, r7, #8
 229              		.cfi_def_cfa_offset 8
 230 001c BD46     		mov	sp, r7
 231              		.cfi_def_cfa_register 13
 232              		@ sp needed
 233 001e 80BD     		pop	{r7, pc}
 234              		.cfi_endproc
 235              	.LFE67:
 236              		.size	motorTurnLeft, .-motorTurnLeft
 237              		.section	.text.motorTurnRight,"ax",%progbits
 238              		.align	2
 239              		.global	motorTurnRight
 240              		.thumb
 241              		.thumb_func
 242              		.type	motorTurnRight, %function
 243              	motorTurnRight:
 244              	.LFB68:
  77:main.c        **** 
  78:main.c        **** void motorTurnRight(int x){
 245              		.loc 1 78 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 8
 248              		@ frame_needed = 1, uses_anonymous_args = 0
 249 0000 80B5     		push	{r7, lr}
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 7, -8
 252              		.cfi_offset 14, -4
 253 0002 82B0     		sub	sp, sp, #8
 254              		.cfi_def_cfa_offset 16
 255 0004 00AF     		add	r7, sp, #0
 256              		.cfi_def_cfa_register 7
 257 0006 7860     		str	r0, [r7, #4]
  79:main.c        ****     // TO DO
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 7


  80:main.c        ****     
  81:main.c        ****     PWM_1_WriteCompare(127);//200
 258              		.loc 1 81 0
 259 0008 7F20     		movs	r0, #127
 260 000a FFF7FEFF 		bl	PWM_1_WriteCompare
  82:main.c        ****     PWM_2_WriteCompare(x); //50
 261              		.loc 1 82 0
 262 000e 7B68     		ldr	r3, [r7, #4]
 263 0010 DBB2     		uxtb	r3, r3
 264 0012 1846     		mov	r0, r3
 265 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
  83:main.c        ****    CyDelay(rota90Left);
 266              		.loc 1 83 0
 267 0018 FA20     		movs	r0, #250
 268 001a FFF7FEFF 		bl	CyDelay
  84:main.c        **** }
 269              		.loc 1 84 0
 270 001e 00BF     		nop
 271 0020 0837     		adds	r7, r7, #8
 272              		.cfi_def_cfa_offset 8
 273 0022 BD46     		mov	sp, r7
 274              		.cfi_def_cfa_register 13
 275              		@ sp needed
 276 0024 80BD     		pop	{r7, pc}
 277              		.cfi_endproc
 278              	.LFE68:
 279              		.size	motorTurnRight, .-motorTurnRight
 280              		.global	changeMotor
 281 0026 00BF     		.bss
 282 0012 0000     		.align	2
 283              		.type	changeMotor, %object
 284              		.size	changeMotor, 4
 285              	changeMotor:
 286 0014 00000000 		.space	4
 287              		.global	checkLight
 288              		.align	2
 289              		.type	checkLight, %object
 290              		.size	checkLight, 4
 291              	checkLight:
 292 0018 00000000 		.space	4
 293              		.global	lightState
 294              		.align	2
 295              		.type	lightState, %object
 296              		.size	lightState, 4
 297              	lightState:
 298 001c 00000000 		.space	4
 299              		.global	lightDetectedFront
 300              		.align	2
 301              		.type	lightDetectedFront, %object
 302              		.size	lightDetectedFront, 12
 303              	lightDetectedFront:
 304 0020 00000000 		.space	12
 304      00000000 
 304      00000000 
 305              		.global	counteoc
 306              		.align	2
 307              		.type	counteoc, %object
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 8


 308              		.size	counteoc, 4
 309              	counteoc:
 310 002c 00000000 		.space	4
 311              		.global	processSensors
 312              		.align	2
 313              		.type	processSensors, %object
 314              		.size	processSensors, 4
 315              	processSensors:
 316 0030 00000000 		.space	4
 317              		.section	.text.isr_eoc_Interrupt_test,"ax",%progbits
 318              		.align	2
 319              		.global	isr_eoc_Interrupt_test
 320              		.thumb
 321              		.thumb_func
 322              		.type	isr_eoc_Interrupt_test, %function
 323              	isr_eoc_Interrupt_test:
 324              	.LFB69:
  85:main.c        **** int changeMotor=0;
  86:main.c        **** int checkLight =0;
  87:main.c        **** int lightState=0;
  88:main.c        **** volatile int lightDetectedFront[3] = {0,0,0};
  89:main.c        **** volatile int counteoc = 0;
  90:main.c        **** volatile int processSensors = 0;
  91:main.c        **** CY_ISR(isr_eoc_Interrupt_test)
  92:main.c        **** {
 325              		.loc 1 92 0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 8
 328              		@ frame_needed = 1, uses_anonymous_args = 0
 329 0000 80B5     		push	{r7, lr}
 330              		.cfi_def_cfa_offset 8
 331              		.cfi_offset 7, -8
 332              		.cfi_offset 14, -4
 333 0002 82B0     		sub	sp, sp, #8
 334              		.cfi_def_cfa_offset 16
 335 0004 00AF     		add	r7, sp, #0
 336              		.cfi_def_cfa_register 7
  93:main.c        ****     #ifdef isr_test_INTERRUPT_INTERRUPT_CALLBACK
  94:main.c        ****         isr_TS_Interrupt_InterruptCallback();
  95:main.c        ****     #endif /* isr_eoc_INTERRUPT_INTERRUPT_CALLBACK */ 
  96:main.c        **** 
  97:main.c        ****     /*  Place your Interrupt code here. */
  98:main.c        ****     /* `#START isr_eoc_Interrupt` */
  99:main.c        ****     int16 valueQ3 =  ADC_GetResult16(Q3CHANNEL);
 337              		.loc 1 99 0
 338 0006 0020     		movs	r0, #0
 339 0008 FFF7FEFF 		bl	ADC_GetResult16
 340 000c 0346     		mov	r3, r0
 341 000e FB80     		strh	r3, [r7, #6]	@ movhi
 100:main.c        ****     int16 valueQ4 =  ADC_GetResult16(Q4CHANNEL);
 342              		.loc 1 100 0
 343 0010 0120     		movs	r0, #1
 344 0012 FFF7FEFF 		bl	ADC_GetResult16
 345 0016 0346     		mov	r3, r0
 346 0018 BB80     		strh	r3, [r7, #4]	@ movhi
 101:main.c        ****     int16 valueQ5 =  ADC_GetResult16(Q5CHANNEL);
 347              		.loc 1 101 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 9


 348 001a 0220     		movs	r0, #2
 349 001c FFF7FEFF 		bl	ADC_GetResult16
 350 0020 0346     		mov	r3, r0
 351 0022 7B80     		strh	r3, [r7, #2]	@ movhi
 102:main.c        ****     // get value from ADC then convert to DAC to send to external LEDs
 103:main.c        ****     if (counteoc < 10) {
 352              		.loc 1 103 0
 353 0024 174B     		ldr	r3, .L13
 354 0026 1B68     		ldr	r3, [r3]
 355 0028 092B     		cmp	r3, #9
 356 002a 20DC     		bgt	.L7
 104:main.c        ****         //2211
 105:main.c        ****         if (valueQ3 >= 2211) {
 357              		.loc 1 105 0
 358 002c B7F90630 		ldrsh	r3, [r7, #6]
 359 0030 40F6A202 		movw	r2, #2210
 360 0034 9342     		cmp	r3, r2
 361 0036 02DD     		ble	.L8
 106:main.c        ****         //set flag for white light detected
 107:main.c        ****         lightDetectedFront[0] = 1;
 362              		.loc 1 107 0
 363 0038 134B     		ldr	r3, .L13+4
 364 003a 0122     		movs	r2, #1
 365 003c 1A60     		str	r2, [r3]
 366              	.L8:
 108:main.c        ****         }
 109:main.c        ****         if (valueQ4 >= 2211) {
 367              		.loc 1 109 0
 368 003e B7F90430 		ldrsh	r3, [r7, #4]
 369 0042 40F6A202 		movw	r2, #2210
 370 0046 9342     		cmp	r3, r2
 371 0048 02DD     		ble	.L9
 110:main.c        ****         //set flag for white light detected
 111:main.c        ****         lightDetectedFront[1] = 1;
 372              		.loc 1 111 0
 373 004a 0F4B     		ldr	r3, .L13+4
 374 004c 0122     		movs	r2, #1
 375 004e 5A60     		str	r2, [r3, #4]
 376              	.L9:
 112:main.c        ****         }
 113:main.c        ****     
 114:main.c        ****         if (valueQ5 >= 2211) {
 377              		.loc 1 114 0
 378 0050 B7F90230 		ldrsh	r3, [r7, #2]
 379 0054 40F6A202 		movw	r2, #2210
 380 0058 9342     		cmp	r3, r2
 381 005a 02DD     		ble	.L10
 115:main.c        ****         //set flag for white light detected
 116:main.c        ****         lightDetectedFront[2] = 1;
 382              		.loc 1 116 0
 383 005c 0A4B     		ldr	r3, .L13+4
 384 005e 0122     		movs	r2, #1
 385 0060 9A60     		str	r2, [r3, #8]
 386              	.L10:
 117:main.c        ****         }
 118:main.c        ****         
 119:main.c        ****         counteoc++;
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 10


 387              		.loc 1 119 0
 388 0062 084B     		ldr	r3, .L13
 389 0064 1B68     		ldr	r3, [r3]
 390 0066 0133     		adds	r3, r3, #1
 391 0068 064A     		ldr	r2, .L13
 392 006a 1360     		str	r3, [r2]
 120:main.c        ****     } else {
 121:main.c        ****         processSensors = 1;   
 122:main.c        ****         counteoc = 0;
 123:main.c        ****     }
 124:main.c        ****     /* `#END` */
 125:main.c        **** }
 393              		.loc 1 125 0
 394 006c 05E0     		b	.L12
 395              	.L7:
 121:main.c        ****         counteoc = 0;
 396              		.loc 1 121 0
 397 006e 074B     		ldr	r3, .L13+8
 398 0070 0122     		movs	r2, #1
 399 0072 1A60     		str	r2, [r3]
 122:main.c        ****     }
 400              		.loc 1 122 0
 401 0074 034B     		ldr	r3, .L13
 402 0076 0022     		movs	r2, #0
 403 0078 1A60     		str	r2, [r3]
 404              	.L12:
 405              		.loc 1 125 0
 406 007a 00BF     		nop
 407 007c 0837     		adds	r7, r7, #8
 408              		.cfi_def_cfa_offset 8
 409 007e BD46     		mov	sp, r7
 410              		.cfi_def_cfa_register 13
 411              		@ sp needed
 412 0080 80BD     		pop	{r7, pc}
 413              	.L14:
 414 0082 00BF     		.align	2
 415              	.L13:
 416 0084 00000000 		.word	counteoc
 417 0088 00000000 		.word	lightDetectedFront
 418 008c 00000000 		.word	processSensors
 419              		.cfi_endproc
 420              	.LFE69:
 421              		.size	isr_eoc_Interrupt_test, .-isr_eoc_Interrupt_test
 422              		.bss
 423              	count:
 424 0034 00       		.space	1
 425              		.section	.text.isr_motor_interrupt_speed,"ax",%progbits
 426              		.align	2
 427              		.global	isr_motor_interrupt_speed
 428              		.thumb
 429              		.thumb_func
 430              		.type	isr_motor_interrupt_speed, %function
 431              	isr_motor_interrupt_speed:
 432              	.LFB70:
 126:main.c        **** // NEED TO INCREASE/DECREASE SPEED TOO
 127:main.c        **** // AND IMPLEMENT LIGHT SENSOR THINGS
 128:main.c        **** volatile static int8 count;
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 11


 129:main.c        **** CY_ISR(isr_motor_interrupt_speed)
 130:main.c        **** {
 433              		.loc 1 130 0
 434              		.cfi_startproc
 435              		@ args = 0, pretend = 0, frame = 0
 436              		@ frame_needed = 1, uses_anonymous_args = 0
 437              		@ link register save eliminated.
 438 0000 80B4     		push	{r7}
 439              		.cfi_def_cfa_offset 4
 440              		.cfi_offset 7, -4
 441 0002 00AF     		add	r7, sp, #0
 442              		.cfi_def_cfa_register 7
 131:main.c        ****     #ifdef isr_motor_INTERRUPT_INTERRUPT_CALLBACK
 132:main.c        ****         isr_motor_Interrupt_InterruptCallback();
 133:main.c        ****     #endif /* isr_motor_INTERRUPT_INTERRUPT_CALLBACK */ 
 134:main.c        **** 
 135:main.c        ****     /*  Place your Interrupt code here. */
 136:main.c        ****     /* `#START isr_motor_Interrupt` */
 137:main.c        ****       /*int16 currCountMotor2 = QuadDec_M2_GetCounter();
 138:main.c        ****       int16 currCountMotor1 = QuadDec_M1_GetCounter();  
 139:main.c        ****       
 140:main.c        ****      speedMotor1 = (currCountMotor1 - prevcountMotor1) / 0.2;
 141:main.c        ****      speedMotor2 = (currCountMotor2 - prevcountMotor2) / 0.2;
 142:main.c        ****     
 143:main.c        ****       prevcountMotor1 = currCountMotor1;
 144:main.c        ****       prevcountMotor2 = currCountMotor2;*/
 145:main.c        ****     
 146:main.c        ****     /* `#END` */
 147:main.c        **** }
 443              		.loc 1 147 0
 444 0004 00BF     		nop
 445 0006 BD46     		mov	sp, r7
 446              		.cfi_def_cfa_register 13
 447              		@ sp needed
 448 0008 80BC     		pop	{r7}
 449              		.cfi_restore 7
 450              		.cfi_def_cfa_offset 0
 451 000a 7047     		bx	lr
 452              		.cfi_endproc
 453              	.LFE70:
 454              		.size	isr_motor_interrupt_speed, .-isr_motor_interrupt_speed
 455              		.section	.rodata
 456              		.align	2
 457              	.LC0:
 458 0000 4D6F746F 		.ascii	"Motor 1 - start count: %d, end count: %d \012\000"
 458      72203120 
 458      2D207374 
 458      61727420 
 458      636F756E 
 459 002b 00       		.align	2
 460              	.LC1:
 461 002c 4D6F746F 		.ascii	"Motor 2 - start count: %d, end count: %d \012\000"
 461      72203220 
 461      2D207374 
 461      61727420 
 461      636F756E 
 462              		.section	.text.motorCount,"ax",%progbits
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 12


 463              		.align	2
 464              		.global	motorCount
 465              		.thumb
 466              		.thumb_func
 467              		.type	motorCount, %function
 468              	motorCount:
 469              	.LFB71:
 148:main.c        **** void motorCount(){
 470              		.loc 1 148 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 20008
 473              		@ frame_needed = 1, uses_anonymous_args = 0
 474 0000 80B5     		push	{r7, lr}
 475              		.cfi_def_cfa_offset 8
 476              		.cfi_offset 7, -8
 477              		.cfi_offset 14, -4
 478 0002 ADF59C4D 		sub	sp, sp, #19968
 479              		.cfi_def_cfa_offset 19976
 480 0006 8AB0     		sub	sp, sp, #40
 481              		.cfi_def_cfa_offset 20016
 482 0008 00AF     		add	r7, sp, #0
 483              		.cfi_def_cfa_register 7
 149:main.c        ****     int16 beginningCountMotor1 = 0;
 484              		.loc 1 149 0
 485 000a 0023     		movs	r3, #0
 486 000c 07F59C42 		add	r2, r7, #19968
 487 0010 02F12602 		add	r2, r2, #38
 488 0014 1380     		strh	r3, [r2]	@ movhi
 150:main.c        ****     int16 beginningCountMotor2 = 0;
 489              		.loc 1 150 0
 490 0016 0023     		movs	r3, #0
 491 0018 07F59C42 		add	r2, r7, #19968
 492 001c 02F12402 		add	r2, r2, #36
 493 0020 1380     		strh	r3, [r2]	@ movhi
 151:main.c        ****     int16 endCountMotor2 = QuadDec_M2_GetCounter();
 494              		.loc 1 151 0
 495 0022 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 496 0026 0346     		mov	r3, r0
 497 0028 07F59C42 		add	r2, r7, #19968
 498 002c 02F12202 		add	r2, r2, #34
 499 0030 1380     		strh	r3, [r2]	@ movhi
 152:main.c        ****     int16 endCountMotor1 = QuadDec_M1_GetCounter();
 500              		.loc 1 152 0
 501 0032 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 502 0036 0346     		mov	r3, r0
 503 0038 07F59C42 		add	r2, r7, #19968
 504 003c 02F12002 		add	r2, r2, #32
 505 0040 1380     		strh	r3, [r2]	@ movhi
 153:main.c        ****     char motor1String[10000]; 
 154:main.c        ****     sprintf(motor1String,"Motor 1 - start count: %d, end count: %d \n", beginningCountMotor1, endCo
 506              		.loc 1 154 0
 507 0042 07F59C43 		add	r3, r7, #19968
 508 0046 03F12603 		add	r3, r3, #38
 509 004a B3F90020 		ldrsh	r2, [r3]
 510 004e 07F59C43 		add	r3, r7, #19968
 511 0052 03F12003 		add	r3, r3, #32
 512 0056 B3F90030 		ldrsh	r3, [r3]
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 13


 513 005a 07F51C50 		add	r0, r7, #9984
 514 005e 00F12800 		add	r0, r0, #40
 515 0062 1838     		subs	r0, r0, #24
 516 0064 1449     		ldr	r1, .L17
 517 0066 FFF7FEFF 		bl	sprintf
 155:main.c        ****     char motor2String[10000];
 156:main.c        ****     sprintf(motor2String,"Motor 2 - start count: %d, end count: %d \n", beginningCountMotor2 , endC
 518              		.loc 1 156 0
 519 006a 07F59C43 		add	r3, r7, #19968
 520 006e 03F12403 		add	r3, r3, #36
 521 0072 B3F90020 		ldrsh	r2, [r3]
 522 0076 07F59C43 		add	r3, r7, #19968
 523 007a 03F12203 		add	r3, r3, #34
 524 007e B3F90030 		ldrsh	r3, [r3]
 525 0082 07F12800 		add	r0, r7, #40
 526 0086 2838     		subs	r0, r0, #40
 527 0088 0C49     		ldr	r1, .L17+4
 528 008a FFF7FEFF 		bl	sprintf
 157:main.c        ****     
 158:main.c        ****     usbPutString(motor1String);
 529              		.loc 1 158 0
 530 008e 07F51C53 		add	r3, r7, #9984
 531 0092 03F12803 		add	r3, r3, #40
 532 0096 183B     		subs	r3, r3, #24
 533 0098 1846     		mov	r0, r3
 534 009a FFF7FEFF 		bl	usbPutString
 159:main.c        ****     usbPutString(motor2String);
 535              		.loc 1 159 0
 536 009e 07F12803 		add	r3, r7, #40
 537 00a2 283B     		subs	r3, r3, #40
 538 00a4 1846     		mov	r0, r3
 539 00a6 FFF7FEFF 		bl	usbPutString
 160:main.c        **** 
 161:main.c        **** }
 540              		.loc 1 161 0
 541 00aa 00BF     		nop
 542 00ac 07F59C47 		add	r7, r7, #19968
 543 00b0 2837     		adds	r7, r7, #40
 544              		.cfi_def_cfa_offset 8
 545 00b2 BD46     		mov	sp, r7
 546              		.cfi_def_cfa_register 13
 547              		@ sp needed
 548 00b4 80BD     		pop	{r7, pc}
 549              	.L18:
 550 00b6 00BF     		.align	2
 551              	.L17:
 552 00b8 00000000 		.word	.LC0
 553 00bc 2C000000 		.word	.LC1
 554              		.cfi_endproc
 555              	.LFE71:
 556              		.size	motorCount, .-motorCount
 557              		.section	.text.motorRun,"ax",%progbits
 558              		.align	2
 559              		.global	motorRun
 560              		.thumb
 561              		.thumb_func
 562              		.type	motorRun, %function
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 14


 563              	motorRun:
 564              	.LFB72:
 162:main.c        **** 
 163:main.c        **** void motorRun(){
 565              		.loc 1 163 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 1, uses_anonymous_args = 0
 569 0000 80B5     		push	{r7, lr}
 570              		.cfi_def_cfa_offset 8
 571              		.cfi_offset 7, -8
 572              		.cfi_offset 14, -4
 573 0002 00AF     		add	r7, sp, #0
 574              		.cfi_def_cfa_register 7
 164:main.c        ****     
 165:main.c        ****     
 166:main.c        ****     
 167:main.c        ****     PWM_1_Start();
 575              		.loc 1 167 0
 576 0004 FFF7FEFF 		bl	PWM_1_Start
 168:main.c        ****     PWM_2_Start();
 577              		.loc 1 168 0
 578 0008 FFF7FEFF 		bl	PWM_2_Start
 169:main.c        **** 
 170:main.c        **** 
 171:main.c        ****     motorStop();
 579              		.loc 1 171 0
 580 000c FFF7FEFF 		bl	motorStop
 172:main.c        ****     CyDelay(2000); // so we have time to set the robot up
 581              		.loc 1 172 0
 582 0010 4FF4FA60 		mov	r0, #2000
 583 0014 FFF7FEFF 		bl	CyDelay
 173:main.c        ****     motorGoStraight();
 584              		.loc 1 173 0
 585 0018 FFF7FEFF 		bl	motorGoStraight
 174:main.c        ****     CyDelay(2000);
 586              		.loc 1 174 0
 587 001c 4FF4FA60 		mov	r0, #2000
 588 0020 FFF7FEFF 		bl	CyDelay
 175:main.c        ****     motorStop();
 589              		.loc 1 175 0
 590 0024 FFF7FEFF 		bl	motorStop
 176:main.c        ****     
 177:main.c        ****     //motorGoBackwards();
 178:main.c        **** 
 179:main.c        ****     
 180:main.c        ****     //CyDelay(2000);
 181:main.c        ****  
 182:main.c        ****     //motorStop();
 183:main.c        ****     //motorCount();//checks count per second.
 184:main.c        **** 
 185:main.c        **** }
 591              		.loc 1 185 0
 592 0028 00BF     		nop
 593 002a 80BD     		pop	{r7, pc}
 594              		.cfi_endproc
 595              	.LFE72:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 15


 596              		.size	motorRun, .-motorRun
 597              		.section	.text.isr_TS_Interrupt_sample,"ax",%progbits
 598              		.align	2
 599              		.global	isr_TS_Interrupt_sample
 600              		.thumb
 601              		.thumb_func
 602              		.type	isr_TS_Interrupt_sample, %function
 603              	isr_TS_Interrupt_sample:
 604              	.LFB73:
 186:main.c        **** CY_ISR(isr_TS_Interrupt_sample)
 187:main.c        **** {
 605              		.loc 1 187 0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 0
 608              		@ frame_needed = 1, uses_anonymous_args = 0
 609 0000 80B5     		push	{r7, lr}
 610              		.cfi_def_cfa_offset 8
 611              		.cfi_offset 7, -8
 612              		.cfi_offset 14, -4
 613 0002 00AF     		add	r7, sp, #0
 614              		.cfi_def_cfa_register 7
 188:main.c        ****     #ifdef isr_TS_INTERRUPT_INTERRUPT_CALLBACK
 189:main.c        ****         isr_TS_Interrupt_InterruptCallback();
 190:main.c        ****     #endif /* isr_TS_INTERRUPT_INTERRUPT_CALLBACK */ 
 191:main.c        ****         ADC_StartConvert();
 615              		.loc 1 191 0
 616 0004 FFF7FEFF 		bl	ADC_StartConvert
 192:main.c        ****     /*  Place your Interrupt code here. */
 193:main.c        ****     /* `#START isr_TS_Interrupt` */
 194:main.c        **** 
 195:main.c        ****     /* `#END` */
 196:main.c        **** }
 617              		.loc 1 196 0
 618 0008 00BF     		nop
 619 000a 80BD     		pop	{r7, pc}
 620              		.cfi_endproc
 621              	.LFE73:
 622              		.size	isr_TS_Interrupt_sample, .-isr_TS_Interrupt_sample
 623              		.section	.text.main,"ax",%progbits
 624              		.align	2
 625              		.global	main
 626              		.thumb
 627              		.thumb_func
 628              		.type	main, %function
 629              	main:
 630              	.LFB74:
 197:main.c        **** 
 198:main.c        **** 
 199:main.c        **** int main()
 200:main.c        **** {
 631              		.loc 1 200 0
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 8
 634              		@ frame_needed = 1, uses_anonymous_args = 0
 635 0000 80B5     		push	{r7, lr}
 636              		.cfi_def_cfa_offset 8
 637              		.cfi_offset 7, -8
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 16


 638              		.cfi_offset 14, -4
 639 0002 82B0     		sub	sp, sp, #8
 640              		.cfi_def_cfa_offset 16
 641 0004 00AF     		add	r7, sp, #0
 642              		.cfi_def_cfa_register 7
 201:main.c        ****     
 202:main.c        **** 
 203:main.c        **** // --------------------------------    
 204:main.c        **** // ----- INITIALIZATIONS ----------
 205:main.c        ****     CYGlobalIntEnable;
 643              		.loc 1 205 0
 644              		.syntax unified
 645              	@ 205 "main.c" 1
 646 0006 62B6     		CPSIE   i
 647              	@ 0 "" 2
 206:main.c        ****     count  = 0;
 648              		.loc 1 206 0
 649              		.thumb
 650              		.syntax unified
 651 0008 404B     		ldr	r3, .L35
 652 000a 0022     		movs	r2, #0
 653 000c 1A70     		strb	r2, [r3]
 207:main.c        ****     
 208:main.c        ****    
 209:main.c        ****     Timer_TS_Start();
 654              		.loc 1 209 0
 655 000e FFF7FEFF 		bl	Timer_TS_Start
 210:main.c        ****     Timer_Motor_Start();
 656              		.loc 1 210 0
 657 0012 FFF7FEFF 		bl	Timer_Motor_Start
 211:main.c        ****     QuadDec_M1_Start();
 658              		.loc 1 211 0
 659 0016 FFF7FEFF 		bl	QuadDec_M1_Start
 212:main.c        ****     QuadDec_M2_Start(); //init the quadencoder,
 660              		.loc 1 212 0
 661 001a FFF7FEFF 		bl	QuadDec_M2_Start
 213:main.c        ****     //isr_motor_StartEx(isr_motor_interrupt_speed);
 214:main.c        ****     isr_TS_StartEx(isr_TS_Interrupt_sample);
 662              		.loc 1 214 0
 663 001e 3C48     		ldr	r0, .L35+4
 664 0020 FFF7FEFF 		bl	isr_TS_StartEx
 215:main.c        ****     isr_eoc_StartEx(isr_eoc_Interrupt_test);
 665              		.loc 1 215 0
 666 0024 3B48     		ldr	r0, .L35+8
 667 0026 FFF7FEFF 		bl	isr_eoc_StartEx
 216:main.c        ****     
 217:main.c        ****     ADC_Start();
 668              		.loc 1 217 0
 669 002a FFF7FEFF 		bl	ADC_Start
 218:main.c        ****     //ADC_StartConvert();
 219:main.c        ****     
 220:main.c        ****     PWM_1_Start();
 670              		.loc 1 220 0
 671 002e FFF7FEFF 		bl	PWM_1_Start
 221:main.c        ****     PWM_2_Start();
 672              		.loc 1 221 0
 673 0032 FFF7FEFF 		bl	PWM_2_Start
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 17


 222:main.c        ****     
 223:main.c        ****     LED_Write(0);
 674              		.loc 1 223 0
 675 0036 0020     		movs	r0, #0
 676 0038 FFF7FEFF 		bl	LED_Write
 224:main.c        ****     ///////IF NOT USINNG MOTOR RUN DO PWM START STUFF
 225:main.c        ****     // SO write compare is a measure of speed
 226:main.c        ****     // And Cy delay delays the running of the motor and duration that it travels
 227:main.c        ****     //look at motor RUn config above for more info.
 228:main.c        ****     motorStop();
 677              		.loc 1 228 0
 678 003c FFF7FEFF 		bl	motorStop
 229:main.c        ****     CyDelay(2000); // to prep
 679              		.loc 1 229 0
 680 0040 4FF4FA60 		mov	r0, #2000
 681 0044 FFF7FEFF 		bl	CyDelay
 682              	.L34:
 230:main.c        ****    /* while(QuadDec_M1_GetCounter()<travelDist){
 231:main.c        ****     //where counter is value we want it to stop at.
 232:main.c        ****         motorGoStraight();
 233:main.c        ****     
 234:main.c        ****     
 235:main.c        ****     }*/
 236:main.c        **** 
 237:main.c        ****     
 238:main.c        ****     //motorStop();
 239:main.c        ****    // CyDelay(2000); // so we have time to set the robot up
 240:main.c        ****     //motorTurnLeft();
 241:main.c        ****     //motorStop();
 242:main.c        ****     //motorCount();//checks count per second.
 243:main.c        ****      
 244:main.c        ****     
 245:main.c        ****     
 246:main.c        **** 
 247:main.c        ****     
 248:main.c        **** 
 249:main.c        ****     
 250:main.c        **** // ------USB SETUP ----------------    
 251:main.c        **** //#ifdef USE_USB    
 252:main.c        **** //    USBUART_Start(0,USBUART_5V_OPERATION);
 253:main.c        **** //#endif        
 254:main.c        **** //        
 255:main.c        **** //    RF_BT_SELECT_Write(0);
 256:main.c        **** //    motorCount();//checks count per second.
 257:main.c        **** 
 258:main.c        ****     //usbPutString(displaystring);
 259:main.c        ****     while(1)
 260:main.c        ****     {
 261:main.c        ****         /* Place your application code here. */
 262:main.c        ****         
 263:main.c        ****         //if Q3 SENSES BLACK LIGHT BUT Q4 DOES NOT SENSE THE BLACK LIGHT MOVE TOWARDS THE RIGHT TO 
 264:main.c        ****     // IF Q3 AND Q4 SENSES TURN 90 DEGREES LEFT - intersection
 265:main.c        ****     // IF Q5 BUT NOT Q4 SENSES BLACK LIGHT MOVE TOWARDS THE LEFT TO REALIGN CENTER
 266:main.c        ****     // IF Q5 AND Q4 TURN 90 DEGREES RIGHT - intersection
 267:main.c        ****        
 268:main.c        ****         if (processSensors == 1) {
 683              		.loc 1 268 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 18


 684 0048 334B     		ldr	r3, .L35+12
 685 004a 1B68     		ldr	r3, [r3]
 686 004c 012B     		cmp	r3, #1
 687 004e FBD1     		bne	.L34
 688              	.LBB2:
 269:main.c        ****             
 270:main.c        ****             //make decision
 271:main.c        ****             
 272:main.c        ****             //checks intersection
 273:main.c        ****             //int leftIntersection= (lightDetectedFront[0] == 1 && lightDetectedFront[1]==1);
 274:main.c        ****             //int rightIntersection=  (lightDetectedFront[2] == 1 && lightDetectedFront[1]==1);
 275:main.c        ****             
 276:main.c        ****            //check intersectin
 277:main.c        ****             ///mazeIntersection(leftIntersection,rightIntersection);
 278:main.c        ****         
 279:main.c        ****             int operation = convertSensorBinary();
 689              		.loc 1 279 0
 690 0050 FFF7FEFF 		bl	convertSensorBinary
 691 0054 7860     		str	r0, [r7, #4]
 280:main.c        ****             
 281:main.c        ****             switch(operation){
 692              		.loc 1 281 0
 693 0056 7B68     		ldr	r3, [r7, #4]
 694 0058 072B     		cmp	r3, #7
 695 005a 48D8     		bhi	.L23
 696 005c 01A2     		adr	r2, .L25
 697 005e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 698 0062 00BF     		.p2align 2
 699              	.L25:
 700 0064 85000000 		.word	.L24+1
 701 0068 91000000 		.word	.L26+1
 702 006c 9D000000 		.word	.L27+1
 703 0070 A9000000 		.word	.L28+1
 704 0074 B5000000 		.word	.L29+1
 705 0078 C1000000 		.word	.L30+1
 706 007c D1000000 		.word	.L31+1
 707 0080 E3000000 		.word	.L32+1
 708              		.p2align 1
 709              	.L24:
 282:main.c        ****             //where 1 is on white, 0 is on black.
 283:main.c        ****                 case 0: // all sensors are in black
 284:main.c        ****                     motorGoStraight();
 710              		.loc 1 284 0
 711 0084 FFF7FEFF 		bl	motorGoStraight
 285:main.c        ****                     LED_Write(1);
 712              		.loc 1 285 0
 713 0088 0120     		movs	r0, #1
 714 008a FFF7FEFF 		bl	LED_Write
 286:main.c        ****                     break;
 715              		.loc 1 286 0
 716 008e 30E0     		b	.L33
 717              	.L26:
 287:main.c        ****                 
 288:main.c        ****                 case 1:// 0 0 1
 289:main.c        ****                     motorStop();
 718              		.loc 1 289 0
 719 0090 FFF7FEFF 		bl	motorStop
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 19


 290:main.c        ****                     LED_Write(0);
 720              		.loc 1 290 0
 721 0094 0020     		movs	r0, #0
 722 0096 FFF7FEFF 		bl	LED_Write
 291:main.c        ****                     break;
 723              		.loc 1 291 0
 724 009a 2AE0     		b	.L33
 725              	.L27:
 292:main.c        ****                 
 293:main.c        ****                 
 294:main.c        ****                 case 2: // 0 1 0
 295:main.c        ****                     motorStop();
 726              		.loc 1 295 0
 727 009c FFF7FEFF 		bl	motorStop
 296:main.c        ****                     LED_Write(0);
 728              		.loc 1 296 0
 729 00a0 0020     		movs	r0, #0
 730 00a2 FFF7FEFF 		bl	LED_Write
 297:main.c        ****                     break;
 731              		.loc 1 297 0
 732 00a6 24E0     		b	.L33
 733              	.L28:
 298:main.c        ****                 
 299:main.c        ****                 case 3:// 0 1 1
 300:main.c        ****                     motorStop();
 734              		.loc 1 300 0
 735 00a8 FFF7FEFF 		bl	motorStop
 301:main.c        ****                     LED_Write(0);
 736              		.loc 1 301 0
 737 00ac 0020     		movs	r0, #0
 738 00ae FFF7FEFF 		bl	LED_Write
 302:main.c        ****                     break;
 739              		.loc 1 302 0
 740 00b2 1EE0     		b	.L33
 741              	.L29:
 303:main.c        ****                 
 304:main.c        ****                 case 4:// 1 0 0
 305:main.c        ****                     motorStop();
 742              		.loc 1 305 0
 743 00b4 FFF7FEFF 		bl	motorStop
 306:main.c        ****                     motorTurnRight(100);
 744              		.loc 1 306 0
 745 00b8 6420     		movs	r0, #100
 746 00ba FFF7FEFF 		bl	motorTurnRight
 307:main.c        ****                     break;
 747              		.loc 1 307 0
 748 00be 18E0     		b	.L33
 749              	.L30:
 308:main.c        ****                     
 309:main.c        ****                 case 5:// 1 0 1
 310:main.c        ****                     motorStop();
 750              		.loc 1 310 0
 751 00c0 FFF7FEFF 		bl	motorStop
 311:main.c        ****                     LED_Write(1);
 752              		.loc 1 311 0
 753 00c4 0120     		movs	r0, #1
 754 00c6 FFF7FEFF 		bl	LED_Write
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 20


 312:main.c        ****                     motorGoStraight();
 755              		.loc 1 312 0
 756 00ca FFF7FEFF 		bl	motorGoStraight
 313:main.c        ****                     break;
 757              		.loc 1 313 0
 758 00ce 10E0     		b	.L33
 759              	.L31:
 314:main.c        **** 
 315:main.c        ****                 case 6://1 1 0
 316:main.c        ****                     motorStop();
 760              		.loc 1 316 0
 761 00d0 FFF7FEFF 		bl	motorStop
 317:main.c        ****                     motorTurnLeft(50);
 762              		.loc 1 317 0
 763 00d4 3220     		movs	r0, #50
 764 00d6 FFF7FEFF 		bl	motorTurnLeft
 318:main.c        ****                     LED_Write(0);
 765              		.loc 1 318 0
 766 00da 0020     		movs	r0, #0
 767 00dc FFF7FEFF 		bl	LED_Write
 319:main.c        ****                     break;
 768              		.loc 1 319 0
 769 00e0 07E0     		b	.L33
 770              	.L32:
 320:main.c        ****                     
 321:main.c        ****                 case 7:// 1 1 1
 322:main.c        ****             
 323:main.c        ****                     motorStop();
 771              		.loc 1 323 0
 772 00e2 FFF7FEFF 		bl	motorStop
 324:main.c        ****                     LED_Write(0);
 773              		.loc 1 324 0
 774 00e6 0020     		movs	r0, #0
 775 00e8 FFF7FEFF 		bl	LED_Write
 325:main.c        ****                     break;
 776              		.loc 1 325 0
 777 00ec 01E0     		b	.L33
 778              	.L23:
 326:main.c        ****             
 327:main.c        ****                 default:
 328:main.c        ****                     motorStop();
 779              		.loc 1 328 0
 780 00ee FFF7FEFF 		bl	motorStop
 781              	.L33:
 329:main.c        ****             
 330:main.c        ****                 
 331:main.c        ****             
 332:main.c        ****             }
 333:main.c        **** //            if(leftIntersection){
 334:main.c        **** //                motorTurnLeft(55);
 335:main.c        **** //            
 336:main.c        **** //            
 337:main.c        **** //                CyDelay(250);
 338:main.c        **** //            }
 339:main.c        **** //            
 340:main.c        **** //            if(rightIntersection){
 341:main.c        **** //                motorTurnRight(55);
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 21


 342:main.c        **** //                
 343:main.c        **** //                CyDelay(250);//small rotation need small time
 344:main.c        **** //            
 345:main.c        **** //            }
 346:main.c        ****             
 347:main.c        **** //            //Slight turns
 348:main.c        **** //            if(lightDetectedFront[0] == 1 && lightDetectedFront[1]==0){
 349:main.c        **** //                motorTurnRight(140);
 350:main.c        **** //                CyDelay(20);//small rotation need small time
 351:main.c        **** //            }
 352:main.c        **** //            
 353:main.c        **** //            if(lightDetectedFront[2] == 0 && lightDetectedFront[1]==1){
 354:main.c        **** //                motorTurnLeft(140);
 355:main.c        **** //                CyDelay(20);//small rotation need small time
 356:main.c        **** //            }
 357:main.c        **** 
 358:main.c        ****            
 359:main.c        ****             //reset variable.
 360:main.c        ****             processSensors = 0;
 782              		.loc 1 360 0
 783 00f2 094B     		ldr	r3, .L35+12
 784 00f4 0022     		movs	r2, #0
 785 00f6 1A60     		str	r2, [r3]
 361:main.c        ****             //reset counter
 362:main.c        ****             //reset flags for lightsensors because it checks every 10 iterations, adds delay/
 363:main.c        ****             lightDetectedFront[0] = 0;
 786              		.loc 1 363 0
 787 00f8 084B     		ldr	r3, .L35+16
 788 00fa 0022     		movs	r2, #0
 789 00fc 1A60     		str	r2, [r3]
 364:main.c        ****             lightDetectedFront[1] = 0;
 790              		.loc 1 364 0
 791 00fe 074B     		ldr	r3, .L35+16
 792 0100 0022     		movs	r2, #0
 793 0102 5A60     		str	r2, [r3, #4]
 365:main.c        ****             lightDetectedFront[2] = 0;
 794              		.loc 1 365 0
 795 0104 054B     		ldr	r3, .L35+16
 796 0106 0022     		movs	r2, #0
 797 0108 9A60     		str	r2, [r3, #8]
 798              	.LBE2:
 366:main.c        ****           
 367:main.c        ****         }
 368:main.c        ****         
 369:main.c        ****     }   
 799              		.loc 1 369 0
 800 010a 9DE7     		b	.L34
 801              	.L36:
 802              		.align	2
 803              	.L35:
 804 010c 34000000 		.word	count
 805 0110 00000000 		.word	isr_TS_Interrupt_sample
 806 0114 00000000 		.word	isr_eoc_Interrupt_test
 807 0118 00000000 		.word	processSensors
 808 011c 00000000 		.word	lightDetectedFront
 809              		.cfi_endproc
 810              	.LFE74:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 22


 811              		.size	main, .-main
 812              		.section	.text.convertSensorBinary,"ax",%progbits
 813              		.align	2
 814              		.global	convertSensorBinary
 815              		.thumb
 816              		.thumb_func
 817              		.type	convertSensorBinary, %function
 818              	convertSensorBinary:
 819              	.LFB75:
 370:main.c        **** }
 371:main.c        **** 
 372:main.c        ****   
 373:main.c        **** 
 374:main.c        **** 
 375:main.c        **** 
 376:main.c        **** int convertSensorBinary()
 377:main.c        **** {
 820              		.loc 1 377 0
 821              		.cfi_startproc
 822              		@ args = 0, pretend = 0, frame = 16
 823              		@ frame_needed = 1, uses_anonymous_args = 0
 824              		@ link register save eliminated.
 825 0000 80B4     		push	{r7}
 826              		.cfi_def_cfa_offset 4
 827              		.cfi_offset 7, -4
 828 0002 85B0     		sub	sp, sp, #20
 829              		.cfi_def_cfa_offset 24
 830 0004 00AF     		add	r7, sp, #0
 831              		.cfi_def_cfa_register 7
 378:main.c        ****    int value=0;
 832              		.loc 1 378 0
 833 0006 0023     		movs	r3, #0
 834 0008 FB60     		str	r3, [r7, #12]
 379:main.c        ****    int binaryIndex = 0; // index from 0 to 2 to calculate from LSB to MSB
 835              		.loc 1 379 0
 836 000a 0023     		movs	r3, #0
 837 000c BB60     		str	r3, [r7, #8]
 838              	.LBB3:
 380:main.c        ****    for (int i=2;i>=0;i--){
 839              		.loc 1 380 0
 840 000e 0223     		movs	r3, #2
 841 0010 7B60     		str	r3, [r7, #4]
 842 0012 16E0     		b	.L38
 843              	.L39:
 844              	.LBB4:
 381:main.c        ****     int x=lightDetectedFront[i];
 845              		.loc 1 381 0 discriminator 3
 846 0014 0F4A     		ldr	r2, .L41
 847 0016 7B68     		ldr	r3, [r7, #4]
 848 0018 52F82330 		ldr	r3, [r2, r3, lsl #2]
 849 001c 3B60     		str	r3, [r7]
 382:main.c        ****     value = value + ((2^binaryIndex) * lightDetectedFront[i]); // eg first value, Q2 is in whitelig
 850              		.loc 1 382 0 discriminator 3
 851 001e BB68     		ldr	r3, [r7, #8]
 852 0020 83F00203 		eor	r3, r3, #2
 853 0024 0B49     		ldr	r1, .L41
 854 0026 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 23


 855 0028 51F82220 		ldr	r2, [r1, r2, lsl #2]
 856 002c 02FB03F3 		mul	r3, r2, r3
 857 0030 FA68     		ldr	r2, [r7, #12]
 858 0032 1344     		add	r3, r3, r2
 859 0034 FB60     		str	r3, [r7, #12]
 383:main.c        ****     binaryIndex++;
 860              		.loc 1 383 0 discriminator 3
 861 0036 BB68     		ldr	r3, [r7, #8]
 862 0038 0133     		adds	r3, r3, #1
 863 003a BB60     		str	r3, [r7, #8]
 864              	.LBE4:
 380:main.c        ****     int x=lightDetectedFront[i];
 865              		.loc 1 380 0 discriminator 3
 866 003c 7B68     		ldr	r3, [r7, #4]
 867 003e 013B     		subs	r3, r3, #1
 868 0040 7B60     		str	r3, [r7, #4]
 869              	.L38:
 380:main.c        ****     int x=lightDetectedFront[i];
 870              		.loc 1 380 0 is_stmt 0 discriminator 1
 871 0042 7B68     		ldr	r3, [r7, #4]
 872 0044 002B     		cmp	r3, #0
 873 0046 E5DA     		bge	.L39
 874              	.LBE3:
 384:main.c        ****     }
 385:main.c        **** 
 386:main.c        ****     return value;
 875              		.loc 1 386 0 is_stmt 1
 876 0048 FB68     		ldr	r3, [r7, #12]
 387:main.c        **** }
 877              		.loc 1 387 0
 878 004a 1846     		mov	r0, r3
 879 004c 1437     		adds	r7, r7, #20
 880              		.cfi_def_cfa_offset 4
 881 004e BD46     		mov	sp, r7
 882              		.cfi_def_cfa_register 13
 883              		@ sp needed
 884 0050 80BC     		pop	{r7}
 885              		.cfi_restore 7
 886              		.cfi_def_cfa_offset 0
 887 0052 7047     		bx	lr
 888              	.L42:
 889              		.align	2
 890              	.L41:
 891 0054 00000000 		.word	lightDetectedFront
 892              		.cfi_endproc
 893              	.LFE75:
 894              		.size	convertSensorBinary, .-convertSensorBinary
 895              		.section	.text.usbPutString,"ax",%progbits
 896              		.align	2
 897              		.global	usbPutString
 898              		.thumb
 899              		.thumb_func
 900              		.type	usbPutString, %function
 901              	usbPutString:
 902              	.LFB76:
 388:main.c        **** //* ========================================
 389:main.c        **** void usbPutString(char *s)
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 24


 390:main.c        **** {
 903              		.loc 1 390 0
 904              		.cfi_startproc
 905              		@ args = 0, pretend = 0, frame = 8
 906              		@ frame_needed = 1, uses_anonymous_args = 0
 907 0000 80B5     		push	{r7, lr}
 908              		.cfi_def_cfa_offset 8
 909              		.cfi_offset 7, -8
 910              		.cfi_offset 14, -4
 911 0002 82B0     		sub	sp, sp, #8
 912              		.cfi_def_cfa_offset 16
 913 0004 00AF     		add	r7, sp, #0
 914              		.cfi_def_cfa_register 7
 915 0006 7860     		str	r0, [r7, #4]
 391:main.c        **** // !! Assumes that *s is a string with allocated space >=64 chars     
 392:main.c        **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 393:main.c        **** //  length to 62 char (63rd char is a '!')
 394:main.c        **** 
 395:main.c        **** #ifdef USE_USB     
 396:main.c        ****     while (USBUART_CDCIsReady() == 0);
 916              		.loc 1 396 0
 917 0008 00BF     		nop
 918              	.L44:
 919              		.loc 1 396 0 is_stmt 0 discriminator 1
 920 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 921 000e 0346     		mov	r3, r0
 922 0010 002B     		cmp	r3, #0
 923 0012 FAD0     		beq	.L44
 397:main.c        ****     s[63]='\0';
 924              		.loc 1 397 0 is_stmt 1
 925 0014 7B68     		ldr	r3, [r7, #4]
 926 0016 3F33     		adds	r3, r3, #63
 927 0018 0022     		movs	r2, #0
 928 001a 1A70     		strb	r2, [r3]
 398:main.c        ****     s[62]='!';
 929              		.loc 1 398 0
 930 001c 7B68     		ldr	r3, [r7, #4]
 931 001e 3E33     		adds	r3, r3, #62
 932 0020 2122     		movs	r2, #33
 933 0022 1A70     		strb	r2, [r3]
 399:main.c        ****     USBUART_PutData((uint8*)s,strlen(s));
 934              		.loc 1 399 0
 935 0024 7868     		ldr	r0, [r7, #4]
 936 0026 FFF7FEFF 		bl	strlen
 937 002a 0346     		mov	r3, r0
 938 002c 9BB2     		uxth	r3, r3
 939 002e 1946     		mov	r1, r3
 940 0030 7868     		ldr	r0, [r7, #4]
 941 0032 FFF7FEFF 		bl	USBUART_PutData
 400:main.c        **** #endif
 401:main.c        **** }
 942              		.loc 1 401 0
 943 0036 00BF     		nop
 944 0038 0837     		adds	r7, r7, #8
 945              		.cfi_def_cfa_offset 8
 946 003a BD46     		mov	sp, r7
 947              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 25


 948              		@ sp needed
 949 003c 80BD     		pop	{r7, pc}
 950              		.cfi_endproc
 951              	.LFE76:
 952              		.size	usbPutString, .-usbPutString
 953 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 954              		.align	2
 955              		.global	usbPutChar
 956              		.thumb
 957              		.thumb_func
 958              		.type	usbPutChar, %function
 959              	usbPutChar:
 960              	.LFB77:
 402:main.c        **** //* ========================================
 403:main.c        **** void usbPutChar(char c)
 404:main.c        **** {
 961              		.loc 1 404 0
 962              		.cfi_startproc
 963              		@ args = 0, pretend = 0, frame = 8
 964              		@ frame_needed = 1, uses_anonymous_args = 0
 965 0000 80B5     		push	{r7, lr}
 966              		.cfi_def_cfa_offset 8
 967              		.cfi_offset 7, -8
 968              		.cfi_offset 14, -4
 969 0002 82B0     		sub	sp, sp, #8
 970              		.cfi_def_cfa_offset 16
 971 0004 00AF     		add	r7, sp, #0
 972              		.cfi_def_cfa_register 7
 973 0006 0346     		mov	r3, r0
 974 0008 FB71     		strb	r3, [r7, #7]
 405:main.c        **** #ifdef USE_USB     
 406:main.c        ****     while (USBUART_CDCIsReady() == 0);
 975              		.loc 1 406 0
 976 000a 00BF     		nop
 977              	.L46:
 978              		.loc 1 406 0 is_stmt 0 discriminator 1
 979 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 980 0010 0346     		mov	r3, r0
 981 0012 002B     		cmp	r3, #0
 982 0014 FAD0     		beq	.L46
 407:main.c        ****     USBUART_PutChar(c);
 983              		.loc 1 407 0 is_stmt 1
 984 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 985 0018 1846     		mov	r0, r3
 986 001a FFF7FEFF 		bl	USBUART_PutChar
 408:main.c        **** #endif    
 409:main.c        **** }
 987              		.loc 1 409 0
 988 001e 00BF     		nop
 989 0020 0837     		adds	r7, r7, #8
 990              		.cfi_def_cfa_offset 8
 991 0022 BD46     		mov	sp, r7
 992              		.cfi_def_cfa_register 13
 993              		@ sp needed
 994 0024 80BD     		pop	{r7, pc}
 995              		.cfi_endproc
 996              	.LFE77:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 26


 997              		.size	usbPutChar, .-usbPutChar
 998 0026 00BF     		.section	.text.handle_usb,"ax",%progbits
 999              		.align	2
 1000              		.global	handle_usb
 1001              		.thumb
 1002              		.thumb_func
 1003              		.type	handle_usb, %function
 1004              	handle_usb:
 1005              	.LFB78:
 410:main.c        **** //* ========================================
 411:main.c        **** void handle_usb()
 412:main.c        **** {
 1006              		.loc 1 412 0
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 8
 1009              		@ frame_needed = 1, uses_anonymous_args = 0
 1010 0000 80B5     		push	{r7, lr}
 1011              		.cfi_def_cfa_offset 8
 1012              		.cfi_offset 7, -8
 1013              		.cfi_offset 14, -4
 1014 0002 82B0     		sub	sp, sp, #8
 1015              		.cfi_def_cfa_offset 16
 1016 0004 00AF     		add	r7, sp, #0
 1017              		.cfi_def_cfa_register 7
 413:main.c        ****     // handles input at terminal, echos it back to the terminal
 414:main.c        ****     // turn echo OFF, key emulation: only CR
 415:main.c        ****     // entered string is made available in 'line' and 'flag_KB_string' is set
 416:main.c        ****     
 417:main.c        ****     static uint8 usbStarted = FALSE;
 418:main.c        ****     static uint16 usbBufCount = 0;
 419:main.c        ****     uint8 c; 
 420:main.c        ****     
 421:main.c        **** 
 422:main.c        ****     if (!usbStarted)
 1018              		.loc 1 422 0
 1019 0006 2B4B     		ldr	r3, .L57
 1020 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1021 000a 002B     		cmp	r3, #0
 1022 000c 0AD1     		bne	.L48
 423:main.c        ****     {
 424:main.c        ****         if (USBUART_GetConfiguration())
 1023              		.loc 1 424 0
 1024 000e FFF7FEFF 		bl	USBUART_GetConfiguration
 1025 0012 0346     		mov	r3, r0
 1026 0014 002B     		cmp	r3, #0
 1027 0016 49D0     		beq	.L56
 425:main.c        ****         {
 426:main.c        ****             USBUART_CDC_Init();
 1028              		.loc 1 426 0
 1029 0018 FFF7FEFF 		bl	USBUART_CDC_Init
 427:main.c        ****             usbStarted = TRUE;
 1030              		.loc 1 427 0
 1031 001c 254B     		ldr	r3, .L57
 1032 001e 0122     		movs	r2, #1
 1033 0020 1A70     		strb	r2, [r3]
 428:main.c        ****         }
 429:main.c        ****     }
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 27


 430:main.c        ****     else
 431:main.c        ****     {
 432:main.c        ****         if (USBUART_DataIsReady() != 0)
 433:main.c        ****         {  
 434:main.c        ****             c = USBUART_GetChar();
 435:main.c        **** 
 436:main.c        ****             if ((c == 13) || (c == 10))
 437:main.c        ****             {
 438:main.c        **** //                if (usbBufCount > 0)
 439:main.c        ****                 {
 440:main.c        ****                     entry[usbBufCount]= '\0';
 441:main.c        ****                     strcpy(line,entry);
 442:main.c        ****                     usbBufCount = 0;
 443:main.c        ****                     flag_KB_string = 1;
 444:main.c        ****                 }
 445:main.c        ****             }
 446:main.c        ****             else 
 447:main.c        ****             {
 448:main.c        ****                 if (((c == CHAR_BACKSP) || (c == CHAR_DEL) ) && (usbBufCount > 0) )
 449:main.c        ****                     usbBufCount--;
 450:main.c        ****                 else
 451:main.c        ****                 {
 452:main.c        ****                     if (usbBufCount > (BUF_SIZE-2) ) // one less else strtok triggers a crash
 453:main.c        ****                     {
 454:main.c        ****                        USBUART_PutChar('!');        
 455:main.c        ****                     }
 456:main.c        ****                     else
 457:main.c        ****                         entry[usbBufCount++] = c;  
 458:main.c        ****                 }  
 459:main.c        ****             }
 460:main.c        ****         }
 461:main.c        ****     }    
 462:main.c        **** }
 1034              		.loc 1 462 0
 1035 0022 43E0     		b	.L56
 1036              	.L48:
 432:main.c        ****         {  
 1037              		.loc 1 432 0
 1038 0024 FFF7FEFF 		bl	USBUART_DataIsReady
 1039 0028 0346     		mov	r3, r0
 1040 002a 002B     		cmp	r3, #0
 1041 002c 3ED0     		beq	.L56
 434:main.c        **** 
 1042              		.loc 1 434 0
 1043 002e FFF7FEFF 		bl	USBUART_GetChar
 1044 0032 0346     		mov	r3, r0
 1045 0034 FB71     		strb	r3, [r7, #7]
 436:main.c        ****             {
 1046              		.loc 1 436 0
 1047 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1048 0038 0D2B     		cmp	r3, #13
 1049 003a 02D0     		beq	.L51
 436:main.c        ****             {
 1050              		.loc 1 436 0 is_stmt 0 discriminator 1
 1051 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1052 003e 0A2B     		cmp	r3, #10
 1053 0040 10D1     		bne	.L52
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 28


 1054              	.L51:
 440:main.c        ****                     strcpy(line,entry);
 1055              		.loc 1 440 0 is_stmt 1
 1056 0042 1D4B     		ldr	r3, .L57+4
 1057 0044 1B88     		ldrh	r3, [r3]
 1058 0046 1A46     		mov	r2, r3
 1059 0048 1C4B     		ldr	r3, .L57+8
 1060 004a 0021     		movs	r1, #0
 1061 004c 9954     		strb	r1, [r3, r2]
 441:main.c        ****                     usbBufCount = 0;
 1062              		.loc 1 441 0
 1063 004e 1B49     		ldr	r1, .L57+8
 1064 0050 1B48     		ldr	r0, .L57+12
 1065 0052 FFF7FEFF 		bl	strcpy
 442:main.c        ****                     flag_KB_string = 1;
 1066              		.loc 1 442 0
 1067 0056 184B     		ldr	r3, .L57+4
 1068 0058 0022     		movs	r2, #0
 1069 005a 1A80     		strh	r2, [r3]	@ movhi
 443:main.c        ****                 }
 1070              		.loc 1 443 0
 1071 005c 194B     		ldr	r3, .L57+16
 1072 005e 0122     		movs	r2, #1
 1073 0060 1A70     		strb	r2, [r3]
 1074 0062 23E0     		b	.L50
 1075              	.L52:
 448:main.c        ****                     usbBufCount--;
 1076              		.loc 1 448 0
 1077 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1078 0066 082B     		cmp	r3, #8
 1079 0068 02D0     		beq	.L53
 448:main.c        ****                     usbBufCount--;
 1080              		.loc 1 448 0 is_stmt 0 discriminator 2
 1081 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1082 006c 7F2B     		cmp	r3, #127
 1083 006e 0AD1     		bne	.L54
 1084              	.L53:
 448:main.c        ****                     usbBufCount--;
 1085              		.loc 1 448 0 discriminator 3
 1086 0070 114B     		ldr	r3, .L57+4
 1087 0072 1B88     		ldrh	r3, [r3]
 1088 0074 002B     		cmp	r3, #0
 1089 0076 06D0     		beq	.L54
 449:main.c        ****                 else
 1090              		.loc 1 449 0 is_stmt 1
 1091 0078 0F4B     		ldr	r3, .L57+4
 1092 007a 1B88     		ldrh	r3, [r3]
 1093 007c 013B     		subs	r3, r3, #1
 1094 007e 9AB2     		uxth	r2, r3
 1095 0080 0D4B     		ldr	r3, .L57+4
 1096 0082 1A80     		strh	r2, [r3]	@ movhi
 1097 0084 12E0     		b	.L50
 1098              	.L54:
 452:main.c        ****                     {
 1099              		.loc 1 452 0
 1100 0086 0C4B     		ldr	r3, .L57+4
 1101 0088 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 29


 1102 008a 3E2B     		cmp	r3, #62
 1103 008c 03D9     		bls	.L55
 454:main.c        ****                     }
 1104              		.loc 1 454 0
 1105 008e 2120     		movs	r0, #33
 1106 0090 FFF7FEFF 		bl	USBUART_PutChar
 1107              		.loc 1 462 0
 1108 0094 0AE0     		b	.L56
 1109              	.L55:
 457:main.c        ****                 }  
 1110              		.loc 1 457 0
 1111 0096 084B     		ldr	r3, .L57+4
 1112 0098 1B88     		ldrh	r3, [r3]
 1113 009a 5A1C     		adds	r2, r3, #1
 1114 009c 91B2     		uxth	r1, r2
 1115 009e 064A     		ldr	r2, .L57+4
 1116 00a0 1180     		strh	r1, [r2]	@ movhi
 1117 00a2 1946     		mov	r1, r3
 1118 00a4 054A     		ldr	r2, .L57+8
 1119 00a6 FB79     		ldrb	r3, [r7, #7]
 1120 00a8 5354     		strb	r3, [r2, r1]
 1121              		.loc 1 462 0
 1122 00aa FFE7     		b	.L56
 1123              	.L50:
 1124              	.L56:
 1125 00ac 00BF     		nop
 1126 00ae 0837     		adds	r7, r7, #8
 1127              		.cfi_def_cfa_offset 8
 1128 00b0 BD46     		mov	sp, r7
 1129              		.cfi_def_cfa_register 13
 1130              		@ sp needed
 1131 00b2 80BD     		pop	{r7, pc}
 1132              	.L58:
 1133              		.align	2
 1134              	.L57:
 1135 00b4 35000000 		.word	usbStarted.8284
 1136 00b8 36000000 		.word	usbBufCount.8285
 1137 00bc 00000000 		.word	entry
 1138 00c0 00000000 		.word	line
 1139 00c4 00000000 		.word	flag_KB_string
 1140              		.cfi_endproc
 1141              	.LFE78:
 1142              		.size	handle_usb, .-handle_usb
 1143              		.bss
 1144              	usbStarted.8284:
 1145 0035 00       		.space	1
 1146              		.align	1
 1147              	usbBufCount.8285:
 1148 0036 0000     		.space	2
 1149              		.text
 1150              	.Letext0:
 1151              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1152              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1153              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1154              		.file 5 "vars.h"
 1155              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1156              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 30


 1157              	.Ldebug_info0:
 1158 0000 4C060000 		.4byte	0x64c
 1159 0004 0400     		.2byte	0x4
 1160 0006 00000000 		.4byte	.Ldebug_abbrev0
 1161 000a 04       		.byte	0x4
 1162 000b 01       		.uleb128 0x1
 1163 000c B5000000 		.4byte	.LASF92
 1164 0010 0C       		.byte	0xc
 1165 0011 68040000 		.4byte	.LASF93
 1166 0015 8D010000 		.4byte	.LASF94
 1167 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1168 001d 00000000 		.4byte	0
 1169 0021 00000000 		.4byte	.Ldebug_line0
 1170 0025 02       		.uleb128 0x2
 1171 0026 01       		.byte	0x1
 1172 0027 06       		.byte	0x6
 1173 0028 73030000 		.4byte	.LASF0
 1174 002c 02       		.uleb128 0x2
 1175 002d 01       		.byte	0x1
 1176 002e 08       		.byte	0x8
 1177 002f 3A030000 		.4byte	.LASF1
 1178 0033 02       		.uleb128 0x2
 1179 0034 02       		.byte	0x2
 1180 0035 05       		.byte	0x5
 1181 0036 8B000000 		.4byte	.LASF2
 1182 003a 02       		.uleb128 0x2
 1183 003b 02       		.byte	0x2
 1184 003c 07       		.byte	0x7
 1185 003d 1C040000 		.4byte	.LASF3
 1186 0041 03       		.uleb128 0x3
 1187 0042 A7040000 		.4byte	.LASF12
 1188 0046 02       		.byte	0x2
 1189 0047 3F       		.byte	0x3f
 1190 0048 4C000000 		.4byte	0x4c
 1191 004c 02       		.uleb128 0x2
 1192 004d 04       		.byte	0x4
 1193 004e 05       		.byte	0x5
 1194 004f A3020000 		.4byte	.LASF4
 1195 0053 02       		.uleb128 0x2
 1196 0054 04       		.byte	0x4
 1197 0055 07       		.byte	0x7
 1198 0056 6F040000 		.4byte	.LASF5
 1199 005a 02       		.uleb128 0x2
 1200 005b 08       		.byte	0x8
 1201 005c 05       		.byte	0x5
 1202 005d 57020000 		.4byte	.LASF6
 1203 0061 02       		.uleb128 0x2
 1204 0062 08       		.byte	0x8
 1205 0063 07       		.byte	0x7
 1206 0064 7F030000 		.4byte	.LASF7
 1207 0068 04       		.uleb128 0x4
 1208 0069 04       		.byte	0x4
 1209 006a 05       		.byte	0x5
 1210 006b 696E7400 		.ascii	"int\000"
 1211 006f 02       		.uleb128 0x2
 1212 0070 04       		.byte	0x4
 1213 0071 07       		.byte	0x7
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 31


 1214 0072 96030000 		.4byte	.LASF8
 1215 0076 02       		.uleb128 0x2
 1216 0077 08       		.byte	0x8
 1217 0078 04       		.byte	0x4
 1218 0079 28030000 		.4byte	.LASF9
 1219 007d 02       		.uleb128 0x2
 1220 007e 04       		.byte	0x4
 1221 007f 07       		.byte	0x7
 1222 0080 A2000000 		.4byte	.LASF10
 1223 0084 05       		.uleb128 0x5
 1224 0085 04       		.byte	0x4
 1225 0086 8A000000 		.4byte	0x8a
 1226 008a 02       		.uleb128 0x2
 1227 008b 01       		.byte	0x1
 1228 008c 08       		.byte	0x8
 1229 008d EF030000 		.4byte	.LASF11
 1230 0091 03       		.uleb128 0x3
 1231 0092 FF030000 		.4byte	.LASF13
 1232 0096 03       		.byte	0x3
 1233 0097 2C       		.byte	0x2c
 1234 0098 41000000 		.4byte	0x41
 1235 009c 06       		.uleb128 0x6
 1236 009d 87010000 		.4byte	.LASF14
 1237 00a1 04       		.byte	0x4
 1238 00a2 E401     		.2byte	0x1e4
 1239 00a4 2C000000 		.4byte	0x2c
 1240 00a8 06       		.uleb128 0x6
 1241 00a9 74010000 		.4byte	.LASF15
 1242 00ad 04       		.byte	0x4
 1243 00ae E501     		.2byte	0x1e5
 1244 00b0 3A000000 		.4byte	0x3a
 1245 00b4 06       		.uleb128 0x6
 1246 00b5 72020000 		.4byte	.LASF16
 1247 00b9 04       		.byte	0x4
 1248 00ba E701     		.2byte	0x1e7
 1249 00bc 25000000 		.4byte	0x25
 1250 00c0 06       		.uleb128 0x6
 1251 00c1 81010000 		.4byte	.LASF17
 1252 00c5 04       		.byte	0x4
 1253 00c6 E801     		.2byte	0x1e8
 1254 00c8 33000000 		.4byte	0x33
 1255 00cc 02       		.uleb128 0x2
 1256 00cd 04       		.byte	0x4
 1257 00ce 04       		.byte	0x4
 1258 00cf 37020000 		.4byte	.LASF18
 1259 00d3 02       		.uleb128 0x2
 1260 00d4 08       		.byte	0x8
 1261 00d5 04       		.byte	0x4
 1262 00d6 29000000 		.4byte	.LASF19
 1263 00da 07       		.uleb128 0x7
 1264 00db D9030000 		.4byte	.LASF95
 1265 00df 20       		.byte	0x20
 1266 00e0 05       		.byte	0x5
 1267 00e1 29       		.byte	0x29
 1268 00e2 B3010000 		.4byte	0x1b3
 1269 00e6 08       		.uleb128 0x8
 1270 00e7 65050000 		.4byte	.LASF20
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 32


 1271 00eb 05       		.byte	0x5
 1272 00ec 2A       		.byte	0x2a
 1273 00ed B4000000 		.4byte	0xb4
 1274 00f1 00       		.byte	0
 1275 00f2 08       		.uleb128 0x8
 1276 00f3 7B010000 		.4byte	.LASF21
 1277 00f7 05       		.byte	0x5
 1278 00f8 2B       		.byte	0x2b
 1279 00f9 9C000000 		.4byte	0x9c
 1280 00fd 01       		.byte	0x1
 1281 00fe 08       		.uleb128 0x8
 1282 00ff F4030000 		.4byte	.LASF22
 1283 0103 05       		.byte	0x5
 1284 0104 2C       		.byte	0x2c
 1285 0105 C0000000 		.4byte	0xc0
 1286 0109 02       		.byte	0x2
 1287 010a 08       		.uleb128 0x8
 1288 010b 1E050000 		.4byte	.LASF23
 1289 010f 05       		.byte	0x5
 1290 0110 2D       		.byte	0x2d
 1291 0111 C0000000 		.4byte	0xc0
 1292 0115 04       		.byte	0x4
 1293 0116 08       		.uleb128 0x8
 1294 0117 6A050000 		.4byte	.LASF24
 1295 011b 05       		.byte	0x5
 1296 011c 2E       		.byte	0x2e
 1297 011d C0000000 		.4byte	0xc0
 1298 0121 06       		.byte	0x6
 1299 0122 08       		.uleb128 0x8
 1300 0123 9B020000 		.4byte	.LASF25
 1301 0127 05       		.byte	0x5
 1302 0128 2F       		.byte	0x2f
 1303 0129 C0000000 		.4byte	0xc0
 1304 012d 08       		.byte	0x8
 1305 012e 08       		.uleb128 0x8
 1306 012f DA040000 		.4byte	.LASF26
 1307 0133 05       		.byte	0x5
 1308 0134 30       		.byte	0x30
 1309 0135 C0000000 		.4byte	0xc0
 1310 0139 0A       		.byte	0xa
 1311 013a 08       		.uleb128 0x8
 1312 013b 5B030000 		.4byte	.LASF27
 1313 013f 05       		.byte	0x5
 1314 0140 31       		.byte	0x31
 1315 0141 C0000000 		.4byte	0xc0
 1316 0145 0C       		.byte	0xc
 1317 0146 08       		.uleb128 0x8
 1318 0147 8E020000 		.4byte	.LASF28
 1319 014b 05       		.byte	0x5
 1320 014c 32       		.byte	0x32
 1321 014d C0000000 		.4byte	0xc0
 1322 0151 0E       		.byte	0xe
 1323 0152 08       		.uleb128 0x8
 1324 0153 C7030000 		.4byte	.LASF29
 1325 0157 05       		.byte	0x5
 1326 0158 33       		.byte	0x33
 1327 0159 C0000000 		.4byte	0xc0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 33


 1328 015d 10       		.byte	0x10
 1329 015e 08       		.uleb128 0x8
 1330 015f 07040000 		.4byte	.LASF30
 1331 0163 05       		.byte	0x5
 1332 0164 34       		.byte	0x34
 1333 0165 C0000000 		.4byte	0xc0
 1334 0169 12       		.byte	0x12
 1335 016a 08       		.uleb128 0x8
 1336 016b 2F040000 		.4byte	.LASF31
 1337 016f 05       		.byte	0x5
 1338 0170 35       		.byte	0x35
 1339 0171 C0000000 		.4byte	0xc0
 1340 0175 14       		.byte	0x14
 1341 0176 08       		.uleb128 0x8
 1342 0177 49050000 		.4byte	.LASF32
 1343 017b 05       		.byte	0x5
 1344 017c 36       		.byte	0x36
 1345 017d C0000000 		.4byte	0xc0
 1346 0181 16       		.byte	0x16
 1347 0182 08       		.uleb128 0x8
 1348 0183 83000000 		.4byte	.LASF33
 1349 0187 05       		.byte	0x5
 1350 0188 37       		.byte	0x37
 1351 0189 C0000000 		.4byte	0xc0
 1352 018d 18       		.byte	0x18
 1353 018e 08       		.uleb128 0x8
 1354 018f 86020000 		.4byte	.LASF34
 1355 0193 05       		.byte	0x5
 1356 0194 38       		.byte	0x38
 1357 0195 C0000000 		.4byte	0xc0
 1358 0199 1A       		.byte	0x1a
 1359 019a 08       		.uleb128 0x8
 1360 019b BE030000 		.4byte	.LASF35
 1361 019f 05       		.byte	0x5
 1362 01a0 39       		.byte	0x39
 1363 01a1 C0000000 		.4byte	0xc0
 1364 01a5 1C       		.byte	0x1c
 1365 01a6 08       		.uleb128 0x8
 1366 01a7 0F040000 		.4byte	.LASF36
 1367 01ab 05       		.byte	0x5
 1368 01ac 3A       		.byte	0x3a
 1369 01ad C0000000 		.4byte	0xc0
 1370 01b1 1E       		.byte	0x1e
 1371 01b2 00       		.byte	0
 1372 01b3 09       		.uleb128 0x9
 1373 01b4 BF040000 		.4byte	.LASF37
 1374 01b8 01       		.byte	0x1
 1375 01b9 32       		.byte	0x32
 1376 01ba 00000000 		.4byte	.LFB64
 1377 01be 14000000 		.4byte	.LFE64-.LFB64
 1378 01c2 01       		.uleb128 0x1
 1379 01c3 9C       		.byte	0x9c
 1380 01c4 09       		.uleb128 0x9
 1381 01c5 67000000 		.4byte	.LASF38
 1382 01c9 01       		.byte	0x1
 1383 01ca 38       		.byte	0x38
 1384 01cb 00000000 		.4byte	.LFB65
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 34


 1385 01cf 14000000 		.4byte	.LFE65-.LFB65
 1386 01d3 01       		.uleb128 0x1
 1387 01d4 9C       		.byte	0x9c
 1388 01d5 09       		.uleb128 0x9
 1389 01d6 00000000 		.4byte	.LASF39
 1390 01da 01       		.byte	0x1
 1391 01db 3E       		.byte	0x3e
 1392 01dc 00000000 		.4byte	.LFB66
 1393 01e0 14000000 		.4byte	.LFE66-.LFB66
 1394 01e4 01       		.uleb128 0x1
 1395 01e5 9C       		.byte	0x9c
 1396 01e6 0A       		.uleb128 0xa
 1397 01e7 B1040000 		.4byte	.LASF40
 1398 01eb 01       		.byte	0x1
 1399 01ec 43       		.byte	0x43
 1400 01ed 00000000 		.4byte	.LFB67
 1401 01f1 20000000 		.4byte	.LFE67-.LFB67
 1402 01f5 01       		.uleb128 0x1
 1403 01f6 9C       		.byte	0x9c
 1404 01f7 08020000 		.4byte	0x208
 1405 01fb 0B       		.uleb128 0xb
 1406 01fc 7800     		.ascii	"x\000"
 1407 01fe 01       		.byte	0x1
 1408 01ff 43       		.byte	0x43
 1409 0200 9C000000 		.4byte	0x9c
 1410 0204 02       		.uleb128 0x2
 1411 0205 91       		.byte	0x91
 1412 0206 77       		.sleb128 -9
 1413 0207 00       		.byte	0
 1414 0208 0A       		.uleb128 0xa
 1415 0209 56050000 		.4byte	.LASF41
 1416 020d 01       		.byte	0x1
 1417 020e 4E       		.byte	0x4e
 1418 020f 00000000 		.4byte	.LFB68
 1419 0213 26000000 		.4byte	.LFE68-.LFB68
 1420 0217 01       		.uleb128 0x1
 1421 0218 9C       		.byte	0x9c
 1422 0219 2A020000 		.4byte	0x22a
 1423 021d 0B       		.uleb128 0xb
 1424 021e 7800     		.ascii	"x\000"
 1425 0220 01       		.byte	0x1
 1426 0221 4E       		.byte	0x4e
 1427 0222 68000000 		.4byte	0x68
 1428 0226 02       		.uleb128 0x2
 1429 0227 91       		.byte	0x91
 1430 0228 74       		.sleb128 -12
 1431 0229 00       		.byte	0
 1432 022a 0A       		.uleb128 0xa
 1433 022b 50000000 		.4byte	.LASF42
 1434 022f 01       		.byte	0x1
 1435 0230 5B       		.byte	0x5b
 1436 0231 00000000 		.4byte	.LFB69
 1437 0235 90000000 		.4byte	.LFE69-.LFB69
 1438 0239 01       		.uleb128 0x1
 1439 023a 9C       		.byte	0x9c
 1440 023b 6A020000 		.4byte	0x26a
 1441 023f 0C       		.uleb128 0xc
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 35


 1442 0240 48010000 		.4byte	.LASF43
 1443 0244 01       		.byte	0x1
 1444 0245 63       		.byte	0x63
 1445 0246 C0000000 		.4byte	0xc0
 1446 024a 02       		.uleb128 0x2
 1447 024b 91       		.byte	0x91
 1448 024c 76       		.sleb128 -10
 1449 024d 0C       		.uleb128 0xc
 1450 024e 50010000 		.4byte	.LASF44
 1451 0252 01       		.byte	0x1
 1452 0253 64       		.byte	0x64
 1453 0254 C0000000 		.4byte	0xc0
 1454 0258 02       		.uleb128 0x2
 1455 0259 91       		.byte	0x91
 1456 025a 74       		.sleb128 -12
 1457 025b 0C       		.uleb128 0xc
 1458 025c 58010000 		.4byte	.LASF45
 1459 0260 01       		.byte	0x1
 1460 0261 65       		.byte	0x65
 1461 0262 C0000000 		.4byte	0xc0
 1462 0266 02       		.uleb128 0x2
 1463 0267 91       		.byte	0x91
 1464 0268 72       		.sleb128 -14
 1465 0269 00       		.byte	0
 1466 026a 0D       		.uleb128 0xd
 1467 026b 3D020000 		.4byte	.LASF53
 1468 026f 01       		.byte	0x1
 1469 0270 81       		.byte	0x81
 1470 0271 00000000 		.4byte	.LFB70
 1471 0275 0C000000 		.4byte	.LFE70-.LFB70
 1472 0279 01       		.uleb128 0x1
 1473 027a 9C       		.byte	0x9c
 1474 027b 0E       		.uleb128 0xe
 1475 027c CF040000 		.4byte	.LASF62
 1476 0280 01       		.byte	0x1
 1477 0281 94       		.byte	0x94
 1478 0282 00000000 		.4byte	.LFB71
 1479 0286 C0000000 		.4byte	.LFE71-.LFB71
 1480 028a 01       		.uleb128 0x1
 1481 028b 9C       		.byte	0x9c
 1482 028c E9020000 		.4byte	0x2e9
 1483 0290 0C       		.uleb128 0xc
 1484 0291 AC020000 		.4byte	.LASF46
 1485 0295 01       		.byte	0x1
 1486 0296 95       		.byte	0x95
 1487 0297 C0000000 		.4byte	0xc0
 1488 029b 02       		.uleb128 0x2
 1489 029c 91       		.byte	0x91
 1490 029d 76       		.sleb128 -10
 1491 029e 0C       		.uleb128 0xc
 1492 029f C1020000 		.4byte	.LASF47
 1493 02a3 01       		.byte	0x1
 1494 02a4 96       		.byte	0x96
 1495 02a5 C0000000 		.4byte	0xc0
 1496 02a9 02       		.uleb128 0x2
 1497 02aa 91       		.byte	0x91
 1498 02ab 74       		.sleb128 -12
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 36


 1499 02ac 0C       		.uleb128 0xc
 1500 02ad 19030000 		.4byte	.LASF48
 1501 02b1 01       		.byte	0x1
 1502 02b2 97       		.byte	0x97
 1503 02b3 C0000000 		.4byte	0xc0
 1504 02b7 02       		.uleb128 0x2
 1505 02b8 91       		.byte	0x91
 1506 02b9 72       		.sleb128 -14
 1507 02ba 0C       		.uleb128 0xc
 1508 02bb 0A030000 		.4byte	.LASF49
 1509 02bf 01       		.byte	0x1
 1510 02c0 98       		.byte	0x98
 1511 02c1 C0000000 		.4byte	0xc0
 1512 02c5 02       		.uleb128 0x2
 1513 02c6 91       		.byte	0x91
 1514 02c7 70       		.sleb128 -16
 1515 02c8 0C       		.uleb128 0xc
 1516 02c9 D6020000 		.4byte	.LASF50
 1517 02cd 01       		.byte	0x1
 1518 02ce 99       		.byte	0x99
 1519 02cf E9020000 		.4byte	0x2e9
 1520 02d3 04       		.uleb128 0x4
 1521 02d4 91       		.byte	0x91
 1522 02d5 E0B17F   		.sleb128 -10016
 1523 02d8 0C       		.uleb128 0xc
 1524 02d9 3C050000 		.4byte	.LASF51
 1525 02dd 01       		.byte	0x1
 1526 02de 9B       		.byte	0x9b
 1527 02df E9020000 		.4byte	0x2e9
 1528 02e3 04       		.uleb128 0x4
 1529 02e4 91       		.byte	0x91
 1530 02e5 D0E37E   		.sleb128 -20016
 1531 02e8 00       		.byte	0
 1532 02e9 0F       		.uleb128 0xf
 1533 02ea 8A000000 		.4byte	0x8a
 1534 02ee FA020000 		.4byte	0x2fa
 1535 02f2 10       		.uleb128 0x10
 1536 02f3 7D000000 		.4byte	0x7d
 1537 02f7 0F27     		.2byte	0x270f
 1538 02f9 00       		.byte	0
 1539 02fa 09       		.uleb128 0x9
 1540 02fb 60010000 		.4byte	.LASF52
 1541 02ff 01       		.byte	0x1
 1542 0300 A3       		.byte	0xa3
 1543 0301 00000000 		.4byte	.LFB72
 1544 0305 2C000000 		.4byte	.LFE72-.LFB72
 1545 0309 01       		.uleb128 0x1
 1546 030a 9C       		.byte	0x9c
 1547 030b 11       		.uleb128 0x11
 1548 030c 0A000000 		.4byte	.LASF54
 1549 0310 01       		.byte	0x1
 1550 0311 BA       		.byte	0xba
 1551 0312 00000000 		.4byte	.LFB73
 1552 0316 0C000000 		.4byte	.LFE73-.LFB73
 1553 031a 01       		.uleb128 0x1
 1554 031b 9C       		.byte	0x9c
 1555 031c 12       		.uleb128 0x12
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 37


 1556 031d 43010000 		.4byte	.LASF55
 1557 0321 01       		.byte	0x1
 1558 0322 C7       		.byte	0xc7
 1559 0323 68000000 		.4byte	0x68
 1560 0327 00000000 		.4byte	.LFB74
 1561 032b 20010000 		.4byte	.LFE74-.LFB74
 1562 032f 01       		.uleb128 0x1
 1563 0330 9C       		.byte	0x9c
 1564 0331 4F030000 		.4byte	0x34f
 1565 0335 13       		.uleb128 0x13
 1566 0336 50000000 		.4byte	.LBB2
 1567 033a BA000000 		.4byte	.LBE2-.LBB2
 1568 033e 14       		.uleb128 0x14
 1569 033f CF030000 		.4byte	.LASF56
 1570 0343 01       		.byte	0x1
 1571 0344 1701     		.2byte	0x117
 1572 0346 68000000 		.4byte	0x68
 1573 034a 02       		.uleb128 0x2
 1574 034b 91       		.byte	0x91
 1575 034c 74       		.sleb128 -12
 1576 034d 00       		.byte	0
 1577 034e 00       		.byte	0
 1578 034f 15       		.uleb128 0x15
 1579 0350 54040000 		.4byte	.LASF57
 1580 0354 01       		.byte	0x1
 1581 0355 7801     		.2byte	0x178
 1582 0357 68000000 		.4byte	0x68
 1583 035b 00000000 		.4byte	.LFB75
 1584 035f 58000000 		.4byte	.LFE75-.LFB75
 1585 0363 01       		.uleb128 0x1
 1586 0364 9C       		.byte	0x9c
 1587 0365 B6030000 		.4byte	0x3b6
 1588 0369 14       		.uleb128 0x14
 1589 036a 36050000 		.4byte	.LASF58
 1590 036e 01       		.byte	0x1
 1591 036f 7A01     		.2byte	0x17a
 1592 0371 68000000 		.4byte	0x68
 1593 0375 02       		.uleb128 0x2
 1594 0376 91       		.byte	0x91
 1595 0377 74       		.sleb128 -12
 1596 0378 14       		.uleb128 0x14
 1597 0379 E3030000 		.4byte	.LASF59
 1598 037d 01       		.byte	0x1
 1599 037e 7B01     		.2byte	0x17b
 1600 0380 68000000 		.4byte	0x68
 1601 0384 02       		.uleb128 0x2
 1602 0385 91       		.byte	0x91
 1603 0386 70       		.sleb128 -16
 1604 0387 13       		.uleb128 0x13
 1605 0388 0E000000 		.4byte	.LBB3
 1606 038c 3A000000 		.4byte	.LBE3-.LBB3
 1607 0390 16       		.uleb128 0x16
 1608 0391 6900     		.ascii	"i\000"
 1609 0393 01       		.byte	0x1
 1610 0394 7C01     		.2byte	0x17c
 1611 0396 68000000 		.4byte	0x68
 1612 039a 02       		.uleb128 0x2
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 38


 1613 039b 91       		.byte	0x91
 1614 039c 6C       		.sleb128 -20
 1615 039d 13       		.uleb128 0x13
 1616 039e 14000000 		.4byte	.LBB4
 1617 03a2 28000000 		.4byte	.LBE4-.LBB4
 1618 03a6 16       		.uleb128 0x16
 1619 03a7 7800     		.ascii	"x\000"
 1620 03a9 01       		.byte	0x1
 1621 03aa 7D01     		.2byte	0x17d
 1622 03ac 68000000 		.4byte	0x68
 1623 03b0 02       		.uleb128 0x2
 1624 03b1 91       		.byte	0x91
 1625 03b2 68       		.sleb128 -24
 1626 03b3 00       		.byte	0
 1627 03b4 00       		.byte	0
 1628 03b5 00       		.byte	0
 1629 03b6 17       		.uleb128 0x17
 1630 03b7 65020000 		.4byte	.LASF60
 1631 03bb 01       		.byte	0x1
 1632 03bc 8501     		.2byte	0x185
 1633 03be 00000000 		.4byte	.LFB76
 1634 03c2 3E000000 		.4byte	.LFE76-.LFB76
 1635 03c6 01       		.uleb128 0x1
 1636 03c7 9C       		.byte	0x9c
 1637 03c8 DA030000 		.4byte	0x3da
 1638 03cc 18       		.uleb128 0x18
 1639 03cd 7300     		.ascii	"s\000"
 1640 03cf 01       		.byte	0x1
 1641 03d0 8501     		.2byte	0x185
 1642 03d2 84000000 		.4byte	0x84
 1643 03d6 02       		.uleb128 0x2
 1644 03d7 91       		.byte	0x91
 1645 03d8 74       		.sleb128 -12
 1646 03d9 00       		.byte	0
 1647 03da 17       		.uleb128 0x17
 1648 03db 3C000000 		.4byte	.LASF61
 1649 03df 01       		.byte	0x1
 1650 03e0 9301     		.2byte	0x193
 1651 03e2 00000000 		.4byte	.LFB77
 1652 03e6 26000000 		.4byte	.LFE77-.LFB77
 1653 03ea 01       		.uleb128 0x1
 1654 03eb 9C       		.byte	0x9c
 1655 03ec FE030000 		.4byte	0x3fe
 1656 03f0 18       		.uleb128 0x18
 1657 03f1 6300     		.ascii	"c\000"
 1658 03f3 01       		.byte	0x1
 1659 03f4 9301     		.2byte	0x193
 1660 03f6 8A000000 		.4byte	0x8a
 1661 03fa 02       		.uleb128 0x2
 1662 03fb 91       		.byte	0x91
 1663 03fc 77       		.sleb128 -9
 1664 03fd 00       		.byte	0
 1665 03fe 19       		.uleb128 0x19
 1666 03ff F7040000 		.4byte	.LASF63
 1667 0403 01       		.byte	0x1
 1668 0404 9B01     		.2byte	0x19b
 1669 0406 00000000 		.4byte	.LFB78
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 39


 1670 040a C8000000 		.4byte	.LFE78-.LFB78
 1671 040e 01       		.uleb128 0x1
 1672 040f 9C       		.byte	0x9c
 1673 0410 46040000 		.4byte	0x446
 1674 0414 14       		.uleb128 0x14
 1675 0415 81040000 		.4byte	.LASF64
 1676 0419 01       		.byte	0x1
 1677 041a A101     		.2byte	0x1a1
 1678 041c 9C000000 		.4byte	0x9c
 1679 0420 05       		.uleb128 0x5
 1680 0421 03       		.byte	0x3
 1681 0422 35000000 		.4byte	usbStarted.8284
 1682 0426 14       		.uleb128 0x14
 1683 0427 B2030000 		.4byte	.LASF65
 1684 042b 01       		.byte	0x1
 1685 042c A201     		.2byte	0x1a2
 1686 042e A8000000 		.4byte	0xa8
 1687 0432 05       		.uleb128 0x5
 1688 0433 03       		.byte	0x3
 1689 0434 36000000 		.4byte	usbBufCount.8285
 1690 0438 16       		.uleb128 0x16
 1691 0439 6300     		.ascii	"c\000"
 1692 043b 01       		.byte	0x1
 1693 043c A301     		.2byte	0x1a3
 1694 043e 9C000000 		.4byte	0x9c
 1695 0442 02       		.uleb128 0x2
 1696 0443 91       		.byte	0x91
 1697 0444 77       		.sleb128 -9
 1698 0445 00       		.byte	0
 1699 0446 0C       		.uleb128 0xc
 1700 0447 95040000 		.4byte	.LASF66
 1701 044b 01       		.byte	0x1
 1702 044c 80       		.byte	0x80
 1703 044d 57040000 		.4byte	0x457
 1704 0451 05       		.uleb128 0x5
 1705 0452 03       		.byte	0x3
 1706 0453 34000000 		.4byte	count
 1707 0457 1A       		.uleb128 0x1a
 1708 0458 B4000000 		.4byte	0xb4
 1709 045c 1B       		.uleb128 0x1b
 1710 045d 29050000 		.4byte	.LASF67
 1711 0461 06       		.byte	0x6
 1712 0462 1207     		.2byte	0x712
 1713 0464 68040000 		.4byte	0x468
 1714 0468 1A       		.uleb128 0x1a
 1715 0469 91000000 		.4byte	0x91
 1716 046d 1C       		.uleb128 0x1c
 1717 046e 747300   		.ascii	"ts\000"
 1718 0471 05       		.byte	0x5
 1719 0472 10       		.byte	0x10
 1720 0473 9C000000 		.4byte	0x9c
 1721 0477 05       		.uleb128 0x5
 1722 0478 03       		.byte	0x3
 1723 0479 00000000 		.4byte	ts
 1724 047d 1D       		.uleb128 0x1d
 1725 047e 22000000 		.4byte	.LASF68
 1726 0482 05       		.byte	0x5
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 40


 1727 0483 11       		.byte	0x11
 1728 0484 A8000000 		.4byte	0xa8
 1729 0488 05       		.uleb128 0x5
 1730 0489 03       		.byte	0x3
 1731 048a 00000000 		.4byte	ts_enc
 1732 048e 1D       		.uleb128 0x1d
 1733 048f ED040000 		.4byte	.LASF69
 1734 0493 05       		.byte	0x5
 1735 0494 12       		.byte	0x12
 1736 0495 A8000000 		.4byte	0xa8
 1737 0499 05       		.uleb128 0x5
 1738 049a 03       		.byte	0x3
 1739 049b 00000000 		.4byte	ts_update
 1740 049f 1D       		.uleb128 0x1d
 1741 04a0 8C040000 		.4byte	.LASF70
 1742 04a4 05       		.byte	0x5
 1743 04a5 13       		.byte	0x13
 1744 04a6 A8000000 		.4byte	0xa8
 1745 04aa 05       		.uleb128 0x5
 1746 04ab 03       		.byte	0x3
 1747 04ac 00000000 		.4byte	ts_speed
 1748 04b0 1D       		.uleb128 0x1d
 1749 04b1 E2040000 		.4byte	.LASF71
 1750 04b5 05       		.byte	0x5
 1751 04b6 14       		.byte	0x14
 1752 04b7 A8000000 		.4byte	0xa8
 1753 04bb 05       		.uleb128 0x5
 1754 04bc 03       		.byte	0x3
 1755 04bd 00000000 		.4byte	ts_display
 1756 04c1 1D       		.uleb128 0x1d
 1757 04c2 9B040000 		.4byte	.LASF72
 1758 04c6 05       		.byte	0x5
 1759 04c7 16       		.byte	0x16
 1760 04c8 9C000000 		.4byte	0x9c
 1761 04cc 05       		.uleb128 0x5
 1762 04cd 03       		.byte	0x3
 1763 04ce 00000000 		.4byte	flag_ts_enc
 1764 04d2 1D       		.uleb128 0x1d
 1765 04d3 77020000 		.4byte	.LASF73
 1766 04d7 05       		.byte	0x5
 1767 04d8 17       		.byte	0x17
 1768 04d9 9C000000 		.4byte	0x9c
 1769 04dd 05       		.uleb128 0x5
 1770 04de 03       		.byte	0x3
 1771 04df 00000000 		.4byte	flag_ts_update
 1772 04e3 1D       		.uleb128 0x1d
 1773 04e4 46040000 		.4byte	.LASF74
 1774 04e8 05       		.byte	0x5
 1775 04e9 18       		.byte	0x18
 1776 04ea 9C000000 		.4byte	0x9c
 1777 04ee 05       		.uleb128 0x5
 1778 04ef 03       		.byte	0x3
 1779 04f0 00000000 		.4byte	flag_ts_speed
 1780 04f4 1D       		.uleb128 0x1d
 1781 04f5 F2020000 		.4byte	.LASF75
 1782 04f9 05       		.byte	0x5
 1783 04fa 19       		.byte	0x19
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 41


 1784 04fb 9C000000 		.4byte	0x9c
 1785 04ff 05       		.uleb128 0x5
 1786 0500 03       		.byte	0x3
 1787 0501 00000000 		.4byte	flag_ts_display
 1788 0505 1D       		.uleb128 0x1d
 1789 0506 02030000 		.4byte	.LASF76
 1790 050a 05       		.byte	0x5
 1791 050b 1C       		.byte	0x1c
 1792 050c 9C000000 		.4byte	0x9c
 1793 0510 05       		.uleb128 0x5
 1794 0511 03       		.byte	0x3
 1795 0512 00000000 		.4byte	flag_rx
 1796 0516 1D       		.uleb128 0x1d
 1797 0517 30000000 		.4byte	.LASF77
 1798 051b 05       		.byte	0x5
 1799 051c 1D       		.byte	0x1d
 1800 051d 9C000000 		.4byte	0x9c
 1801 0521 05       		.uleb128 0x5
 1802 0522 03       		.byte	0x3
 1803 0523 00000000 		.4byte	flag_packet
 1804 0527 1D       		.uleb128 0x1d
 1805 0528 A3030000 		.4byte	.LASF78
 1806 052c 05       		.byte	0x5
 1807 052d 1E       		.byte	0x1e
 1808 052e 9C000000 		.4byte	0x9c
 1809 0532 05       		.uleb128 0x5
 1810 0533 03       		.byte	0x3
 1811 0534 00000000 		.4byte	flag_KB_string
 1812 0538 1D       		.uleb128 0x1d
 1813 0539 64030000 		.4byte	.LASF79
 1814 053d 05       		.byte	0x5
 1815 053e 20       		.byte	0x20
 1816 053f 9C000000 		.4byte	0x9c
 1817 0543 05       		.uleb128 0x5
 1818 0544 03       		.byte	0x3
 1819 0545 00000000 		.4byte	dataready_flag
 1820 0549 1D       		.uleb128 0x1d
 1821 054a 02050000 		.4byte	.LASF80
 1822 054e 05       		.byte	0x5
 1823 054f 22       		.byte	0x22
 1824 0550 9C000000 		.4byte	0x9c
 1825 0554 05       		.uleb128 0x5
 1826 0555 03       		.byte	0x3
 1827 0556 00000000 		.4byte	flag_rf_transmission_active
 1828 055a 0F       		.uleb128 0xf
 1829 055b 8A000000 		.4byte	0x8a
 1830 055f 6A050000 		.4byte	0x56a
 1831 0563 1E       		.uleb128 0x1e
 1832 0564 7D000000 		.4byte	0x7d
 1833 0568 3F       		.byte	0x3f
 1834 0569 00       		.byte	0
 1835 056a 1D       		.uleb128 0x1d
 1836 056b 38040000 		.4byte	.LASF81
 1837 056f 05       		.byte	0x5
 1838 0570 25       		.byte	0x25
 1839 0571 5A050000 		.4byte	0x55a
 1840 0575 05       		.uleb128 0x5
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 42


 1841 0576 03       		.byte	0x3
 1842 0577 00000000 		.4byte	displaystring
 1843 057b 1D       		.uleb128 0x1d
 1844 057c 32020000 		.4byte	.LASF82
 1845 0580 05       		.byte	0x5
 1846 0581 26       		.byte	0x26
 1847 0582 5A050000 		.4byte	0x55a
 1848 0586 05       		.uleb128 0x5
 1849 0587 03       		.byte	0x3
 1850 0588 00000000 		.4byte	line
 1851 058c 1D       		.uleb128 0x1d
 1852 058d 34030000 		.4byte	.LASF83
 1853 0591 05       		.byte	0x5
 1854 0592 26       		.byte	0x26
 1855 0593 5A050000 		.4byte	0x55a
 1856 0597 05       		.uleb128 0x5
 1857 0598 03       		.byte	0x3
 1858 0599 00000000 		.4byte	entry
 1859 059d 0F       		.uleb128 0xf
 1860 059e 9C000000 		.4byte	0x9c
 1861 05a2 AD050000 		.4byte	0x5ad
 1862 05a6 1E       		.uleb128 0x1e
 1863 05a7 7D000000 		.4byte	0x7d
 1864 05ab 3F       		.byte	0x3f
 1865 05ac 00       		.byte	0
 1866 05ad 1D       		.uleb128 0x1d
 1867 05ae AB000000 		.4byte	.LASF84
 1868 05b2 05       		.byte	0x5
 1869 05b3 27       		.byte	0x27
 1870 05b4 9D050000 		.4byte	0x59d
 1871 05b8 05       		.uleb128 0x5
 1872 05b9 03       		.byte	0x3
 1873 05ba 00000000 		.4byte	usbBuffer
 1874 05be 1D       		.uleb128 0x1d
 1875 05bf 95000000 		.4byte	.LASF85
 1876 05c3 05       		.byte	0x5
 1877 05c4 3C       		.byte	0x3c
 1878 05c5 DA000000 		.4byte	0xda
 1879 05c9 05       		.uleb128 0x5
 1880 05ca 03       		.byte	0x3
 1881 05cb 00000000 		.4byte	system_state
 1882 05cf 1D       		.uleb128 0x1d
 1883 05d0 26020000 		.4byte	.LASF86
 1884 05d4 01       		.byte	0x1
 1885 05d5 55       		.byte	0x55
 1886 05d6 68000000 		.4byte	0x68
 1887 05da 05       		.uleb128 0x5
 1888 05db 03       		.byte	0x3
 1889 05dc 00000000 		.4byte	changeMotor
 1890 05e0 1D       		.uleb128 0x1d
 1891 05e1 78000000 		.4byte	.LASF87
 1892 05e5 01       		.byte	0x1
 1893 05e6 56       		.byte	0x56
 1894 05e7 68000000 		.4byte	0x68
 1895 05eb 05       		.uleb128 0x5
 1896 05ec 03       		.byte	0x3
 1897 05ed 00000000 		.4byte	checkLight
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 43


 1898 05f1 1D       		.uleb128 0x1d
 1899 05f2 69010000 		.4byte	.LASF88
 1900 05f6 01       		.byte	0x1
 1901 05f7 57       		.byte	0x57
 1902 05f8 68000000 		.4byte	0x68
 1903 05fc 05       		.uleb128 0x5
 1904 05fd 03       		.byte	0x3
 1905 05fe 00000000 		.4byte	lightState
 1906 0602 0F       		.uleb128 0xf
 1907 0603 12060000 		.4byte	0x612
 1908 0607 12060000 		.4byte	0x612
 1909 060b 1E       		.uleb128 0x1e
 1910 060c 7D000000 		.4byte	0x7d
 1911 0610 02       		.byte	0x2
 1912 0611 00       		.byte	0
 1913 0612 1A       		.uleb128 0x1a
 1914 0613 68000000 		.4byte	0x68
 1915 0617 1D       		.uleb128 0x1d
 1916 0618 48030000 		.4byte	.LASF89
 1917 061c 01       		.byte	0x1
 1918 061d 58       		.byte	0x58
 1919 061e 28060000 		.4byte	0x628
 1920 0622 05       		.uleb128 0x5
 1921 0623 03       		.byte	0x3
 1922 0624 00000000 		.4byte	lightDetectedFront
 1923 0628 1A       		.uleb128 0x1a
 1924 0629 02060000 		.4byte	0x602
 1925 062d 1D       		.uleb128 0x1d
 1926 062e 47000000 		.4byte	.LASF90
 1927 0632 01       		.byte	0x1
 1928 0633 59       		.byte	0x59
 1929 0634 12060000 		.4byte	0x612
 1930 0638 05       		.uleb128 0x5
 1931 0639 03       		.byte	0x3
 1932 063a 00000000 		.4byte	counteoc
 1933 063e 1D       		.uleb128 0x1d
 1934 063f E3020000 		.4byte	.LASF91
 1935 0643 01       		.byte	0x1
 1936 0644 5A       		.byte	0x5a
 1937 0645 12060000 		.4byte	0x612
 1938 0649 05       		.uleb128 0x5
 1939 064a 03       		.byte	0x3
 1940 064b 00000000 		.4byte	processSensors
 1941 064f 00       		.byte	0
 1942              		.section	.debug_abbrev,"",%progbits
 1943              	.Ldebug_abbrev0:
 1944 0000 01       		.uleb128 0x1
 1945 0001 11       		.uleb128 0x11
 1946 0002 01       		.byte	0x1
 1947 0003 25       		.uleb128 0x25
 1948 0004 0E       		.uleb128 0xe
 1949 0005 13       		.uleb128 0x13
 1950 0006 0B       		.uleb128 0xb
 1951 0007 03       		.uleb128 0x3
 1952 0008 0E       		.uleb128 0xe
 1953 0009 1B       		.uleb128 0x1b
 1954 000a 0E       		.uleb128 0xe
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 44


 1955 000b 55       		.uleb128 0x55
 1956 000c 17       		.uleb128 0x17
 1957 000d 11       		.uleb128 0x11
 1958 000e 01       		.uleb128 0x1
 1959 000f 10       		.uleb128 0x10
 1960 0010 17       		.uleb128 0x17
 1961 0011 00       		.byte	0
 1962 0012 00       		.byte	0
 1963 0013 02       		.uleb128 0x2
 1964 0014 24       		.uleb128 0x24
 1965 0015 00       		.byte	0
 1966 0016 0B       		.uleb128 0xb
 1967 0017 0B       		.uleb128 0xb
 1968 0018 3E       		.uleb128 0x3e
 1969 0019 0B       		.uleb128 0xb
 1970 001a 03       		.uleb128 0x3
 1971 001b 0E       		.uleb128 0xe
 1972 001c 00       		.byte	0
 1973 001d 00       		.byte	0
 1974 001e 03       		.uleb128 0x3
 1975 001f 16       		.uleb128 0x16
 1976 0020 00       		.byte	0
 1977 0021 03       		.uleb128 0x3
 1978 0022 0E       		.uleb128 0xe
 1979 0023 3A       		.uleb128 0x3a
 1980 0024 0B       		.uleb128 0xb
 1981 0025 3B       		.uleb128 0x3b
 1982 0026 0B       		.uleb128 0xb
 1983 0027 49       		.uleb128 0x49
 1984 0028 13       		.uleb128 0x13
 1985 0029 00       		.byte	0
 1986 002a 00       		.byte	0
 1987 002b 04       		.uleb128 0x4
 1988 002c 24       		.uleb128 0x24
 1989 002d 00       		.byte	0
 1990 002e 0B       		.uleb128 0xb
 1991 002f 0B       		.uleb128 0xb
 1992 0030 3E       		.uleb128 0x3e
 1993 0031 0B       		.uleb128 0xb
 1994 0032 03       		.uleb128 0x3
 1995 0033 08       		.uleb128 0x8
 1996 0034 00       		.byte	0
 1997 0035 00       		.byte	0
 1998 0036 05       		.uleb128 0x5
 1999 0037 0F       		.uleb128 0xf
 2000 0038 00       		.byte	0
 2001 0039 0B       		.uleb128 0xb
 2002 003a 0B       		.uleb128 0xb
 2003 003b 49       		.uleb128 0x49
 2004 003c 13       		.uleb128 0x13
 2005 003d 00       		.byte	0
 2006 003e 00       		.byte	0
 2007 003f 06       		.uleb128 0x6
 2008 0040 16       		.uleb128 0x16
 2009 0041 00       		.byte	0
 2010 0042 03       		.uleb128 0x3
 2011 0043 0E       		.uleb128 0xe
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 45


 2012 0044 3A       		.uleb128 0x3a
 2013 0045 0B       		.uleb128 0xb
 2014 0046 3B       		.uleb128 0x3b
 2015 0047 05       		.uleb128 0x5
 2016 0048 49       		.uleb128 0x49
 2017 0049 13       		.uleb128 0x13
 2018 004a 00       		.byte	0
 2019 004b 00       		.byte	0
 2020 004c 07       		.uleb128 0x7
 2021 004d 13       		.uleb128 0x13
 2022 004e 01       		.byte	0x1
 2023 004f 03       		.uleb128 0x3
 2024 0050 0E       		.uleb128 0xe
 2025 0051 0B       		.uleb128 0xb
 2026 0052 0B       		.uleb128 0xb
 2027 0053 3A       		.uleb128 0x3a
 2028 0054 0B       		.uleb128 0xb
 2029 0055 3B       		.uleb128 0x3b
 2030 0056 0B       		.uleb128 0xb
 2031 0057 01       		.uleb128 0x1
 2032 0058 13       		.uleb128 0x13
 2033 0059 00       		.byte	0
 2034 005a 00       		.byte	0
 2035 005b 08       		.uleb128 0x8
 2036 005c 0D       		.uleb128 0xd
 2037 005d 00       		.byte	0
 2038 005e 03       		.uleb128 0x3
 2039 005f 0E       		.uleb128 0xe
 2040 0060 3A       		.uleb128 0x3a
 2041 0061 0B       		.uleb128 0xb
 2042 0062 3B       		.uleb128 0x3b
 2043 0063 0B       		.uleb128 0xb
 2044 0064 49       		.uleb128 0x49
 2045 0065 13       		.uleb128 0x13
 2046 0066 38       		.uleb128 0x38
 2047 0067 0B       		.uleb128 0xb
 2048 0068 00       		.byte	0
 2049 0069 00       		.byte	0
 2050 006a 09       		.uleb128 0x9
 2051 006b 2E       		.uleb128 0x2e
 2052 006c 00       		.byte	0
 2053 006d 3F       		.uleb128 0x3f
 2054 006e 19       		.uleb128 0x19
 2055 006f 03       		.uleb128 0x3
 2056 0070 0E       		.uleb128 0xe
 2057 0071 3A       		.uleb128 0x3a
 2058 0072 0B       		.uleb128 0xb
 2059 0073 3B       		.uleb128 0x3b
 2060 0074 0B       		.uleb128 0xb
 2061 0075 11       		.uleb128 0x11
 2062 0076 01       		.uleb128 0x1
 2063 0077 12       		.uleb128 0x12
 2064 0078 06       		.uleb128 0x6
 2065 0079 40       		.uleb128 0x40
 2066 007a 18       		.uleb128 0x18
 2067 007b 9642     		.uleb128 0x2116
 2068 007d 19       		.uleb128 0x19
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 46


 2069 007e 00       		.byte	0
 2070 007f 00       		.byte	0
 2071 0080 0A       		.uleb128 0xa
 2072 0081 2E       		.uleb128 0x2e
 2073 0082 01       		.byte	0x1
 2074 0083 3F       		.uleb128 0x3f
 2075 0084 19       		.uleb128 0x19
 2076 0085 03       		.uleb128 0x3
 2077 0086 0E       		.uleb128 0xe
 2078 0087 3A       		.uleb128 0x3a
 2079 0088 0B       		.uleb128 0xb
 2080 0089 3B       		.uleb128 0x3b
 2081 008a 0B       		.uleb128 0xb
 2082 008b 27       		.uleb128 0x27
 2083 008c 19       		.uleb128 0x19
 2084 008d 11       		.uleb128 0x11
 2085 008e 01       		.uleb128 0x1
 2086 008f 12       		.uleb128 0x12
 2087 0090 06       		.uleb128 0x6
 2088 0091 40       		.uleb128 0x40
 2089 0092 18       		.uleb128 0x18
 2090 0093 9642     		.uleb128 0x2116
 2091 0095 19       		.uleb128 0x19
 2092 0096 01       		.uleb128 0x1
 2093 0097 13       		.uleb128 0x13
 2094 0098 00       		.byte	0
 2095 0099 00       		.byte	0
 2096 009a 0B       		.uleb128 0xb
 2097 009b 05       		.uleb128 0x5
 2098 009c 00       		.byte	0
 2099 009d 03       		.uleb128 0x3
 2100 009e 08       		.uleb128 0x8
 2101 009f 3A       		.uleb128 0x3a
 2102 00a0 0B       		.uleb128 0xb
 2103 00a1 3B       		.uleb128 0x3b
 2104 00a2 0B       		.uleb128 0xb
 2105 00a3 49       		.uleb128 0x49
 2106 00a4 13       		.uleb128 0x13
 2107 00a5 02       		.uleb128 0x2
 2108 00a6 18       		.uleb128 0x18
 2109 00a7 00       		.byte	0
 2110 00a8 00       		.byte	0
 2111 00a9 0C       		.uleb128 0xc
 2112 00aa 34       		.uleb128 0x34
 2113 00ab 00       		.byte	0
 2114 00ac 03       		.uleb128 0x3
 2115 00ad 0E       		.uleb128 0xe
 2116 00ae 3A       		.uleb128 0x3a
 2117 00af 0B       		.uleb128 0xb
 2118 00b0 3B       		.uleb128 0x3b
 2119 00b1 0B       		.uleb128 0xb
 2120 00b2 49       		.uleb128 0x49
 2121 00b3 13       		.uleb128 0x13
 2122 00b4 02       		.uleb128 0x2
 2123 00b5 18       		.uleb128 0x18
 2124 00b6 00       		.byte	0
 2125 00b7 00       		.byte	0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 47


 2126 00b8 0D       		.uleb128 0xd
 2127 00b9 2E       		.uleb128 0x2e
 2128 00ba 00       		.byte	0
 2129 00bb 3F       		.uleb128 0x3f
 2130 00bc 19       		.uleb128 0x19
 2131 00bd 03       		.uleb128 0x3
 2132 00be 0E       		.uleb128 0xe
 2133 00bf 3A       		.uleb128 0x3a
 2134 00c0 0B       		.uleb128 0xb
 2135 00c1 3B       		.uleb128 0x3b
 2136 00c2 0B       		.uleb128 0xb
 2137 00c3 27       		.uleb128 0x27
 2138 00c4 19       		.uleb128 0x19
 2139 00c5 11       		.uleb128 0x11
 2140 00c6 01       		.uleb128 0x1
 2141 00c7 12       		.uleb128 0x12
 2142 00c8 06       		.uleb128 0x6
 2143 00c9 40       		.uleb128 0x40
 2144 00ca 18       		.uleb128 0x18
 2145 00cb 9742     		.uleb128 0x2117
 2146 00cd 19       		.uleb128 0x19
 2147 00ce 00       		.byte	0
 2148 00cf 00       		.byte	0
 2149 00d0 0E       		.uleb128 0xe
 2150 00d1 2E       		.uleb128 0x2e
 2151 00d2 01       		.byte	0x1
 2152 00d3 3F       		.uleb128 0x3f
 2153 00d4 19       		.uleb128 0x19
 2154 00d5 03       		.uleb128 0x3
 2155 00d6 0E       		.uleb128 0xe
 2156 00d7 3A       		.uleb128 0x3a
 2157 00d8 0B       		.uleb128 0xb
 2158 00d9 3B       		.uleb128 0x3b
 2159 00da 0B       		.uleb128 0xb
 2160 00db 11       		.uleb128 0x11
 2161 00dc 01       		.uleb128 0x1
 2162 00dd 12       		.uleb128 0x12
 2163 00de 06       		.uleb128 0x6
 2164 00df 40       		.uleb128 0x40
 2165 00e0 18       		.uleb128 0x18
 2166 00e1 9642     		.uleb128 0x2116
 2167 00e3 19       		.uleb128 0x19
 2168 00e4 01       		.uleb128 0x1
 2169 00e5 13       		.uleb128 0x13
 2170 00e6 00       		.byte	0
 2171 00e7 00       		.byte	0
 2172 00e8 0F       		.uleb128 0xf
 2173 00e9 01       		.uleb128 0x1
 2174 00ea 01       		.byte	0x1
 2175 00eb 49       		.uleb128 0x49
 2176 00ec 13       		.uleb128 0x13
 2177 00ed 01       		.uleb128 0x1
 2178 00ee 13       		.uleb128 0x13
 2179 00ef 00       		.byte	0
 2180 00f0 00       		.byte	0
 2181 00f1 10       		.uleb128 0x10
 2182 00f2 21       		.uleb128 0x21
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 48


 2183 00f3 00       		.byte	0
 2184 00f4 49       		.uleb128 0x49
 2185 00f5 13       		.uleb128 0x13
 2186 00f6 2F       		.uleb128 0x2f
 2187 00f7 05       		.uleb128 0x5
 2188 00f8 00       		.byte	0
 2189 00f9 00       		.byte	0
 2190 00fa 11       		.uleb128 0x11
 2191 00fb 2E       		.uleb128 0x2e
 2192 00fc 00       		.byte	0
 2193 00fd 3F       		.uleb128 0x3f
 2194 00fe 19       		.uleb128 0x19
 2195 00ff 03       		.uleb128 0x3
 2196 0100 0E       		.uleb128 0xe
 2197 0101 3A       		.uleb128 0x3a
 2198 0102 0B       		.uleb128 0xb
 2199 0103 3B       		.uleb128 0x3b
 2200 0104 0B       		.uleb128 0xb
 2201 0105 27       		.uleb128 0x27
 2202 0106 19       		.uleb128 0x19
 2203 0107 11       		.uleb128 0x11
 2204 0108 01       		.uleb128 0x1
 2205 0109 12       		.uleb128 0x12
 2206 010a 06       		.uleb128 0x6
 2207 010b 40       		.uleb128 0x40
 2208 010c 18       		.uleb128 0x18
 2209 010d 9642     		.uleb128 0x2116
 2210 010f 19       		.uleb128 0x19
 2211 0110 00       		.byte	0
 2212 0111 00       		.byte	0
 2213 0112 12       		.uleb128 0x12
 2214 0113 2E       		.uleb128 0x2e
 2215 0114 01       		.byte	0x1
 2216 0115 3F       		.uleb128 0x3f
 2217 0116 19       		.uleb128 0x19
 2218 0117 03       		.uleb128 0x3
 2219 0118 0E       		.uleb128 0xe
 2220 0119 3A       		.uleb128 0x3a
 2221 011a 0B       		.uleb128 0xb
 2222 011b 3B       		.uleb128 0x3b
 2223 011c 0B       		.uleb128 0xb
 2224 011d 49       		.uleb128 0x49
 2225 011e 13       		.uleb128 0x13
 2226 011f 11       		.uleb128 0x11
 2227 0120 01       		.uleb128 0x1
 2228 0121 12       		.uleb128 0x12
 2229 0122 06       		.uleb128 0x6
 2230 0123 40       		.uleb128 0x40
 2231 0124 18       		.uleb128 0x18
 2232 0125 9642     		.uleb128 0x2116
 2233 0127 19       		.uleb128 0x19
 2234 0128 01       		.uleb128 0x1
 2235 0129 13       		.uleb128 0x13
 2236 012a 00       		.byte	0
 2237 012b 00       		.byte	0
 2238 012c 13       		.uleb128 0x13
 2239 012d 0B       		.uleb128 0xb
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 49


 2240 012e 01       		.byte	0x1
 2241 012f 11       		.uleb128 0x11
 2242 0130 01       		.uleb128 0x1
 2243 0131 12       		.uleb128 0x12
 2244 0132 06       		.uleb128 0x6
 2245 0133 00       		.byte	0
 2246 0134 00       		.byte	0
 2247 0135 14       		.uleb128 0x14
 2248 0136 34       		.uleb128 0x34
 2249 0137 00       		.byte	0
 2250 0138 03       		.uleb128 0x3
 2251 0139 0E       		.uleb128 0xe
 2252 013a 3A       		.uleb128 0x3a
 2253 013b 0B       		.uleb128 0xb
 2254 013c 3B       		.uleb128 0x3b
 2255 013d 05       		.uleb128 0x5
 2256 013e 49       		.uleb128 0x49
 2257 013f 13       		.uleb128 0x13
 2258 0140 02       		.uleb128 0x2
 2259 0141 18       		.uleb128 0x18
 2260 0142 00       		.byte	0
 2261 0143 00       		.byte	0
 2262 0144 15       		.uleb128 0x15
 2263 0145 2E       		.uleb128 0x2e
 2264 0146 01       		.byte	0x1
 2265 0147 3F       		.uleb128 0x3f
 2266 0148 19       		.uleb128 0x19
 2267 0149 03       		.uleb128 0x3
 2268 014a 0E       		.uleb128 0xe
 2269 014b 3A       		.uleb128 0x3a
 2270 014c 0B       		.uleb128 0xb
 2271 014d 3B       		.uleb128 0x3b
 2272 014e 05       		.uleb128 0x5
 2273 014f 49       		.uleb128 0x49
 2274 0150 13       		.uleb128 0x13
 2275 0151 11       		.uleb128 0x11
 2276 0152 01       		.uleb128 0x1
 2277 0153 12       		.uleb128 0x12
 2278 0154 06       		.uleb128 0x6
 2279 0155 40       		.uleb128 0x40
 2280 0156 18       		.uleb128 0x18
 2281 0157 9742     		.uleb128 0x2117
 2282 0159 19       		.uleb128 0x19
 2283 015a 01       		.uleb128 0x1
 2284 015b 13       		.uleb128 0x13
 2285 015c 00       		.byte	0
 2286 015d 00       		.byte	0
 2287 015e 16       		.uleb128 0x16
 2288 015f 34       		.uleb128 0x34
 2289 0160 00       		.byte	0
 2290 0161 03       		.uleb128 0x3
 2291 0162 08       		.uleb128 0x8
 2292 0163 3A       		.uleb128 0x3a
 2293 0164 0B       		.uleb128 0xb
 2294 0165 3B       		.uleb128 0x3b
 2295 0166 05       		.uleb128 0x5
 2296 0167 49       		.uleb128 0x49
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 50


 2297 0168 13       		.uleb128 0x13
 2298 0169 02       		.uleb128 0x2
 2299 016a 18       		.uleb128 0x18
 2300 016b 00       		.byte	0
 2301 016c 00       		.byte	0
 2302 016d 17       		.uleb128 0x17
 2303 016e 2E       		.uleb128 0x2e
 2304 016f 01       		.byte	0x1
 2305 0170 3F       		.uleb128 0x3f
 2306 0171 19       		.uleb128 0x19
 2307 0172 03       		.uleb128 0x3
 2308 0173 0E       		.uleb128 0xe
 2309 0174 3A       		.uleb128 0x3a
 2310 0175 0B       		.uleb128 0xb
 2311 0176 3B       		.uleb128 0x3b
 2312 0177 05       		.uleb128 0x5
 2313 0178 27       		.uleb128 0x27
 2314 0179 19       		.uleb128 0x19
 2315 017a 11       		.uleb128 0x11
 2316 017b 01       		.uleb128 0x1
 2317 017c 12       		.uleb128 0x12
 2318 017d 06       		.uleb128 0x6
 2319 017e 40       		.uleb128 0x40
 2320 017f 18       		.uleb128 0x18
 2321 0180 9642     		.uleb128 0x2116
 2322 0182 19       		.uleb128 0x19
 2323 0183 01       		.uleb128 0x1
 2324 0184 13       		.uleb128 0x13
 2325 0185 00       		.byte	0
 2326 0186 00       		.byte	0
 2327 0187 18       		.uleb128 0x18
 2328 0188 05       		.uleb128 0x5
 2329 0189 00       		.byte	0
 2330 018a 03       		.uleb128 0x3
 2331 018b 08       		.uleb128 0x8
 2332 018c 3A       		.uleb128 0x3a
 2333 018d 0B       		.uleb128 0xb
 2334 018e 3B       		.uleb128 0x3b
 2335 018f 05       		.uleb128 0x5
 2336 0190 49       		.uleb128 0x49
 2337 0191 13       		.uleb128 0x13
 2338 0192 02       		.uleb128 0x2
 2339 0193 18       		.uleb128 0x18
 2340 0194 00       		.byte	0
 2341 0195 00       		.byte	0
 2342 0196 19       		.uleb128 0x19
 2343 0197 2E       		.uleb128 0x2e
 2344 0198 01       		.byte	0x1
 2345 0199 3F       		.uleb128 0x3f
 2346 019a 19       		.uleb128 0x19
 2347 019b 03       		.uleb128 0x3
 2348 019c 0E       		.uleb128 0xe
 2349 019d 3A       		.uleb128 0x3a
 2350 019e 0B       		.uleb128 0xb
 2351 019f 3B       		.uleb128 0x3b
 2352 01a0 05       		.uleb128 0x5
 2353 01a1 11       		.uleb128 0x11
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 51


 2354 01a2 01       		.uleb128 0x1
 2355 01a3 12       		.uleb128 0x12
 2356 01a4 06       		.uleb128 0x6
 2357 01a5 40       		.uleb128 0x40
 2358 01a6 18       		.uleb128 0x18
 2359 01a7 9642     		.uleb128 0x2116
 2360 01a9 19       		.uleb128 0x19
 2361 01aa 01       		.uleb128 0x1
 2362 01ab 13       		.uleb128 0x13
 2363 01ac 00       		.byte	0
 2364 01ad 00       		.byte	0
 2365 01ae 1A       		.uleb128 0x1a
 2366 01af 35       		.uleb128 0x35
 2367 01b0 00       		.byte	0
 2368 01b1 49       		.uleb128 0x49
 2369 01b2 13       		.uleb128 0x13
 2370 01b3 00       		.byte	0
 2371 01b4 00       		.byte	0
 2372 01b5 1B       		.uleb128 0x1b
 2373 01b6 34       		.uleb128 0x34
 2374 01b7 00       		.byte	0
 2375 01b8 03       		.uleb128 0x3
 2376 01b9 0E       		.uleb128 0xe
 2377 01ba 3A       		.uleb128 0x3a
 2378 01bb 0B       		.uleb128 0xb
 2379 01bc 3B       		.uleb128 0x3b
 2380 01bd 05       		.uleb128 0x5
 2381 01be 49       		.uleb128 0x49
 2382 01bf 13       		.uleb128 0x13
 2383 01c0 3F       		.uleb128 0x3f
 2384 01c1 19       		.uleb128 0x19
 2385 01c2 3C       		.uleb128 0x3c
 2386 01c3 19       		.uleb128 0x19
 2387 01c4 00       		.byte	0
 2388 01c5 00       		.byte	0
 2389 01c6 1C       		.uleb128 0x1c
 2390 01c7 34       		.uleb128 0x34
 2391 01c8 00       		.byte	0
 2392 01c9 03       		.uleb128 0x3
 2393 01ca 08       		.uleb128 0x8
 2394 01cb 3A       		.uleb128 0x3a
 2395 01cc 0B       		.uleb128 0xb
 2396 01cd 3B       		.uleb128 0x3b
 2397 01ce 0B       		.uleb128 0xb
 2398 01cf 49       		.uleb128 0x49
 2399 01d0 13       		.uleb128 0x13
 2400 01d1 3F       		.uleb128 0x3f
 2401 01d2 19       		.uleb128 0x19
 2402 01d3 02       		.uleb128 0x2
 2403 01d4 18       		.uleb128 0x18
 2404 01d5 00       		.byte	0
 2405 01d6 00       		.byte	0
 2406 01d7 1D       		.uleb128 0x1d
 2407 01d8 34       		.uleb128 0x34
 2408 01d9 00       		.byte	0
 2409 01da 03       		.uleb128 0x3
 2410 01db 0E       		.uleb128 0xe
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 52


 2411 01dc 3A       		.uleb128 0x3a
 2412 01dd 0B       		.uleb128 0xb
 2413 01de 3B       		.uleb128 0x3b
 2414 01df 0B       		.uleb128 0xb
 2415 01e0 49       		.uleb128 0x49
 2416 01e1 13       		.uleb128 0x13
 2417 01e2 3F       		.uleb128 0x3f
 2418 01e3 19       		.uleb128 0x19
 2419 01e4 02       		.uleb128 0x2
 2420 01e5 18       		.uleb128 0x18
 2421 01e6 00       		.byte	0
 2422 01e7 00       		.byte	0
 2423 01e8 1E       		.uleb128 0x1e
 2424 01e9 21       		.uleb128 0x21
 2425 01ea 00       		.byte	0
 2426 01eb 49       		.uleb128 0x49
 2427 01ec 13       		.uleb128 0x13
 2428 01ed 2F       		.uleb128 0x2f
 2429 01ee 0B       		.uleb128 0xb
 2430 01ef 00       		.byte	0
 2431 01f0 00       		.byte	0
 2432 01f1 00       		.byte	0
 2433              		.section	.debug_aranges,"",%progbits
 2434 0000 8C000000 		.4byte	0x8c
 2435 0004 0200     		.2byte	0x2
 2436 0006 00000000 		.4byte	.Ldebug_info0
 2437 000a 04       		.byte	0x4
 2438 000b 00       		.byte	0
 2439 000c 0000     		.2byte	0
 2440 000e 0000     		.2byte	0
 2441 0010 00000000 		.4byte	.LFB64
 2442 0014 14000000 		.4byte	.LFE64-.LFB64
 2443 0018 00000000 		.4byte	.LFB65
 2444 001c 14000000 		.4byte	.LFE65-.LFB65
 2445 0020 00000000 		.4byte	.LFB66
 2446 0024 14000000 		.4byte	.LFE66-.LFB66
 2447 0028 00000000 		.4byte	.LFB67
 2448 002c 20000000 		.4byte	.LFE67-.LFB67
 2449 0030 00000000 		.4byte	.LFB68
 2450 0034 26000000 		.4byte	.LFE68-.LFB68
 2451 0038 00000000 		.4byte	.LFB69
 2452 003c 90000000 		.4byte	.LFE69-.LFB69
 2453 0040 00000000 		.4byte	.LFB70
 2454 0044 0C000000 		.4byte	.LFE70-.LFB70
 2455 0048 00000000 		.4byte	.LFB71
 2456 004c C0000000 		.4byte	.LFE71-.LFB71
 2457 0050 00000000 		.4byte	.LFB72
 2458 0054 2C000000 		.4byte	.LFE72-.LFB72
 2459 0058 00000000 		.4byte	.LFB73
 2460 005c 0C000000 		.4byte	.LFE73-.LFB73
 2461 0060 00000000 		.4byte	.LFB74
 2462 0064 20010000 		.4byte	.LFE74-.LFB74
 2463 0068 00000000 		.4byte	.LFB75
 2464 006c 58000000 		.4byte	.LFE75-.LFB75
 2465 0070 00000000 		.4byte	.LFB76
 2466 0074 3E000000 		.4byte	.LFE76-.LFB76
 2467 0078 00000000 		.4byte	.LFB77
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 53


 2468 007c 26000000 		.4byte	.LFE77-.LFB77
 2469 0080 00000000 		.4byte	.LFB78
 2470 0084 C8000000 		.4byte	.LFE78-.LFB78
 2471 0088 00000000 		.4byte	0
 2472 008c 00000000 		.4byte	0
 2473              		.section	.debug_ranges,"",%progbits
 2474              	.Ldebug_ranges0:
 2475 0000 00000000 		.4byte	.LFB64
 2476 0004 14000000 		.4byte	.LFE64
 2477 0008 00000000 		.4byte	.LFB65
 2478 000c 14000000 		.4byte	.LFE65
 2479 0010 00000000 		.4byte	.LFB66
 2480 0014 14000000 		.4byte	.LFE66
 2481 0018 00000000 		.4byte	.LFB67
 2482 001c 20000000 		.4byte	.LFE67
 2483 0020 00000000 		.4byte	.LFB68
 2484 0024 26000000 		.4byte	.LFE68
 2485 0028 00000000 		.4byte	.LFB69
 2486 002c 90000000 		.4byte	.LFE69
 2487 0030 00000000 		.4byte	.LFB70
 2488 0034 0C000000 		.4byte	.LFE70
 2489 0038 00000000 		.4byte	.LFB71
 2490 003c C0000000 		.4byte	.LFE71
 2491 0040 00000000 		.4byte	.LFB72
 2492 0044 2C000000 		.4byte	.LFE72
 2493 0048 00000000 		.4byte	.LFB73
 2494 004c 0C000000 		.4byte	.LFE73
 2495 0050 00000000 		.4byte	.LFB74
 2496 0054 20010000 		.4byte	.LFE74
 2497 0058 00000000 		.4byte	.LFB75
 2498 005c 58000000 		.4byte	.LFE75
 2499 0060 00000000 		.4byte	.LFB76
 2500 0064 3E000000 		.4byte	.LFE76
 2501 0068 00000000 		.4byte	.LFB77
 2502 006c 26000000 		.4byte	.LFE77
 2503 0070 00000000 		.4byte	.LFB78
 2504 0074 C8000000 		.4byte	.LFE78
 2505 0078 00000000 		.4byte	0
 2506 007c 00000000 		.4byte	0
 2507              		.section	.debug_line,"",%progbits
 2508              	.Ldebug_line0:
 2509 0000 1C030000 		.section	.debug_str,"MS",%progbits,1
 2509      02005601 
 2509      00000201 
 2509      FB0E0D00 
 2509      01010101 
 2510              	.LASF39:
 2511 0000 6D6F746F 		.ascii	"motorStop\000"
 2511      7253746F 
 2511      7000
 2512              	.LASF54:
 2513 000a 6973725F 		.ascii	"isr_TS_Interrupt_sample\000"
 2513      54535F49 
 2513      6E746572 
 2513      72757074 
 2513      5F73616D 
 2514              	.LASF68:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 54


 2515 0022 74735F65 		.ascii	"ts_enc\000"
 2515      6E6300
 2516              	.LASF19:
 2517 0029 646F7562 		.ascii	"double\000"
 2517      6C6500
 2518              	.LASF77:
 2519 0030 666C6167 		.ascii	"flag_packet\000"
 2519      5F706163 
 2519      6B657400 
 2520              	.LASF61:
 2521 003c 75736250 		.ascii	"usbPutChar\000"
 2521      75744368 
 2521      617200
 2522              	.LASF90:
 2523 0047 636F756E 		.ascii	"counteoc\000"
 2523      74656F63 
 2523      00
 2524              	.LASF42:
 2525 0050 6973725F 		.ascii	"isr_eoc_Interrupt_test\000"
 2525      656F635F 
 2525      496E7465 
 2525      72727570 
 2525      745F7465 
 2526              	.LASF38:
 2527 0067 6D6F746F 		.ascii	"motorGoBackwards\000"
 2527      72476F42 
 2527      61636B77 
 2527      61726473 
 2527      00
 2528              	.LASF87:
 2529 0078 63686563 		.ascii	"checkLight\000"
 2529      6B4C6967 
 2529      687400
 2530              	.LASF33:
 2531 0083 67325F78 		.ascii	"g2_xpos\000"
 2531      706F7300 
 2532              	.LASF2:
 2533 008b 73686F72 		.ascii	"short int\000"
 2533      7420696E 
 2533      7400
 2534              	.LASF85:
 2535 0095 73797374 		.ascii	"system_state\000"
 2535      656D5F73 
 2535      74617465 
 2535      00
 2536              	.LASF10:
 2537 00a2 73697A65 		.ascii	"sizetype\000"
 2537      74797065 
 2537      00
 2538              	.LASF84:
 2539 00ab 75736242 		.ascii	"usbBuffer\000"
 2539      75666665 
 2539      7200
 2540              	.LASF92:
 2541 00b5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2541      43313120 
 2541      352E342E 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 55


 2541      31203230 
 2541      31363036 
 2542 00e8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2542      20726576 
 2542      6973696F 
 2542      6E203233 
 2542      37373135 
 2543 011b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2543      66756E63 
 2543      74696F6E 
 2543      2D736563 
 2543      74696F6E 
 2544              	.LASF55:
 2545 0143 6D61696E 		.ascii	"main\000"
 2545      00
 2546              	.LASF43:
 2547 0148 76616C75 		.ascii	"valueQ3\000"
 2547      65513300 
 2548              	.LASF44:
 2549 0150 76616C75 		.ascii	"valueQ4\000"
 2549      65513400 
 2550              	.LASF45:
 2551 0158 76616C75 		.ascii	"valueQ5\000"
 2551      65513500 
 2552              	.LASF52:
 2553 0160 6D6F746F 		.ascii	"motorRun\000"
 2553      7252756E 
 2553      00
 2554              	.LASF88:
 2555 0169 6C696768 		.ascii	"lightState\000"
 2555      74537461 
 2555      746500
 2556              	.LASF15:
 2557 0174 75696E74 		.ascii	"uint16\000"
 2557      313600
 2558              	.LASF21:
 2559 017b 696E6465 		.ascii	"index\000"
 2559      7800
 2560              	.LASF17:
 2561 0181 696E7431 		.ascii	"int16\000"
 2561      3600
 2562              	.LASF14:
 2563 0187 75696E74 		.ascii	"uint8\000"
 2563      3800
 2564              	.LASF94:
 2565 018d 5C5C6669 		.ascii	"\\\\files.auckland.ac.nz\\myhome\\Documents\\GitHub"
 2565      6C65732E 
 2565      6175636B 
 2565      6C616E64 
 2565      2E61632E 
 2566 01bb 5C70726F 		.ascii	"\\project-project_group_11\\COMPSYS 301\\psoc stude"
 2566      6A656374 
 2566      2D70726F 
 2566      6A656374 
 2566      5F67726F 
 2567 01eb 6E742070 		.ascii	"nt pack\\psoc student pack\\psoc_code_base\\CS301_C"
 2567      61636B5C 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 56


 2567      70736F63 
 2567      20737475 
 2567      64656E74 
 2568 021b 6C617373 		.ascii	"lass.cydsn\000"
 2568      2E637964 
 2568      736E00
 2569              	.LASF86:
 2570 0226 6368616E 		.ascii	"changeMotor\000"
 2570      67654D6F 
 2570      746F7200 
 2571              	.LASF82:
 2572 0232 6C696E65 		.ascii	"line\000"
 2572      00
 2573              	.LASF18:
 2574 0237 666C6F61 		.ascii	"float\000"
 2574      7400
 2575              	.LASF53:
 2576 023d 6973725F 		.ascii	"isr_motor_interrupt_speed\000"
 2576      6D6F746F 
 2576      725F696E 
 2576      74657272 
 2576      7570745F 
 2577              	.LASF6:
 2578 0257 6C6F6E67 		.ascii	"long long int\000"
 2578      206C6F6E 
 2578      6720696E 
 2578      7400
 2579              	.LASF60:
 2580 0265 75736250 		.ascii	"usbPutString\000"
 2580      75745374 
 2580      72696E67 
 2580      00
 2581              	.LASF16:
 2582 0272 696E7438 		.ascii	"int8\000"
 2582      00
 2583              	.LASF73:
 2584 0277 666C6167 		.ascii	"flag_ts_update\000"
 2584      5F74735F 
 2584      75706461 
 2584      746500
 2585              	.LASF34:
 2586 0286 67325F79 		.ascii	"g2_ypos\000"
 2586      706F7300 
 2587              	.LASF28:
 2588 028e 67305F64 		.ascii	"g0_direction\000"
 2588      69726563 
 2588      74696F6E 
 2588      00
 2589              	.LASF25:
 2590 029b 67305F78 		.ascii	"g0_xpos\000"
 2590      706F7300 
 2591              	.LASF4:
 2592 02a3 6C6F6E67 		.ascii	"long int\000"
 2592      20696E74 
 2592      00
 2593              	.LASF46:
 2594 02ac 62656769 		.ascii	"beginningCountMotor1\000"
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 57


 2594      6E6E696E 
 2594      67436F75 
 2594      6E744D6F 
 2594      746F7231 
 2595              	.LASF47:
 2596 02c1 62656769 		.ascii	"beginningCountMotor2\000"
 2596      6E6E696E 
 2596      67436F75 
 2596      6E744D6F 
 2596      746F7232 
 2597              	.LASF50:
 2598 02d6 6D6F746F 		.ascii	"motor1String\000"
 2598      72315374 
 2598      72696E67 
 2598      00
 2599              	.LASF91:
 2600 02e3 70726F63 		.ascii	"processSensors\000"
 2600      65737353 
 2600      656E736F 
 2600      727300
 2601              	.LASF75:
 2602 02f2 666C6167 		.ascii	"flag_ts_display\000"
 2602      5F74735F 
 2602      64697370 
 2602      6C617900 
 2603              	.LASF76:
 2604 0302 666C6167 		.ascii	"flag_rx\000"
 2604      5F727800 
 2605              	.LASF49:
 2606 030a 656E6443 		.ascii	"endCountMotor1\000"
 2606      6F756E74 
 2606      4D6F746F 
 2606      723100
 2607              	.LASF48:
 2608 0319 656E6443 		.ascii	"endCountMotor2\000"
 2608      6F756E74 
 2608      4D6F746F 
 2608      723200
 2609              	.LASF9:
 2610 0328 6C6F6E67 		.ascii	"long double\000"
 2610      20646F75 
 2610      626C6500 
 2611              	.LASF83:
 2612 0334 656E7472 		.ascii	"entry\000"
 2612      7900
 2613              	.LASF1:
 2614 033a 756E7369 		.ascii	"unsigned char\000"
 2614      676E6564 
 2614      20636861 
 2614      7200
 2615              	.LASF89:
 2616 0348 6C696768 		.ascii	"lightDetectedFront\000"
 2616      74446574 
 2616      65637465 
 2616      6446726F 
 2616      6E7400
 2617              	.LASF27:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 58


 2618 035b 67305F73 		.ascii	"g0_speed\000"
 2618      70656564 
 2618      00
 2619              	.LASF79:
 2620 0364 64617461 		.ascii	"dataready_flag\000"
 2620      72656164 
 2620      795F666C 
 2620      616700
 2621              	.LASF0:
 2622 0373 7369676E 		.ascii	"signed char\000"
 2622      65642063 
 2622      68617200 
 2623              	.LASF7:
 2624 037f 6C6F6E67 		.ascii	"long long unsigned int\000"
 2624      206C6F6E 
 2624      6720756E 
 2624      7369676E 
 2624      65642069 
 2625              	.LASF8:
 2626 0396 756E7369 		.ascii	"unsigned int\000"
 2626      676E6564 
 2626      20696E74 
 2626      00
 2627              	.LASF78:
 2628 03a3 666C6167 		.ascii	"flag_KB_string\000"
 2628      5F4B425F 
 2628      73747269 
 2628      6E6700
 2629              	.LASF65:
 2630 03b2 75736242 		.ascii	"usbBufCount\000"
 2630      7566436F 
 2630      756E7400 
 2631              	.LASF35:
 2632 03be 67325F73 		.ascii	"g2_speed\000"
 2632      70656564 
 2632      00
 2633              	.LASF29:
 2634 03c7 67315F78 		.ascii	"g1_xpos\000"
 2634      706F7300 
 2635              	.LASF56:
 2636 03cf 6F706572 		.ascii	"operation\000"
 2636      6174696F 
 2636      6E00
 2637              	.LASF95:
 2638 03d9 64617461 		.ascii	"data_main\000"
 2638      5F6D6169 
 2638      6E00
 2639              	.LASF59:
 2640 03e3 62696E61 		.ascii	"binaryIndex\000"
 2640      7279496E 
 2640      64657800 
 2641              	.LASF11:
 2642 03ef 63686172 		.ascii	"char\000"
 2642      00
 2643              	.LASF22:
 2644 03f4 726F626F 		.ascii	"robot_xpos\000"
 2644      745F7870 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 59


 2644      6F7300
 2645              	.LASF13:
 2646 03ff 696E7433 		.ascii	"int32_t\000"
 2646      325F7400 
 2647              	.LASF30:
 2648 0407 67315F79 		.ascii	"g1_ypos\000"
 2648      706F7300 
 2649              	.LASF36:
 2650 040f 67325F64 		.ascii	"g2_direction\000"
 2650      69726563 
 2650      74696F6E 
 2650      00
 2651              	.LASF3:
 2652 041c 73686F72 		.ascii	"short unsigned int\000"
 2652      7420756E 
 2652      7369676E 
 2652      65642069 
 2652      6E7400
 2653              	.LASF31:
 2654 042f 67315F73 		.ascii	"g1_speed\000"
 2654      70656564 
 2654      00
 2655              	.LASF81:
 2656 0438 64697370 		.ascii	"displaystring\000"
 2656      6C617973 
 2656      7472696E 
 2656      6700
 2657              	.LASF74:
 2658 0446 666C6167 		.ascii	"flag_ts_speed\000"
 2658      5F74735F 
 2658      73706565 
 2658      6400
 2659              	.LASF57:
 2660 0454 636F6E76 		.ascii	"convertSensorBinary\000"
 2660      65727453 
 2660      656E736F 
 2660      7242696E 
 2660      61727900 
 2661              	.LASF93:
 2662 0468 6D61696E 		.ascii	"main.c\000"
 2662      2E6300
 2663              	.LASF5:
 2664 046f 6C6F6E67 		.ascii	"long unsigned int\000"
 2664      20756E73 
 2664      69676E65 
 2664      6420696E 
 2664      7400
 2665              	.LASF64:
 2666 0481 75736253 		.ascii	"usbStarted\000"
 2666      74617274 
 2666      656400
 2667              	.LASF70:
 2668 048c 74735F73 		.ascii	"ts_speed\000"
 2668      70656564 
 2668      00
 2669              	.LASF66:
 2670 0495 636F756E 		.ascii	"count\000"
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 60


 2670      7400
 2671              	.LASF72:
 2672 049b 666C6167 		.ascii	"flag_ts_enc\000"
 2672      5F74735F 
 2672      656E6300 
 2673              	.LASF12:
 2674 04a7 5F5F696E 		.ascii	"__int32_t\000"
 2674      7433325F 
 2674      7400
 2675              	.LASF40:
 2676 04b1 6D6F746F 		.ascii	"motorTurnLeft\000"
 2676      72547572 
 2676      6E4C6566 
 2676      7400
 2677              	.LASF37:
 2678 04bf 6D6F746F 		.ascii	"motorGoStraight\000"
 2678      72476F53 
 2678      74726169 
 2678      67687400 
 2679              	.LASF62:
 2680 04cf 6D6F746F 		.ascii	"motorCount\000"
 2680      72436F75 
 2680      6E7400
 2681              	.LASF26:
 2682 04da 67305F79 		.ascii	"g0_ypos\000"
 2682      706F7300 
 2683              	.LASF71:
 2684 04e2 74735F64 		.ascii	"ts_display\000"
 2684      6973706C 
 2684      617900
 2685              	.LASF69:
 2686 04ed 74735F75 		.ascii	"ts_update\000"
 2686      70646174 
 2686      6500
 2687              	.LASF63:
 2688 04f7 68616E64 		.ascii	"handle_usb\000"
 2688      6C655F75 
 2688      736200
 2689              	.LASF80:
 2690 0502 666C6167 		.ascii	"flag_rf_transmission_active\000"
 2690      5F72665F 
 2690      7472616E 
 2690      736D6973 
 2690      73696F6E 
 2691              	.LASF23:
 2692 051e 726F626F 		.ascii	"robot_ypos\000"
 2692      745F7970 
 2692      6F7300
 2693              	.LASF67:
 2694 0529 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2694      52784275 
 2694      66666572 
 2694      00
 2695              	.LASF58:
 2696 0536 76616C75 		.ascii	"value\000"
 2696      6500
 2697              	.LASF51:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccwd32ai.s 			page 61


 2698 053c 6D6F746F 		.ascii	"motor2String\000"
 2698      72325374 
 2698      72696E67 
 2698      00
 2699              	.LASF32:
 2700 0549 67315F64 		.ascii	"g1_direction\000"
 2700      69726563 
 2700      74696F6E 
 2700      00
 2701              	.LASF41:
 2702 0556 6D6F746F 		.ascii	"motorTurnRight\000"
 2702      72547572 
 2702      6E526967 
 2702      687400
 2703              	.LASF20:
 2704 0565 72737369 		.ascii	"rssi\000"
 2704      00
 2705              	.LASF24:
 2706 056a 726F626F 		.ascii	"robot_orientation\000"
 2706      745F6F72 
 2706      69656E74 
 2706      6174696F 
 2706      6E00
 2707              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
