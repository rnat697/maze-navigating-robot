ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.section	.text.motorGoStraight,"ax",%progbits
 107              		.align	2
 108              		.global	motorGoStraight
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 3


 109              		.thumb
 110              		.thumb_func
 111              		.type	motorGoStraight, %function
 112              	motorGoStraight:
 113              	.LFB64:
 114              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <stdbool.h>
  19:main.c        **** #include <string.h>
  20:main.c        **** #include <stdlib.h>
  21:main.c        **** #include <math.h>
  22:main.c        **** #include <project.h>
  23:main.c        **** //* ========================================
  24:main.c        **** #include "defines.h"
  25:main.c        **** #include "vars.h"
  26:main.c        **** #include "isr_eoc.h"
  27:main.c        **** //* ========================================
  28:main.c        **** void usbPutString(char *s);
  29:main.c        **** void usbPutChar(char c);
  30:main.c        **** void handle_usb();
  31:main.c        **** //* ========================================
  32:main.c        **** 
  33:main.c        **** 
  34:main.c        **** #define rota180 500 //turns
  35:main.c        **** #define rota90Left 250
  36:main.c        **** 
  37:main.c        **** #define moveSlow 50
  38:main.c        **** #define travelDist 326 // how
  39:main.c        **** #define Q1CHANNEL 3
  40:main.c        **** #define Q2CHANNEL 5 
  41:main.c        **** #define Q3CHANNEL 0
  42:main.c        **** #define Q4CHANNEL 1
  43:main.c        **** #define Q5CHANNEL 2
  44:main.c        **** #define Q6CHANNEL 4
  45:main.c        **** 
  46:main.c        **** CY_ISR_PROTO(isr_eoc_Interrupt_test);
  47:main.c        **** CY_ISR_PROTO(isr_motor_interrupt_speed);
  48:main.c        **** CY_ISR_PROTO(isr_TS_interrupt_sample);
  49:main.c        **** int convertSensorBinary();
  50:main.c        **** int convertBackBinary();
  51:main.c        **** 
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 4


  52:main.c        **** void motorGoStraight(){
 115              		.loc 1 52 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119 0000 80B5     		push	{r7, lr}
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 7, -8
 122              		.cfi_offset 14, -4
 123 0002 00AF     		add	r7, sp, #0
 124              		.cfi_def_cfa_register 7
  53:main.c        ****     ////PWM_1_WriteCompare(150); // left wheel near power switch is stronker than right wheel //150
  54:main.c        ****     //M1_IN2_Write(0);
  55:main.c        ****     PWM_1_WriteCompare(160);//200 //180 //160
 125              		.loc 1 55 0
 126 0004 A020     		movs	r0, #160
 127 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  56:main.c        ****     PWM_2_WriteCompare(93); //52 //72 //93
 128              		.loc 1 56 0
 129 000a 5D20     		movs	r0, #93
 130 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  57:main.c        **** }
 131              		.loc 1 57 0
 132 0010 00BF     		nop
 133 0012 80BD     		pop	{r7, pc}
 134              		.cfi_endproc
 135              	.LFE64:
 136              		.size	motorGoStraight, .-motorGoStraight
 137              		.section	.text.motorSetSpeed,"ax",%progbits
 138              		.align	2
 139              		.global	motorSetSpeed
 140              		.thumb
 141              		.thumb_func
 142              		.type	motorSetSpeed, %function
 143              	motorSetSpeed:
 144              	.LFB65:
  58:main.c        **** void motorSetSpeed(int x){
 145              		.loc 1 58 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 8
 148              		@ frame_needed = 1, uses_anonymous_args = 0
 149 0000 80B5     		push	{r7, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 82B0     		sub	sp, sp, #8
 154              		.cfi_def_cfa_offset 16
 155 0004 00AF     		add	r7, sp, #0
 156              		.cfi_def_cfa_register 7
 157 0006 7860     		str	r0, [r7, #4]
  59:main.c        ****     ////PWM_1_WriteCompare(150); // left wheel near power switch is stronker than right wheel //150
  60:main.c        ****     //M1_IN2_Write(0);
  61:main.c        ****     
  62:main.c        ****     //fastest speed
  63:main.c        ****     PWM_1_WriteCompare(200+x);//200 //180 //160
 158              		.loc 1 63 0
 159 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 5


 160 000a DBB2     		uxtb	r3, r3
 161 000c 383B     		subs	r3, r3, #56
 162 000e DBB2     		uxtb	r3, r3
 163 0010 1846     		mov	r0, r3
 164 0012 FFF7FEFF 		bl	PWM_1_WriteCompare
  64:main.c        ****     PWM_2_WriteCompare(52-x); //52 //72 //93
 165              		.loc 1 64 0
 166 0016 7B68     		ldr	r3, [r7, #4]
 167 0018 DBB2     		uxtb	r3, r3
 168 001a C3F13403 		rsb	r3, r3, #52
 169 001e DBB2     		uxtb	r3, r3
 170 0020 1846     		mov	r0, r3
 171 0022 FFF7FEFF 		bl	PWM_2_WriteCompare
  65:main.c        **** }
 172              		.loc 1 65 0
 173 0026 00BF     		nop
 174 0028 0837     		adds	r7, r7, #8
 175              		.cfi_def_cfa_offset 8
 176 002a BD46     		mov	sp, r7
 177              		.cfi_def_cfa_register 13
 178              		@ sp needed
 179 002c 80BD     		pop	{r7, pc}
 180              		.cfi_endproc
 181              	.LFE65:
 182              		.size	motorSetSpeed, .-motorSetSpeed
 183 002e 00BF     		.section	.text.motorGoBackwards,"ax",%progbits
 184              		.align	2
 185              		.global	motorGoBackwards
 186              		.thumb
 187              		.thumb_func
 188              		.type	motorGoBackwards, %function
 189              	motorGoBackwards:
 190              	.LFB66:
  66:main.c        **** void motorGoBackwards(){
 191              		.loc 1 66 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 1, uses_anonymous_args = 0
 195 0000 80B5     		push	{r7, lr}
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 7, -8
 198              		.cfi_offset 14, -4
 199 0002 00AF     		add	r7, sp, #0
 200              		.cfi_def_cfa_register 7
  67:main.c        ****     
  68:main.c        ****     //M1_IN2_Write(0);
  69:main.c        ****     PWM_1_WriteCompare(55); //55
 201              		.loc 1 69 0
 202 0004 3720     		movs	r0, #55
 203 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  70:main.c        ****     PWM_2_WriteCompare(201); //201
 204              		.loc 1 70 0
 205 000a C920     		movs	r0, #201
 206 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  71:main.c        **** }
 207              		.loc 1 71 0
 208 0010 00BF     		nop
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 6


 209 0012 80BD     		pop	{r7, pc}
 210              		.cfi_endproc
 211              	.LFE66:
 212              		.size	motorGoBackwards, .-motorGoBackwards
 213              		.section	.text.motorStop,"ax",%progbits
 214              		.align	2
 215              		.global	motorStop
 216              		.thumb
 217              		.thumb_func
 218              		.type	motorStop, %function
 219              	motorStop:
 220              	.LFB67:
  72:main.c        **** void motorStop(){
 221              		.loc 1 72 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 1, uses_anonymous_args = 0
 225 0000 80B5     		push	{r7, lr}
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 7, -8
 228              		.cfi_offset 14, -4
 229 0002 00AF     		add	r7, sp, #0
 230              		.cfi_def_cfa_register 7
  73:main.c        ****     PWM_1_WriteCompare(127); 
 231              		.loc 1 73 0
 232 0004 7F20     		movs	r0, #127
 233 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  74:main.c        ****     PWM_2_WriteCompare(127);
 234              		.loc 1 74 0
 235 000a 7F20     		movs	r0, #127
 236 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  75:main.c        **** }
 237              		.loc 1 75 0
 238 0010 00BF     		nop
 239 0012 80BD     		pop	{r7, pc}
 240              		.cfi_endproc
 241              	.LFE67:
 242              		.size	motorStop, .-motorStop
 243              		.section	.text.motorTurnLeft,"ax",%progbits
 244              		.align	2
 245              		.global	motorTurnLeft
 246              		.thumb
 247              		.thumb_func
 248              		.type	motorTurnLeft, %function
 249              	motorTurnLeft:
 250              	.LFB68:
  76:main.c        **** 
  77:main.c        **** void motorTurnLeft(uint8 x){
 251              		.loc 1 77 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 8
 254              		@ frame_needed = 1, uses_anonymous_args = 0
 255 0000 80B5     		push	{r7, lr}
 256              		.cfi_def_cfa_offset 8
 257              		.cfi_offset 7, -8
 258              		.cfi_offset 14, -4
 259 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 7


 260              		.cfi_def_cfa_offset 16
 261 0004 00AF     		add	r7, sp, #0
 262              		.cfi_def_cfa_register 7
 263 0006 0346     		mov	r3, r0
 264 0008 FB71     		strb	r3, [r7, #7]
  78:main.c        ****     // TO DO
  79:main.c        ****     
  80:main.c        ****     PWM_1_WriteCompare(127); //55
 265              		.loc 1 80 0
 266 000a 7F20     		movs	r0, #127
 267 000c FFF7FEFF 		bl	PWM_1_WriteCompare
  81:main.c        ****     PWM_2_WriteCompare(x); //201
 268              		.loc 1 81 0
 269 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 270 0012 1846     		mov	r0, r3
 271 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
  82:main.c        ****     
  83:main.c        ****     
  84:main.c        ****     
  85:main.c        ****     //255
  86:main.c        **** }
 272              		.loc 1 86 0
 273 0018 00BF     		nop
 274 001a 0837     		adds	r7, r7, #8
 275              		.cfi_def_cfa_offset 8
 276 001c BD46     		mov	sp, r7
 277              		.cfi_def_cfa_register 13
 278              		@ sp needed
 279 001e 80BD     		pop	{r7, pc}
 280              		.cfi_endproc
 281              	.LFE68:
 282              		.size	motorTurnLeft, .-motorTurnLeft
 283              		.section	.text.motorTurnRight,"ax",%progbits
 284              		.align	2
 285              		.global	motorTurnRight
 286              		.thumb
 287              		.thumb_func
 288              		.type	motorTurnRight, %function
 289              	motorTurnRight:
 290              	.LFB69:
  87:main.c        **** 
  88:main.c        **** void motorTurnRight(int x){
 291              		.loc 1 88 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 8
 294              		@ frame_needed = 1, uses_anonymous_args = 0
 295 0000 80B5     		push	{r7, lr}
 296              		.cfi_def_cfa_offset 8
 297              		.cfi_offset 7, -8
 298              		.cfi_offset 14, -4
 299 0002 82B0     		sub	sp, sp, #8
 300              		.cfi_def_cfa_offset 16
 301 0004 00AF     		add	r7, sp, #0
 302              		.cfi_def_cfa_register 7
 303 0006 7860     		str	r0, [r7, #4]
  89:main.c        ****     // TO DO
  90:main.c        ****     
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 8


  91:main.c        ****     PWM_1_WriteCompare(x);//200
 304              		.loc 1 91 0
 305 0008 7B68     		ldr	r3, [r7, #4]
 306 000a DBB2     		uxtb	r3, r3
 307 000c 1846     		mov	r0, r3
 308 000e FFF7FEFF 		bl	PWM_1_WriteCompare
  92:main.c        ****     PWM_2_WriteCompare(127); //50
 309              		.loc 1 92 0
 310 0012 7F20     		movs	r0, #127
 311 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
  93:main.c        **** 
  94:main.c        **** }
 312              		.loc 1 94 0
 313 0018 00BF     		nop
 314 001a 0837     		adds	r7, r7, #8
 315              		.cfi_def_cfa_offset 8
 316 001c BD46     		mov	sp, r7
 317              		.cfi_def_cfa_register 13
 318              		@ sp needed
 319 001e 80BD     		pop	{r7, pc}
 320              		.cfi_endproc
 321              	.LFE69:
 322              		.size	motorTurnRight, .-motorTurnRight
 323              		.section	.text.motorCircle,"ax",%progbits
 324              		.align	2
 325              		.global	motorCircle
 326              		.thumb
 327              		.thumb_func
 328              		.type	motorCircle, %function
 329              	motorCircle:
 330              	.LFB70:
  95:main.c        **** 
  96:main.c        **** 
  97:main.c        **** void motorCircle(uint8 x){
 331              		.loc 1 97 0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 8
 334              		@ frame_needed = 1, uses_anonymous_args = 0
 335 0000 80B5     		push	{r7, lr}
 336              		.cfi_def_cfa_offset 8
 337              		.cfi_offset 7, -8
 338              		.cfi_offset 14, -4
 339 0002 82B0     		sub	sp, sp, #8
 340              		.cfi_def_cfa_offset 16
 341 0004 00AF     		add	r7, sp, #0
 342              		.cfi_def_cfa_register 7
 343 0006 0346     		mov	r3, r0
 344 0008 FB71     		strb	r3, [r7, #7]
  98:main.c        ****     // TO DO
  99:main.c        ****     //positive value turns left
 100:main.c        ****     //negative value turns right
 101:main.c        ****     PWM_1_WriteCompare(127+x); //147
 345              		.loc 1 101 0
 346 000a FB79     		ldrb	r3, [r7, #7]
 347 000c 7F33     		adds	r3, r3, #127
 348 000e DBB2     		uxtb	r3, r3
 349 0010 1846     		mov	r0, r3
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 9


 350 0012 FFF7FEFF 		bl	PWM_1_WriteCompare
 102:main.c        ****     PWM_2_WriteCompare(127+x); //
 351              		.loc 1 102 0
 352 0016 FB79     		ldrb	r3, [r7, #7]
 353 0018 7F33     		adds	r3, r3, #127
 354 001a DBB2     		uxtb	r3, r3
 355 001c 1846     		mov	r0, r3
 356 001e FFF7FEFF 		bl	PWM_2_WriteCompare
 103:main.c        ****     
 104:main.c        ****     
 105:main.c        ****     
 106:main.c        ****     //255
 107:main.c        **** }
 357              		.loc 1 107 0
 358 0022 00BF     		nop
 359 0024 0837     		adds	r7, r7, #8
 360              		.cfi_def_cfa_offset 8
 361 0026 BD46     		mov	sp, r7
 362              		.cfi_def_cfa_register 13
 363              		@ sp needed
 364 0028 80BD     		pop	{r7, pc}
 365              		.cfi_endproc
 366              	.LFE70:
 367              		.size	motorCircle, .-motorCircle
 368              		.global	changeMotor
 369 002a 00BF     		.bss
 370 0012 0000     		.align	2
 371              		.type	changeMotor, %object
 372              		.size	changeMotor, 4
 373              	changeMotor:
 374 0014 00000000 		.space	4
 375              		.global	checkLight
 376              		.align	2
 377              		.type	checkLight, %object
 378              		.size	checkLight, 4
 379              	checkLight:
 380 0018 00000000 		.space	4
 381              		.global	lightState
 382              		.align	2
 383              		.type	lightState, %object
 384              		.size	lightState, 4
 385              	lightState:
 386 001c 00000000 		.space	4
 387              		.global	lightDetectedFront
 388              		.align	2
 389              		.type	lightDetectedFront, %object
 390              		.size	lightDetectedFront, 12
 391              	lightDetectedFront:
 392 0020 00000000 		.space	12
 392      00000000 
 392      00000000 
 393              		.global	lightDetectedBack
 394              		.align	2
 395              		.type	lightDetectedBack, %object
 396              		.size	lightDetectedBack, 12
 397              	lightDetectedBack:
 398 002c 00000000 		.space	12
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 10


 398      00000000 
 398      00000000 
 399              		.global	counteoc
 400              		.align	2
 401              		.type	counteoc, %object
 402              		.size	counteoc, 4
 403              	counteoc:
 404 0038 00000000 		.space	4
 405              		.global	processSensors
 406              		.align	2
 407              		.type	processSensors, %object
 408              		.size	processSensors, 4
 409              	processSensors:
 410 003c 00000000 		.space	4
 411              		.global	middle
 412              		.align	2
 413              		.type	middle, %object
 414              		.size	middle, 4
 415              	middle:
 416 0040 00000000 		.space	4
 417              		.section	.text.isr_eoc_Interrupt_test,"ax",%progbits
 418              		.align	2
 419              		.global	isr_eoc_Interrupt_test
 420              		.thumb
 421              		.thumb_func
 422              		.type	isr_eoc_Interrupt_test, %function
 423              	isr_eoc_Interrupt_test:
 424              	.LFB71:
 108:main.c        **** int changeMotor=0;
 109:main.c        **** int checkLight =0;
 110:main.c        **** int lightState=0;
 111:main.c        **** volatile int lightDetectedFront[3] = {0,0,0};
 112:main.c        **** volatile int lightDetectedBack[3] = {0,0,0};
 113:main.c        **** volatile int counteoc = 0;
 114:main.c        **** volatile int processSensors = 0;
 115:main.c        **** volatile int middle =0;
 116:main.c        **** CY_ISR(isr_eoc_Interrupt_test)
 117:main.c        **** {
 425              		.loc 1 117 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 16
 428              		@ frame_needed = 1, uses_anonymous_args = 0
 429 0000 80B5     		push	{r7, lr}
 430              		.cfi_def_cfa_offset 8
 431              		.cfi_offset 7, -8
 432              		.cfi_offset 14, -4
 433 0002 84B0     		sub	sp, sp, #16
 434              		.cfi_def_cfa_offset 24
 435 0004 00AF     		add	r7, sp, #0
 436              		.cfi_def_cfa_register 7
 118:main.c        ****     #ifdef isr_test_INTERRUPT_INTERRUPT_CALLBACK
 119:main.c        ****         isr_TS_Interrupt_InterruptCallback();
 120:main.c        ****     #endif /* isr_eoc_INTERRUPT_INTERRUPT_CALLBACK */ 
 121:main.c        **** 
 122:main.c        ****     /*  Place your Interrupt code here. */
 123:main.c        ****     /* `#START isr_eoc_Interrupt` */
 124:main.c        ****     int16 valueQ3 =  ADC_GetResult16(Q3CHANNEL);
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 11


 437              		.loc 1 124 0
 438 0006 0020     		movs	r0, #0
 439 0008 FFF7FEFF 		bl	ADC_GetResult16
 440 000c 0346     		mov	r3, r0
 441 000e FB81     		strh	r3, [r7, #14]	@ movhi
 125:main.c        ****     int16 valueQ4 =  ADC_GetResult16(Q4CHANNEL);
 442              		.loc 1 125 0
 443 0010 0120     		movs	r0, #1
 444 0012 FFF7FEFF 		bl	ADC_GetResult16
 445 0016 0346     		mov	r3, r0
 446 0018 BB81     		strh	r3, [r7, #12]	@ movhi
 126:main.c        ****     int16 valueQ5 =  ADC_GetResult16(Q5CHANNEL);
 447              		.loc 1 126 0
 448 001a 0220     		movs	r0, #2
 449 001c FFF7FEFF 		bl	ADC_GetResult16
 450 0020 0346     		mov	r3, r0
 451 0022 7B81     		strh	r3, [r7, #10]	@ movhi
 127:main.c        ****     
 128:main.c        ****     int16 valueQ1 =  ADC_GetResult16(Q1CHANNEL);
 452              		.loc 1 128 0
 453 0024 0320     		movs	r0, #3
 454 0026 FFF7FEFF 		bl	ADC_GetResult16
 455 002a 0346     		mov	r3, r0
 456 002c 3B81     		strh	r3, [r7, #8]	@ movhi
 129:main.c        ****     int16 valueQ2 =  ADC_GetResult16(Q2CHANNEL);
 457              		.loc 1 129 0
 458 002e 0520     		movs	r0, #5
 459 0030 FFF7FEFF 		bl	ADC_GetResult16
 460 0034 0346     		mov	r3, r0
 461 0036 FB80     		strh	r3, [r7, #6]	@ movhi
 130:main.c        ****     int16 valueQ6 =  ADC_GetResult16(Q6CHANNEL);
 462              		.loc 1 130 0
 463 0038 0420     		movs	r0, #4
 464 003a FFF7FEFF 		bl	ADC_GetResult16
 465 003e 0346     		mov	r3, r0
 466 0040 BB80     		strh	r3, [r7, #4]	@ movhi
 131:main.c        ****     
 132:main.c        ****     // get value from ADC then convert to DAC to send to external LEDs
 133:main.c        ****     if (counteoc < 10) {
 467              		.loc 1 133 0
 468 0042 234B     		ldr	r3, .L18
 469 0044 1B68     		ldr	r3, [r3]
 470 0046 092B     		cmp	r3, #9
 471 0048 3BDC     		bgt	.L9
 134:main.c        ****         //2211
 135:main.c        ****         if (valueQ3 >= 2211) {
 472              		.loc 1 135 0
 473 004a B7F90E30 		ldrsh	r3, [r7, #14]
 474 004e 40F6A202 		movw	r2, #2210
 475 0052 9342     		cmp	r3, r2
 476 0054 02DD     		ble	.L10
 136:main.c        ****         //set flag for white light detected
 137:main.c        ****         lightDetectedFront[0] = 1;
 477              		.loc 1 137 0
 478 0056 1F4B     		ldr	r3, .L18+4
 479 0058 0122     		movs	r2, #1
 480 005a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 12


 481              	.L10:
 138:main.c        ****         }
 139:main.c        ****         if (valueQ4 >= 2211) {
 482              		.loc 1 139 0
 483 005c B7F90C30 		ldrsh	r3, [r7, #12]
 484 0060 40F6A202 		movw	r2, #2210
 485 0064 9342     		cmp	r3, r2
 486 0066 02DD     		ble	.L11
 140:main.c        ****         //set flag for white light detected
 141:main.c        ****         lightDetectedFront[1] = 1;
 487              		.loc 1 141 0
 488 0068 1A4B     		ldr	r3, .L18+4
 489 006a 0122     		movs	r2, #1
 490 006c 5A60     		str	r2, [r3, #4]
 491              	.L11:
 142:main.c        ****         }
 143:main.c        ****     
 144:main.c        ****         if (valueQ5 >= 2211) {
 492              		.loc 1 144 0
 493 006e B7F90A30 		ldrsh	r3, [r7, #10]
 494 0072 40F6A202 		movw	r2, #2210
 495 0076 9342     		cmp	r3, r2
 496 0078 02DD     		ble	.L12
 145:main.c        ****         //set flag for white light detected
 146:main.c        ****         lightDetectedFront[2] = 1;
 497              		.loc 1 146 0
 498 007a 164B     		ldr	r3, .L18+4
 499 007c 0122     		movs	r2, #1
 500 007e 9A60     		str	r2, [r3, #8]
 501              	.L12:
 147:main.c        ****         }
 148:main.c        ****         
 149:main.c        ****         if (valueQ1 >= 2211) {
 502              		.loc 1 149 0
 503 0080 B7F90830 		ldrsh	r3, [r7, #8]
 504 0084 40F6A202 		movw	r2, #2210
 505 0088 9342     		cmp	r3, r2
 506 008a 02DD     		ble	.L13
 150:main.c        ****         //set flag for white light detected
 151:main.c        ****             lightDetectedBack[1] = 1;
 507              		.loc 1 151 0
 508 008c 124B     		ldr	r3, .L18+8
 509 008e 0122     		movs	r2, #1
 510 0090 5A60     		str	r2, [r3, #4]
 511              	.L13:
 152:main.c        ****         }
 153:main.c        ****         
 154:main.c        ****         if (valueQ2 >= 2211) {
 512              		.loc 1 154 0
 513 0092 B7F90630 		ldrsh	r3, [r7, #6]
 514 0096 40F6A202 		movw	r2, #2210
 515 009a 9342     		cmp	r3, r2
 516 009c 02DD     		ble	.L14
 155:main.c        ****         //set flag for white light detected
 156:main.c        ****             lightDetectedBack[2] = 1;
 517              		.loc 1 156 0
 518 009e 0E4B     		ldr	r3, .L18+8
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 13


 519 00a0 0122     		movs	r2, #1
 520 00a2 9A60     		str	r2, [r3, #8]
 521              	.L14:
 157:main.c        ****         }
 158:main.c        ****                 
 159:main.c        ****                 
 160:main.c        ****         if (valueQ6 >= 2211) {
 522              		.loc 1 160 0
 523 00a4 B7F90430 		ldrsh	r3, [r7, #4]
 524 00a8 40F6A202 		movw	r2, #2210
 525 00ac 9342     		cmp	r3, r2
 526 00ae 02DD     		ble	.L15
 161:main.c        ****         //set flag for white light detected
 162:main.c        ****             lightDetectedBack[0] = 1;
 527              		.loc 1 162 0
 528 00b0 094B     		ldr	r3, .L18+8
 529 00b2 0122     		movs	r2, #1
 530 00b4 1A60     		str	r2, [r3]
 531              	.L15:
 163:main.c        ****         }
 164:main.c        ****         
 165:main.c        ****         counteoc++;
 532              		.loc 1 165 0
 533 00b6 064B     		ldr	r3, .L18
 534 00b8 1B68     		ldr	r3, [r3]
 535 00ba 0133     		adds	r3, r3, #1
 536 00bc 044A     		ldr	r2, .L18
 537 00be 1360     		str	r3, [r2]
 166:main.c        ****     } else {
 167:main.c        ****         processSensors = 1;   
 168:main.c        ****        
 169:main.c        ****     }
 170:main.c        ****     /* `#END` */
 171:main.c        **** }
 538              		.loc 1 171 0
 539 00c0 02E0     		b	.L17
 540              	.L9:
 167:main.c        ****        
 541              		.loc 1 167 0
 542 00c2 064B     		ldr	r3, .L18+12
 543 00c4 0122     		movs	r2, #1
 544 00c6 1A60     		str	r2, [r3]
 545              	.L17:
 546              		.loc 1 171 0
 547 00c8 00BF     		nop
 548 00ca 1037     		adds	r7, r7, #16
 549              		.cfi_def_cfa_offset 8
 550 00cc BD46     		mov	sp, r7
 551              		.cfi_def_cfa_register 13
 552              		@ sp needed
 553 00ce 80BD     		pop	{r7, pc}
 554              	.L19:
 555              		.align	2
 556              	.L18:
 557 00d0 00000000 		.word	counteoc
 558 00d4 00000000 		.word	lightDetectedFront
 559 00d8 00000000 		.word	lightDetectedBack
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 14


 560 00dc 00000000 		.word	processSensors
 561              		.cfi_endproc
 562              	.LFE71:
 563              		.size	isr_eoc_Interrupt_test, .-isr_eoc_Interrupt_test
 564              		.bss
 565              	count:
 566 0044 00       		.space	1
 567              		.section	.text.isr_motor_interrupt_speed,"ax",%progbits
 568              		.align	2
 569              		.global	isr_motor_interrupt_speed
 570              		.thumb
 571              		.thumb_func
 572              		.type	isr_motor_interrupt_speed, %function
 573              	isr_motor_interrupt_speed:
 574              	.LFB72:
 172:main.c        **** // NEED TO INCREASE/DECREASE SPEED TOO
 173:main.c        **** // AND IMPLEMENT LIGHT SENSOR THINGS
 174:main.c        **** volatile static int8 count;
 175:main.c        **** CY_ISR(isr_motor_interrupt_speed)
 176:main.c        **** {
 575              		.loc 1 176 0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 1, uses_anonymous_args = 0
 579              		@ link register save eliminated.
 580 0000 80B4     		push	{r7}
 581              		.cfi_def_cfa_offset 4
 582              		.cfi_offset 7, -4
 583 0002 00AF     		add	r7, sp, #0
 584              		.cfi_def_cfa_register 7
 177:main.c        ****     #ifdef isr_motor_INTERRUPT_INTERRUPT_CALLBACK
 178:main.c        ****         isr_motor_Interrupt_InterruptCallback();
 179:main.c        ****     #endif /* isr_motor_INTERRUPT_INTERRUPT_CALLBACK */ 
 180:main.c        **** 
 181:main.c        ****     /*  Place your Interrupt code here. */
 182:main.c        ****     /* `#START isr_motor_Interrupt` */
 183:main.c        ****       /*int16 currCountMotor2 = QuadDec_M2_GetCounter();
 184:main.c        ****       int16 currCountMotor1 = QuadDec_M1_GetCounter();  
 185:main.c        ****       
 186:main.c        ****      speedMotor1 = (currCountMotor1 - prevcountMotor1) / 0.2;
 187:main.c        ****      speedMotor2 = (currCountMotor2 - prevcountMotor2) / 0.2;
 188:main.c        ****     
 189:main.c        ****       prevcountMotor1 = currCountMotor1;
 190:main.c        ****       prevcountMotor2 = currCountMotor2;*/
 191:main.c        ****     
 192:main.c        ****     /* `#END` */
 193:main.c        **** }
 585              		.loc 1 193 0
 586 0004 00BF     		nop
 587 0006 BD46     		mov	sp, r7
 588              		.cfi_def_cfa_register 13
 589              		@ sp needed
 590 0008 80BC     		pop	{r7}
 591              		.cfi_restore 7
 592              		.cfi_def_cfa_offset 0
 593 000a 7047     		bx	lr
 594              		.cfi_endproc
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 15


 595              	.LFE72:
 596              		.size	isr_motor_interrupt_speed, .-isr_motor_interrupt_speed
 597              		.section	.rodata
 598              		.align	2
 599              	.LC0:
 600 0000 4D6F746F 		.ascii	"Motor 1 - start count: %d, end count: %d \012\000"
 600      72203120 
 600      2D207374 
 600      61727420 
 600      636F756E 
 601 002b 00       		.align	2
 602              	.LC1:
 603 002c 4D6F746F 		.ascii	"Motor 2 - start count: %d, end count: %d \012\000"
 603      72203220 
 603      2D207374 
 603      61727420 
 603      636F756E 
 604              		.section	.text.motorCount,"ax",%progbits
 605              		.align	2
 606              		.global	motorCount
 607              		.thumb
 608              		.thumb_func
 609              		.type	motorCount, %function
 610              	motorCount:
 611              	.LFB73:
 194:main.c        **** void motorCount(){
 612              		.loc 1 194 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 20008
 615              		@ frame_needed = 1, uses_anonymous_args = 0
 616 0000 80B5     		push	{r7, lr}
 617              		.cfi_def_cfa_offset 8
 618              		.cfi_offset 7, -8
 619              		.cfi_offset 14, -4
 620 0002 ADF59C4D 		sub	sp, sp, #19968
 621              		.cfi_def_cfa_offset 19976
 622 0006 8AB0     		sub	sp, sp, #40
 623              		.cfi_def_cfa_offset 20016
 624 0008 00AF     		add	r7, sp, #0
 625              		.cfi_def_cfa_register 7
 195:main.c        ****     int16 beginningCountMotor1 = 0;
 626              		.loc 1 195 0
 627 000a 0023     		movs	r3, #0
 628 000c 07F59C42 		add	r2, r7, #19968
 629 0010 02F12602 		add	r2, r2, #38
 630 0014 1380     		strh	r3, [r2]	@ movhi
 196:main.c        ****     int16 beginningCountMotor2 = 0;
 631              		.loc 1 196 0
 632 0016 0023     		movs	r3, #0
 633 0018 07F59C42 		add	r2, r7, #19968
 634 001c 02F12402 		add	r2, r2, #36
 635 0020 1380     		strh	r3, [r2]	@ movhi
 197:main.c        ****     int16 endCountMotor2 = QuadDec_M2_GetCounter();
 636              		.loc 1 197 0
 637 0022 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 638 0026 0346     		mov	r3, r0
 639 0028 07F59C42 		add	r2, r7, #19968
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 16


 640 002c 02F12202 		add	r2, r2, #34
 641 0030 1380     		strh	r3, [r2]	@ movhi
 198:main.c        ****     int16 endCountMotor1 = QuadDec_M1_GetCounter();
 642              		.loc 1 198 0
 643 0032 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 644 0036 0346     		mov	r3, r0
 645 0038 07F59C42 		add	r2, r7, #19968
 646 003c 02F12002 		add	r2, r2, #32
 647 0040 1380     		strh	r3, [r2]	@ movhi
 199:main.c        ****     char motor1String[10000]; 
 200:main.c        ****     sprintf(motor1String,"Motor 1 - start count: %d, end count: %d \n", beginningCountMotor1, endCo
 648              		.loc 1 200 0
 649 0042 07F59C43 		add	r3, r7, #19968
 650 0046 03F12603 		add	r3, r3, #38
 651 004a B3F90020 		ldrsh	r2, [r3]
 652 004e 07F59C43 		add	r3, r7, #19968
 653 0052 03F12003 		add	r3, r3, #32
 654 0056 B3F90030 		ldrsh	r3, [r3]
 655 005a 07F51C50 		add	r0, r7, #9984
 656 005e 00F12800 		add	r0, r0, #40
 657 0062 1838     		subs	r0, r0, #24
 658 0064 1449     		ldr	r1, .L22
 659 0066 FFF7FEFF 		bl	sprintf
 201:main.c        ****     char motor2String[10000];
 202:main.c        ****     sprintf(motor2String,"Motor 2 - start count: %d, end count: %d \n", beginningCountMotor2 , endC
 660              		.loc 1 202 0
 661 006a 07F59C43 		add	r3, r7, #19968
 662 006e 03F12403 		add	r3, r3, #36
 663 0072 B3F90020 		ldrsh	r2, [r3]
 664 0076 07F59C43 		add	r3, r7, #19968
 665 007a 03F12203 		add	r3, r3, #34
 666 007e B3F90030 		ldrsh	r3, [r3]
 667 0082 07F12800 		add	r0, r7, #40
 668 0086 2838     		subs	r0, r0, #40
 669 0088 0C49     		ldr	r1, .L22+4
 670 008a FFF7FEFF 		bl	sprintf
 203:main.c        ****     
 204:main.c        ****     usbPutString(motor1String);
 671              		.loc 1 204 0
 672 008e 07F51C53 		add	r3, r7, #9984
 673 0092 03F12803 		add	r3, r3, #40
 674 0096 183B     		subs	r3, r3, #24
 675 0098 1846     		mov	r0, r3
 676 009a FFF7FEFF 		bl	usbPutString
 205:main.c        ****     usbPutString(motor2String);
 677              		.loc 1 205 0
 678 009e 07F12803 		add	r3, r7, #40
 679 00a2 283B     		subs	r3, r3, #40
 680 00a4 1846     		mov	r0, r3
 681 00a6 FFF7FEFF 		bl	usbPutString
 206:main.c        **** 
 207:main.c        **** }
 682              		.loc 1 207 0
 683 00aa 00BF     		nop
 684 00ac 07F59C47 		add	r7, r7, #19968
 685 00b0 2837     		adds	r7, r7, #40
 686              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 17


 687 00b2 BD46     		mov	sp, r7
 688              		.cfi_def_cfa_register 13
 689              		@ sp needed
 690 00b4 80BD     		pop	{r7, pc}
 691              	.L23:
 692 00b6 00BF     		.align	2
 693              	.L22:
 694 00b8 00000000 		.word	.LC0
 695 00bc 2C000000 		.word	.LC1
 696              		.cfi_endproc
 697              	.LFE73:
 698              		.size	motorCount, .-motorCount
 699              		.section	.text.motorRun,"ax",%progbits
 700              		.align	2
 701              		.global	motorRun
 702              		.thumb
 703              		.thumb_func
 704              		.type	motorRun, %function
 705              	motorRun:
 706              	.LFB74:
 208:main.c        **** 
 209:main.c        **** void motorRun(int x,int time){
 707              		.loc 1 209 0
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 8
 710              		@ frame_needed = 1, uses_anonymous_args = 0
 711 0000 80B5     		push	{r7, lr}
 712              		.cfi_def_cfa_offset 8
 713              		.cfi_offset 7, -8
 714              		.cfi_offset 14, -4
 715 0002 82B0     		sub	sp, sp, #8
 716              		.cfi_def_cfa_offset 16
 717 0004 00AF     		add	r7, sp, #0
 718              		.cfi_def_cfa_register 7
 719 0006 7860     		str	r0, [r7, #4]
 720 0008 3960     		str	r1, [r7]
 210:main.c        ****     
 211:main.c        ****     
 212:main.c        ****     
 213:main.c        ****     //PWM_1_Start();
 214:main.c        ****     //PWM_2_Start();
 215:main.c        **** 
 216:main.c        **** 
 217:main.c        ****     motorStop();
 721              		.loc 1 217 0
 722 000a FFF7FEFF 		bl	motorStop
 218:main.c        ****     CyDelay(time); // so we have time to set the robot up
 723              		.loc 1 218 0
 724 000e 3B68     		ldr	r3, [r7]
 725 0010 1846     		mov	r0, r3
 726 0012 FFF7FEFF 		bl	CyDelay
 219:main.c        ****     motorSetSpeed(x);
 727              		.loc 1 219 0
 728 0016 7868     		ldr	r0, [r7, #4]
 729 0018 FFF7FEFF 		bl	motorSetSpeed
 220:main.c        ****     CyDelay(time);
 730              		.loc 1 220 0
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 18


 731 001c 3B68     		ldr	r3, [r7]
 732 001e 1846     		mov	r0, r3
 733 0020 FFF7FEFF 		bl	CyDelay
 221:main.c        ****     motorStop();
 734              		.loc 1 221 0
 735 0024 FFF7FEFF 		bl	motorStop
 222:main.c        ****     
 223:main.c        ****     //motorGoBackwards();
 224:main.c        **** 
 225:main.c        ****     
 226:main.c        ****     //CyDelay(2000);
 227:main.c        ****  
 228:main.c        ****     //motorStop();
 229:main.c        ****     //motorCount();//checks count per second.
 230:main.c        **** 
 231:main.c        ****     
 232:main.c        **** }
 736              		.loc 1 232 0
 737 0028 00BF     		nop
 738 002a 0837     		adds	r7, r7, #8
 739              		.cfi_def_cfa_offset 8
 740 002c BD46     		mov	sp, r7
 741              		.cfi_def_cfa_register 13
 742              		@ sp needed
 743 002e 80BD     		pop	{r7, pc}
 744              		.cfi_endproc
 745              	.LFE74:
 746              		.size	motorRun, .-motorRun
 747              		.section	.text.isr_TS_Interrupt_sample,"ax",%progbits
 748              		.align	2
 749              		.global	isr_TS_Interrupt_sample
 750              		.thumb
 751              		.thumb_func
 752              		.type	isr_TS_Interrupt_sample, %function
 753              	isr_TS_Interrupt_sample:
 754              	.LFB75:
 233:main.c        **** CY_ISR(isr_TS_Interrupt_sample)
 234:main.c        **** {
 755              		.loc 1 234 0
 756              		.cfi_startproc
 757              		@ args = 0, pretend = 0, frame = 0
 758              		@ frame_needed = 1, uses_anonymous_args = 0
 759 0000 80B5     		push	{r7, lr}
 760              		.cfi_def_cfa_offset 8
 761              		.cfi_offset 7, -8
 762              		.cfi_offset 14, -4
 763 0002 00AF     		add	r7, sp, #0
 764              		.cfi_def_cfa_register 7
 235:main.c        ****     #ifdef isr_TS_INTERRUPT_INTERRUPT_CALLBACK
 236:main.c        ****         isr_TS_Interrupt_InterruptCallback();
 237:main.c        ****     #endif /* isr_TS_INTERRUPT_INTERRUPT_CALLBACK */ 
 238:main.c        ****         ADC_StartConvert();
 765              		.loc 1 238 0
 766 0004 FFF7FEFF 		bl	ADC_StartConvert
 239:main.c        ****     /*  Place your Interrupt code here. */
 240:main.c        ****     /* `#START isr_TS_Interrupt` */
 241:main.c        **** 
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 19


 242:main.c        ****     /* `#END` */
 243:main.c        **** }
 767              		.loc 1 243 0
 768 0008 00BF     		nop
 769 000a 80BD     		pop	{r7, pc}
 770              		.cfi_endproc
 771              	.LFE75:
 772              		.size	isr_TS_Interrupt_sample, .-isr_TS_Interrupt_sample
 773              		.section	.text.main,"ax",%progbits
 774              		.align	2
 775              		.global	main
 776              		.thumb
 777              		.thumb_func
 778              		.type	main, %function
 779              	main:
 780              	.LFB76:
 244:main.c        **** 
 245:main.c        **** 
 246:main.c        **** int main()
 247:main.c        **** {
 781              		.loc 1 247 0
 782              		.cfi_startproc
 783              		@ args = 0, pretend = 0, frame = 16
 784              		@ frame_needed = 1, uses_anonymous_args = 0
 785 0000 80B5     		push	{r7, lr}
 786              		.cfi_def_cfa_offset 8
 787              		.cfi_offset 7, -8
 788              		.cfi_offset 14, -4
 789 0002 84B0     		sub	sp, sp, #16
 790              		.cfi_def_cfa_offset 24
 791 0004 00AF     		add	r7, sp, #0
 792              		.cfi_def_cfa_register 7
 248:main.c        ****     
 249:main.c        **** 
 250:main.c        **** // --------------------------------    
 251:main.c        **** // ----- INITIALIZATIONS ----------
 252:main.c        ****     CYGlobalIntEnable;
 793              		.loc 1 252 0
 794              		.syntax unified
 795              	@ 252 "main.c" 1
 796 0006 62B6     		CPSIE   i
 797              	@ 0 "" 2
 253:main.c        ****     count  = 0;
 798              		.loc 1 253 0
 799              		.thumb
 800              		.syntax unified
 801 0008 4D4B     		ldr	r3, .L41
 802 000a 0022     		movs	r2, #0
 803 000c 1A70     		strb	r2, [r3]
 254:main.c        ****     
 255:main.c        ****     ADC_Start();
 804              		.loc 1 255 0
 805 000e FFF7FEFF 		bl	ADC_Start
 256:main.c        ****     Timer_TS_Start();
 806              		.loc 1 256 0
 807 0012 FFF7FEFF 		bl	Timer_TS_Start
 257:main.c        ****     Timer_Motor_Start();
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 20


 808              		.loc 1 257 0
 809 0016 FFF7FEFF 		bl	Timer_Motor_Start
 258:main.c        ****     QuadDec_M1_Start();
 810              		.loc 1 258 0
 811 001a FFF7FEFF 		bl	QuadDec_M1_Start
 259:main.c        ****     QuadDec_M2_Start(); //init the quadencoder,
 812              		.loc 1 259 0
 813 001e FFF7FEFF 		bl	QuadDec_M2_Start
 260:main.c        ****     //isr_motor_StartEx(isr_motor_interrupt_speed);
 261:main.c        ****     
 262:main.c        ****     isr_TS_StartEx(isr_TS_Interrupt_sample);
 814              		.loc 1 262 0
 815 0022 4848     		ldr	r0, .L41+4
 816 0024 FFF7FEFF 		bl	isr_TS_StartEx
 263:main.c        ****     isr_eoc_StartEx(isr_eoc_Interrupt_test);
 817              		.loc 1 263 0
 818 0028 4748     		ldr	r0, .L41+8
 819 002a FFF7FEFF 		bl	isr_eoc_StartEx
 264:main.c        ****     
 265:main.c        ****     
 266:main.c        ****     //ADC_StartConvert();
 267:main.c        ****     
 268:main.c        ****     PWM_1_Start();
 820              		.loc 1 268 0
 821 002e FFF7FEFF 		bl	PWM_1_Start
 269:main.c        ****     PWM_2_Start();
 822              		.loc 1 269 0
 823 0032 FFF7FEFF 		bl	PWM_2_Start
 270:main.c        ****     LED_Write(0);
 824              		.loc 1 270 0
 825 0036 0020     		movs	r0, #0
 826 0038 FFF7FEFF 		bl	LED_Write
 271:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION)   ; 
 827              		.loc 1 271 0
 828 003c 0121     		movs	r1, #1
 829 003e 0020     		movs	r0, #0
 830 0040 FFF7FEFF 		bl	USBUART_Start
 272:main.c        ****     ////////////////////////////////
 273:main.c        ****     
 274:main.c        ****     // Speed//
 275:main.c        **** //    int speed = -33;
 276:main.c        **** //    int time = 2000;
 277:main.c        **** //    motorRun(speed,time);
 278:main.c        **** 
 279:main.c        ****     /////////////////////////////////////////////
 280:main.c        ****     int lastState=0;
 831              		.loc 1 280 0
 832 0044 0023     		movs	r3, #0
 833 0046 FB60     		str	r3, [r7, #12]
 834              	.L39:
 281:main.c        ****     //usbPutString(displaystring);
 282:main.c        ****      //87cm motor 1 945, motor2 -958. 2seconds.
 283:main.c        ****     //10.8 counts per cm for distance.
 284:main.c        ****    //for speed,43.5cm/s 
 285:main.c        ****     
 286:main.c        **** //    
 287:main.c        ****        //distance
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 21


 288:main.c        **** //    int travelDis = 945;//10.8 * travelDis
 289:main.c        **** //    while(QuadDec_M1_GetCounter()<travelDis){
 290:main.c        **** //        if (processSensors == 1) {
 291:main.c        **** //    
 292:main.c        **** //            int operation = convertSensorBinary();
 293:main.c        **** //            
 294:main.c        **** //    
 295:main.c        **** //            switch(operation){
 296:main.c        **** //                case 3:// 0 1 1 // Q3 under black
 297:main.c        **** //                    motorTurnLeft(50);//decrease go fast used to be 50 by 6
 298:main.c        **** //                    LED_Write(1);
 299:main.c        **** //                    break;    
 300:main.c        **** //                    
 301:main.c        **** //                case 6:// 1 1 0 // Q5 under black  
 302:main.c        **** //                    motorTurnRight(200);//increase 200 by 6
 303:main.c        **** //                    LED_Write(1);
 304:main.c        **** //                    break;
 305:main.c        **** //                    
 306:main.c        **** //                case 5:// 101 // Q4 under black
 307:main.c        **** //                    motorSetSpeed(0); //-40 is original
 308:main.c        **** //                    LED_Write(0);
 309:main.c        **** //                    break;
 310:main.c        **** //    
 311:main.c        **** //             processSensors = 0;
 312:main.c        **** //            //reset counter
 313:main.c        **** //
 314:main.c        **** //             counteoc = 0;
 315:main.c        **** //            //reset flags for lightsensors because it checks every 10 iterations, adds delay/
 316:main.c        **** //            lightDetectedFront[0] = 0;
 317:main.c        **** //            lightDetectedFront[1] = 0;
 318:main.c        **** //            lightDetectedFront[2] = 0;
 319:main.c        **** //            lightDetectedBack[0] = 0;
 320:main.c        **** //            lightDetectedBack[1] = 0;
 321:main.c        **** //            lightDetectedBack[2] = 0;
 322:main.c        **** //          
 323:main.c        **** //            }
 324:main.c        **** //    
 325:main.c        **** //        }
 326:main.c        **** //    }
 327:main.c        **** //    motorStop();
 328:main.c        **** //    motorCount();
 329:main.c        **** //    
 330:main.c        ****     /// End here
 331:main.c        ****     
 332:main.c        ****     
 333:main.c        ****     
 334:main.c        ****     
 335:main.c        ****     
 336:main.c        ****     
 337:main.c        ****     
 338:main.c        ****    ///////////////////////////////////////// MOTOR RUN////////
 339:main.c        ****     
 340:main.c        ****     while(1)
 341:main.c        ****     {
 342:main.c        ****         /* Place your application code here. */
 343:main.c        ****        
 344:main.c        ****         if (processSensors == 1) {
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 22


 835              		.loc 1 344 0
 836 0048 404B     		ldr	r3, .L41+12
 837 004a 1B68     		ldr	r3, [r3]
 838 004c 012B     		cmp	r3, #1
 839 004e FBD1     		bne	.L39
 840              	.LBB2:
 345:main.c        ****                    
 346:main.c        ****             int operation = convertSensorBinary();
 841              		.loc 1 346 0
 842 0050 FFF7FEFF 		bl	convertSensorBinary
 843 0054 B860     		str	r0, [r7, #8]
 347:main.c        ****             int backOps = convertBackBinary();
 844              		.loc 1 347 0
 845 0056 FFF7FEFF 		bl	convertBackBinary
 846 005a 7860     		str	r0, [r7, #4]
 348:main.c        **** 
 349:main.c        ****             switch(operation){
 847              		.loc 1 349 0
 848 005c BB68     		ldr	r3, [r7, #8]
 849 005e 072B     		cmp	r3, #7
 850 0060 55D8     		bhi	.L28
 851 0062 01A2     		adr	r2, .L30
 852 0064 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 853              		.p2align 2
 854              	.L30:
 855 0068 07010000 		.word	.L29+1
 856 006c CB000000 		.word	.L31+1
 857 0070 0F010000 		.word	.L28+1
 858 0074 A3000000 		.word	.L32+1
 859 0078 E9000000 		.word	.L33+1
 860 007c BF000000 		.word	.L34+1
 861 0080 B1000000 		.word	.L35+1
 862 0084 89000000 		.word	.L36+1
 863              		.p2align 1
 864              	.L36:
 350:main.c        ****             //where 1 is on white, 0 is on black.
 351:main.c        ****                 
 352:main.c        ****                 case 7: // 111 // all under white\\
 353:main.c        ****                     
 354:main.c        ****                 
 355:main.c        ****               
 356:main.c        ****                         if(backOps == 7){
 865              		.loc 1 356 0
 866 0088 7B68     		ldr	r3, [r7, #4]
 867 008a 072B     		cmp	r3, #7
 868 008c 03D1     		bne	.L37
 357:main.c        ****                             
 358:main.c        ****                              motorCircle(40);
 869              		.loc 1 358 0
 870 008e 2820     		movs	r0, #40
 871 0090 FFF7FEFF 		bl	motorCircle
 359:main.c        ****                             
 360:main.c        ****                         }
 361:main.c        ****                         
 362:main.c        ****                     
 363:main.c        ****                         else if(backOps == 5){
 364:main.c        ****                             motorGoStraight();
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 23


 365:main.c        ****                         }   
 366:main.c        ****                         break;
 872              		.loc 1 366 0
 873 0094 3AE0     		b	.L40
 874              	.L37:
 363:main.c        ****                             motorGoStraight();
 875              		.loc 1 363 0
 876 0096 7B68     		ldr	r3, [r7, #4]
 877 0098 052B     		cmp	r3, #5
 878 009a 37D1     		bne	.L40
 364:main.c        ****                         }   
 879              		.loc 1 364 0
 880 009c FFF7FEFF 		bl	motorGoStraight
 881              		.loc 1 366 0
 882 00a0 34E0     		b	.L40
 883              	.L32:
 367:main.c        ****                     
 368:main.c        ****                 case 3:// 0 1 1 // Q3 under black
 369:main.c        ****                     motorTurnLeft(50);//decrease go fast used to be 50 by 6
 884              		.loc 1 369 0
 885 00a2 3220     		movs	r0, #50
 886 00a4 FFF7FEFF 		bl	motorTurnLeft
 370:main.c        ****                     LED_Write(1);
 887              		.loc 1 370 0
 888 00a8 0120     		movs	r0, #1
 889 00aa FFF7FEFF 		bl	LED_Write
 371:main.c        ****                     break;    
 890              		.loc 1 371 0
 891 00ae 2EE0     		b	.L28
 892              	.L35:
 372:main.c        ****                     
 373:main.c        ****                 case 6:// 1 1 0 // Q5 under black  
 374:main.c        ****                     motorTurnRight(200);//increase 200 by 6
 893              		.loc 1 374 0
 894 00b0 C820     		movs	r0, #200
 895 00b2 FFF7FEFF 		bl	motorTurnRight
 375:main.c        ****                     LED_Write(1);
 896              		.loc 1 375 0
 897 00b6 0120     		movs	r0, #1
 898 00b8 FFF7FEFF 		bl	LED_Write
 376:main.c        ****                     break;
 899              		.loc 1 376 0
 900 00bc 27E0     		b	.L28
 901              	.L34:
 377:main.c        ****                     
 378:main.c        ****                 case 5:// 101 // Q4 under black
 379:main.c        ****                     motorGoStraight();
 902              		.loc 1 379 0
 903 00be FFF7FEFF 		bl	motorGoStraight
 380:main.c        ****                     LED_Write(0);
 904              		.loc 1 380 0
 905 00c2 0020     		movs	r0, #0
 906 00c4 FFF7FEFF 		bl	LED_Write
 381:main.c        ****                     break;
 907              		.loc 1 381 0
 908 00c8 21E0     		b	.L28
 909              	.L31:
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 24


 382:main.c        ****                 case 1: // 001 --> left intersection
 383:main.c        ****                     lastState=1;
 910              		.loc 1 383 0
 911 00ca 0123     		movs	r3, #1
 912 00cc FB60     		str	r3, [r7, #12]
 384:main.c        ****                     motorStop();
 913              		.loc 1 384 0
 914 00ce FFF7FEFF 		bl	motorStop
 385:main.c        ****                     CyDelay(50);
 915              		.loc 1 385 0
 916 00d2 3220     		movs	r0, #50
 917 00d4 FFF7FEFF 		bl	CyDelay
 386:main.c        ****                     motorTurnLeft(44);
 918              		.loc 1 386 0
 919 00d8 2C20     		movs	r0, #44
 920 00da FFF7FEFF 		bl	motorTurnLeft
 387:main.c        ****                     CyDelay(350);
 921              		.loc 1 387 0
 922 00de 4FF4AF70 		mov	r0, #350
 923 00e2 FFF7FEFF 		bl	CyDelay
 388:main.c        ****                     break;
 924              		.loc 1 388 0
 925 00e6 12E0     		b	.L28
 926              	.L33:
 389:main.c        ****                 case 4: // 100 --> right intersection
 390:main.c        ****                     lastState=2;
 927              		.loc 1 390 0
 928 00e8 0223     		movs	r3, #2
 929 00ea FB60     		str	r3, [r7, #12]
 391:main.c        ****                     motorStop();
 930              		.loc 1 391 0
 931 00ec FFF7FEFF 		bl	motorStop
 392:main.c        ****                     CyDelay(50);
 932              		.loc 1 392 0
 933 00f0 3220     		movs	r0, #50
 934 00f2 FFF7FEFF 		bl	CyDelay
 393:main.c        ****                     motorTurnRight(206);
 935              		.loc 1 393 0
 936 00f6 CE20     		movs	r0, #206
 937 00f8 FFF7FEFF 		bl	motorTurnRight
 394:main.c        ****                     CyDelay(350);
 938              		.loc 1 394 0
 939 00fc 4FF4AF70 		mov	r0, #350
 940 0100 FFF7FEFF 		bl	CyDelay
 395:main.c        ****                     break;
 941              		.loc 1 395 0
 942 0104 03E0     		b	.L28
 943              	.L29:
 396:main.c        ****                     
 397:main.c        ****                 
 398:main.c        ****                 
 399:main.c        ****                 
 400:main.c        ****                     
 401:main.c        ****                 case 0: // 000 // ALL UNDER black
 402:main.c        ****                       
 403:main.c        ****                     motorStop();
 944              		.loc 1 403 0
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 25


 945 0106 FFF7FEFF 		bl	motorStop
 404:main.c        ****                     break;    
 946              		.loc 1 404 0
 947 010a 00E0     		b	.L28
 948              	.L40:
 366:main.c        ****                     
 949              		.loc 1 366 0
 950 010c 00BF     		nop
 951              	.L28:
 405:main.c        **** 
 406:main.c        ****                
 407:main.c        ****                 
 408:main.c        ****                
 409:main.c        ****             
 410:main.c        ****             }
 411:main.c        ****             
 412:main.c        ****         
 413:main.c        **** 
 414:main.c        ****        
 415:main.c        ****             //reset variable.
 416:main.c        ****             processSensors = 0;
 952              		.loc 1 416 0
 953 010e 0F4B     		ldr	r3, .L41+12
 954 0110 0022     		movs	r2, #0
 955 0112 1A60     		str	r2, [r3]
 417:main.c        ****             //reset counter
 418:main.c        **** 
 419:main.c        ****              counteoc = 0;
 956              		.loc 1 419 0
 957 0114 0E4B     		ldr	r3, .L41+16
 958 0116 0022     		movs	r2, #0
 959 0118 1A60     		str	r2, [r3]
 420:main.c        ****             //reset flags for lightsensors because it checks every 10 iterations, adds delay/
 421:main.c        ****             lightDetectedFront[0] = 0;
 960              		.loc 1 421 0
 961 011a 0E4B     		ldr	r3, .L41+20
 962 011c 0022     		movs	r2, #0
 963 011e 1A60     		str	r2, [r3]
 422:main.c        ****             lightDetectedFront[1] = 0;
 964              		.loc 1 422 0
 965 0120 0C4B     		ldr	r3, .L41+20
 966 0122 0022     		movs	r2, #0
 967 0124 5A60     		str	r2, [r3, #4]
 423:main.c        ****             lightDetectedFront[2] = 0;
 968              		.loc 1 423 0
 969 0126 0B4B     		ldr	r3, .L41+20
 970 0128 0022     		movs	r2, #0
 971 012a 9A60     		str	r2, [r3, #8]
 424:main.c        ****             lightDetectedBack[0] = 0;
 972              		.loc 1 424 0
 973 012c 0A4B     		ldr	r3, .L41+24
 974 012e 0022     		movs	r2, #0
 975 0130 1A60     		str	r2, [r3]
 425:main.c        ****             lightDetectedBack[1] = 0;
 976              		.loc 1 425 0
 977 0132 094B     		ldr	r3, .L41+24
 978 0134 0022     		movs	r2, #0
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 26


 979 0136 5A60     		str	r2, [r3, #4]
 426:main.c        ****             lightDetectedBack[2] = 0;
 980              		.loc 1 426 0
 981 0138 074B     		ldr	r3, .L41+24
 982 013a 0022     		movs	r2, #0
 983 013c 9A60     		str	r2, [r3, #8]
 984              	.LBE2:
 427:main.c        ****           
 428:main.c        ****         }
 429:main.c        ****         
 430:main.c        ****     }   
 985              		.loc 1 430 0
 986 013e 83E7     		b	.L39
 987              	.L42:
 988              		.align	2
 989              	.L41:
 990 0140 44000000 		.word	count
 991 0144 00000000 		.word	isr_TS_Interrupt_sample
 992 0148 00000000 		.word	isr_eoc_Interrupt_test
 993 014c 00000000 		.word	processSensors
 994 0150 00000000 		.word	counteoc
 995 0154 00000000 		.word	lightDetectedFront
 996 0158 00000000 		.word	lightDetectedBack
 997              		.cfi_endproc
 998              	.LFE76:
 999              		.size	main, .-main
 1000              		.section	.text.convertBackBinary,"ax",%progbits
 1001              		.align	2
 1002              		.global	convertBackBinary
 1003              		.thumb
 1004              		.thumb_func
 1005              		.type	convertBackBinary, %function
 1006              	convertBackBinary:
 1007              	.LFB77:
 431:main.c        ****     
 432:main.c        **** //////////////////////////////////////
 433:main.c        **** }
 434:main.c        **** 
 435:main.c        ****   
 436:main.c        **** 
 437:main.c        **** int convertBackBinary(){
 1008              		.loc 1 437 0
 1009              		.cfi_startproc
 1010              		@ args = 0, pretend = 0, frame = 16
 1011              		@ frame_needed = 1, uses_anonymous_args = 0
 1012              		@ link register save eliminated.
 1013 0000 80B4     		push	{r7}
 1014              		.cfi_def_cfa_offset 4
 1015              		.cfi_offset 7, -4
 1016 0002 85B0     		sub	sp, sp, #20
 1017              		.cfi_def_cfa_offset 24
 1018 0004 00AF     		add	r7, sp, #0
 1019              		.cfi_def_cfa_register 7
 438:main.c        **** 
 439:main.c        ****     int value1=0;
 1020              		.loc 1 439 0
 1021 0006 0023     		movs	r3, #0
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 27


 1022 0008 FB60     		str	r3, [r7, #12]
 440:main.c        ****     int Q1 = lightDetectedBack[1] ;
 1023              		.loc 1 440 0
 1024 000a 104B     		ldr	r3, .L44
 1025 000c 5B68     		ldr	r3, [r3, #4]
 1026 000e BB60     		str	r3, [r7, #8]
 441:main.c        ****     int Q2 = lightDetectedBack[2];
 1027              		.loc 1 441 0
 1028 0010 0E4B     		ldr	r3, .L44
 1029 0012 9B68     		ldr	r3, [r3, #8]
 1030 0014 7B60     		str	r3, [r7, #4]
 442:main.c        ****     int Q6 =lightDetectedBack[0];
 1031              		.loc 1 442 0
 1032 0016 0D4B     		ldr	r3, .L44
 1033 0018 1B68     		ldr	r3, [r3]
 1034 001a 3B60     		str	r3, [r7]
 443:main.c        ****     value1 =  value1 + lightDetectedBack[1] *2;
 1035              		.loc 1 443 0
 1036 001c 0B4B     		ldr	r3, .L44
 1037 001e 5B68     		ldr	r3, [r3, #4]
 1038 0020 5B00     		lsls	r3, r3, #1
 1039 0022 FA68     		ldr	r2, [r7, #12]
 1040 0024 1344     		add	r3, r3, r2
 1041 0026 FB60     		str	r3, [r7, #12]
 444:main.c        ****     value1 = value1 +  lightDetectedBack[2] *4;
 1042              		.loc 1 444 0
 1043 0028 084B     		ldr	r3, .L44
 1044 002a 9B68     		ldr	r3, [r3, #8]
 1045 002c 9B00     		lsls	r3, r3, #2
 1046 002e FA68     		ldr	r2, [r7, #12]
 1047 0030 1344     		add	r3, r3, r2
 1048 0032 FB60     		str	r3, [r7, #12]
 445:main.c        ****     value1 = value1 + lightDetectedBack[0] *1;
 1049              		.loc 1 445 0
 1050 0034 054B     		ldr	r3, .L44
 1051 0036 1B68     		ldr	r3, [r3]
 1052 0038 FA68     		ldr	r2, [r7, #12]
 1053 003a 1344     		add	r3, r3, r2
 1054 003c FB60     		str	r3, [r7, #12]
 446:main.c        **** 
 447:main.c        **** 
 448:main.c        **** 
 449:main.c        **** }
 1055              		.loc 1 449 0
 1056 003e 00BF     		nop
 1057 0040 1846     		mov	r0, r3
 1058 0042 1437     		adds	r7, r7, #20
 1059              		.cfi_def_cfa_offset 4
 1060 0044 BD46     		mov	sp, r7
 1061              		.cfi_def_cfa_register 13
 1062              		@ sp needed
 1063 0046 80BC     		pop	{r7}
 1064              		.cfi_restore 7
 1065              		.cfi_def_cfa_offset 0
 1066 0048 7047     		bx	lr
 1067              	.L45:
 1068 004a 00BF     		.align	2
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 28


 1069              	.L44:
 1070 004c 00000000 		.word	lightDetectedBack
 1071              		.cfi_endproc
 1072              	.LFE77:
 1073              		.size	convertBackBinary, .-convertBackBinary
 1074              		.section	.text.convertSensorBinary,"ax",%progbits
 1075              		.align	2
 1076              		.global	convertSensorBinary
 1077              		.thumb
 1078              		.thumb_func
 1079              		.type	convertSensorBinary, %function
 1080              	convertSensorBinary:
 1081              	.LFB78:
 450:main.c        **** 
 451:main.c        **** int convertSensorBinary()
 452:main.c        **** {
 1082              		.loc 1 452 0
 1083              		.cfi_startproc
 1084              		@ args = 0, pretend = 0, frame = 16
 1085              		@ frame_needed = 1, uses_anonymous_args = 0
 1086              		@ link register save eliminated.
 1087 0000 80B4     		push	{r7}
 1088              		.cfi_def_cfa_offset 4
 1089              		.cfi_offset 7, -4
 1090 0002 85B0     		sub	sp, sp, #20
 1091              		.cfi_def_cfa_offset 24
 1092 0004 00AF     		add	r7, sp, #0
 1093              		.cfi_def_cfa_register 7
 453:main.c        ****    int value=0;
 1094              		.loc 1 453 0
 1095 0006 0023     		movs	r3, #0
 1096 0008 FB60     		str	r3, [r7, #12]
 454:main.c        ****   int Q3 = lightDetectedFront[0];
 1097              		.loc 1 454 0
 1098 000a 104B     		ldr	r3, .L48
 1099 000c 1B68     		ldr	r3, [r3]
 1100 000e BB60     		str	r3, [r7, #8]
 455:main.c        ****   int Q4 = lightDetectedFront[1];
 1101              		.loc 1 455 0
 1102 0010 0E4B     		ldr	r3, .L48
 1103 0012 5B68     		ldr	r3, [r3, #4]
 1104 0014 7B60     		str	r3, [r7, #4]
 456:main.c        ****    int Q5 = lightDetectedFront[2];
 1105              		.loc 1 456 0
 1106 0016 0D4B     		ldr	r3, .L48
 1107 0018 9B68     		ldr	r3, [r3, #8]
 1108 001a 3B60     		str	r3, [r7]
 457:main.c        ****   value=value + lightDetectedFront[0]*4;
 1109              		.loc 1 457 0
 1110 001c 0B4B     		ldr	r3, .L48
 1111 001e 1B68     		ldr	r3, [r3]
 1112 0020 9B00     		lsls	r3, r3, #2
 1113 0022 FA68     		ldr	r2, [r7, #12]
 1114 0024 1344     		add	r3, r3, r2
 1115 0026 FB60     		str	r3, [r7, #12]
 458:main.c        ****   value=value + lightDetectedFront[1]*2;
 1116              		.loc 1 458 0
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 29


 1117 0028 084B     		ldr	r3, .L48
 1118 002a 5B68     		ldr	r3, [r3, #4]
 1119 002c 5B00     		lsls	r3, r3, #1
 1120 002e FA68     		ldr	r2, [r7, #12]
 1121 0030 1344     		add	r3, r3, r2
 1122 0032 FB60     		str	r3, [r7, #12]
 459:main.c        ****   value=value + lightDetectedFront[2]*1;
 1123              		.loc 1 459 0
 1124 0034 054B     		ldr	r3, .L48
 1125 0036 9B68     		ldr	r3, [r3, #8]
 1126 0038 FA68     		ldr	r2, [r7, #12]
 1127 003a 1344     		add	r3, r3, r2
 1128 003c FB60     		str	r3, [r7, #12]
 460:main.c        ****     return value;
 1129              		.loc 1 460 0
 1130 003e FB68     		ldr	r3, [r7, #12]
 461:main.c        **** }
 1131              		.loc 1 461 0
 1132 0040 1846     		mov	r0, r3
 1133 0042 1437     		adds	r7, r7, #20
 1134              		.cfi_def_cfa_offset 4
 1135 0044 BD46     		mov	sp, r7
 1136              		.cfi_def_cfa_register 13
 1137              		@ sp needed
 1138 0046 80BC     		pop	{r7}
 1139              		.cfi_restore 7
 1140              		.cfi_def_cfa_offset 0
 1141 0048 7047     		bx	lr
 1142              	.L49:
 1143 004a 00BF     		.align	2
 1144              	.L48:
 1145 004c 00000000 		.word	lightDetectedFront
 1146              		.cfi_endproc
 1147              	.LFE78:
 1148              		.size	convertSensorBinary, .-convertSensorBinary
 1149              		.section	.text.usbPutString,"ax",%progbits
 1150              		.align	2
 1151              		.global	usbPutString
 1152              		.thumb
 1153              		.thumb_func
 1154              		.type	usbPutString, %function
 1155              	usbPutString:
 1156              	.LFB79:
 462:main.c        **** //* ========================================
 463:main.c        **** void usbPutString(char *s)
 464:main.c        **** {
 1157              		.loc 1 464 0
 1158              		.cfi_startproc
 1159              		@ args = 0, pretend = 0, frame = 8
 1160              		@ frame_needed = 1, uses_anonymous_args = 0
 1161 0000 80B5     		push	{r7, lr}
 1162              		.cfi_def_cfa_offset 8
 1163              		.cfi_offset 7, -8
 1164              		.cfi_offset 14, -4
 1165 0002 82B0     		sub	sp, sp, #8
 1166              		.cfi_def_cfa_offset 16
 1167 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 30


 1168              		.cfi_def_cfa_register 7
 1169 0006 7860     		str	r0, [r7, #4]
 465:main.c        **** // !! Assumes that *s is a string with allocated space >=64 chars     
 466:main.c        **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 467:main.c        **** //  length to 62 char (63rd char is a '!')
 468:main.c        **** 
 469:main.c        **** #ifdef USE_USB     
 470:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1170              		.loc 1 470 0
 1171 0008 00BF     		nop
 1172              	.L51:
 1173              		.loc 1 470 0 is_stmt 0 discriminator 1
 1174 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 1175 000e 0346     		mov	r3, r0
 1176 0010 002B     		cmp	r3, #0
 1177 0012 FAD0     		beq	.L51
 471:main.c        ****     s[63]='\0';
 1178              		.loc 1 471 0 is_stmt 1
 1179 0014 7B68     		ldr	r3, [r7, #4]
 1180 0016 3F33     		adds	r3, r3, #63
 1181 0018 0022     		movs	r2, #0
 1182 001a 1A70     		strb	r2, [r3]
 472:main.c        ****     s[62]='!';
 1183              		.loc 1 472 0
 1184 001c 7B68     		ldr	r3, [r7, #4]
 1185 001e 3E33     		adds	r3, r3, #62
 1186 0020 2122     		movs	r2, #33
 1187 0022 1A70     		strb	r2, [r3]
 473:main.c        ****     USBUART_PutData((uint8*)s,strlen(s));
 1188              		.loc 1 473 0
 1189 0024 7868     		ldr	r0, [r7, #4]
 1190 0026 FFF7FEFF 		bl	strlen
 1191 002a 0346     		mov	r3, r0
 1192 002c 9BB2     		uxth	r3, r3
 1193 002e 1946     		mov	r1, r3
 1194 0030 7868     		ldr	r0, [r7, #4]
 1195 0032 FFF7FEFF 		bl	USBUART_PutData
 474:main.c        **** #endif
 475:main.c        **** }
 1196              		.loc 1 475 0
 1197 0036 00BF     		nop
 1198 0038 0837     		adds	r7, r7, #8
 1199              		.cfi_def_cfa_offset 8
 1200 003a BD46     		mov	sp, r7
 1201              		.cfi_def_cfa_register 13
 1202              		@ sp needed
 1203 003c 80BD     		pop	{r7, pc}
 1204              		.cfi_endproc
 1205              	.LFE79:
 1206              		.size	usbPutString, .-usbPutString
 1207 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 1208              		.align	2
 1209              		.global	usbPutChar
 1210              		.thumb
 1211              		.thumb_func
 1212              		.type	usbPutChar, %function
 1213              	usbPutChar:
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 31


 1214              	.LFB80:
 476:main.c        **** //* ========================================
 477:main.c        **** void usbPutChar(char c)
 478:main.c        **** {
 1215              		.loc 1 478 0
 1216              		.cfi_startproc
 1217              		@ args = 0, pretend = 0, frame = 8
 1218              		@ frame_needed = 1, uses_anonymous_args = 0
 1219 0000 80B5     		push	{r7, lr}
 1220              		.cfi_def_cfa_offset 8
 1221              		.cfi_offset 7, -8
 1222              		.cfi_offset 14, -4
 1223 0002 82B0     		sub	sp, sp, #8
 1224              		.cfi_def_cfa_offset 16
 1225 0004 00AF     		add	r7, sp, #0
 1226              		.cfi_def_cfa_register 7
 1227 0006 0346     		mov	r3, r0
 1228 0008 FB71     		strb	r3, [r7, #7]
 479:main.c        **** #ifdef USE_USB     
 480:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1229              		.loc 1 480 0
 1230 000a 00BF     		nop
 1231              	.L53:
 1232              		.loc 1 480 0 is_stmt 0 discriminator 1
 1233 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 1234 0010 0346     		mov	r3, r0
 1235 0012 002B     		cmp	r3, #0
 1236 0014 FAD0     		beq	.L53
 481:main.c        ****     USBUART_PutChar(c);
 1237              		.loc 1 481 0 is_stmt 1
 1238 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1239 0018 1846     		mov	r0, r3
 1240 001a FFF7FEFF 		bl	USBUART_PutChar
 482:main.c        **** #endif    
 483:main.c        **** }
 1241              		.loc 1 483 0
 1242 001e 00BF     		nop
 1243 0020 0837     		adds	r7, r7, #8
 1244              		.cfi_def_cfa_offset 8
 1245 0022 BD46     		mov	sp, r7
 1246              		.cfi_def_cfa_register 13
 1247              		@ sp needed
 1248 0024 80BD     		pop	{r7, pc}
 1249              		.cfi_endproc
 1250              	.LFE80:
 1251              		.size	usbPutChar, .-usbPutChar
 1252 0026 00BF     		.section	.text.handle_usb,"ax",%progbits
 1253              		.align	2
 1254              		.global	handle_usb
 1255              		.thumb
 1256              		.thumb_func
 1257              		.type	handle_usb, %function
 1258              	handle_usb:
 1259              	.LFB81:
 484:main.c        **** //* ========================================
 485:main.c        **** void handle_usb()
 486:main.c        **** {
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 32


 1260              		.loc 1 486 0
 1261              		.cfi_startproc
 1262              		@ args = 0, pretend = 0, frame = 8
 1263              		@ frame_needed = 1, uses_anonymous_args = 0
 1264 0000 80B5     		push	{r7, lr}
 1265              		.cfi_def_cfa_offset 8
 1266              		.cfi_offset 7, -8
 1267              		.cfi_offset 14, -4
 1268 0002 82B0     		sub	sp, sp, #8
 1269              		.cfi_def_cfa_offset 16
 1270 0004 00AF     		add	r7, sp, #0
 1271              		.cfi_def_cfa_register 7
 487:main.c        ****     // handles input at terminal, echos it back to the terminal
 488:main.c        ****     // turn echo OFF, key emulation: only CR
 489:main.c        ****     // entered string is made available in 'line' and 'flag_KB_string' is set
 490:main.c        ****     
 491:main.c        ****     static uint8 usbStarted = FALSE;
 492:main.c        ****     static uint16 usbBufCount = 0;
 493:main.c        ****     uint8 c = 0; 
 1272              		.loc 1 493 0
 1273 0006 0023     		movs	r3, #0
 1274 0008 FB71     		strb	r3, [r7, #7]
 494:main.c        ****     
 495:main.c        **** 
 496:main.c        ****     if (!usbStarted)
 1275              		.loc 1 496 0
 1276 000a 2B4B     		ldr	r3, .L64
 1277 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1278 000e 002B     		cmp	r3, #0
 1279 0010 0AD1     		bne	.L55
 497:main.c        ****     {
 498:main.c        ****         if (USBUART_GetConfiguration())
 1280              		.loc 1 498 0
 1281 0012 FFF7FEFF 		bl	USBUART_GetConfiguration
 1282 0016 0346     		mov	r3, r0
 1283 0018 002B     		cmp	r3, #0
 1284 001a 49D0     		beq	.L63
 499:main.c        ****         {
 500:main.c        ****             USBUART_CDC_Init();
 1285              		.loc 1 500 0
 1286 001c FFF7FEFF 		bl	USBUART_CDC_Init
 501:main.c        ****             usbStarted = TRUE;
 1287              		.loc 1 501 0
 1288 0020 254B     		ldr	r3, .L64
 1289 0022 0122     		movs	r2, #1
 1290 0024 1A70     		strb	r2, [r3]
 502:main.c        ****         }
 503:main.c        ****     }
 504:main.c        ****     else
 505:main.c        ****     {
 506:main.c        ****         if (USBUART_DataIsReady() != 0)
 507:main.c        ****         {  
 508:main.c        ****             c = USBUART_GetChar();
 509:main.c        **** 
 510:main.c        ****             if ((c == 13) || (c == 10))
 511:main.c        ****             {
 512:main.c        **** //                if (usbBufCount > 0)
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 33


 513:main.c        ****                 {
 514:main.c        ****                     entry[usbBufCount]= '\0';
 515:main.c        ****                     strcpy(line,entry);
 516:main.c        ****                     usbBufCount = 0;
 517:main.c        ****                     flag_KB_string = 1;
 518:main.c        ****                 }
 519:main.c        ****             }
 520:main.c        ****             else 
 521:main.c        ****             {
 522:main.c        ****                 if (((c == CHAR_BACKSP) || (c == CHAR_DEL) ) && (usbBufCount > 0) )
 523:main.c        ****                     usbBufCount--;
 524:main.c        ****                 else
 525:main.c        ****                 {
 526:main.c        ****                     if (usbBufCount > (BUF_SIZE-2) ) // one less else strtok triggers a crash
 527:main.c        ****                     {
 528:main.c        ****                        USBUART_PutChar('!');        
 529:main.c        ****                     }
 530:main.c        ****                     else
 531:main.c        ****                         entry[usbBufCount++] = c;  
 532:main.c        ****                 }  
 533:main.c        ****             }
 534:main.c        ****         }
 535:main.c        ****     }    
 536:main.c        **** }
 1291              		.loc 1 536 0
 1292 0026 43E0     		b	.L63
 1293              	.L55:
 506:main.c        ****         {  
 1294              		.loc 1 506 0
 1295 0028 FFF7FEFF 		bl	USBUART_DataIsReady
 1296 002c 0346     		mov	r3, r0
 1297 002e 002B     		cmp	r3, #0
 1298 0030 3ED0     		beq	.L63
 508:main.c        **** 
 1299              		.loc 1 508 0
 1300 0032 FFF7FEFF 		bl	USBUART_GetChar
 1301 0036 0346     		mov	r3, r0
 1302 0038 FB71     		strb	r3, [r7, #7]
 510:main.c        ****             {
 1303              		.loc 1 510 0
 1304 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1305 003c 0D2B     		cmp	r3, #13
 1306 003e 02D0     		beq	.L58
 510:main.c        ****             {
 1307              		.loc 1 510 0 is_stmt 0 discriminator 1
 1308 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1309 0042 0A2B     		cmp	r3, #10
 1310 0044 10D1     		bne	.L59
 1311              	.L58:
 514:main.c        ****                     strcpy(line,entry);
 1312              		.loc 1 514 0 is_stmt 1
 1313 0046 1D4B     		ldr	r3, .L64+4
 1314 0048 1B88     		ldrh	r3, [r3]
 1315 004a 1A46     		mov	r2, r3
 1316 004c 1C4B     		ldr	r3, .L64+8
 1317 004e 0021     		movs	r1, #0
 1318 0050 9954     		strb	r1, [r3, r2]
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 34


 515:main.c        ****                     usbBufCount = 0;
 1319              		.loc 1 515 0
 1320 0052 1B49     		ldr	r1, .L64+8
 1321 0054 1B48     		ldr	r0, .L64+12
 1322 0056 FFF7FEFF 		bl	strcpy
 516:main.c        ****                     flag_KB_string = 1;
 1323              		.loc 1 516 0
 1324 005a 184B     		ldr	r3, .L64+4
 1325 005c 0022     		movs	r2, #0
 1326 005e 1A80     		strh	r2, [r3]	@ movhi
 517:main.c        ****                 }
 1327              		.loc 1 517 0
 1328 0060 194B     		ldr	r3, .L64+16
 1329 0062 0122     		movs	r2, #1
 1330 0064 1A70     		strb	r2, [r3]
 1331 0066 23E0     		b	.L57
 1332              	.L59:
 522:main.c        ****                     usbBufCount--;
 1333              		.loc 1 522 0
 1334 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1335 006a 082B     		cmp	r3, #8
 1336 006c 02D0     		beq	.L60
 522:main.c        ****                     usbBufCount--;
 1337              		.loc 1 522 0 is_stmt 0 discriminator 2
 1338 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1339 0070 7F2B     		cmp	r3, #127
 1340 0072 0AD1     		bne	.L61
 1341              	.L60:
 522:main.c        ****                     usbBufCount--;
 1342              		.loc 1 522 0 discriminator 3
 1343 0074 114B     		ldr	r3, .L64+4
 1344 0076 1B88     		ldrh	r3, [r3]
 1345 0078 002B     		cmp	r3, #0
 1346 007a 06D0     		beq	.L61
 523:main.c        ****                 else
 1347              		.loc 1 523 0 is_stmt 1
 1348 007c 0F4B     		ldr	r3, .L64+4
 1349 007e 1B88     		ldrh	r3, [r3]
 1350 0080 013B     		subs	r3, r3, #1
 1351 0082 9AB2     		uxth	r2, r3
 1352 0084 0D4B     		ldr	r3, .L64+4
 1353 0086 1A80     		strh	r2, [r3]	@ movhi
 1354 0088 12E0     		b	.L57
 1355              	.L61:
 526:main.c        ****                     {
 1356              		.loc 1 526 0
 1357 008a 0C4B     		ldr	r3, .L64+4
 1358 008c 1B88     		ldrh	r3, [r3]
 1359 008e 3E2B     		cmp	r3, #62
 1360 0090 03D9     		bls	.L62
 528:main.c        ****                     }
 1361              		.loc 1 528 0
 1362 0092 2120     		movs	r0, #33
 1363 0094 FFF7FEFF 		bl	USBUART_PutChar
 1364              		.loc 1 536 0
 1365 0098 0AE0     		b	.L63
 1366              	.L62:
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 35


 531:main.c        ****                 }  
 1367              		.loc 1 531 0
 1368 009a 084B     		ldr	r3, .L64+4
 1369 009c 1B88     		ldrh	r3, [r3]
 1370 009e 5A1C     		adds	r2, r3, #1
 1371 00a0 91B2     		uxth	r1, r2
 1372 00a2 064A     		ldr	r2, .L64+4
 1373 00a4 1180     		strh	r1, [r2]	@ movhi
 1374 00a6 1946     		mov	r1, r3
 1375 00a8 054A     		ldr	r2, .L64+8
 1376 00aa FB79     		ldrb	r3, [r7, #7]
 1377 00ac 5354     		strb	r3, [r2, r1]
 1378              		.loc 1 536 0
 1379 00ae FFE7     		b	.L63
 1380              	.L57:
 1381              	.L63:
 1382 00b0 00BF     		nop
 1383 00b2 0837     		adds	r7, r7, #8
 1384              		.cfi_def_cfa_offset 8
 1385 00b4 BD46     		mov	sp, r7
 1386              		.cfi_def_cfa_register 13
 1387              		@ sp needed
 1388 00b6 80BD     		pop	{r7, pc}
 1389              	.L65:
 1390              		.align	2
 1391              	.L64:
 1392 00b8 45000000 		.word	usbStarted.8815
 1393 00bc 46000000 		.word	usbBufCount.8816
 1394 00c0 00000000 		.word	entry
 1395 00c4 00000000 		.word	line
 1396 00c8 00000000 		.word	flag_KB_string
 1397              		.cfi_endproc
 1398              	.LFE81:
 1399              		.size	handle_usb, .-handle_usb
 1400              		.bss
 1401              	usbStarted.8815:
 1402 0045 00       		.space	1
 1403              		.align	1
 1404              	usbBufCount.8816:
 1405 0046 0000     		.space	2
 1406              		.text
 1407              	.Letext0:
 1408              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1409              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1410              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1411              		.file 5 "vars.h"
 1412              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1413              		.section	.debug_info,"",%progbits
 1414              	.Ldebug_info0:
 1415 0000 5F070000 		.4byte	0x75f
 1416 0004 0400     		.2byte	0x4
 1417 0006 00000000 		.4byte	.Ldebug_abbrev0
 1418 000a 04       		.byte	0x4
 1419 000b 01       		.uleb128 0x1
 1420 000c B5000000 		.4byte	.LASF103
 1421 0010 0C       		.byte	0xc
 1422 0011 C6040000 		.4byte	.LASF104
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 36


 1423 0015 AF010000 		.4byte	.LASF105
 1424 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1425 001d 00000000 		.4byte	0
 1426 0021 00000000 		.4byte	.Ldebug_line0
 1427 0025 02       		.uleb128 0x2
 1428 0026 01       		.byte	0x1
 1429 0027 06       		.byte	0x6
 1430 0028 AE030000 		.4byte	.LASF0
 1431 002c 02       		.uleb128 0x2
 1432 002d 01       		.byte	0x1
 1433 002e 08       		.byte	0x8
 1434 002f 75030000 		.4byte	.LASF1
 1435 0033 02       		.uleb128 0x2
 1436 0034 02       		.byte	0x2
 1437 0035 05       		.byte	0x5
 1438 0036 8B000000 		.4byte	.LASF2
 1439 003a 02       		.uleb128 0x2
 1440 003b 02       		.byte	0x2
 1441 003c 07       		.byte	0x7
 1442 003d 64040000 		.4byte	.LASF3
 1443 0041 03       		.uleb128 0x3
 1444 0042 05050000 		.4byte	.LASF12
 1445 0046 02       		.byte	0x2
 1446 0047 3F       		.byte	0x3f
 1447 0048 4C000000 		.4byte	0x4c
 1448 004c 02       		.uleb128 0x2
 1449 004d 04       		.byte	0x4
 1450 004e 05       		.byte	0x5
 1451 004f D2020000 		.4byte	.LASF4
 1452 0053 02       		.uleb128 0x2
 1453 0054 04       		.byte	0x4
 1454 0055 07       		.byte	0x7
 1455 0056 CD040000 		.4byte	.LASF5
 1456 005a 02       		.uleb128 0x2
 1457 005b 08       		.byte	0x8
 1458 005c 05       		.byte	0x5
 1459 005d 86020000 		.4byte	.LASF6
 1460 0061 02       		.uleb128 0x2
 1461 0062 08       		.byte	0x8
 1462 0063 07       		.byte	0x7
 1463 0064 BA030000 		.4byte	.LASF7
 1464 0068 04       		.uleb128 0x4
 1465 0069 04       		.byte	0x4
 1466 006a 05       		.byte	0x5
 1467 006b 696E7400 		.ascii	"int\000"
 1468 006f 02       		.uleb128 0x2
 1469 0070 04       		.byte	0x4
 1470 0071 07       		.byte	0x7
 1471 0072 DD030000 		.4byte	.LASF8
 1472 0076 02       		.uleb128 0x2
 1473 0077 08       		.byte	0x8
 1474 0078 04       		.byte	0x4
 1475 0079 62030000 		.4byte	.LASF9
 1476 007d 02       		.uleb128 0x2
 1477 007e 04       		.byte	0x4
 1478 007f 07       		.byte	0x7
 1479 0080 A2000000 		.4byte	.LASF10
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 37


 1480 0084 05       		.uleb128 0x5
 1481 0085 04       		.byte	0x4
 1482 0086 8A000000 		.4byte	0x8a
 1483 008a 02       		.uleb128 0x2
 1484 008b 01       		.byte	0x1
 1485 008c 08       		.byte	0x8
 1486 008d 37040000 		.4byte	.LASF11
 1487 0091 03       		.uleb128 0x3
 1488 0092 47040000 		.4byte	.LASF13
 1489 0096 03       		.byte	0x3
 1490 0097 2C       		.byte	0x2c
 1491 0098 41000000 		.4byte	0x41
 1492 009c 02       		.uleb128 0x2
 1493 009d 08       		.byte	0x8
 1494 009e 04       		.byte	0x4
 1495 009f 29000000 		.4byte	.LASF14
 1496 00a3 02       		.uleb128 0x2
 1497 00a4 04       		.byte	0x4
 1498 00a5 04       		.byte	0x4
 1499 00a6 66020000 		.4byte	.LASF15
 1500 00aa 06       		.uleb128 0x6
 1501 00ab A9010000 		.4byte	.LASF16
 1502 00af 04       		.byte	0x4
 1503 00b0 E401     		.2byte	0x1e4
 1504 00b2 2C000000 		.4byte	0x2c
 1505 00b6 06       		.uleb128 0x6
 1506 00b7 8C010000 		.4byte	.LASF17
 1507 00bb 04       		.byte	0x4
 1508 00bc E501     		.2byte	0x1e5
 1509 00be 3A000000 		.4byte	0x3a
 1510 00c2 06       		.uleb128 0x6
 1511 00c3 A1020000 		.4byte	.LASF18
 1512 00c7 04       		.byte	0x4
 1513 00c8 E701     		.2byte	0x1e7
 1514 00ca 25000000 		.4byte	0x25
 1515 00ce 06       		.uleb128 0x6
 1516 00cf A3010000 		.4byte	.LASF19
 1517 00d3 04       		.byte	0x4
 1518 00d4 E801     		.2byte	0x1e8
 1519 00d6 33000000 		.4byte	0x33
 1520 00da 07       		.uleb128 0x7
 1521 00db 99010000 		.4byte	.LASF106
 1522 00df 20       		.byte	0x20
 1523 00e0 05       		.byte	0x5
 1524 00e1 29       		.byte	0x29
 1525 00e2 B3010000 		.4byte	0x1b3
 1526 00e6 08       		.uleb128 0x8
 1527 00e7 D4050000 		.4byte	.LASF20
 1528 00eb 05       		.byte	0x5
 1529 00ec 2A       		.byte	0x2a
 1530 00ed C2000000 		.4byte	0xc2
 1531 00f1 00       		.byte	0
 1532 00f2 08       		.uleb128 0x8
 1533 00f3 93010000 		.4byte	.LASF21
 1534 00f7 05       		.byte	0x5
 1535 00f8 2B       		.byte	0x2b
 1536 00f9 AA000000 		.4byte	0xaa
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 38


 1537 00fd 01       		.byte	0x1
 1538 00fe 08       		.uleb128 0x8
 1539 00ff 3C040000 		.4byte	.LASF22
 1540 0103 05       		.byte	0x5
 1541 0104 2C       		.byte	0x2c
 1542 0105 CE000000 		.4byte	0xce
 1543 0109 02       		.byte	0x2
 1544 010a 08       		.uleb128 0x8
 1545 010b 86050000 		.4byte	.LASF23
 1546 010f 05       		.byte	0x5
 1547 0110 2D       		.byte	0x2d
 1548 0111 CE000000 		.4byte	0xce
 1549 0115 04       		.byte	0x4
 1550 0116 08       		.uleb128 0x8
 1551 0117 D9050000 		.4byte	.LASF24
 1552 011b 05       		.byte	0x5
 1553 011c 2E       		.byte	0x2e
 1554 011d CE000000 		.4byte	0xce
 1555 0121 06       		.byte	0x6
 1556 0122 08       		.uleb128 0x8
 1557 0123 CA020000 		.4byte	.LASF25
 1558 0127 05       		.byte	0x5
 1559 0128 2F       		.byte	0x2f
 1560 0129 CE000000 		.4byte	0xce
 1561 012d 08       		.byte	0x8
 1562 012e 08       		.uleb128 0x8
 1563 012f 38050000 		.4byte	.LASF26
 1564 0133 05       		.byte	0x5
 1565 0134 30       		.byte	0x30
 1566 0135 CE000000 		.4byte	0xce
 1567 0139 0A       		.byte	0xa
 1568 013a 08       		.uleb128 0x8
 1569 013b 96030000 		.4byte	.LASF27
 1570 013f 05       		.byte	0x5
 1571 0140 31       		.byte	0x31
 1572 0141 CE000000 		.4byte	0xce
 1573 0145 0C       		.byte	0xc
 1574 0146 08       		.uleb128 0x8
 1575 0147 BD020000 		.4byte	.LASF28
 1576 014b 05       		.byte	0x5
 1577 014c 32       		.byte	0x32
 1578 014d CE000000 		.4byte	0xce
 1579 0151 0E       		.byte	0xe
 1580 0152 08       		.uleb128 0x8
 1581 0153 13040000 		.4byte	.LASF29
 1582 0157 05       		.byte	0x5
 1583 0158 33       		.byte	0x33
 1584 0159 CE000000 		.4byte	0xce
 1585 015d 10       		.byte	0x10
 1586 015e 08       		.uleb128 0x8
 1587 015f 4F040000 		.4byte	.LASF30
 1588 0163 05       		.byte	0x5
 1589 0164 34       		.byte	0x34
 1590 0165 CE000000 		.4byte	0xce
 1591 0169 12       		.byte	0x12
 1592 016a 08       		.uleb128 0x8
 1593 016b 85040000 		.4byte	.LASF31
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 39


 1594 016f 05       		.byte	0x5
 1595 0170 35       		.byte	0x35
 1596 0171 CE000000 		.4byte	0xce
 1597 0175 14       		.byte	0x14
 1598 0176 08       		.uleb128 0x8
 1599 0177 B1050000 		.4byte	.LASF32
 1600 017b 05       		.byte	0x5
 1601 017c 36       		.byte	0x36
 1602 017d CE000000 		.4byte	0xce
 1603 0181 16       		.byte	0x16
 1604 0182 08       		.uleb128 0x8
 1605 0183 83000000 		.4byte	.LASF33
 1606 0187 05       		.byte	0x5
 1607 0188 37       		.byte	0x37
 1608 0189 CE000000 		.4byte	0xce
 1609 018d 18       		.byte	0x18
 1610 018e 08       		.uleb128 0x8
 1611 018f B5020000 		.4byte	.LASF34
 1612 0193 05       		.byte	0x5
 1613 0194 38       		.byte	0x38
 1614 0195 CE000000 		.4byte	0xce
 1615 0199 1A       		.byte	0x1a
 1616 019a 08       		.uleb128 0x8
 1617 019b 05040000 		.4byte	.LASF35
 1618 019f 05       		.byte	0x5
 1619 01a0 39       		.byte	0x39
 1620 01a1 CE000000 		.4byte	0xce
 1621 01a5 1C       		.byte	0x1c
 1622 01a6 08       		.uleb128 0x8
 1623 01a7 57040000 		.4byte	.LASF36
 1624 01ab 05       		.byte	0x5
 1625 01ac 3A       		.byte	0x3a
 1626 01ad CE000000 		.4byte	0xce
 1627 01b1 1E       		.byte	0x1e
 1628 01b2 00       		.byte	0
 1629 01b3 09       		.uleb128 0x9
 1630 01b4 1D050000 		.4byte	.LASF37
 1631 01b8 01       		.byte	0x1
 1632 01b9 34       		.byte	0x34
 1633 01ba 00000000 		.4byte	.LFB64
 1634 01be 14000000 		.4byte	.LFE64-.LFB64
 1635 01c2 01       		.uleb128 0x1
 1636 01c3 9C       		.byte	0x9c
 1637 01c4 0A       		.uleb128 0xa
 1638 01c5 77040000 		.4byte	.LASF40
 1639 01c9 01       		.byte	0x1
 1640 01ca 3A       		.byte	0x3a
 1641 01cb 00000000 		.4byte	.LFB65
 1642 01cf 2E000000 		.4byte	.LFE65-.LFB65
 1643 01d3 01       		.uleb128 0x1
 1644 01d4 9C       		.byte	0x9c
 1645 01d5 E6010000 		.4byte	0x1e6
 1646 01d9 0B       		.uleb128 0xb
 1647 01da 7800     		.ascii	"x\000"
 1648 01dc 01       		.byte	0x1
 1649 01dd 3A       		.byte	0x3a
 1650 01de 68000000 		.4byte	0x68
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 40


 1651 01e2 02       		.uleb128 0x2
 1652 01e3 91       		.byte	0x91
 1653 01e4 74       		.sleb128 -12
 1654 01e5 00       		.byte	0
 1655 01e6 09       		.uleb128 0x9
 1656 01e7 67000000 		.4byte	.LASF38
 1657 01eb 01       		.byte	0x1
 1658 01ec 42       		.byte	0x42
 1659 01ed 00000000 		.4byte	.LFB66
 1660 01f1 14000000 		.4byte	.LFE66-.LFB66
 1661 01f5 01       		.uleb128 0x1
 1662 01f6 9C       		.byte	0x9c
 1663 01f7 09       		.uleb128 0x9
 1664 01f8 00000000 		.4byte	.LASF39
 1665 01fc 01       		.byte	0x1
 1666 01fd 48       		.byte	0x48
 1667 01fe 00000000 		.4byte	.LFB67
 1668 0202 14000000 		.4byte	.LFE67-.LFB67
 1669 0206 01       		.uleb128 0x1
 1670 0207 9C       		.byte	0x9c
 1671 0208 0A       		.uleb128 0xa
 1672 0209 0F050000 		.4byte	.LASF41
 1673 020d 01       		.byte	0x1
 1674 020e 4D       		.byte	0x4d
 1675 020f 00000000 		.4byte	.LFB68
 1676 0213 20000000 		.4byte	.LFE68-.LFB68
 1677 0217 01       		.uleb128 0x1
 1678 0218 9C       		.byte	0x9c
 1679 0219 2A020000 		.4byte	0x22a
 1680 021d 0B       		.uleb128 0xb
 1681 021e 7800     		.ascii	"x\000"
 1682 0220 01       		.byte	0x1
 1683 0221 4D       		.byte	0x4d
 1684 0222 AA000000 		.4byte	0xaa
 1685 0226 02       		.uleb128 0x2
 1686 0227 91       		.byte	0x91
 1687 0228 77       		.sleb128 -9
 1688 0229 00       		.byte	0
 1689 022a 0A       		.uleb128 0xa
 1690 022b BE050000 		.4byte	.LASF42
 1691 022f 01       		.byte	0x1
 1692 0230 58       		.byte	0x58
 1693 0231 00000000 		.4byte	.LFB69
 1694 0235 20000000 		.4byte	.LFE69-.LFB69
 1695 0239 01       		.uleb128 0x1
 1696 023a 9C       		.byte	0x9c
 1697 023b 4C020000 		.4byte	0x24c
 1698 023f 0B       		.uleb128 0xb
 1699 0240 7800     		.ascii	"x\000"
 1700 0242 01       		.byte	0x1
 1701 0243 58       		.byte	0x58
 1702 0244 68000000 		.4byte	0x68
 1703 0248 02       		.uleb128 0x2
 1704 0249 91       		.byte	0x91
 1705 024a 74       		.sleb128 -12
 1706 024b 00       		.byte	0
 1707 024c 0A       		.uleb128 0xa
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 41


 1708 024d D1030000 		.4byte	.LASF43
 1709 0251 01       		.byte	0x1
 1710 0252 61       		.byte	0x61
 1711 0253 00000000 		.4byte	.LFB70
 1712 0257 2A000000 		.4byte	.LFE70-.LFB70
 1713 025b 01       		.uleb128 0x1
 1714 025c 9C       		.byte	0x9c
 1715 025d 6E020000 		.4byte	0x26e
 1716 0261 0B       		.uleb128 0xb
 1717 0262 7800     		.ascii	"x\000"
 1718 0264 01       		.byte	0x1
 1719 0265 61       		.byte	0x61
 1720 0266 AA000000 		.4byte	0xaa
 1721 026a 02       		.uleb128 0x2
 1722 026b 91       		.byte	0x91
 1723 026c 77       		.sleb128 -9
 1724 026d 00       		.byte	0
 1725 026e 0A       		.uleb128 0xa
 1726 026f 50000000 		.4byte	.LASF44
 1727 0273 01       		.byte	0x1
 1728 0274 74       		.byte	0x74
 1729 0275 00000000 		.4byte	.LFB71
 1730 0279 E0000000 		.4byte	.LFE71-.LFB71
 1731 027d 01       		.uleb128 0x1
 1732 027e 9C       		.byte	0x9c
 1733 027f D8020000 		.4byte	0x2d8
 1734 0283 0C       		.uleb128 0xc
 1735 0284 61010000 		.4byte	.LASF45
 1736 0288 01       		.byte	0x1
 1737 0289 7C       		.byte	0x7c
 1738 028a CE000000 		.4byte	0xce
 1739 028e 02       		.uleb128 0x2
 1740 028f 91       		.byte	0x91
 1741 0290 76       		.sleb128 -10
 1742 0291 0C       		.uleb128 0xc
 1743 0292 69010000 		.4byte	.LASF46
 1744 0296 01       		.byte	0x1
 1745 0297 7D       		.byte	0x7d
 1746 0298 CE000000 		.4byte	0xce
 1747 029c 02       		.uleb128 0x2
 1748 029d 91       		.byte	0x91
 1749 029e 74       		.sleb128 -12
 1750 029f 0C       		.uleb128 0xc
 1751 02a0 71010000 		.4byte	.LASF47
 1752 02a4 01       		.byte	0x1
 1753 02a5 7E       		.byte	0x7e
 1754 02a6 CE000000 		.4byte	0xce
 1755 02aa 02       		.uleb128 0x2
 1756 02ab 91       		.byte	0x91
 1757 02ac 72       		.sleb128 -14
 1758 02ad 0C       		.uleb128 0xc
 1759 02ae 51010000 		.4byte	.LASF48
 1760 02b2 01       		.byte	0x1
 1761 02b3 80       		.byte	0x80
 1762 02b4 CE000000 		.4byte	0xce
 1763 02b8 02       		.uleb128 0x2
 1764 02b9 91       		.byte	0x91
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 42


 1765 02ba 70       		.sleb128 -16
 1766 02bb 0C       		.uleb128 0xc
 1767 02bc 59010000 		.4byte	.LASF49
 1768 02c0 01       		.byte	0x1
 1769 02c1 81       		.byte	0x81
 1770 02c2 CE000000 		.4byte	0xce
 1771 02c6 02       		.uleb128 0x2
 1772 02c7 91       		.byte	0x91
 1773 02c8 6E       		.sleb128 -18
 1774 02c9 0C       		.uleb128 0xc
 1775 02ca 79010000 		.4byte	.LASF50
 1776 02ce 01       		.byte	0x1
 1777 02cf 82       		.byte	0x82
 1778 02d0 CE000000 		.4byte	0xce
 1779 02d4 02       		.uleb128 0x2
 1780 02d5 91       		.byte	0x91
 1781 02d6 6C       		.sleb128 -20
 1782 02d7 00       		.byte	0
 1783 02d8 0D       		.uleb128 0xd
 1784 02d9 6C020000 		.4byte	.LASF59
 1785 02dd 01       		.byte	0x1
 1786 02de AF       		.byte	0xaf
 1787 02df 00000000 		.4byte	.LFB72
 1788 02e3 0C000000 		.4byte	.LFE72-.LFB72
 1789 02e7 01       		.uleb128 0x1
 1790 02e8 9C       		.byte	0x9c
 1791 02e9 0E       		.uleb128 0xe
 1792 02ea 2D050000 		.4byte	.LASF71
 1793 02ee 01       		.byte	0x1
 1794 02ef C2       		.byte	0xc2
 1795 02f0 00000000 		.4byte	.LFB73
 1796 02f4 C0000000 		.4byte	.LFE73-.LFB73
 1797 02f8 01       		.uleb128 0x1
 1798 02f9 9C       		.byte	0x9c
 1799 02fa 57030000 		.4byte	0x357
 1800 02fe 0C       		.uleb128 0xc
 1801 02ff DB020000 		.4byte	.LASF51
 1802 0303 01       		.byte	0x1
 1803 0304 C3       		.byte	0xc3
 1804 0305 CE000000 		.4byte	0xce
 1805 0309 02       		.uleb128 0x2
 1806 030a 91       		.byte	0x91
 1807 030b 76       		.sleb128 -10
 1808 030c 0C       		.uleb128 0xc
 1809 030d F0020000 		.4byte	.LASF52
 1810 0311 01       		.byte	0x1
 1811 0312 C4       		.byte	0xc4
 1812 0313 CE000000 		.4byte	0xce
 1813 0317 02       		.uleb128 0x2
 1814 0318 91       		.byte	0x91
 1815 0319 74       		.sleb128 -12
 1816 031a 0C       		.uleb128 0xc
 1817 031b 4D030000 		.4byte	.LASF53
 1818 031f 01       		.byte	0x1
 1819 0320 C5       		.byte	0xc5
 1820 0321 CE000000 		.4byte	0xce
 1821 0325 02       		.uleb128 0x2
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 43


 1822 0326 91       		.byte	0x91
 1823 0327 72       		.sleb128 -14
 1824 0328 0C       		.uleb128 0xc
 1825 0329 3E030000 		.4byte	.LASF54
 1826 032d 01       		.byte	0x1
 1827 032e C6       		.byte	0xc6
 1828 032f CE000000 		.4byte	0xce
 1829 0333 02       		.uleb128 0x2
 1830 0334 91       		.byte	0x91
 1831 0335 70       		.sleb128 -16
 1832 0336 0C       		.uleb128 0xc
 1833 0337 05030000 		.4byte	.LASF55
 1834 033b 01       		.byte	0x1
 1835 033c C7       		.byte	0xc7
 1836 033d 57030000 		.4byte	0x357
 1837 0341 04       		.uleb128 0x4
 1838 0342 91       		.byte	0x91
 1839 0343 E0B17F   		.sleb128 -10016
 1840 0346 0C       		.uleb128 0xc
 1841 0347 A4050000 		.4byte	.LASF56
 1842 034b 01       		.byte	0x1
 1843 034c C9       		.byte	0xc9
 1844 034d 57030000 		.4byte	0x357
 1845 0351 04       		.uleb128 0x4
 1846 0352 91       		.byte	0x91
 1847 0353 D0E37E   		.sleb128 -20016
 1848 0356 00       		.byte	0
 1849 0357 0F       		.uleb128 0xf
 1850 0358 8A000000 		.4byte	0x8a
 1851 035c 68030000 		.4byte	0x368
 1852 0360 10       		.uleb128 0x10
 1853 0361 7D000000 		.4byte	0x7d
 1854 0365 0F27     		.2byte	0x270f
 1855 0367 00       		.byte	0
 1856 0368 0A       		.uleb128 0xa
 1857 0369 48010000 		.4byte	.LASF57
 1858 036d 01       		.byte	0x1
 1859 036e D1       		.byte	0xd1
 1860 036f 00000000 		.4byte	.LFB74
 1861 0373 30000000 		.4byte	.LFE74-.LFB74
 1862 0377 01       		.uleb128 0x1
 1863 0378 9C       		.byte	0x9c
 1864 0379 98030000 		.4byte	0x398
 1865 037d 0B       		.uleb128 0xb
 1866 037e 7800     		.ascii	"x\000"
 1867 0380 01       		.byte	0x1
 1868 0381 D1       		.byte	0xd1
 1869 0382 68000000 		.4byte	0x68
 1870 0386 02       		.uleb128 0x2
 1871 0387 91       		.byte	0x91
 1872 0388 74       		.sleb128 -12
 1873 0389 11       		.uleb128 0x11
 1874 038a 0E040000 		.4byte	.LASF58
 1875 038e 01       		.byte	0x1
 1876 038f D1       		.byte	0xd1
 1877 0390 68000000 		.4byte	0x68
 1878 0394 02       		.uleb128 0x2
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 44


 1879 0395 91       		.byte	0x91
 1880 0396 70       		.sleb128 -16
 1881 0397 00       		.byte	0
 1882 0398 12       		.uleb128 0x12
 1883 0399 0A000000 		.4byte	.LASF60
 1884 039d 01       		.byte	0x1
 1885 039e E9       		.byte	0xe9
 1886 039f 00000000 		.4byte	.LFB75
 1887 03a3 0C000000 		.4byte	.LFE75-.LFB75
 1888 03a7 01       		.uleb128 0x1
 1889 03a8 9C       		.byte	0x9c
 1890 03a9 13       		.uleb128 0x13
 1891 03aa 43010000 		.4byte	.LASF61
 1892 03ae 01       		.byte	0x1
 1893 03af F6       		.byte	0xf6
 1894 03b0 68000000 		.4byte	0x68
 1895 03b4 00000000 		.4byte	.LFB76
 1896 03b8 5C010000 		.4byte	.LFE76-.LFB76
 1897 03bc 01       		.uleb128 0x1
 1898 03bd 9C       		.byte	0x9c
 1899 03be FA030000 		.4byte	0x3fa
 1900 03c2 14       		.uleb128 0x14
 1901 03c3 4B050000 		.4byte	.LASF62
 1902 03c7 01       		.byte	0x1
 1903 03c8 1801     		.2byte	0x118
 1904 03ca 68000000 		.4byte	0x68
 1905 03ce 02       		.uleb128 0x2
 1906 03cf 91       		.byte	0x91
 1907 03d0 74       		.sleb128 -12
 1908 03d1 15       		.uleb128 0x15
 1909 03d2 50000000 		.4byte	.LBB2
 1910 03d6 EE000000 		.4byte	.LBE2-.LBB2
 1911 03da 14       		.uleb128 0x14
 1912 03db 1B040000 		.4byte	.LASF63
 1913 03df 01       		.byte	0x1
 1914 03e0 5A01     		.2byte	0x15a
 1915 03e2 68000000 		.4byte	0x68
 1916 03e6 02       		.uleb128 0x2
 1917 03e7 91       		.byte	0x91
 1918 03e8 70       		.sleb128 -16
 1919 03e9 14       		.uleb128 0x14
 1920 03ea 8E040000 		.4byte	.LASF64
 1921 03ee 01       		.byte	0x1
 1922 03ef 5B01     		.2byte	0x15b
 1923 03f1 68000000 		.4byte	0x68
 1924 03f5 02       		.uleb128 0x2
 1925 03f6 91       		.byte	0x91
 1926 03f7 6C       		.sleb128 -20
 1927 03f8 00       		.byte	0
 1928 03f9 00       		.byte	0
 1929 03fa 16       		.uleb128 0x16
 1930 03fb 25040000 		.4byte	.LASF65
 1931 03ff 01       		.byte	0x1
 1932 0400 B501     		.2byte	0x1b5
 1933 0402 68000000 		.4byte	0x68
 1934 0406 00000000 		.4byte	.LFB77
 1935 040a 50000000 		.4byte	.LFE77-.LFB77
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 45


 1936 040e 01       		.uleb128 0x1
 1937 040f 9C       		.byte	0x9c
 1938 0410 4E040000 		.4byte	0x44e
 1939 0414 14       		.uleb128 0x14
 1940 0415 6E030000 		.4byte	.LASF66
 1941 0419 01       		.byte	0x1
 1942 041a B701     		.2byte	0x1b7
 1943 041c 68000000 		.4byte	0x68
 1944 0420 02       		.uleb128 0x2
 1945 0421 91       		.byte	0x91
 1946 0422 74       		.sleb128 -12
 1947 0423 17       		.uleb128 0x17
 1948 0424 513100   		.ascii	"Q1\000"
 1949 0427 01       		.byte	0x1
 1950 0428 B801     		.2byte	0x1b8
 1951 042a 68000000 		.4byte	0x68
 1952 042e 02       		.uleb128 0x2
 1953 042f 91       		.byte	0x91
 1954 0430 70       		.sleb128 -16
 1955 0431 17       		.uleb128 0x17
 1956 0432 513200   		.ascii	"Q2\000"
 1957 0435 01       		.byte	0x1
 1958 0436 B901     		.2byte	0x1b9
 1959 0438 68000000 		.4byte	0x68
 1960 043c 02       		.uleb128 0x2
 1961 043d 91       		.byte	0x91
 1962 043e 6C       		.sleb128 -20
 1963 043f 17       		.uleb128 0x17
 1964 0440 513600   		.ascii	"Q6\000"
 1965 0443 01       		.byte	0x1
 1966 0444 BA01     		.2byte	0x1ba
 1967 0446 68000000 		.4byte	0x68
 1968 044a 02       		.uleb128 0x2
 1969 044b 91       		.byte	0x91
 1970 044c 68       		.sleb128 -24
 1971 044d 00       		.byte	0
 1972 044e 16       		.uleb128 0x16
 1973 044f B2040000 		.4byte	.LASF67
 1974 0453 01       		.byte	0x1
 1975 0454 C301     		.2byte	0x1c3
 1976 0456 68000000 		.4byte	0x68
 1977 045a 00000000 		.4byte	.LFB78
 1978 045e 50000000 		.4byte	.LFE78-.LFB78
 1979 0462 01       		.uleb128 0x1
 1980 0463 9C       		.byte	0x9c
 1981 0464 A2040000 		.4byte	0x4a2
 1982 0468 14       		.uleb128 0x14
 1983 0469 9E050000 		.4byte	.LASF68
 1984 046d 01       		.byte	0x1
 1985 046e C501     		.2byte	0x1c5
 1986 0470 68000000 		.4byte	0x68
 1987 0474 02       		.uleb128 0x2
 1988 0475 91       		.byte	0x91
 1989 0476 74       		.sleb128 -12
 1990 0477 17       		.uleb128 0x17
 1991 0478 513300   		.ascii	"Q3\000"
 1992 047b 01       		.byte	0x1
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 46


 1993 047c C601     		.2byte	0x1c6
 1994 047e 68000000 		.4byte	0x68
 1995 0482 02       		.uleb128 0x2
 1996 0483 91       		.byte	0x91
 1997 0484 70       		.sleb128 -16
 1998 0485 17       		.uleb128 0x17
 1999 0486 513400   		.ascii	"Q4\000"
 2000 0489 01       		.byte	0x1
 2001 048a C701     		.2byte	0x1c7
 2002 048c 68000000 		.4byte	0x68
 2003 0490 02       		.uleb128 0x2
 2004 0491 91       		.byte	0x91
 2005 0492 6C       		.sleb128 -20
 2006 0493 17       		.uleb128 0x17
 2007 0494 513500   		.ascii	"Q5\000"
 2008 0497 01       		.byte	0x1
 2009 0498 C801     		.2byte	0x1c8
 2010 049a 68000000 		.4byte	0x68
 2011 049e 02       		.uleb128 0x2
 2012 049f 91       		.byte	0x91
 2013 04a0 68       		.sleb128 -24
 2014 04a1 00       		.byte	0
 2015 04a2 18       		.uleb128 0x18
 2016 04a3 94020000 		.4byte	.LASF69
 2017 04a7 01       		.byte	0x1
 2018 04a8 CF01     		.2byte	0x1cf
 2019 04aa 00000000 		.4byte	.LFB79
 2020 04ae 3E000000 		.4byte	.LFE79-.LFB79
 2021 04b2 01       		.uleb128 0x1
 2022 04b3 9C       		.byte	0x9c
 2023 04b4 C6040000 		.4byte	0x4c6
 2024 04b8 19       		.uleb128 0x19
 2025 04b9 7300     		.ascii	"s\000"
 2026 04bb 01       		.byte	0x1
 2027 04bc CF01     		.2byte	0x1cf
 2028 04be 84000000 		.4byte	0x84
 2029 04c2 02       		.uleb128 0x2
 2030 04c3 91       		.byte	0x91
 2031 04c4 74       		.sleb128 -12
 2032 04c5 00       		.byte	0
 2033 04c6 18       		.uleb128 0x18
 2034 04c7 3C000000 		.4byte	.LASF70
 2035 04cb 01       		.byte	0x1
 2036 04cc DD01     		.2byte	0x1dd
 2037 04ce 00000000 		.4byte	.LFB80
 2038 04d2 26000000 		.4byte	.LFE80-.LFB80
 2039 04d6 01       		.uleb128 0x1
 2040 04d7 9C       		.byte	0x9c
 2041 04d8 EA040000 		.4byte	0x4ea
 2042 04dc 19       		.uleb128 0x19
 2043 04dd 6300     		.ascii	"c\000"
 2044 04df 01       		.byte	0x1
 2045 04e0 DD01     		.2byte	0x1dd
 2046 04e2 8A000000 		.4byte	0x8a
 2047 04e6 02       		.uleb128 0x2
 2048 04e7 91       		.byte	0x91
 2049 04e8 77       		.sleb128 -9
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 47


 2050 04e9 00       		.byte	0
 2051 04ea 1A       		.uleb128 0x1a
 2052 04eb 5F050000 		.4byte	.LASF72
 2053 04ef 01       		.byte	0x1
 2054 04f0 E501     		.2byte	0x1e5
 2055 04f2 00000000 		.4byte	.LFB81
 2056 04f6 CC000000 		.4byte	.LFE81-.LFB81
 2057 04fa 01       		.uleb128 0x1
 2058 04fb 9C       		.byte	0x9c
 2059 04fc 32050000 		.4byte	0x532
 2060 0500 14       		.uleb128 0x14
 2061 0501 DF040000 		.4byte	.LASF73
 2062 0505 01       		.byte	0x1
 2063 0506 EB01     		.2byte	0x1eb
 2064 0508 AA000000 		.4byte	0xaa
 2065 050c 05       		.uleb128 0x5
 2066 050d 03       		.byte	0x3
 2067 050e 45000000 		.4byte	usbStarted.8815
 2068 0512 14       		.uleb128 0x14
 2069 0513 F9030000 		.4byte	.LASF74
 2070 0517 01       		.byte	0x1
 2071 0518 EC01     		.2byte	0x1ec
 2072 051a B6000000 		.4byte	0xb6
 2073 051e 05       		.uleb128 0x5
 2074 051f 03       		.byte	0x3
 2075 0520 46000000 		.4byte	usbBufCount.8816
 2076 0524 17       		.uleb128 0x17
 2077 0525 6300     		.ascii	"c\000"
 2078 0527 01       		.byte	0x1
 2079 0528 ED01     		.2byte	0x1ed
 2080 052a AA000000 		.4byte	0xaa
 2081 052e 02       		.uleb128 0x2
 2082 052f 91       		.byte	0x91
 2083 0530 77       		.sleb128 -9
 2084 0531 00       		.byte	0
 2085 0532 0C       		.uleb128 0xc
 2086 0533 F3040000 		.4byte	.LASF75
 2087 0537 01       		.byte	0x1
 2088 0538 AE       		.byte	0xae
 2089 0539 43050000 		.4byte	0x543
 2090 053d 05       		.uleb128 0x5
 2091 053e 03       		.byte	0x3
 2092 053f 44000000 		.4byte	count
 2093 0543 1B       		.uleb128 0x1b
 2094 0544 C2000000 		.4byte	0xc2
 2095 0548 1C       		.uleb128 0x1c
 2096 0549 91050000 		.4byte	.LASF76
 2097 054d 06       		.byte	0x6
 2098 054e 1207     		.2byte	0x712
 2099 0550 54050000 		.4byte	0x554
 2100 0554 1B       		.uleb128 0x1b
 2101 0555 91000000 		.4byte	0x91
 2102 0559 1D       		.uleb128 0x1d
 2103 055a 747300   		.ascii	"ts\000"
 2104 055d 05       		.byte	0x5
 2105 055e 10       		.byte	0x10
 2106 055f AA000000 		.4byte	0xaa
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 48


 2107 0563 05       		.uleb128 0x5
 2108 0564 03       		.byte	0x3
 2109 0565 00000000 		.4byte	ts
 2110 0569 1E       		.uleb128 0x1e
 2111 056a 22000000 		.4byte	.LASF77
 2112 056e 05       		.byte	0x5
 2113 056f 11       		.byte	0x11
 2114 0570 B6000000 		.4byte	0xb6
 2115 0574 05       		.uleb128 0x5
 2116 0575 03       		.byte	0x3
 2117 0576 00000000 		.4byte	ts_enc
 2118 057a 1E       		.uleb128 0x1e
 2119 057b 55050000 		.4byte	.LASF78
 2120 057f 05       		.byte	0x5
 2121 0580 12       		.byte	0x12
 2122 0581 B6000000 		.4byte	0xb6
 2123 0585 05       		.uleb128 0x5
 2124 0586 03       		.byte	0x3
 2125 0587 00000000 		.4byte	ts_update
 2126 058b 1E       		.uleb128 0x1e
 2127 058c EA040000 		.4byte	.LASF79
 2128 0590 05       		.byte	0x5
 2129 0591 13       		.byte	0x13
 2130 0592 B6000000 		.4byte	0xb6
 2131 0596 05       		.uleb128 0x5
 2132 0597 03       		.byte	0x3
 2133 0598 00000000 		.4byte	ts_speed
 2134 059c 1E       		.uleb128 0x1e
 2135 059d 40050000 		.4byte	.LASF80
 2136 05a1 05       		.byte	0x5
 2137 05a2 14       		.byte	0x14
 2138 05a3 B6000000 		.4byte	0xb6
 2139 05a7 05       		.uleb128 0x5
 2140 05a8 03       		.byte	0x3
 2141 05a9 00000000 		.4byte	ts_display
 2142 05ad 1E       		.uleb128 0x1e
 2143 05ae F9040000 		.4byte	.LASF81
 2144 05b2 05       		.byte	0x5
 2145 05b3 16       		.byte	0x16
 2146 05b4 AA000000 		.4byte	0xaa
 2147 05b8 05       		.uleb128 0x5
 2148 05b9 03       		.byte	0x3
 2149 05ba 00000000 		.4byte	flag_ts_enc
 2150 05be 1E       		.uleb128 0x1e
 2151 05bf A6020000 		.4byte	.LASF82
 2152 05c3 05       		.byte	0x5
 2153 05c4 17       		.byte	0x17
 2154 05c5 AA000000 		.4byte	0xaa
 2155 05c9 05       		.uleb128 0x5
 2156 05ca 03       		.byte	0x3
 2157 05cb 00000000 		.4byte	flag_ts_update
 2158 05cf 1E       		.uleb128 0x1e
 2159 05d0 A4040000 		.4byte	.LASF83
 2160 05d4 05       		.byte	0x5
 2161 05d5 18       		.byte	0x18
 2162 05d6 AA000000 		.4byte	0xaa
 2163 05da 05       		.uleb128 0x5
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 49


 2164 05db 03       		.byte	0x3
 2165 05dc 00000000 		.4byte	flag_ts_speed
 2166 05e0 1E       		.uleb128 0x1e
 2167 05e1 26030000 		.4byte	.LASF84
 2168 05e5 05       		.byte	0x5
 2169 05e6 19       		.byte	0x19
 2170 05e7 AA000000 		.4byte	0xaa
 2171 05eb 05       		.uleb128 0x5
 2172 05ec 03       		.byte	0x3
 2173 05ed 00000000 		.4byte	flag_ts_display
 2174 05f1 1E       		.uleb128 0x1e
 2175 05f2 36030000 		.4byte	.LASF85
 2176 05f6 05       		.byte	0x5
 2177 05f7 1C       		.byte	0x1c
 2178 05f8 AA000000 		.4byte	0xaa
 2179 05fc 05       		.uleb128 0x5
 2180 05fd 03       		.byte	0x3
 2181 05fe 00000000 		.4byte	flag_rx
 2182 0602 1E       		.uleb128 0x1e
 2183 0603 30000000 		.4byte	.LASF86
 2184 0607 05       		.byte	0x5
 2185 0608 1D       		.byte	0x1d
 2186 0609 AA000000 		.4byte	0xaa
 2187 060d 05       		.uleb128 0x5
 2188 060e 03       		.byte	0x3
 2189 060f 00000000 		.4byte	flag_packet
 2190 0613 1E       		.uleb128 0x1e
 2191 0614 EA030000 		.4byte	.LASF87
 2192 0618 05       		.byte	0x5
 2193 0619 1E       		.byte	0x1e
 2194 061a AA000000 		.4byte	0xaa
 2195 061e 05       		.uleb128 0x5
 2196 061f 03       		.byte	0x3
 2197 0620 00000000 		.4byte	flag_KB_string
 2198 0624 1E       		.uleb128 0x1e
 2199 0625 9F030000 		.4byte	.LASF88
 2200 0629 05       		.byte	0x5
 2201 062a 20       		.byte	0x20
 2202 062b AA000000 		.4byte	0xaa
 2203 062f 05       		.uleb128 0x5
 2204 0630 03       		.byte	0x3
 2205 0631 00000000 		.4byte	dataready_flag
 2206 0635 1E       		.uleb128 0x1e
 2207 0636 6A050000 		.4byte	.LASF89
 2208 063a 05       		.byte	0x5
 2209 063b 22       		.byte	0x22
 2210 063c AA000000 		.4byte	0xaa
 2211 0640 05       		.uleb128 0x5
 2212 0641 03       		.byte	0x3
 2213 0642 00000000 		.4byte	flag_rf_transmission_active
 2214 0646 0F       		.uleb128 0xf
 2215 0647 8A000000 		.4byte	0x8a
 2216 064b 56060000 		.4byte	0x656
 2217 064f 1F       		.uleb128 0x1f
 2218 0650 7D000000 		.4byte	0x7d
 2219 0654 3F       		.byte	0x3f
 2220 0655 00       		.byte	0
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 50


 2221 0656 1E       		.uleb128 0x1e
 2222 0657 96040000 		.4byte	.LASF90
 2223 065b 05       		.byte	0x5
 2224 065c 25       		.byte	0x25
 2225 065d 46060000 		.4byte	0x646
 2226 0661 05       		.uleb128 0x5
 2227 0662 03       		.byte	0x3
 2228 0663 00000000 		.4byte	displaystring
 2229 0667 1E       		.uleb128 0x1e
 2230 0668 21030000 		.4byte	.LASF91
 2231 066c 05       		.byte	0x5
 2232 066d 26       		.byte	0x26
 2233 066e 46060000 		.4byte	0x646
 2234 0672 05       		.uleb128 0x5
 2235 0673 03       		.byte	0x3
 2236 0674 00000000 		.4byte	line
 2237 0678 1E       		.uleb128 0x1e
 2238 0679 5C030000 		.4byte	.LASF92
 2239 067d 05       		.byte	0x5
 2240 067e 26       		.byte	0x26
 2241 067f 46060000 		.4byte	0x646
 2242 0683 05       		.uleb128 0x5
 2243 0684 03       		.byte	0x3
 2244 0685 00000000 		.4byte	entry
 2245 0689 0F       		.uleb128 0xf
 2246 068a AA000000 		.4byte	0xaa
 2247 068e 99060000 		.4byte	0x699
 2248 0692 1F       		.uleb128 0x1f
 2249 0693 7D000000 		.4byte	0x7d
 2250 0697 3F       		.byte	0x3f
 2251 0698 00       		.byte	0
 2252 0699 1E       		.uleb128 0x1e
 2253 069a AB000000 		.4byte	.LASF93
 2254 069e 05       		.byte	0x5
 2255 069f 27       		.byte	0x27
 2256 06a0 89060000 		.4byte	0x689
 2257 06a4 05       		.uleb128 0x5
 2258 06a5 03       		.byte	0x3
 2259 06a6 00000000 		.4byte	usbBuffer
 2260 06aa 1E       		.uleb128 0x1e
 2261 06ab 95000000 		.4byte	.LASF94
 2262 06af 05       		.byte	0x5
 2263 06b0 3C       		.byte	0x3c
 2264 06b1 DA000000 		.4byte	0xda
 2265 06b5 05       		.uleb128 0x5
 2266 06b6 03       		.byte	0x3
 2267 06b7 00000000 		.4byte	system_state
 2268 06bb 1E       		.uleb128 0x1e
 2269 06bc 48020000 		.4byte	.LASF95
 2270 06c0 01       		.byte	0x1
 2271 06c1 6C       		.byte	0x6c
 2272 06c2 68000000 		.4byte	0x68
 2273 06c6 05       		.uleb128 0x5
 2274 06c7 03       		.byte	0x3
 2275 06c8 00000000 		.4byte	changeMotor
 2276 06cc 1E       		.uleb128 0x1e
 2277 06cd 78000000 		.4byte	.LASF96
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 51


 2278 06d1 01       		.byte	0x1
 2279 06d2 6D       		.byte	0x6d
 2280 06d3 68000000 		.4byte	0x68
 2281 06d7 05       		.uleb128 0x5
 2282 06d8 03       		.byte	0x3
 2283 06d9 00000000 		.4byte	checkLight
 2284 06dd 1E       		.uleb128 0x1e
 2285 06de 81010000 		.4byte	.LASF97
 2286 06e2 01       		.byte	0x1
 2287 06e3 6E       		.byte	0x6e
 2288 06e4 68000000 		.4byte	0x68
 2289 06e8 05       		.uleb128 0x5
 2290 06e9 03       		.byte	0x3
 2291 06ea 00000000 		.4byte	lightState
 2292 06ee 0F       		.uleb128 0xf
 2293 06ef FE060000 		.4byte	0x6fe
 2294 06f3 FE060000 		.4byte	0x6fe
 2295 06f7 1F       		.uleb128 0x1f
 2296 06f8 7D000000 		.4byte	0x7d
 2297 06fc 02       		.byte	0x2
 2298 06fd 00       		.byte	0
 2299 06fe 1B       		.uleb128 0x1b
 2300 06ff 68000000 		.4byte	0x68
 2301 0703 1E       		.uleb128 0x1e
 2302 0704 83030000 		.4byte	.LASF98
 2303 0708 01       		.byte	0x1
 2304 0709 6F       		.byte	0x6f
 2305 070a 14070000 		.4byte	0x714
 2306 070e 05       		.uleb128 0x5
 2307 070f 03       		.byte	0x3
 2308 0710 00000000 		.4byte	lightDetectedFront
 2309 0714 1B       		.uleb128 0x1b
 2310 0715 EE060000 		.4byte	0x6ee
 2311 0719 1E       		.uleb128 0x1e
 2312 071a 54020000 		.4byte	.LASF99
 2313 071e 01       		.byte	0x1
 2314 071f 70       		.byte	0x70
 2315 0720 2A070000 		.4byte	0x72a
 2316 0724 05       		.uleb128 0x5
 2317 0725 03       		.byte	0x3
 2318 0726 00000000 		.4byte	lightDetectedBack
 2319 072a 1B       		.uleb128 0x1b
 2320 072b EE060000 		.4byte	0x6ee
 2321 072f 1E       		.uleb128 0x1e
 2322 0730 47000000 		.4byte	.LASF100
 2323 0734 01       		.byte	0x1
 2324 0735 71       		.byte	0x71
 2325 0736 FE060000 		.4byte	0x6fe
 2326 073a 05       		.uleb128 0x5
 2327 073b 03       		.byte	0x3
 2328 073c 00000000 		.4byte	counteoc
 2329 0740 1E       		.uleb128 0x1e
 2330 0741 12030000 		.4byte	.LASF101
 2331 0745 01       		.byte	0x1
 2332 0746 72       		.byte	0x72
 2333 0747 FE060000 		.4byte	0x6fe
 2334 074b 05       		.uleb128 0x5
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 52


 2335 074c 03       		.byte	0x3
 2336 074d 00000000 		.4byte	processSensors
 2337 0751 1E       		.uleb128 0x1e
 2338 0752 CD050000 		.4byte	.LASF102
 2339 0756 01       		.byte	0x1
 2340 0757 73       		.byte	0x73
 2341 0758 FE060000 		.4byte	0x6fe
 2342 075c 05       		.uleb128 0x5
 2343 075d 03       		.byte	0x3
 2344 075e 00000000 		.4byte	middle
 2345 0762 00       		.byte	0
 2346              		.section	.debug_abbrev,"",%progbits
 2347              	.Ldebug_abbrev0:
 2348 0000 01       		.uleb128 0x1
 2349 0001 11       		.uleb128 0x11
 2350 0002 01       		.byte	0x1
 2351 0003 25       		.uleb128 0x25
 2352 0004 0E       		.uleb128 0xe
 2353 0005 13       		.uleb128 0x13
 2354 0006 0B       		.uleb128 0xb
 2355 0007 03       		.uleb128 0x3
 2356 0008 0E       		.uleb128 0xe
 2357 0009 1B       		.uleb128 0x1b
 2358 000a 0E       		.uleb128 0xe
 2359 000b 55       		.uleb128 0x55
 2360 000c 17       		.uleb128 0x17
 2361 000d 11       		.uleb128 0x11
 2362 000e 01       		.uleb128 0x1
 2363 000f 10       		.uleb128 0x10
 2364 0010 17       		.uleb128 0x17
 2365 0011 00       		.byte	0
 2366 0012 00       		.byte	0
 2367 0013 02       		.uleb128 0x2
 2368 0014 24       		.uleb128 0x24
 2369 0015 00       		.byte	0
 2370 0016 0B       		.uleb128 0xb
 2371 0017 0B       		.uleb128 0xb
 2372 0018 3E       		.uleb128 0x3e
 2373 0019 0B       		.uleb128 0xb
 2374 001a 03       		.uleb128 0x3
 2375 001b 0E       		.uleb128 0xe
 2376 001c 00       		.byte	0
 2377 001d 00       		.byte	0
 2378 001e 03       		.uleb128 0x3
 2379 001f 16       		.uleb128 0x16
 2380 0020 00       		.byte	0
 2381 0021 03       		.uleb128 0x3
 2382 0022 0E       		.uleb128 0xe
 2383 0023 3A       		.uleb128 0x3a
 2384 0024 0B       		.uleb128 0xb
 2385 0025 3B       		.uleb128 0x3b
 2386 0026 0B       		.uleb128 0xb
 2387 0027 49       		.uleb128 0x49
 2388 0028 13       		.uleb128 0x13
 2389 0029 00       		.byte	0
 2390 002a 00       		.byte	0
 2391 002b 04       		.uleb128 0x4
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 53


 2392 002c 24       		.uleb128 0x24
 2393 002d 00       		.byte	0
 2394 002e 0B       		.uleb128 0xb
 2395 002f 0B       		.uleb128 0xb
 2396 0030 3E       		.uleb128 0x3e
 2397 0031 0B       		.uleb128 0xb
 2398 0032 03       		.uleb128 0x3
 2399 0033 08       		.uleb128 0x8
 2400 0034 00       		.byte	0
 2401 0035 00       		.byte	0
 2402 0036 05       		.uleb128 0x5
 2403 0037 0F       		.uleb128 0xf
 2404 0038 00       		.byte	0
 2405 0039 0B       		.uleb128 0xb
 2406 003a 0B       		.uleb128 0xb
 2407 003b 49       		.uleb128 0x49
 2408 003c 13       		.uleb128 0x13
 2409 003d 00       		.byte	0
 2410 003e 00       		.byte	0
 2411 003f 06       		.uleb128 0x6
 2412 0040 16       		.uleb128 0x16
 2413 0041 00       		.byte	0
 2414 0042 03       		.uleb128 0x3
 2415 0043 0E       		.uleb128 0xe
 2416 0044 3A       		.uleb128 0x3a
 2417 0045 0B       		.uleb128 0xb
 2418 0046 3B       		.uleb128 0x3b
 2419 0047 05       		.uleb128 0x5
 2420 0048 49       		.uleb128 0x49
 2421 0049 13       		.uleb128 0x13
 2422 004a 00       		.byte	0
 2423 004b 00       		.byte	0
 2424 004c 07       		.uleb128 0x7
 2425 004d 13       		.uleb128 0x13
 2426 004e 01       		.byte	0x1
 2427 004f 03       		.uleb128 0x3
 2428 0050 0E       		.uleb128 0xe
 2429 0051 0B       		.uleb128 0xb
 2430 0052 0B       		.uleb128 0xb
 2431 0053 3A       		.uleb128 0x3a
 2432 0054 0B       		.uleb128 0xb
 2433 0055 3B       		.uleb128 0x3b
 2434 0056 0B       		.uleb128 0xb
 2435 0057 01       		.uleb128 0x1
 2436 0058 13       		.uleb128 0x13
 2437 0059 00       		.byte	0
 2438 005a 00       		.byte	0
 2439 005b 08       		.uleb128 0x8
 2440 005c 0D       		.uleb128 0xd
 2441 005d 00       		.byte	0
 2442 005e 03       		.uleb128 0x3
 2443 005f 0E       		.uleb128 0xe
 2444 0060 3A       		.uleb128 0x3a
 2445 0061 0B       		.uleb128 0xb
 2446 0062 3B       		.uleb128 0x3b
 2447 0063 0B       		.uleb128 0xb
 2448 0064 49       		.uleb128 0x49
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 54


 2449 0065 13       		.uleb128 0x13
 2450 0066 38       		.uleb128 0x38
 2451 0067 0B       		.uleb128 0xb
 2452 0068 00       		.byte	0
 2453 0069 00       		.byte	0
 2454 006a 09       		.uleb128 0x9
 2455 006b 2E       		.uleb128 0x2e
 2456 006c 00       		.byte	0
 2457 006d 3F       		.uleb128 0x3f
 2458 006e 19       		.uleb128 0x19
 2459 006f 03       		.uleb128 0x3
 2460 0070 0E       		.uleb128 0xe
 2461 0071 3A       		.uleb128 0x3a
 2462 0072 0B       		.uleb128 0xb
 2463 0073 3B       		.uleb128 0x3b
 2464 0074 0B       		.uleb128 0xb
 2465 0075 11       		.uleb128 0x11
 2466 0076 01       		.uleb128 0x1
 2467 0077 12       		.uleb128 0x12
 2468 0078 06       		.uleb128 0x6
 2469 0079 40       		.uleb128 0x40
 2470 007a 18       		.uleb128 0x18
 2471 007b 9642     		.uleb128 0x2116
 2472 007d 19       		.uleb128 0x19
 2473 007e 00       		.byte	0
 2474 007f 00       		.byte	0
 2475 0080 0A       		.uleb128 0xa
 2476 0081 2E       		.uleb128 0x2e
 2477 0082 01       		.byte	0x1
 2478 0083 3F       		.uleb128 0x3f
 2479 0084 19       		.uleb128 0x19
 2480 0085 03       		.uleb128 0x3
 2481 0086 0E       		.uleb128 0xe
 2482 0087 3A       		.uleb128 0x3a
 2483 0088 0B       		.uleb128 0xb
 2484 0089 3B       		.uleb128 0x3b
 2485 008a 0B       		.uleb128 0xb
 2486 008b 27       		.uleb128 0x27
 2487 008c 19       		.uleb128 0x19
 2488 008d 11       		.uleb128 0x11
 2489 008e 01       		.uleb128 0x1
 2490 008f 12       		.uleb128 0x12
 2491 0090 06       		.uleb128 0x6
 2492 0091 40       		.uleb128 0x40
 2493 0092 18       		.uleb128 0x18
 2494 0093 9642     		.uleb128 0x2116
 2495 0095 19       		.uleb128 0x19
 2496 0096 01       		.uleb128 0x1
 2497 0097 13       		.uleb128 0x13
 2498 0098 00       		.byte	0
 2499 0099 00       		.byte	0
 2500 009a 0B       		.uleb128 0xb
 2501 009b 05       		.uleb128 0x5
 2502 009c 00       		.byte	0
 2503 009d 03       		.uleb128 0x3
 2504 009e 08       		.uleb128 0x8
 2505 009f 3A       		.uleb128 0x3a
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 55


 2506 00a0 0B       		.uleb128 0xb
 2507 00a1 3B       		.uleb128 0x3b
 2508 00a2 0B       		.uleb128 0xb
 2509 00a3 49       		.uleb128 0x49
 2510 00a4 13       		.uleb128 0x13
 2511 00a5 02       		.uleb128 0x2
 2512 00a6 18       		.uleb128 0x18
 2513 00a7 00       		.byte	0
 2514 00a8 00       		.byte	0
 2515 00a9 0C       		.uleb128 0xc
 2516 00aa 34       		.uleb128 0x34
 2517 00ab 00       		.byte	0
 2518 00ac 03       		.uleb128 0x3
 2519 00ad 0E       		.uleb128 0xe
 2520 00ae 3A       		.uleb128 0x3a
 2521 00af 0B       		.uleb128 0xb
 2522 00b0 3B       		.uleb128 0x3b
 2523 00b1 0B       		.uleb128 0xb
 2524 00b2 49       		.uleb128 0x49
 2525 00b3 13       		.uleb128 0x13
 2526 00b4 02       		.uleb128 0x2
 2527 00b5 18       		.uleb128 0x18
 2528 00b6 00       		.byte	0
 2529 00b7 00       		.byte	0
 2530 00b8 0D       		.uleb128 0xd
 2531 00b9 2E       		.uleb128 0x2e
 2532 00ba 00       		.byte	0
 2533 00bb 3F       		.uleb128 0x3f
 2534 00bc 19       		.uleb128 0x19
 2535 00bd 03       		.uleb128 0x3
 2536 00be 0E       		.uleb128 0xe
 2537 00bf 3A       		.uleb128 0x3a
 2538 00c0 0B       		.uleb128 0xb
 2539 00c1 3B       		.uleb128 0x3b
 2540 00c2 0B       		.uleb128 0xb
 2541 00c3 27       		.uleb128 0x27
 2542 00c4 19       		.uleb128 0x19
 2543 00c5 11       		.uleb128 0x11
 2544 00c6 01       		.uleb128 0x1
 2545 00c7 12       		.uleb128 0x12
 2546 00c8 06       		.uleb128 0x6
 2547 00c9 40       		.uleb128 0x40
 2548 00ca 18       		.uleb128 0x18
 2549 00cb 9742     		.uleb128 0x2117
 2550 00cd 19       		.uleb128 0x19
 2551 00ce 00       		.byte	0
 2552 00cf 00       		.byte	0
 2553 00d0 0E       		.uleb128 0xe
 2554 00d1 2E       		.uleb128 0x2e
 2555 00d2 01       		.byte	0x1
 2556 00d3 3F       		.uleb128 0x3f
 2557 00d4 19       		.uleb128 0x19
 2558 00d5 03       		.uleb128 0x3
 2559 00d6 0E       		.uleb128 0xe
 2560 00d7 3A       		.uleb128 0x3a
 2561 00d8 0B       		.uleb128 0xb
 2562 00d9 3B       		.uleb128 0x3b
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 56


 2563 00da 0B       		.uleb128 0xb
 2564 00db 11       		.uleb128 0x11
 2565 00dc 01       		.uleb128 0x1
 2566 00dd 12       		.uleb128 0x12
 2567 00de 06       		.uleb128 0x6
 2568 00df 40       		.uleb128 0x40
 2569 00e0 18       		.uleb128 0x18
 2570 00e1 9642     		.uleb128 0x2116
 2571 00e3 19       		.uleb128 0x19
 2572 00e4 01       		.uleb128 0x1
 2573 00e5 13       		.uleb128 0x13
 2574 00e6 00       		.byte	0
 2575 00e7 00       		.byte	0
 2576 00e8 0F       		.uleb128 0xf
 2577 00e9 01       		.uleb128 0x1
 2578 00ea 01       		.byte	0x1
 2579 00eb 49       		.uleb128 0x49
 2580 00ec 13       		.uleb128 0x13
 2581 00ed 01       		.uleb128 0x1
 2582 00ee 13       		.uleb128 0x13
 2583 00ef 00       		.byte	0
 2584 00f0 00       		.byte	0
 2585 00f1 10       		.uleb128 0x10
 2586 00f2 21       		.uleb128 0x21
 2587 00f3 00       		.byte	0
 2588 00f4 49       		.uleb128 0x49
 2589 00f5 13       		.uleb128 0x13
 2590 00f6 2F       		.uleb128 0x2f
 2591 00f7 05       		.uleb128 0x5
 2592 00f8 00       		.byte	0
 2593 00f9 00       		.byte	0
 2594 00fa 11       		.uleb128 0x11
 2595 00fb 05       		.uleb128 0x5
 2596 00fc 00       		.byte	0
 2597 00fd 03       		.uleb128 0x3
 2598 00fe 0E       		.uleb128 0xe
 2599 00ff 3A       		.uleb128 0x3a
 2600 0100 0B       		.uleb128 0xb
 2601 0101 3B       		.uleb128 0x3b
 2602 0102 0B       		.uleb128 0xb
 2603 0103 49       		.uleb128 0x49
 2604 0104 13       		.uleb128 0x13
 2605 0105 02       		.uleb128 0x2
 2606 0106 18       		.uleb128 0x18
 2607 0107 00       		.byte	0
 2608 0108 00       		.byte	0
 2609 0109 12       		.uleb128 0x12
 2610 010a 2E       		.uleb128 0x2e
 2611 010b 00       		.byte	0
 2612 010c 3F       		.uleb128 0x3f
 2613 010d 19       		.uleb128 0x19
 2614 010e 03       		.uleb128 0x3
 2615 010f 0E       		.uleb128 0xe
 2616 0110 3A       		.uleb128 0x3a
 2617 0111 0B       		.uleb128 0xb
 2618 0112 3B       		.uleb128 0x3b
 2619 0113 0B       		.uleb128 0xb
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 57


 2620 0114 27       		.uleb128 0x27
 2621 0115 19       		.uleb128 0x19
 2622 0116 11       		.uleb128 0x11
 2623 0117 01       		.uleb128 0x1
 2624 0118 12       		.uleb128 0x12
 2625 0119 06       		.uleb128 0x6
 2626 011a 40       		.uleb128 0x40
 2627 011b 18       		.uleb128 0x18
 2628 011c 9642     		.uleb128 0x2116
 2629 011e 19       		.uleb128 0x19
 2630 011f 00       		.byte	0
 2631 0120 00       		.byte	0
 2632 0121 13       		.uleb128 0x13
 2633 0122 2E       		.uleb128 0x2e
 2634 0123 01       		.byte	0x1
 2635 0124 3F       		.uleb128 0x3f
 2636 0125 19       		.uleb128 0x19
 2637 0126 03       		.uleb128 0x3
 2638 0127 0E       		.uleb128 0xe
 2639 0128 3A       		.uleb128 0x3a
 2640 0129 0B       		.uleb128 0xb
 2641 012a 3B       		.uleb128 0x3b
 2642 012b 0B       		.uleb128 0xb
 2643 012c 49       		.uleb128 0x49
 2644 012d 13       		.uleb128 0x13
 2645 012e 11       		.uleb128 0x11
 2646 012f 01       		.uleb128 0x1
 2647 0130 12       		.uleb128 0x12
 2648 0131 06       		.uleb128 0x6
 2649 0132 40       		.uleb128 0x40
 2650 0133 18       		.uleb128 0x18
 2651 0134 9642     		.uleb128 0x2116
 2652 0136 19       		.uleb128 0x19
 2653 0137 01       		.uleb128 0x1
 2654 0138 13       		.uleb128 0x13
 2655 0139 00       		.byte	0
 2656 013a 00       		.byte	0
 2657 013b 14       		.uleb128 0x14
 2658 013c 34       		.uleb128 0x34
 2659 013d 00       		.byte	0
 2660 013e 03       		.uleb128 0x3
 2661 013f 0E       		.uleb128 0xe
 2662 0140 3A       		.uleb128 0x3a
 2663 0141 0B       		.uleb128 0xb
 2664 0142 3B       		.uleb128 0x3b
 2665 0143 05       		.uleb128 0x5
 2666 0144 49       		.uleb128 0x49
 2667 0145 13       		.uleb128 0x13
 2668 0146 02       		.uleb128 0x2
 2669 0147 18       		.uleb128 0x18
 2670 0148 00       		.byte	0
 2671 0149 00       		.byte	0
 2672 014a 15       		.uleb128 0x15
 2673 014b 0B       		.uleb128 0xb
 2674 014c 01       		.byte	0x1
 2675 014d 11       		.uleb128 0x11
 2676 014e 01       		.uleb128 0x1
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 58


 2677 014f 12       		.uleb128 0x12
 2678 0150 06       		.uleb128 0x6
 2679 0151 00       		.byte	0
 2680 0152 00       		.byte	0
 2681 0153 16       		.uleb128 0x16
 2682 0154 2E       		.uleb128 0x2e
 2683 0155 01       		.byte	0x1
 2684 0156 3F       		.uleb128 0x3f
 2685 0157 19       		.uleb128 0x19
 2686 0158 03       		.uleb128 0x3
 2687 0159 0E       		.uleb128 0xe
 2688 015a 3A       		.uleb128 0x3a
 2689 015b 0B       		.uleb128 0xb
 2690 015c 3B       		.uleb128 0x3b
 2691 015d 05       		.uleb128 0x5
 2692 015e 49       		.uleb128 0x49
 2693 015f 13       		.uleb128 0x13
 2694 0160 11       		.uleb128 0x11
 2695 0161 01       		.uleb128 0x1
 2696 0162 12       		.uleb128 0x12
 2697 0163 06       		.uleb128 0x6
 2698 0164 40       		.uleb128 0x40
 2699 0165 18       		.uleb128 0x18
 2700 0166 9742     		.uleb128 0x2117
 2701 0168 19       		.uleb128 0x19
 2702 0169 01       		.uleb128 0x1
 2703 016a 13       		.uleb128 0x13
 2704 016b 00       		.byte	0
 2705 016c 00       		.byte	0
 2706 016d 17       		.uleb128 0x17
 2707 016e 34       		.uleb128 0x34
 2708 016f 00       		.byte	0
 2709 0170 03       		.uleb128 0x3
 2710 0171 08       		.uleb128 0x8
 2711 0172 3A       		.uleb128 0x3a
 2712 0173 0B       		.uleb128 0xb
 2713 0174 3B       		.uleb128 0x3b
 2714 0175 05       		.uleb128 0x5
 2715 0176 49       		.uleb128 0x49
 2716 0177 13       		.uleb128 0x13
 2717 0178 02       		.uleb128 0x2
 2718 0179 18       		.uleb128 0x18
 2719 017a 00       		.byte	0
 2720 017b 00       		.byte	0
 2721 017c 18       		.uleb128 0x18
 2722 017d 2E       		.uleb128 0x2e
 2723 017e 01       		.byte	0x1
 2724 017f 3F       		.uleb128 0x3f
 2725 0180 19       		.uleb128 0x19
 2726 0181 03       		.uleb128 0x3
 2727 0182 0E       		.uleb128 0xe
 2728 0183 3A       		.uleb128 0x3a
 2729 0184 0B       		.uleb128 0xb
 2730 0185 3B       		.uleb128 0x3b
 2731 0186 05       		.uleb128 0x5
 2732 0187 27       		.uleb128 0x27
 2733 0188 19       		.uleb128 0x19
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 59


 2734 0189 11       		.uleb128 0x11
 2735 018a 01       		.uleb128 0x1
 2736 018b 12       		.uleb128 0x12
 2737 018c 06       		.uleb128 0x6
 2738 018d 40       		.uleb128 0x40
 2739 018e 18       		.uleb128 0x18
 2740 018f 9642     		.uleb128 0x2116
 2741 0191 19       		.uleb128 0x19
 2742 0192 01       		.uleb128 0x1
 2743 0193 13       		.uleb128 0x13
 2744 0194 00       		.byte	0
 2745 0195 00       		.byte	0
 2746 0196 19       		.uleb128 0x19
 2747 0197 05       		.uleb128 0x5
 2748 0198 00       		.byte	0
 2749 0199 03       		.uleb128 0x3
 2750 019a 08       		.uleb128 0x8
 2751 019b 3A       		.uleb128 0x3a
 2752 019c 0B       		.uleb128 0xb
 2753 019d 3B       		.uleb128 0x3b
 2754 019e 05       		.uleb128 0x5
 2755 019f 49       		.uleb128 0x49
 2756 01a0 13       		.uleb128 0x13
 2757 01a1 02       		.uleb128 0x2
 2758 01a2 18       		.uleb128 0x18
 2759 01a3 00       		.byte	0
 2760 01a4 00       		.byte	0
 2761 01a5 1A       		.uleb128 0x1a
 2762 01a6 2E       		.uleb128 0x2e
 2763 01a7 01       		.byte	0x1
 2764 01a8 3F       		.uleb128 0x3f
 2765 01a9 19       		.uleb128 0x19
 2766 01aa 03       		.uleb128 0x3
 2767 01ab 0E       		.uleb128 0xe
 2768 01ac 3A       		.uleb128 0x3a
 2769 01ad 0B       		.uleb128 0xb
 2770 01ae 3B       		.uleb128 0x3b
 2771 01af 05       		.uleb128 0x5
 2772 01b0 11       		.uleb128 0x11
 2773 01b1 01       		.uleb128 0x1
 2774 01b2 12       		.uleb128 0x12
 2775 01b3 06       		.uleb128 0x6
 2776 01b4 40       		.uleb128 0x40
 2777 01b5 18       		.uleb128 0x18
 2778 01b6 9642     		.uleb128 0x2116
 2779 01b8 19       		.uleb128 0x19
 2780 01b9 01       		.uleb128 0x1
 2781 01ba 13       		.uleb128 0x13
 2782 01bb 00       		.byte	0
 2783 01bc 00       		.byte	0
 2784 01bd 1B       		.uleb128 0x1b
 2785 01be 35       		.uleb128 0x35
 2786 01bf 00       		.byte	0
 2787 01c0 49       		.uleb128 0x49
 2788 01c1 13       		.uleb128 0x13
 2789 01c2 00       		.byte	0
 2790 01c3 00       		.byte	0
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 60


 2791 01c4 1C       		.uleb128 0x1c
 2792 01c5 34       		.uleb128 0x34
 2793 01c6 00       		.byte	0
 2794 01c7 03       		.uleb128 0x3
 2795 01c8 0E       		.uleb128 0xe
 2796 01c9 3A       		.uleb128 0x3a
 2797 01ca 0B       		.uleb128 0xb
 2798 01cb 3B       		.uleb128 0x3b
 2799 01cc 05       		.uleb128 0x5
 2800 01cd 49       		.uleb128 0x49
 2801 01ce 13       		.uleb128 0x13
 2802 01cf 3F       		.uleb128 0x3f
 2803 01d0 19       		.uleb128 0x19
 2804 01d1 3C       		.uleb128 0x3c
 2805 01d2 19       		.uleb128 0x19
 2806 01d3 00       		.byte	0
 2807 01d4 00       		.byte	0
 2808 01d5 1D       		.uleb128 0x1d
 2809 01d6 34       		.uleb128 0x34
 2810 01d7 00       		.byte	0
 2811 01d8 03       		.uleb128 0x3
 2812 01d9 08       		.uleb128 0x8
 2813 01da 3A       		.uleb128 0x3a
 2814 01db 0B       		.uleb128 0xb
 2815 01dc 3B       		.uleb128 0x3b
 2816 01dd 0B       		.uleb128 0xb
 2817 01de 49       		.uleb128 0x49
 2818 01df 13       		.uleb128 0x13
 2819 01e0 3F       		.uleb128 0x3f
 2820 01e1 19       		.uleb128 0x19
 2821 01e2 02       		.uleb128 0x2
 2822 01e3 18       		.uleb128 0x18
 2823 01e4 00       		.byte	0
 2824 01e5 00       		.byte	0
 2825 01e6 1E       		.uleb128 0x1e
 2826 01e7 34       		.uleb128 0x34
 2827 01e8 00       		.byte	0
 2828 01e9 03       		.uleb128 0x3
 2829 01ea 0E       		.uleb128 0xe
 2830 01eb 3A       		.uleb128 0x3a
 2831 01ec 0B       		.uleb128 0xb
 2832 01ed 3B       		.uleb128 0x3b
 2833 01ee 0B       		.uleb128 0xb
 2834 01ef 49       		.uleb128 0x49
 2835 01f0 13       		.uleb128 0x13
 2836 01f1 3F       		.uleb128 0x3f
 2837 01f2 19       		.uleb128 0x19
 2838 01f3 02       		.uleb128 0x2
 2839 01f4 18       		.uleb128 0x18
 2840 01f5 00       		.byte	0
 2841 01f6 00       		.byte	0
 2842 01f7 1F       		.uleb128 0x1f
 2843 01f8 21       		.uleb128 0x21
 2844 01f9 00       		.byte	0
 2845 01fa 49       		.uleb128 0x49
 2846 01fb 13       		.uleb128 0x13
 2847 01fc 2F       		.uleb128 0x2f
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 61


 2848 01fd 0B       		.uleb128 0xb
 2849 01fe 00       		.byte	0
 2850 01ff 00       		.byte	0
 2851 0200 00       		.byte	0
 2852              		.section	.debug_aranges,"",%progbits
 2853 0000 A4000000 		.4byte	0xa4
 2854 0004 0200     		.2byte	0x2
 2855 0006 00000000 		.4byte	.Ldebug_info0
 2856 000a 04       		.byte	0x4
 2857 000b 00       		.byte	0
 2858 000c 0000     		.2byte	0
 2859 000e 0000     		.2byte	0
 2860 0010 00000000 		.4byte	.LFB64
 2861 0014 14000000 		.4byte	.LFE64-.LFB64
 2862 0018 00000000 		.4byte	.LFB65
 2863 001c 2E000000 		.4byte	.LFE65-.LFB65
 2864 0020 00000000 		.4byte	.LFB66
 2865 0024 14000000 		.4byte	.LFE66-.LFB66
 2866 0028 00000000 		.4byte	.LFB67
 2867 002c 14000000 		.4byte	.LFE67-.LFB67
 2868 0030 00000000 		.4byte	.LFB68
 2869 0034 20000000 		.4byte	.LFE68-.LFB68
 2870 0038 00000000 		.4byte	.LFB69
 2871 003c 20000000 		.4byte	.LFE69-.LFB69
 2872 0040 00000000 		.4byte	.LFB70
 2873 0044 2A000000 		.4byte	.LFE70-.LFB70
 2874 0048 00000000 		.4byte	.LFB71
 2875 004c E0000000 		.4byte	.LFE71-.LFB71
 2876 0050 00000000 		.4byte	.LFB72
 2877 0054 0C000000 		.4byte	.LFE72-.LFB72
 2878 0058 00000000 		.4byte	.LFB73
 2879 005c C0000000 		.4byte	.LFE73-.LFB73
 2880 0060 00000000 		.4byte	.LFB74
 2881 0064 30000000 		.4byte	.LFE74-.LFB74
 2882 0068 00000000 		.4byte	.LFB75
 2883 006c 0C000000 		.4byte	.LFE75-.LFB75
 2884 0070 00000000 		.4byte	.LFB76
 2885 0074 5C010000 		.4byte	.LFE76-.LFB76
 2886 0078 00000000 		.4byte	.LFB77
 2887 007c 50000000 		.4byte	.LFE77-.LFB77
 2888 0080 00000000 		.4byte	.LFB78
 2889 0084 50000000 		.4byte	.LFE78-.LFB78
 2890 0088 00000000 		.4byte	.LFB79
 2891 008c 3E000000 		.4byte	.LFE79-.LFB79
 2892 0090 00000000 		.4byte	.LFB80
 2893 0094 26000000 		.4byte	.LFE80-.LFB80
 2894 0098 00000000 		.4byte	.LFB81
 2895 009c CC000000 		.4byte	.LFE81-.LFB81
 2896 00a0 00000000 		.4byte	0
 2897 00a4 00000000 		.4byte	0
 2898              		.section	.debug_ranges,"",%progbits
 2899              	.Ldebug_ranges0:
 2900 0000 00000000 		.4byte	.LFB64
 2901 0004 14000000 		.4byte	.LFE64
 2902 0008 00000000 		.4byte	.LFB65
 2903 000c 2E000000 		.4byte	.LFE65
 2904 0010 00000000 		.4byte	.LFB66
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 62


 2905 0014 14000000 		.4byte	.LFE66
 2906 0018 00000000 		.4byte	.LFB67
 2907 001c 14000000 		.4byte	.LFE67
 2908 0020 00000000 		.4byte	.LFB68
 2909 0024 20000000 		.4byte	.LFE68
 2910 0028 00000000 		.4byte	.LFB69
 2911 002c 20000000 		.4byte	.LFE69
 2912 0030 00000000 		.4byte	.LFB70
 2913 0034 2A000000 		.4byte	.LFE70
 2914 0038 00000000 		.4byte	.LFB71
 2915 003c E0000000 		.4byte	.LFE71
 2916 0040 00000000 		.4byte	.LFB72
 2917 0044 0C000000 		.4byte	.LFE72
 2918 0048 00000000 		.4byte	.LFB73
 2919 004c C0000000 		.4byte	.LFE73
 2920 0050 00000000 		.4byte	.LFB74
 2921 0054 30000000 		.4byte	.LFE74
 2922 0058 00000000 		.4byte	.LFB75
 2923 005c 0C000000 		.4byte	.LFE75
 2924 0060 00000000 		.4byte	.LFB76
 2925 0064 5C010000 		.4byte	.LFE76
 2926 0068 00000000 		.4byte	.LFB77
 2927 006c 50000000 		.4byte	.LFE77
 2928 0070 00000000 		.4byte	.LFB78
 2929 0074 50000000 		.4byte	.LFE78
 2930 0078 00000000 		.4byte	.LFB79
 2931 007c 3E000000 		.4byte	.LFE79
 2932 0080 00000000 		.4byte	.LFB80
 2933 0084 26000000 		.4byte	.LFE80
 2934 0088 00000000 		.4byte	.LFB81
 2935 008c CC000000 		.4byte	.LFE81
 2936 0090 00000000 		.4byte	0
 2937 0094 00000000 		.4byte	0
 2938              		.section	.debug_line,"",%progbits
 2939              	.Ldebug_line0:
 2940 0000 53030000 		.section	.debug_str,"MS",%progbits,1
 2940      02005601 
 2940      00000201 
 2940      FB0E0D00 
 2940      01010101 
 2941              	.LASF39:
 2942 0000 6D6F746F 		.ascii	"motorStop\000"
 2942      7253746F 
 2942      7000
 2943              	.LASF60:
 2944 000a 6973725F 		.ascii	"isr_TS_Interrupt_sample\000"
 2944      54535F49 
 2944      6E746572 
 2944      72757074 
 2944      5F73616D 
 2945              	.LASF77:
 2946 0022 74735F65 		.ascii	"ts_enc\000"
 2946      6E6300
 2947              	.LASF14:
 2948 0029 646F7562 		.ascii	"double\000"
 2948      6C6500
 2949              	.LASF86:
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 63


 2950 0030 666C6167 		.ascii	"flag_packet\000"
 2950      5F706163 
 2950      6B657400 
 2951              	.LASF70:
 2952 003c 75736250 		.ascii	"usbPutChar\000"
 2952      75744368 
 2952      617200
 2953              	.LASF100:
 2954 0047 636F756E 		.ascii	"counteoc\000"
 2954      74656F63 
 2954      00
 2955              	.LASF44:
 2956 0050 6973725F 		.ascii	"isr_eoc_Interrupt_test\000"
 2956      656F635F 
 2956      496E7465 
 2956      72727570 
 2956      745F7465 
 2957              	.LASF38:
 2958 0067 6D6F746F 		.ascii	"motorGoBackwards\000"
 2958      72476F42 
 2958      61636B77 
 2958      61726473 
 2958      00
 2959              	.LASF96:
 2960 0078 63686563 		.ascii	"checkLight\000"
 2960      6B4C6967 
 2960      687400
 2961              	.LASF33:
 2962 0083 67325F78 		.ascii	"g2_xpos\000"
 2962      706F7300 
 2963              	.LASF2:
 2964 008b 73686F72 		.ascii	"short int\000"
 2964      7420696E 
 2964      7400
 2965              	.LASF94:
 2966 0095 73797374 		.ascii	"system_state\000"
 2966      656D5F73 
 2966      74617465 
 2966      00
 2967              	.LASF10:
 2968 00a2 73697A65 		.ascii	"sizetype\000"
 2968      74797065 
 2968      00
 2969              	.LASF93:
 2970 00ab 75736242 		.ascii	"usbBuffer\000"
 2970      75666665 
 2970      7200
 2971              	.LASF103:
 2972 00b5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2972      43313120 
 2972      352E342E 
 2972      31203230 
 2972      31363036 
 2973 00e8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2973      20726576 
 2973      6973696F 
 2973      6E203233 
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 64


 2973      37373135 
 2974 011b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2974      66756E63 
 2974      74696F6E 
 2974      2D736563 
 2974      74696F6E 
 2975              	.LASF61:
 2976 0143 6D61696E 		.ascii	"main\000"
 2976      00
 2977              	.LASF57:
 2978 0148 6D6F746F 		.ascii	"motorRun\000"
 2978      7252756E 
 2978      00
 2979              	.LASF48:
 2980 0151 76616C75 		.ascii	"valueQ1\000"
 2980      65513100 
 2981              	.LASF49:
 2982 0159 76616C75 		.ascii	"valueQ2\000"
 2982      65513200 
 2983              	.LASF45:
 2984 0161 76616C75 		.ascii	"valueQ3\000"
 2984      65513300 
 2985              	.LASF46:
 2986 0169 76616C75 		.ascii	"valueQ4\000"
 2986      65513400 
 2987              	.LASF47:
 2988 0171 76616C75 		.ascii	"valueQ5\000"
 2988      65513500 
 2989              	.LASF50:
 2990 0179 76616C75 		.ascii	"valueQ6\000"
 2990      65513600 
 2991              	.LASF97:
 2992 0181 6C696768 		.ascii	"lightState\000"
 2992      74537461 
 2992      746500
 2993              	.LASF17:
 2994 018c 75696E74 		.ascii	"uint16\000"
 2994      313600
 2995              	.LASF21:
 2996 0193 696E6465 		.ascii	"index\000"
 2996      7800
 2997              	.LASF106:
 2998 0199 64617461 		.ascii	"data_main\000"
 2998      5F6D6169 
 2998      6E00
 2999              	.LASF19:
 3000 01a3 696E7431 		.ascii	"int16\000"
 3000      3600
 3001              	.LASF16:
 3002 01a9 75696E74 		.ascii	"uint8\000"
 3002      3800
 3003              	.LASF105:
 3004 01af 5C5C6669 		.ascii	"\\\\files.auckland.ac.nz\\myhome\\Documents\\GitHub"
 3004      6C65732E 
 3004      6175636B 
 3004      6C616E64 
 3004      2E61632E 
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 65


 3005 01dd 5C70726F 		.ascii	"\\project-project_group_11\\COMPSYS 301\\psoc stude"
 3005      6A656374 
 3005      2D70726F 
 3005      6A656374 
 3005      5F67726F 
 3006 020d 6E742070 		.ascii	"nt pack\\psoc student pack\\psoc_code_base\\CS301_C"
 3006      61636B5C 
 3006      70736F63 
 3006      20737475 
 3006      64656E74 
 3007 023d 6C617373 		.ascii	"lass.cydsn\000"
 3007      2E637964 
 3007      736E00
 3008              	.LASF95:
 3009 0248 6368616E 		.ascii	"changeMotor\000"
 3009      67654D6F 
 3009      746F7200 
 3010              	.LASF99:
 3011 0254 6C696768 		.ascii	"lightDetectedBack\000"
 3011      74446574 
 3011      65637465 
 3011      64426163 
 3011      6B00
 3012              	.LASF15:
 3013 0266 666C6F61 		.ascii	"float\000"
 3013      7400
 3014              	.LASF59:
 3015 026c 6973725F 		.ascii	"isr_motor_interrupt_speed\000"
 3015      6D6F746F 
 3015      725F696E 
 3015      74657272 
 3015      7570745F 
 3016              	.LASF6:
 3017 0286 6C6F6E67 		.ascii	"long long int\000"
 3017      206C6F6E 
 3017      6720696E 
 3017      7400
 3018              	.LASF69:
 3019 0294 75736250 		.ascii	"usbPutString\000"
 3019      75745374 
 3019      72696E67 
 3019      00
 3020              	.LASF18:
 3021 02a1 696E7438 		.ascii	"int8\000"
 3021      00
 3022              	.LASF82:
 3023 02a6 666C6167 		.ascii	"flag_ts_update\000"
 3023      5F74735F 
 3023      75706461 
 3023      746500
 3024              	.LASF34:
 3025 02b5 67325F79 		.ascii	"g2_ypos\000"
 3025      706F7300 
 3026              	.LASF28:
 3027 02bd 67305F64 		.ascii	"g0_direction\000"
 3027      69726563 
 3027      74696F6E 
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 66


 3027      00
 3028              	.LASF25:
 3029 02ca 67305F78 		.ascii	"g0_xpos\000"
 3029      706F7300 
 3030              	.LASF4:
 3031 02d2 6C6F6E67 		.ascii	"long int\000"
 3031      20696E74 
 3031      00
 3032              	.LASF51:
 3033 02db 62656769 		.ascii	"beginningCountMotor1\000"
 3033      6E6E696E 
 3033      67436F75 
 3033      6E744D6F 
 3033      746F7231 
 3034              	.LASF52:
 3035 02f0 62656769 		.ascii	"beginningCountMotor2\000"
 3035      6E6E696E 
 3035      67436F75 
 3035      6E744D6F 
 3035      746F7232 
 3036              	.LASF55:
 3037 0305 6D6F746F 		.ascii	"motor1String\000"
 3037      72315374 
 3037      72696E67 
 3037      00
 3038              	.LASF101:
 3039 0312 70726F63 		.ascii	"processSensors\000"
 3039      65737353 
 3039      656E736F 
 3039      727300
 3040              	.LASF91:
 3041 0321 6C696E65 		.ascii	"line\000"
 3041      00
 3042              	.LASF84:
 3043 0326 666C6167 		.ascii	"flag_ts_display\000"
 3043      5F74735F 
 3043      64697370 
 3043      6C617900 
 3044              	.LASF85:
 3045 0336 666C6167 		.ascii	"flag_rx\000"
 3045      5F727800 
 3046              	.LASF54:
 3047 033e 656E6443 		.ascii	"endCountMotor1\000"
 3047      6F756E74 
 3047      4D6F746F 
 3047      723100
 3048              	.LASF53:
 3049 034d 656E6443 		.ascii	"endCountMotor2\000"
 3049      6F756E74 
 3049      4D6F746F 
 3049      723200
 3050              	.LASF92:
 3051 035c 656E7472 		.ascii	"entry\000"
 3051      7900
 3052              	.LASF9:
 3053 0362 6C6F6E67 		.ascii	"long double\000"
 3053      20646F75 
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 67


 3053      626C6500 
 3054              	.LASF66:
 3055 036e 76616C75 		.ascii	"value1\000"
 3055      653100
 3056              	.LASF1:
 3057 0375 756E7369 		.ascii	"unsigned char\000"
 3057      676E6564 
 3057      20636861 
 3057      7200
 3058              	.LASF98:
 3059 0383 6C696768 		.ascii	"lightDetectedFront\000"
 3059      74446574 
 3059      65637465 
 3059      6446726F 
 3059      6E7400
 3060              	.LASF27:
 3061 0396 67305F73 		.ascii	"g0_speed\000"
 3061      70656564 
 3061      00
 3062              	.LASF88:
 3063 039f 64617461 		.ascii	"dataready_flag\000"
 3063      72656164 
 3063      795F666C 
 3063      616700
 3064              	.LASF0:
 3065 03ae 7369676E 		.ascii	"signed char\000"
 3065      65642063 
 3065      68617200 
 3066              	.LASF7:
 3067 03ba 6C6F6E67 		.ascii	"long long unsigned int\000"
 3067      206C6F6E 
 3067      6720756E 
 3067      7369676E 
 3067      65642069 
 3068              	.LASF43:
 3069 03d1 6D6F746F 		.ascii	"motorCircle\000"
 3069      72436972 
 3069      636C6500 
 3070              	.LASF8:
 3071 03dd 756E7369 		.ascii	"unsigned int\000"
 3071      676E6564 
 3071      20696E74 
 3071      00
 3072              	.LASF87:
 3073 03ea 666C6167 		.ascii	"flag_KB_string\000"
 3073      5F4B425F 
 3073      73747269 
 3073      6E6700
 3074              	.LASF74:
 3075 03f9 75736242 		.ascii	"usbBufCount\000"
 3075      7566436F 
 3075      756E7400 
 3076              	.LASF35:
 3077 0405 67325F73 		.ascii	"g2_speed\000"
 3077      70656564 
 3077      00
 3078              	.LASF58:
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 68


 3079 040e 74696D65 		.ascii	"time\000"
 3079      00
 3080              	.LASF29:
 3081 0413 67315F78 		.ascii	"g1_xpos\000"
 3081      706F7300 
 3082              	.LASF63:
 3083 041b 6F706572 		.ascii	"operation\000"
 3083      6174696F 
 3083      6E00
 3084              	.LASF65:
 3085 0425 636F6E76 		.ascii	"convertBackBinary\000"
 3085      65727442 
 3085      61636B42 
 3085      696E6172 
 3085      7900
 3086              	.LASF11:
 3087 0437 63686172 		.ascii	"char\000"
 3087      00
 3088              	.LASF22:
 3089 043c 726F626F 		.ascii	"robot_xpos\000"
 3089      745F7870 
 3089      6F7300
 3090              	.LASF13:
 3091 0447 696E7433 		.ascii	"int32_t\000"
 3091      325F7400 
 3092              	.LASF30:
 3093 044f 67315F79 		.ascii	"g1_ypos\000"
 3093      706F7300 
 3094              	.LASF36:
 3095 0457 67325F64 		.ascii	"g2_direction\000"
 3095      69726563 
 3095      74696F6E 
 3095      00
 3096              	.LASF3:
 3097 0464 73686F72 		.ascii	"short unsigned int\000"
 3097      7420756E 
 3097      7369676E 
 3097      65642069 
 3097      6E7400
 3098              	.LASF40:
 3099 0477 6D6F746F 		.ascii	"motorSetSpeed\000"
 3099      72536574 
 3099      53706565 
 3099      6400
 3100              	.LASF31:
 3101 0485 67315F73 		.ascii	"g1_speed\000"
 3101      70656564 
 3101      00
 3102              	.LASF64:
 3103 048e 6261636B 		.ascii	"backOps\000"
 3103      4F707300 
 3104              	.LASF90:
 3105 0496 64697370 		.ascii	"displaystring\000"
 3105      6C617973 
 3105      7472696E 
 3105      6700
 3106              	.LASF83:
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 69


 3107 04a4 666C6167 		.ascii	"flag_ts_speed\000"
 3107      5F74735F 
 3107      73706565 
 3107      6400
 3108              	.LASF67:
 3109 04b2 636F6E76 		.ascii	"convertSensorBinary\000"
 3109      65727453 
 3109      656E736F 
 3109      7242696E 
 3109      61727900 
 3110              	.LASF104:
 3111 04c6 6D61696E 		.ascii	"main.c\000"
 3111      2E6300
 3112              	.LASF5:
 3113 04cd 6C6F6E67 		.ascii	"long unsigned int\000"
 3113      20756E73 
 3113      69676E65 
 3113      6420696E 
 3113      7400
 3114              	.LASF73:
 3115 04df 75736253 		.ascii	"usbStarted\000"
 3115      74617274 
 3115      656400
 3116              	.LASF79:
 3117 04ea 74735F73 		.ascii	"ts_speed\000"
 3117      70656564 
 3117      00
 3118              	.LASF75:
 3119 04f3 636F756E 		.ascii	"count\000"
 3119      7400
 3120              	.LASF81:
 3121 04f9 666C6167 		.ascii	"flag_ts_enc\000"
 3121      5F74735F 
 3121      656E6300 
 3122              	.LASF12:
 3123 0505 5F5F696E 		.ascii	"__int32_t\000"
 3123      7433325F 
 3123      7400
 3124              	.LASF41:
 3125 050f 6D6F746F 		.ascii	"motorTurnLeft\000"
 3125      72547572 
 3125      6E4C6566 
 3125      7400
 3126              	.LASF37:
 3127 051d 6D6F746F 		.ascii	"motorGoStraight\000"
 3127      72476F53 
 3127      74726169 
 3127      67687400 
 3128              	.LASF71:
 3129 052d 6D6F746F 		.ascii	"motorCount\000"
 3129      72436F75 
 3129      6E7400
 3130              	.LASF26:
 3131 0538 67305F79 		.ascii	"g0_ypos\000"
 3131      706F7300 
 3132              	.LASF80:
 3133 0540 74735F64 		.ascii	"ts_display\000"
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 70


 3133      6973706C 
 3133      617900
 3134              	.LASF62:
 3135 054b 6C617374 		.ascii	"lastState\000"
 3135      53746174 
 3135      6500
 3136              	.LASF78:
 3137 0555 74735F75 		.ascii	"ts_update\000"
 3137      70646174 
 3137      6500
 3138              	.LASF72:
 3139 055f 68616E64 		.ascii	"handle_usb\000"
 3139      6C655F75 
 3139      736200
 3140              	.LASF89:
 3141 056a 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3141      5F72665F 
 3141      7472616E 
 3141      736D6973 
 3141      73696F6E 
 3142              	.LASF23:
 3143 0586 726F626F 		.ascii	"robot_ypos\000"
 3143      745F7970 
 3143      6F7300
 3144              	.LASF76:
 3145 0591 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3145      52784275 
 3145      66666572 
 3145      00
 3146              	.LASF68:
 3147 059e 76616C75 		.ascii	"value\000"
 3147      6500
 3148              	.LASF56:
 3149 05a4 6D6F746F 		.ascii	"motor2String\000"
 3149      72325374 
 3149      72696E67 
 3149      00
 3150              	.LASF32:
 3151 05b1 67315F64 		.ascii	"g1_direction\000"
 3151      69726563 
 3151      74696F6E 
 3151      00
 3152              	.LASF42:
 3153 05be 6D6F746F 		.ascii	"motorTurnRight\000"
 3153      72547572 
 3153      6E526967 
 3153      687400
 3154              	.LASF102:
 3155 05cd 6D696464 		.ascii	"middle\000"
 3155      6C6500
 3156              	.LASF20:
 3157 05d4 72737369 		.ascii	"rssi\000"
 3157      00
 3158              	.LASF24:
 3159 05d9 726F626F 		.ascii	"robot_orientation\000"
 3159      745F6F72 
 3159      69656E74 
ARM GAS  C:\Users\rnat697\AppData\Local\Temp\ccaSpsHo.s 			page 71


 3159      6174696F 
 3159      6E00
 3160              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
