ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.section	.text.motorGoStraight,"ax",%progbits
 107              		.align	2
 108              		.global	motorGoStraight
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 3


 109              		.thumb
 110              		.thumb_func
 111              		.type	motorGoStraight, %function
 112              	motorGoStraight:
 113              	.LFB64:
 114              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <stdbool.h>
  19:main.c        **** #include <string.h>
  20:main.c        **** #include <stdlib.h>
  21:main.c        **** #include <math.h>
  22:main.c        **** #include <project.h>
  23:main.c        **** //* ========================================
  24:main.c        **** #include "defines.h"
  25:main.c        **** #include "vars.h"
  26:main.c        **** #include "isr_eoc.h"
  27:main.c        **** //* ========================================
  28:main.c        **** void usbPutString(char *s);
  29:main.c        **** void usbPutChar(char c);
  30:main.c        **** void handle_usb();
  31:main.c        **** //* ========================================
  32:main.c        **** 
  33:main.c        **** 
  34:main.c        **** #define rota180 500 //turns
  35:main.c        **** #define rota90Left 250
  36:main.c        **** 
  37:main.c        **** #define moveSlow 50
  38:main.c        **** #define travelDist 326 // how
  39:main.c        **** #define Q1CHANNEL 3
  40:main.c        **** #define Q2CHANNEL 5 
  41:main.c        **** #define Q3CHANNEL 0
  42:main.c        **** #define Q4CHANNEL 1
  43:main.c        **** #define Q5CHANNEL 2
  44:main.c        **** #define Q6CHANNEL 4
  45:main.c        **** 
  46:main.c        **** CY_ISR_PROTO(isr_eoc_Interrupt_test);
  47:main.c        **** CY_ISR_PROTO(isr_motor_interrupt_speed);
  48:main.c        **** CY_ISR_PROTO(isr_TS_interrupt_sample);
  49:main.c        **** int convertSensorBinary();
  50:main.c        **** int convertBackBinary();
  51:main.c        **** 
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 4


  52:main.c        **** void motorGoStraight(){
 115              		.loc 1 52 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119 0000 80B5     		push	{r7, lr}
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 7, -8
 122              		.cfi_offset 14, -4
 123 0002 00AF     		add	r7, sp, #0
 124              		.cfi_def_cfa_register 7
  53:main.c        ****     ////PWM_1_WriteCompare(150); // left wheel near power switch is stronker than right wheel //150
  54:main.c        ****     //M1_IN2_Write(0);
  55:main.c        ****     PWM_1_WriteCompare(160);//200 //180 //160
 125              		.loc 1 55 0
 126 0004 A020     		movs	r0, #160
 127 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  56:main.c        ****     PWM_2_WriteCompare(93); //52 //72 //93
 128              		.loc 1 56 0
 129 000a 5D20     		movs	r0, #93
 130 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  57:main.c        **** }
 131              		.loc 1 57 0
 132 0010 00BF     		nop
 133 0012 80BD     		pop	{r7, pc}
 134              		.cfi_endproc
 135              	.LFE64:
 136              		.size	motorGoStraight, .-motorGoStraight
 137              		.section	.text.motorSetSpeed,"ax",%progbits
 138              		.align	2
 139              		.global	motorSetSpeed
 140              		.thumb
 141              		.thumb_func
 142              		.type	motorSetSpeed, %function
 143              	motorSetSpeed:
 144              	.LFB65:
  58:main.c        **** void motorSetSpeed(int x){
 145              		.loc 1 58 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 8
 148              		@ frame_needed = 1, uses_anonymous_args = 0
 149 0000 80B5     		push	{r7, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 82B0     		sub	sp, sp, #8
 154              		.cfi_def_cfa_offset 16
 155 0004 00AF     		add	r7, sp, #0
 156              		.cfi_def_cfa_register 7
 157 0006 7860     		str	r0, [r7, #4]
  59:main.c        ****     ////PWM_1_WriteCompare(150); // left wheel near power switch is stronker than right wheel //150
  60:main.c        ****     //M1_IN2_Write(0);
  61:main.c        ****     
  62:main.c        ****     //fastest speed
  63:main.c        ****     PWM_1_WriteCompare(200+x);//200 //180 //160
 158              		.loc 1 63 0
 159 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 5


 160 000a DBB2     		uxtb	r3, r3
 161 000c 383B     		subs	r3, r3, #56
 162 000e DBB2     		uxtb	r3, r3
 163 0010 1846     		mov	r0, r3
 164 0012 FFF7FEFF 		bl	PWM_1_WriteCompare
  64:main.c        ****     PWM_2_WriteCompare(52-x); //52 //72 //93
 165              		.loc 1 64 0
 166 0016 7B68     		ldr	r3, [r7, #4]
 167 0018 DBB2     		uxtb	r3, r3
 168 001a C3F13403 		rsb	r3, r3, #52
 169 001e DBB2     		uxtb	r3, r3
 170 0020 1846     		mov	r0, r3
 171 0022 FFF7FEFF 		bl	PWM_2_WriteCompare
  65:main.c        **** }
 172              		.loc 1 65 0
 173 0026 00BF     		nop
 174 0028 0837     		adds	r7, r7, #8
 175              		.cfi_def_cfa_offset 8
 176 002a BD46     		mov	sp, r7
 177              		.cfi_def_cfa_register 13
 178              		@ sp needed
 179 002c 80BD     		pop	{r7, pc}
 180              		.cfi_endproc
 181              	.LFE65:
 182              		.size	motorSetSpeed, .-motorSetSpeed
 183 002e 00BF     		.section	.text.motorGoBackwards,"ax",%progbits
 184              		.align	2
 185              		.global	motorGoBackwards
 186              		.thumb
 187              		.thumb_func
 188              		.type	motorGoBackwards, %function
 189              	motorGoBackwards:
 190              	.LFB66:
  66:main.c        **** void motorGoBackwards(){
 191              		.loc 1 66 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 1, uses_anonymous_args = 0
 195 0000 80B5     		push	{r7, lr}
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 7, -8
 198              		.cfi_offset 14, -4
 199 0002 00AF     		add	r7, sp, #0
 200              		.cfi_def_cfa_register 7
  67:main.c        ****     
  68:main.c        ****     //M1_IN2_Write(0);
  69:main.c        ****     PWM_1_WriteCompare(55); //55
 201              		.loc 1 69 0
 202 0004 3720     		movs	r0, #55
 203 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  70:main.c        ****     PWM_2_WriteCompare(201); //201
 204              		.loc 1 70 0
 205 000a C920     		movs	r0, #201
 206 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  71:main.c        **** }
 207              		.loc 1 71 0
 208 0010 00BF     		nop
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 6


 209 0012 80BD     		pop	{r7, pc}
 210              		.cfi_endproc
 211              	.LFE66:
 212              		.size	motorGoBackwards, .-motorGoBackwards
 213              		.section	.text.motorStop,"ax",%progbits
 214              		.align	2
 215              		.global	motorStop
 216              		.thumb
 217              		.thumb_func
 218              		.type	motorStop, %function
 219              	motorStop:
 220              	.LFB67:
  72:main.c        **** void motorStop(){
 221              		.loc 1 72 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 1, uses_anonymous_args = 0
 225 0000 80B5     		push	{r7, lr}
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 7, -8
 228              		.cfi_offset 14, -4
 229 0002 00AF     		add	r7, sp, #0
 230              		.cfi_def_cfa_register 7
  73:main.c        ****     PWM_1_WriteCompare(127); 
 231              		.loc 1 73 0
 232 0004 7F20     		movs	r0, #127
 233 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  74:main.c        ****     PWM_2_WriteCompare(127);
 234              		.loc 1 74 0
 235 000a 7F20     		movs	r0, #127
 236 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  75:main.c        **** }
 237              		.loc 1 75 0
 238 0010 00BF     		nop
 239 0012 80BD     		pop	{r7, pc}
 240              		.cfi_endproc
 241              	.LFE67:
 242              		.size	motorStop, .-motorStop
 243              		.section	.text.motorTurnLeft,"ax",%progbits
 244              		.align	2
 245              		.global	motorTurnLeft
 246              		.thumb
 247              		.thumb_func
 248              		.type	motorTurnLeft, %function
 249              	motorTurnLeft:
 250              	.LFB68:
  76:main.c        **** 
  77:main.c        **** void motorTurnLeft(uint8 x){
 251              		.loc 1 77 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 8
 254              		@ frame_needed = 1, uses_anonymous_args = 0
 255 0000 80B5     		push	{r7, lr}
 256              		.cfi_def_cfa_offset 8
 257              		.cfi_offset 7, -8
 258              		.cfi_offset 14, -4
 259 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 7


 260              		.cfi_def_cfa_offset 16
 261 0004 00AF     		add	r7, sp, #0
 262              		.cfi_def_cfa_register 7
 263 0006 0346     		mov	r3, r0
 264 0008 FB71     		strb	r3, [r7, #7]
  78:main.c        ****     // TO DO
  79:main.c        ****     
  80:main.c        ****     PWM_1_WriteCompare(127); //55
 265              		.loc 1 80 0
 266 000a 7F20     		movs	r0, #127
 267 000c FFF7FEFF 		bl	PWM_1_WriteCompare
  81:main.c        ****     PWM_2_WriteCompare(x); //201
 268              		.loc 1 81 0
 269 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 270 0012 1846     		mov	r0, r3
 271 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
  82:main.c        ****     
  83:main.c        ****     
  84:main.c        ****     
  85:main.c        ****     //255
  86:main.c        **** }
 272              		.loc 1 86 0
 273 0018 00BF     		nop
 274 001a 0837     		adds	r7, r7, #8
 275              		.cfi_def_cfa_offset 8
 276 001c BD46     		mov	sp, r7
 277              		.cfi_def_cfa_register 13
 278              		@ sp needed
 279 001e 80BD     		pop	{r7, pc}
 280              		.cfi_endproc
 281              	.LFE68:
 282              		.size	motorTurnLeft, .-motorTurnLeft
 283              		.section	.text.motorTurnRight,"ax",%progbits
 284              		.align	2
 285              		.global	motorTurnRight
 286              		.thumb
 287              		.thumb_func
 288              		.type	motorTurnRight, %function
 289              	motorTurnRight:
 290              	.LFB69:
  87:main.c        **** 
  88:main.c        **** void motorTurnRight(int x){
 291              		.loc 1 88 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 8
 294              		@ frame_needed = 1, uses_anonymous_args = 0
 295 0000 80B5     		push	{r7, lr}
 296              		.cfi_def_cfa_offset 8
 297              		.cfi_offset 7, -8
 298              		.cfi_offset 14, -4
 299 0002 82B0     		sub	sp, sp, #8
 300              		.cfi_def_cfa_offset 16
 301 0004 00AF     		add	r7, sp, #0
 302              		.cfi_def_cfa_register 7
 303 0006 7860     		str	r0, [r7, #4]
  89:main.c        ****     // TO DO
  90:main.c        ****     
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 8


  91:main.c        ****     PWM_1_WriteCompare(x);//200
 304              		.loc 1 91 0
 305 0008 7B68     		ldr	r3, [r7, #4]
 306 000a DBB2     		uxtb	r3, r3
 307 000c 1846     		mov	r0, r3
 308 000e FFF7FEFF 		bl	PWM_1_WriteCompare
  92:main.c        ****     PWM_2_WriteCompare(127); //50
 309              		.loc 1 92 0
 310 0012 7F20     		movs	r0, #127
 311 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
  93:main.c        **** 
  94:main.c        **** }
 312              		.loc 1 94 0
 313 0018 00BF     		nop
 314 001a 0837     		adds	r7, r7, #8
 315              		.cfi_def_cfa_offset 8
 316 001c BD46     		mov	sp, r7
 317              		.cfi_def_cfa_register 13
 318              		@ sp needed
 319 001e 80BD     		pop	{r7, pc}
 320              		.cfi_endproc
 321              	.LFE69:
 322              		.size	motorTurnRight, .-motorTurnRight
 323              		.section	.text.motorCircle,"ax",%progbits
 324              		.align	2
 325              		.global	motorCircle
 326              		.thumb
 327              		.thumb_func
 328              		.type	motorCircle, %function
 329              	motorCircle:
 330              	.LFB70:
  95:main.c        **** 
  96:main.c        **** 
  97:main.c        **** void motorCircle(uint8 x){
 331              		.loc 1 97 0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 8
 334              		@ frame_needed = 1, uses_anonymous_args = 0
 335 0000 80B5     		push	{r7, lr}
 336              		.cfi_def_cfa_offset 8
 337              		.cfi_offset 7, -8
 338              		.cfi_offset 14, -4
 339 0002 82B0     		sub	sp, sp, #8
 340              		.cfi_def_cfa_offset 16
 341 0004 00AF     		add	r7, sp, #0
 342              		.cfi_def_cfa_register 7
 343 0006 0346     		mov	r3, r0
 344 0008 FB71     		strb	r3, [r7, #7]
  98:main.c        ****     // TO DO
  99:main.c        ****     //positive value turns left
 100:main.c        ****     //negative value turns right
 101:main.c        ****     PWM_1_WriteCompare(127+x); //147
 345              		.loc 1 101 0
 346 000a FB79     		ldrb	r3, [r7, #7]
 347 000c 7F33     		adds	r3, r3, #127
 348 000e DBB2     		uxtb	r3, r3
 349 0010 1846     		mov	r0, r3
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 9


 350 0012 FFF7FEFF 		bl	PWM_1_WriteCompare
 102:main.c        ****     PWM_2_WriteCompare(127+x); //
 351              		.loc 1 102 0
 352 0016 FB79     		ldrb	r3, [r7, #7]
 353 0018 7F33     		adds	r3, r3, #127
 354 001a DBB2     		uxtb	r3, r3
 355 001c 1846     		mov	r0, r3
 356 001e FFF7FEFF 		bl	PWM_2_WriteCompare
 103:main.c        ****     
 104:main.c        ****     
 105:main.c        ****     
 106:main.c        ****     //255
 107:main.c        **** }
 357              		.loc 1 107 0
 358 0022 00BF     		nop
 359 0024 0837     		adds	r7, r7, #8
 360              		.cfi_def_cfa_offset 8
 361 0026 BD46     		mov	sp, r7
 362              		.cfi_def_cfa_register 13
 363              		@ sp needed
 364 0028 80BD     		pop	{r7, pc}
 365              		.cfi_endproc
 366              	.LFE70:
 367              		.size	motorCircle, .-motorCircle
 368              		.global	changeMotor
 369 002a 00BF     		.bss
 370 0012 0000     		.align	2
 371              		.type	changeMotor, %object
 372              		.size	changeMotor, 4
 373              	changeMotor:
 374 0014 00000000 		.space	4
 375              		.global	checkLight
 376              		.align	2
 377              		.type	checkLight, %object
 378              		.size	checkLight, 4
 379              	checkLight:
 380 0018 00000000 		.space	4
 381              		.global	lightState
 382              		.align	2
 383              		.type	lightState, %object
 384              		.size	lightState, 4
 385              	lightState:
 386 001c 00000000 		.space	4
 387              		.global	lightDetectedFront
 388              		.align	2
 389              		.type	lightDetectedFront, %object
 390              		.size	lightDetectedFront, 12
 391              	lightDetectedFront:
 392 0020 00000000 		.space	12
 392      00000000 
 392      00000000 
 393              		.global	lightDetectedBack
 394              		.align	2
 395              		.type	lightDetectedBack, %object
 396              		.size	lightDetectedBack, 12
 397              	lightDetectedBack:
 398 002c 00000000 		.space	12
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 10


 398      00000000 
 398      00000000 
 399              		.global	counteoc
 400              		.align	2
 401              		.type	counteoc, %object
 402              		.size	counteoc, 4
 403              	counteoc:
 404 0038 00000000 		.space	4
 405              		.global	processSensors
 406              		.align	2
 407              		.type	processSensors, %object
 408              		.size	processSensors, 4
 409              	processSensors:
 410 003c 00000000 		.space	4
 411              		.global	middle
 412              		.align	2
 413              		.type	middle, %object
 414              		.size	middle, 4
 415              	middle:
 416 0040 00000000 		.space	4
 417              		.section	.text.isr_eoc_Interrupt_test,"ax",%progbits
 418              		.align	2
 419              		.global	isr_eoc_Interrupt_test
 420              		.thumb
 421              		.thumb_func
 422              		.type	isr_eoc_Interrupt_test, %function
 423              	isr_eoc_Interrupt_test:
 424              	.LFB71:
 108:main.c        **** int changeMotor=0;
 109:main.c        **** int checkLight =0;
 110:main.c        **** int lightState=0;
 111:main.c        **** volatile int lightDetectedFront[3] = {0,0,0};
 112:main.c        **** volatile int lightDetectedBack[3] = {0,0,0};
 113:main.c        **** volatile int counteoc = 0;
 114:main.c        **** volatile int processSensors = 0;
 115:main.c        **** volatile int middle =0;
 116:main.c        **** CY_ISR(isr_eoc_Interrupt_test)
 117:main.c        **** {
 425              		.loc 1 117 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 16
 428              		@ frame_needed = 1, uses_anonymous_args = 0
 429 0000 80B5     		push	{r7, lr}
 430              		.cfi_def_cfa_offset 8
 431              		.cfi_offset 7, -8
 432              		.cfi_offset 14, -4
 433 0002 84B0     		sub	sp, sp, #16
 434              		.cfi_def_cfa_offset 24
 435 0004 00AF     		add	r7, sp, #0
 436              		.cfi_def_cfa_register 7
 118:main.c        ****     #ifdef isr_test_INTERRUPT_INTERRUPT_CALLBACK
 119:main.c        ****         isr_TS_Interrupt_InterruptCallback();
 120:main.c        ****     #endif /* isr_eoc_INTERRUPT_INTERRUPT_CALLBACK */ 
 121:main.c        **** 
 122:main.c        ****     /*  Place your Interrupt code here. */
 123:main.c        ****     /* `#START isr_eoc_Interrupt` */
 124:main.c        ****     int16 valueQ3 =  ADC_GetResult16(Q3CHANNEL);
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 11


 437              		.loc 1 124 0
 438 0006 0020     		movs	r0, #0
 439 0008 FFF7FEFF 		bl	ADC_GetResult16
 440 000c 0346     		mov	r3, r0
 441 000e FB81     		strh	r3, [r7, #14]	@ movhi
 125:main.c        ****     int16 valueQ4 =  ADC_GetResult16(Q4CHANNEL);
 442              		.loc 1 125 0
 443 0010 0120     		movs	r0, #1
 444 0012 FFF7FEFF 		bl	ADC_GetResult16
 445 0016 0346     		mov	r3, r0
 446 0018 BB81     		strh	r3, [r7, #12]	@ movhi
 126:main.c        ****     int16 valueQ5 =  ADC_GetResult16(Q5CHANNEL);
 447              		.loc 1 126 0
 448 001a 0220     		movs	r0, #2
 449 001c FFF7FEFF 		bl	ADC_GetResult16
 450 0020 0346     		mov	r3, r0
 451 0022 7B81     		strh	r3, [r7, #10]	@ movhi
 127:main.c        ****     
 128:main.c        ****     
 129:main.c        ****     int16 valueQ2 =  ADC_GetResult16(Q2CHANNEL);
 452              		.loc 1 129 0
 453 0024 0520     		movs	r0, #5
 454 0026 FFF7FEFF 		bl	ADC_GetResult16
 455 002a 0346     		mov	r3, r0
 456 002c 3B81     		strh	r3, [r7, #8]	@ movhi
 130:main.c        ****     int16 valueQ1 =  ADC_GetResult16(Q1CHANNEL);
 457              		.loc 1 130 0
 458 002e 0320     		movs	r0, #3
 459 0030 FFF7FEFF 		bl	ADC_GetResult16
 460 0034 0346     		mov	r3, r0
 461 0036 FB80     		strh	r3, [r7, #6]	@ movhi
 131:main.c        ****     int16 valueQ6 =  ADC_GetResult16(Q6CHANNEL);
 462              		.loc 1 131 0
 463 0038 0420     		movs	r0, #4
 464 003a FFF7FEFF 		bl	ADC_GetResult16
 465 003e 0346     		mov	r3, r0
 466 0040 BB80     		strh	r3, [r7, #4]	@ movhi
 132:main.c        ****     
 133:main.c        ****     // get value from ADC then convert to DAC to send to external LEDs
 134:main.c        ****     if (counteoc < 10) {
 467              		.loc 1 134 0
 468 0042 234B     		ldr	r3, .L18
 469 0044 1B68     		ldr	r3, [r3]
 470 0046 092B     		cmp	r3, #9
 471 0048 3BDC     		bgt	.L9
 135:main.c        ****         //2211
 136:main.c        ****         if (valueQ3 >= 2211) {
 472              		.loc 1 136 0
 473 004a B7F90E30 		ldrsh	r3, [r7, #14]
 474 004e 40F6A202 		movw	r2, #2210
 475 0052 9342     		cmp	r3, r2
 476 0054 02DD     		ble	.L10
 137:main.c        ****         //set flag for white light detected
 138:main.c        ****         lightDetectedFront[0] = 1;
 477              		.loc 1 138 0
 478 0056 1F4B     		ldr	r3, .L18+4
 479 0058 0122     		movs	r2, #1
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 12


 480 005a 1A60     		str	r2, [r3]
 481              	.L10:
 139:main.c        ****         }
 140:main.c        ****         if (valueQ4 >= 2211) {
 482              		.loc 1 140 0
 483 005c B7F90C30 		ldrsh	r3, [r7, #12]
 484 0060 40F6A202 		movw	r2, #2210
 485 0064 9342     		cmp	r3, r2
 486 0066 02DD     		ble	.L11
 141:main.c        ****         //set flag for white light detected
 142:main.c        ****         lightDetectedFront[1] = 1;
 487              		.loc 1 142 0
 488 0068 1A4B     		ldr	r3, .L18+4
 489 006a 0122     		movs	r2, #1
 490 006c 5A60     		str	r2, [r3, #4]
 491              	.L11:
 143:main.c        ****         }
 144:main.c        ****     
 145:main.c        ****         if (valueQ5 >= 2211) {
 492              		.loc 1 145 0
 493 006e B7F90A30 		ldrsh	r3, [r7, #10]
 494 0072 40F6A202 		movw	r2, #2210
 495 0076 9342     		cmp	r3, r2
 496 0078 02DD     		ble	.L12
 146:main.c        ****         //set flag for white light detected
 147:main.c        ****         lightDetectedFront[2] = 1;
 497              		.loc 1 147 0
 498 007a 164B     		ldr	r3, .L18+4
 499 007c 0122     		movs	r2, #1
 500 007e 9A60     		str	r2, [r3, #8]
 501              	.L12:
 148:main.c        ****         }
 149:main.c        ****         if (valueQ2 >= 2211) {
 502              		.loc 1 149 0
 503 0080 B7F90830 		ldrsh	r3, [r7, #8]
 504 0084 40F6A202 		movw	r2, #2210
 505 0088 9342     		cmp	r3, r2
 506 008a 02DD     		ble	.L13
 150:main.c        ****         //set flag for white light detected
 151:main.c        ****             lightDetectedBack[0] = 1;
 507              		.loc 1 151 0
 508 008c 124B     		ldr	r3, .L18+8
 509 008e 0122     		movs	r2, #1
 510 0090 1A60     		str	r2, [r3]
 511              	.L13:
 152:main.c        ****         }
 153:main.c        ****         
 154:main.c        ****         if (valueQ1 >= 2211) {
 512              		.loc 1 154 0
 513 0092 B7F90630 		ldrsh	r3, [r7, #6]
 514 0096 40F6A202 		movw	r2, #2210
 515 009a 9342     		cmp	r3, r2
 516 009c 02DD     		ble	.L14
 155:main.c        ****         //set flag for white light detected
 156:main.c        ****             lightDetectedBack[1] = 1;
 517              		.loc 1 156 0
 518 009e 0E4B     		ldr	r3, .L18+8
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 13


 519 00a0 0122     		movs	r2, #1
 520 00a2 5A60     		str	r2, [r3, #4]
 521              	.L14:
 157:main.c        ****         }     
 158:main.c        ****                 
 159:main.c        ****         if (valueQ6 >= 2211) {
 522              		.loc 1 159 0
 523 00a4 B7F90430 		ldrsh	r3, [r7, #4]
 524 00a8 40F6A202 		movw	r2, #2210
 525 00ac 9342     		cmp	r3, r2
 526 00ae 02DD     		ble	.L15
 160:main.c        ****         //set flag for white light detected
 161:main.c        ****             lightDetectedBack[2] = 1;
 527              		.loc 1 161 0
 528 00b0 094B     		ldr	r3, .L18+8
 529 00b2 0122     		movs	r2, #1
 530 00b4 9A60     		str	r2, [r3, #8]
 531              	.L15:
 162:main.c        ****         }
 163:main.c        ****         
 164:main.c        ****         counteoc++;
 532              		.loc 1 164 0
 533 00b6 064B     		ldr	r3, .L18
 534 00b8 1B68     		ldr	r3, [r3]
 535 00ba 0133     		adds	r3, r3, #1
 536 00bc 044A     		ldr	r2, .L18
 537 00be 1360     		str	r3, [r2]
 165:main.c        ****     } else {
 166:main.c        ****         processSensors = 1;   
 167:main.c        ****        
 168:main.c        ****     }
 169:main.c        ****     /* `#END` */
 170:main.c        **** }
 538              		.loc 1 170 0
 539 00c0 02E0     		b	.L17
 540              	.L9:
 166:main.c        ****        
 541              		.loc 1 166 0
 542 00c2 064B     		ldr	r3, .L18+12
 543 00c4 0122     		movs	r2, #1
 544 00c6 1A60     		str	r2, [r3]
 545              	.L17:
 546              		.loc 1 170 0
 547 00c8 00BF     		nop
 548 00ca 1037     		adds	r7, r7, #16
 549              		.cfi_def_cfa_offset 8
 550 00cc BD46     		mov	sp, r7
 551              		.cfi_def_cfa_register 13
 552              		@ sp needed
 553 00ce 80BD     		pop	{r7, pc}
 554              	.L19:
 555              		.align	2
 556              	.L18:
 557 00d0 00000000 		.word	counteoc
 558 00d4 00000000 		.word	lightDetectedFront
 559 00d8 00000000 		.word	lightDetectedBack
 560 00dc 00000000 		.word	processSensors
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 14


 561              		.cfi_endproc
 562              	.LFE71:
 563              		.size	isr_eoc_Interrupt_test, .-isr_eoc_Interrupt_test
 564              		.bss
 565              	count:
 566 0044 00       		.space	1
 567              		.section	.text.isr_motor_interrupt_speed,"ax",%progbits
 568              		.align	2
 569              		.global	isr_motor_interrupt_speed
 570              		.thumb
 571              		.thumb_func
 572              		.type	isr_motor_interrupt_speed, %function
 573              	isr_motor_interrupt_speed:
 574              	.LFB72:
 171:main.c        **** // NEED TO INCREASE/DECREASE SPEED TOO
 172:main.c        **** // AND IMPLEMENT LIGHT SENSOR THINGS
 173:main.c        **** volatile static int8 count;
 174:main.c        **** CY_ISR(isr_motor_interrupt_speed)
 175:main.c        **** {
 575              		.loc 1 175 0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 1, uses_anonymous_args = 0
 579              		@ link register save eliminated.
 580 0000 80B4     		push	{r7}
 581              		.cfi_def_cfa_offset 4
 582              		.cfi_offset 7, -4
 583 0002 00AF     		add	r7, sp, #0
 584              		.cfi_def_cfa_register 7
 176:main.c        ****     #ifdef isr_motor_INTERRUPT_INTERRUPT_CALLBACK
 177:main.c        ****         isr_motor_Interrupt_InterruptCallback();
 178:main.c        ****     #endif /* isr_motor_INTERRUPT_INTERRUPT_CALLBACK */ 
 179:main.c        **** 
 180:main.c        ****     /*  Place your Interrupt code here. */
 181:main.c        ****     /* `#START isr_motor_Interrupt` */
 182:main.c        ****       /*int16 currCountMotor2 = QuadDec_M2_GetCounter();
 183:main.c        ****       int16 currCountMotor1 = QuadDec_M1_GetCounter();  
 184:main.c        ****       
 185:main.c        ****      speedMotor1 = (currCountMotor1 - prevcountMotor1) / 0.2;
 186:main.c        ****      speedMotor2 = (currCountMotor2 - prevcountMotor2) / 0.2;
 187:main.c        ****     
 188:main.c        ****       prevcountMotor1 = currCountMotor1;
 189:main.c        ****       prevcountMotor2 = currCountMotor2;*/
 190:main.c        ****     
 191:main.c        ****     /* `#END` */
 192:main.c        **** }
 585              		.loc 1 192 0
 586 0004 00BF     		nop
 587 0006 BD46     		mov	sp, r7
 588              		.cfi_def_cfa_register 13
 589              		@ sp needed
 590 0008 80BC     		pop	{r7}
 591              		.cfi_restore 7
 592              		.cfi_def_cfa_offset 0
 593 000a 7047     		bx	lr
 594              		.cfi_endproc
 595              	.LFE72:
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 15


 596              		.size	isr_motor_interrupt_speed, .-isr_motor_interrupt_speed
 597              		.section	.rodata
 598              		.align	2
 599              	.LC0:
 600 0000 4D6F746F 		.ascii	"Motor 1 - start count: %d, end count: %d \012\000"
 600      72203120 
 600      2D207374 
 600      61727420 
 600      636F756E 
 601 002b 00       		.align	2
 602              	.LC1:
 603 002c 4D6F746F 		.ascii	"Motor 2 - start count: %d, end count: %d \012\000"
 603      72203220 
 603      2D207374 
 603      61727420 
 603      636F756E 
 604              		.section	.text.motorCount,"ax",%progbits
 605              		.align	2
 606              		.global	motorCount
 607              		.thumb
 608              		.thumb_func
 609              		.type	motorCount, %function
 610              	motorCount:
 611              	.LFB73:
 193:main.c        **** void motorCount(){
 612              		.loc 1 193 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 20008
 615              		@ frame_needed = 1, uses_anonymous_args = 0
 616 0000 80B5     		push	{r7, lr}
 617              		.cfi_def_cfa_offset 8
 618              		.cfi_offset 7, -8
 619              		.cfi_offset 14, -4
 620 0002 ADF59C4D 		sub	sp, sp, #19968
 621              		.cfi_def_cfa_offset 19976
 622 0006 8AB0     		sub	sp, sp, #40
 623              		.cfi_def_cfa_offset 20016
 624 0008 00AF     		add	r7, sp, #0
 625              		.cfi_def_cfa_register 7
 194:main.c        ****     int16 beginningCountMotor1 = 0;
 626              		.loc 1 194 0
 627 000a 0023     		movs	r3, #0
 628 000c 07F59C42 		add	r2, r7, #19968
 629 0010 02F12602 		add	r2, r2, #38
 630 0014 1380     		strh	r3, [r2]	@ movhi
 195:main.c        ****     int16 beginningCountMotor2 = 0;
 631              		.loc 1 195 0
 632 0016 0023     		movs	r3, #0
 633 0018 07F59C42 		add	r2, r7, #19968
 634 001c 02F12402 		add	r2, r2, #36
 635 0020 1380     		strh	r3, [r2]	@ movhi
 196:main.c        ****     int16 endCountMotor2 = QuadDec_M2_GetCounter();
 636              		.loc 1 196 0
 637 0022 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 638 0026 0346     		mov	r3, r0
 639 0028 07F59C42 		add	r2, r7, #19968
 640 002c 02F12202 		add	r2, r2, #34
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 16


 641 0030 1380     		strh	r3, [r2]	@ movhi
 197:main.c        ****     int16 endCountMotor1 = QuadDec_M1_GetCounter();
 642              		.loc 1 197 0
 643 0032 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 644 0036 0346     		mov	r3, r0
 645 0038 07F59C42 		add	r2, r7, #19968
 646 003c 02F12002 		add	r2, r2, #32
 647 0040 1380     		strh	r3, [r2]	@ movhi
 198:main.c        ****     char motor1String[10000]; 
 199:main.c        ****     sprintf(motor1String,"Motor 1 - start count: %d, end count: %d \n", beginningCountMotor1, endCo
 648              		.loc 1 199 0
 649 0042 07F59C43 		add	r3, r7, #19968
 650 0046 03F12603 		add	r3, r3, #38
 651 004a B3F90020 		ldrsh	r2, [r3]
 652 004e 07F59C43 		add	r3, r7, #19968
 653 0052 03F12003 		add	r3, r3, #32
 654 0056 B3F90030 		ldrsh	r3, [r3]
 655 005a 07F51C50 		add	r0, r7, #9984
 656 005e 00F12800 		add	r0, r0, #40
 657 0062 1838     		subs	r0, r0, #24
 658 0064 1449     		ldr	r1, .L22
 659 0066 FFF7FEFF 		bl	sprintf
 200:main.c        ****     char motor2String[10000];
 201:main.c        ****     sprintf(motor2String,"Motor 2 - start count: %d, end count: %d \n", beginningCountMotor2 , endC
 660              		.loc 1 201 0
 661 006a 07F59C43 		add	r3, r7, #19968
 662 006e 03F12403 		add	r3, r3, #36
 663 0072 B3F90020 		ldrsh	r2, [r3]
 664 0076 07F59C43 		add	r3, r7, #19968
 665 007a 03F12203 		add	r3, r3, #34
 666 007e B3F90030 		ldrsh	r3, [r3]
 667 0082 07F12800 		add	r0, r7, #40
 668 0086 2838     		subs	r0, r0, #40
 669 0088 0C49     		ldr	r1, .L22+4
 670 008a FFF7FEFF 		bl	sprintf
 202:main.c        ****     
 203:main.c        ****     usbPutString(motor1String);
 671              		.loc 1 203 0
 672 008e 07F51C53 		add	r3, r7, #9984
 673 0092 03F12803 		add	r3, r3, #40
 674 0096 183B     		subs	r3, r3, #24
 675 0098 1846     		mov	r0, r3
 676 009a FFF7FEFF 		bl	usbPutString
 204:main.c        ****     usbPutString(motor2String);
 677              		.loc 1 204 0
 678 009e 07F12803 		add	r3, r7, #40
 679 00a2 283B     		subs	r3, r3, #40
 680 00a4 1846     		mov	r0, r3
 681 00a6 FFF7FEFF 		bl	usbPutString
 205:main.c        **** 
 206:main.c        **** }
 682              		.loc 1 206 0
 683 00aa 00BF     		nop
 684 00ac 07F59C47 		add	r7, r7, #19968
 685 00b0 2837     		adds	r7, r7, #40
 686              		.cfi_def_cfa_offset 8
 687 00b2 BD46     		mov	sp, r7
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 17


 688              		.cfi_def_cfa_register 13
 689              		@ sp needed
 690 00b4 80BD     		pop	{r7, pc}
 691              	.L23:
 692 00b6 00BF     		.align	2
 693              	.L22:
 694 00b8 00000000 		.word	.LC0
 695 00bc 2C000000 		.word	.LC1
 696              		.cfi_endproc
 697              	.LFE73:
 698              		.size	motorCount, .-motorCount
 699              		.section	.text.motorRun,"ax",%progbits
 700              		.align	2
 701              		.global	motorRun
 702              		.thumb
 703              		.thumb_func
 704              		.type	motorRun, %function
 705              	motorRun:
 706              	.LFB74:
 207:main.c        **** 
 208:main.c        **** void motorRun(int x){
 707              		.loc 1 208 0
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 8
 710              		@ frame_needed = 1, uses_anonymous_args = 0
 711 0000 80B5     		push	{r7, lr}
 712              		.cfi_def_cfa_offset 8
 713              		.cfi_offset 7, -8
 714              		.cfi_offset 14, -4
 715 0002 82B0     		sub	sp, sp, #8
 716              		.cfi_def_cfa_offset 16
 717 0004 00AF     		add	r7, sp, #0
 718              		.cfi_def_cfa_register 7
 719 0006 7860     		str	r0, [r7, #4]
 209:main.c        ****     
 210:main.c        ****     
 211:main.c        ****     
 212:main.c        ****     //PWM_1_Start();
 213:main.c        ****     //PWM_2_Start();
 214:main.c        **** 
 215:main.c        **** 
 216:main.c        ****     //motorStop();
 217:main.c        ****     //CyDelay(time); // so we have time to set the robot up
 218:main.c        ****     motorSetSpeed(x);
 720              		.loc 1 218 0
 721 0008 7868     		ldr	r0, [r7, #4]
 722 000a FFF7FEFF 		bl	motorSetSpeed
 219:main.c        ****     //CyDelay(time);
 220:main.c        ****     motorStop();
 723              		.loc 1 220 0
 724 000e FFF7FEFF 		bl	motorStop
 221:main.c        ****     
 222:main.c        ****     //motorGoBackwards();
 223:main.c        **** 
 224:main.c        ****     
 225:main.c        ****     //CyDelay(2000);
 226:main.c        ****  
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 18


 227:main.c        ****     //motorStop();
 228:main.c        ****     //motorCount();//checks count per second.
 229:main.c        **** 
 230:main.c        ****     
 231:main.c        **** }
 725              		.loc 1 231 0
 726 0012 00BF     		nop
 727 0014 0837     		adds	r7, r7, #8
 728              		.cfi_def_cfa_offset 8
 729 0016 BD46     		mov	sp, r7
 730              		.cfi_def_cfa_register 13
 731              		@ sp needed
 732 0018 80BD     		pop	{r7, pc}
 733              		.cfi_endproc
 734              	.LFE74:
 735              		.size	motorRun, .-motorRun
 736 001a 00BF     		.section	.text.isr_TS_Interrupt_sample,"ax",%progbits
 737              		.align	2
 738              		.global	isr_TS_Interrupt_sample
 739              		.thumb
 740              		.thumb_func
 741              		.type	isr_TS_Interrupt_sample, %function
 742              	isr_TS_Interrupt_sample:
 743              	.LFB75:
 232:main.c        **** CY_ISR(isr_TS_Interrupt_sample)
 233:main.c        **** {
 744              		.loc 1 233 0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 1, uses_anonymous_args = 0
 748 0000 80B5     		push	{r7, lr}
 749              		.cfi_def_cfa_offset 8
 750              		.cfi_offset 7, -8
 751              		.cfi_offset 14, -4
 752 0002 00AF     		add	r7, sp, #0
 753              		.cfi_def_cfa_register 7
 234:main.c        ****     #ifdef isr_TS_INTERRUPT_INTERRUPT_CALLBACK
 235:main.c        ****         isr_TS_Interrupt_InterruptCallback();
 236:main.c        ****     #endif /* isr_TS_INTERRUPT_INTERRUPT_CALLBACK */ 
 237:main.c        ****         ADC_StartConvert();
 754              		.loc 1 237 0
 755 0004 FFF7FEFF 		bl	ADC_StartConvert
 238:main.c        ****     /*  Place your Interrupt code here. */
 239:main.c        ****     /* `#START isr_TS_Interrupt` */
 240:main.c        **** 
 241:main.c        ****     /* `#END` */
 242:main.c        **** }
 756              		.loc 1 242 0
 757 0008 00BF     		nop
 758 000a 80BD     		pop	{r7, pc}
 759              		.cfi_endproc
 760              	.LFE75:
 761              		.size	isr_TS_Interrupt_sample, .-isr_TS_Interrupt_sample
 762              		.section	.text.main,"ax",%progbits
 763              		.align	2
 764              		.global	main
 765              		.thumb
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 19


 766              		.thumb_func
 767              		.type	main, %function
 768              	main:
 769              	.LFB76:
 243:main.c        **** 
 244:main.c        **** 
 245:main.c        **** int main()
 246:main.c        **** {
 770              		.loc 1 246 0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 16
 773              		@ frame_needed = 1, uses_anonymous_args = 0
 774 0000 80B5     		push	{r7, lr}
 775              		.cfi_def_cfa_offset 8
 776              		.cfi_offset 7, -8
 777              		.cfi_offset 14, -4
 778 0002 84B0     		sub	sp, sp, #16
 779              		.cfi_def_cfa_offset 24
 780 0004 00AF     		add	r7, sp, #0
 781              		.cfi_def_cfa_register 7
 247:main.c        ****     
 248:main.c        **** 
 249:main.c        **** // --------------------------------    
 250:main.c        **** // ----- INITIALIZATIONS ----------
 251:main.c        ****     CYGlobalIntEnable;
 782              		.loc 1 251 0
 783              		.syntax unified
 784              	@ 251 "main.c" 1
 785 0006 62B6     		CPSIE   i
 786              	@ 0 "" 2
 252:main.c        ****     count  = 0;
 787              		.loc 1 252 0
 788              		.thumb
 789              		.syntax unified
 790 0008 4C4B     		ldr	r3, .L41
 791 000a 0022     		movs	r2, #0
 792 000c 1A70     		strb	r2, [r3]
 253:main.c        ****     
 254:main.c        ****     ADC_Start();
 793              		.loc 1 254 0
 794 000e FFF7FEFF 		bl	ADC_Start
 255:main.c        ****     Timer_TS_Start();
 795              		.loc 1 255 0
 796 0012 FFF7FEFF 		bl	Timer_TS_Start
 256:main.c        ****     Timer_Motor_Start();
 797              		.loc 1 256 0
 798 0016 FFF7FEFF 		bl	Timer_Motor_Start
 257:main.c        ****     QuadDec_M1_Start();
 799              		.loc 1 257 0
 800 001a FFF7FEFF 		bl	QuadDec_M1_Start
 258:main.c        ****     QuadDec_M2_Start(); //init the quadencoder,
 801              		.loc 1 258 0
 802 001e FFF7FEFF 		bl	QuadDec_M2_Start
 259:main.c        ****     //isr_motor_StartEx(isr_motor_interrupt_speed);
 260:main.c        ****     
 261:main.c        ****     isr_TS_StartEx(isr_TS_Interrupt_sample);
 803              		.loc 1 261 0
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 20


 804 0022 4748     		ldr	r0, .L41+4
 805 0024 FFF7FEFF 		bl	isr_TS_StartEx
 262:main.c        ****     isr_eoc_StartEx(isr_eoc_Interrupt_test);
 806              		.loc 1 262 0
 807 0028 4648     		ldr	r0, .L41+8
 808 002a FFF7FEFF 		bl	isr_eoc_StartEx
 263:main.c        ****     
 264:main.c        ****     
 265:main.c        ****     //ADC_StartConvert();
 266:main.c        ****     
 267:main.c        ****     PWM_1_Start();
 809              		.loc 1 267 0
 810 002e FFF7FEFF 		bl	PWM_1_Start
 268:main.c        ****     PWM_2_Start();
 811              		.loc 1 268 0
 812 0032 FFF7FEFF 		bl	PWM_2_Start
 269:main.c        ****     LED_Write(0);
 813              		.loc 1 269 0
 814 0036 0020     		movs	r0, #0
 815 0038 FFF7FEFF 		bl	LED_Write
 270:main.c        ****     motorStop();
 816              		.loc 1 270 0
 817 003c FFF7FEFF 		bl	motorStop
 271:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION)   ; 
 818              		.loc 1 271 0
 819 0040 0121     		movs	r1, #1
 820 0042 0020     		movs	r0, #0
 821 0044 FFF7FEFF 		bl	USBUART_Start
 272:main.c        ****     ////////////////////////////////
 273:main.c        ****     
 274:main.c        ****     // Speed//
 275:main.c        ****     //int speed = -33;
 276:main.c        ****     //int time = 2000;
 277:main.c        ****    // motorRun(speed,time);
 278:main.c        **** 
 279:main.c        ****     /////////////////////////////////////////////
 280:main.c        ****     int lastState=0;
 822              		.loc 1 280 0
 823 0048 0023     		movs	r3, #0
 824 004a FB60     		str	r3, [r7, #12]
 825              	.L39:
 281:main.c        ****     //usbPutString(displaystring);
 282:main.c        ****      //87cm motor 1 945, motor2 -958. 2seconds.
 283:main.c        ****     //10.8 counts per cm for distance.
 284:main.c        ****    //for speed,43.5cm/s 
 285:main.c        ****     
 286:main.c        **** //    
 287:main.c        **** //// ----------      //distance ---------
 288:main.c        **** // int travelDis = 1740;//10.8 * travelDis
 289:main.c        **** //  while(QuadDec_M1_GetCounter()<travelDis){
 290:main.c        **** //        if (processSensors == 1) {
 291:main.c        **** //    
 292:main.c        **** //            int operation = convertSensorBinary();
 293:main.c        **** //            
 294:main.c        **** //    
 295:main.c        **** //            switch(operation){
 296:main.c        **** //                case 3:// 0 1 1 // Q3 under black
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 21


 297:main.c        **** //                    motorTurnLeft(50);//decrease go fast used to be 50 by 6
 298:main.c        **** //                    LED_Write(1);
 299:main.c        **** //                    break;    
 300:main.c        **** //                    
 301:main.c        **** //                case 6:// 1 1 0 // Q5 under black  
 302:main.c        **** //                    motorTurnRight(200);//increase 200 by 6
 303:main.c        **** //                    LED_Write(1);
 304:main.c        **** //                    break;
 305:main.c        **** //                    
 306:main.c        **** //                case 5:// 101 // Q4 under black
 307:main.c        **** //                    motorSetSpeed(-7); //-40 is original
 308:main.c        **** //                    LED_Write(0);
 309:main.c        **** //                    break;
 310:main.c        **** //            }
 311:main.c        **** //            
 312:main.c        **** //             processSensors = 0;
 313:main.c        **** //            //reset counter
 314:main.c        **** //
 315:main.c        **** //            counteoc = 0;
 316:main.c        **** //            //reset flags for lightsensors because it checks every 10 iterations, adds delay/
 317:main.c        **** //            lightDetectedFront[0] = 0;
 318:main.c        **** //            lightDetectedFront[1] = 0;
 319:main.c        **** //            lightDetectedFront[2] = 0;
 320:main.c        **** //            lightDetectedBack[0] = 0;
 321:main.c        **** //            lightDetectedBack[1] = 0;
 322:main.c        **** //            lightDetectedBack[2] = 0;
 323:main.c        **** //          
 324:main.c        **** //            
 325:main.c        **** //    
 326:main.c        **** //        }
 327:main.c        **** //    }
 328:main.c        **** //    motorStop();
 329:main.c        **** //    motorCount();
 330:main.c        ****     
 331:main.c        ****     /// ---------End here----------
 332:main.c        ****     
 333:main.c        ****     
 334:main.c        ****     
 335:main.c        ****     
 336:main.c        ****     
 337:main.c        ****     
 338:main.c        ****     
 339:main.c        ****    ///////////////////////////////////////// LINE TRACKING////////
 340:main.c        ****     
 341:main.c        ****     while(1)
 342:main.c        ****     {
 343:main.c        ****         /* Place your application code here. */
 344:main.c        ****        
 345:main.c        ****         if (processSensors == 1) {
 826              		.loc 1 345 0
 827 004c 3E4B     		ldr	r3, .L41+12
 828 004e 1B68     		ldr	r3, [r3]
 829 0050 012B     		cmp	r3, #1
 830 0052 FBD1     		bne	.L39
 831              	.LBB2:
 346:main.c        ****                    
 347:main.c        ****             int operation = convertSensorBinary();
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 22


 832              		.loc 1 347 0
 833 0054 FFF7FEFF 		bl	convertSensorBinary
 834 0058 B860     		str	r0, [r7, #8]
 348:main.c        ****             int backOps = convertBackBinary();
 835              		.loc 1 348 0
 836 005a FFF7FEFF 		bl	convertBackBinary
 837 005e 7860     		str	r0, [r7, #4]
 349:main.c        ****             
 350:main.c        **** 
 351:main.c        ****             switch(operation){
 838              		.loc 1 351 0
 839 0060 BB68     		ldr	r3, [r7, #8]
 840 0062 072B     		cmp	r3, #7
 841 0064 51D8     		bhi	.L28
 842 0066 01A2     		adr	r2, .L30
 843 0068 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 844              		.p2align 2
 845              	.L30:
 846 006c 03010000 		.word	.L29+1
 847 0070 CF000000 		.word	.L31+1
 848 0074 0B010000 		.word	.L28+1
 849 0078 A7000000 		.word	.L32+1
 850 007c E9000000 		.word	.L33+1
 851 0080 C3000000 		.word	.L34+1
 852 0084 B5000000 		.word	.L35+1
 853 0088 8D000000 		.word	.L36+1
 854              		.p2align 1
 855              	.L36:
 352:main.c        ****             //where 1 is on white, 0 is on black.
 353:main.c        ****                 
 354:main.c        ****                 case 7: // 111 // all under white\\
 355:main.c        ****                     
 356:main.c        ****                 
 357:main.c        ****               
 358:main.c        ****                         if(backOps == 7){
 856              		.loc 1 358 0
 857 008c 7B68     		ldr	r3, [r7, #4]
 858 008e 072B     		cmp	r3, #7
 859 0090 03D1     		bne	.L37
 359:main.c        ****                             
 360:main.c        ****                              motorCircle(40);
 860              		.loc 1 360 0
 861 0092 2820     		movs	r0, #40
 862 0094 FFF7FEFF 		bl	motorCircle
 361:main.c        ****                             
 362:main.c        ****                         }
 363:main.c        ****                         
 364:main.c        ****                     
 365:main.c        ****                         else if(backOps == 5){
 366:main.c        ****                             motorGoStraight();
 367:main.c        ****                         }   
 368:main.c        ****                         break;
 863              		.loc 1 368 0
 864 0098 36E0     		b	.L40
 865              	.L37:
 365:main.c        ****                             motorGoStraight();
 866              		.loc 1 365 0
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 23


 867 009a 7B68     		ldr	r3, [r7, #4]
 868 009c 052B     		cmp	r3, #5
 869 009e 33D1     		bne	.L40
 366:main.c        ****                         }   
 870              		.loc 1 366 0
 871 00a0 FFF7FEFF 		bl	motorGoStraight
 872              		.loc 1 368 0
 873 00a4 30E0     		b	.L40
 874              	.L32:
 369:main.c        ****                     
 370:main.c        ****                 case 3:// 0 1 1 // Q3 under black
 371:main.c        ****                     motorTurnLeft(160);//decrease go fast used to be 50 by 6
 875              		.loc 1 371 0
 876 00a6 A020     		movs	r0, #160
 877 00a8 FFF7FEFF 		bl	motorTurnLeft
 372:main.c        ****                     LED_Write(1);
 878              		.loc 1 372 0
 879 00ac 0120     		movs	r0, #1
 880 00ae FFF7FEFF 		bl	LED_Write
 373:main.c        ****                     break;    
 881              		.loc 1 373 0
 882 00b2 2AE0     		b	.L28
 883              	.L35:
 374:main.c        ****                     
 375:main.c        ****                 case 6:// 1 1 0 // Q5 under black  
 376:main.c        ****                     motorTurnRight(160);//increase 200 by 6
 884              		.loc 1 376 0
 885 00b4 A020     		movs	r0, #160
 886 00b6 FFF7FEFF 		bl	motorTurnRight
 377:main.c        ****                     LED_Write(1);
 887              		.loc 1 377 0
 888 00ba 0120     		movs	r0, #1
 889 00bc FFF7FEFF 		bl	LED_Write
 378:main.c        ****                     break;
 890              		.loc 1 378 0
 891 00c0 23E0     		b	.L28
 892              	.L34:
 379:main.c        ****                     
 380:main.c        ****                 case 5:// 101 // Q4 under black
 381:main.c        ****                     motorGoStraight();
 893              		.loc 1 381 0
 894 00c2 FFF7FEFF 		bl	motorGoStraight
 382:main.c        ****                     LED_Write(0);
 895              		.loc 1 382 0
 896 00c6 0020     		movs	r0, #0
 897 00c8 FFF7FEFF 		bl	LED_Write
 383:main.c        ****                     break;
 898              		.loc 1 383 0
 899 00cc 1DE0     		b	.L28
 900              	.L31:
 384:main.c        ****                 case 1: // 001 --> left intersection
 385:main.c        ****                     //lastState=1;
 386:main.c        ****                     motorStop();
 901              		.loc 1 386 0
 902 00ce FFF7FEFF 		bl	motorStop
 387:main.c        ****                     CyDelay(50);
 903              		.loc 1 387 0
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 24


 904 00d2 3220     		movs	r0, #50
 905 00d4 FFF7FEFF 		bl	CyDelay
 388:main.c        ****                     motorTurnLeft(44);
 906              		.loc 1 388 0
 907 00d8 2C20     		movs	r0, #44
 908 00da FFF7FEFF 		bl	motorTurnLeft
 389:main.c        ****                     CyDelay(350);
 909              		.loc 1 389 0
 910 00de 4FF4AF70 		mov	r0, #350
 911 00e2 FFF7FEFF 		bl	CyDelay
 390:main.c        ****                     break;
 912              		.loc 1 390 0
 913 00e6 10E0     		b	.L28
 914              	.L33:
 391:main.c        ****                 case 4: // 100 --> right intersection
 392:main.c        ****                    // lastState=2;
 393:main.c        ****                     motorStop();
 915              		.loc 1 393 0
 916 00e8 FFF7FEFF 		bl	motorStop
 394:main.c        ****                     CyDelay(50);
 917              		.loc 1 394 0
 918 00ec 3220     		movs	r0, #50
 919 00ee FFF7FEFF 		bl	CyDelay
 395:main.c        ****                     motorTurnRight(206);
 920              		.loc 1 395 0
 921 00f2 CE20     		movs	r0, #206
 922 00f4 FFF7FEFF 		bl	motorTurnRight
 396:main.c        ****                     CyDelay(350);
 923              		.loc 1 396 0
 924 00f8 4FF4AF70 		mov	r0, #350
 925 00fc FFF7FEFF 		bl	CyDelay
 397:main.c        ****                     break;
 926              		.loc 1 397 0
 927 0100 03E0     		b	.L28
 928              	.L29:
 398:main.c        ****                     
 399:main.c        ****                 
 400:main.c        ****                 
 401:main.c        ****                 
 402:main.c        ****                     
 403:main.c        ****                 case 0: // 000 // ALL UNDER black
 404:main.c        ****                       
 405:main.c        ****                     motorStop();
 929              		.loc 1 405 0
 930 0102 FFF7FEFF 		bl	motorStop
 406:main.c        ****                     break;    
 931              		.loc 1 406 0
 932 0106 00E0     		b	.L28
 933              	.L40:
 368:main.c        ****                     
 934              		.loc 1 368 0
 935 0108 00BF     		nop
 936              	.L28:
 407:main.c        **** 
 408:main.c        ****                
 409:main.c        ****                 
 410:main.c        ****                
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 25


 411:main.c        ****             
 412:main.c        ****             }
 413:main.c        ****             
 414:main.c        ****         
 415:main.c        **** 
 416:main.c        ****        
 417:main.c        ****             //reset variable.
 418:main.c        ****             processSensors = 0;
 937              		.loc 1 418 0
 938 010a 0F4B     		ldr	r3, .L41+12
 939 010c 0022     		movs	r2, #0
 940 010e 1A60     		str	r2, [r3]
 419:main.c        ****             //reset counter
 420:main.c        **** 
 421:main.c        ****              counteoc = 0;
 941              		.loc 1 421 0
 942 0110 0E4B     		ldr	r3, .L41+16
 943 0112 0022     		movs	r2, #0
 944 0114 1A60     		str	r2, [r3]
 422:main.c        ****             //reset flags for lightsensors because it checks every 10 iterations, adds delay/
 423:main.c        ****             lightDetectedFront[0] = 0;
 945              		.loc 1 423 0
 946 0116 0E4B     		ldr	r3, .L41+20
 947 0118 0022     		movs	r2, #0
 948 011a 1A60     		str	r2, [r3]
 424:main.c        ****             lightDetectedFront[1] = 0;
 949              		.loc 1 424 0
 950 011c 0C4B     		ldr	r3, .L41+20
 951 011e 0022     		movs	r2, #0
 952 0120 5A60     		str	r2, [r3, #4]
 425:main.c        ****             lightDetectedFront[2] = 0;
 953              		.loc 1 425 0
 954 0122 0B4B     		ldr	r3, .L41+20
 955 0124 0022     		movs	r2, #0
 956 0126 9A60     		str	r2, [r3, #8]
 426:main.c        ****             lightDetectedBack[0] = 0;
 957              		.loc 1 426 0
 958 0128 0A4B     		ldr	r3, .L41+24
 959 012a 0022     		movs	r2, #0
 960 012c 1A60     		str	r2, [r3]
 427:main.c        ****             lightDetectedBack[1] = 0;
 961              		.loc 1 427 0
 962 012e 094B     		ldr	r3, .L41+24
 963 0130 0022     		movs	r2, #0
 964 0132 5A60     		str	r2, [r3, #4]
 428:main.c        ****             lightDetectedBack[2] = 0;
 965              		.loc 1 428 0
 966 0134 074B     		ldr	r3, .L41+24
 967 0136 0022     		movs	r2, #0
 968 0138 9A60     		str	r2, [r3, #8]
 969              	.LBE2:
 429:main.c        ****           
 430:main.c        ****         }
 431:main.c        ****         
 432:main.c        ****     }   
 970              		.loc 1 432 0
 971 013a 87E7     		b	.L39
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 26


 972              	.L42:
 973              		.align	2
 974              	.L41:
 975 013c 44000000 		.word	count
 976 0140 00000000 		.word	isr_TS_Interrupt_sample
 977 0144 00000000 		.word	isr_eoc_Interrupt_test
 978 0148 00000000 		.word	processSensors
 979 014c 00000000 		.word	counteoc
 980 0150 00000000 		.word	lightDetectedFront
 981 0154 00000000 		.word	lightDetectedBack
 982              		.cfi_endproc
 983              	.LFE76:
 984              		.size	main, .-main
 985              		.section	.text.convertBackBinary,"ax",%progbits
 986              		.align	2
 987              		.global	convertBackBinary
 988              		.thumb
 989              		.thumb_func
 990              		.type	convertBackBinary, %function
 991              	convertBackBinary:
 992              	.LFB77:
 433:main.c        ****     
 434:main.c        **** //////////////////////////////////////
 435:main.c        **** }
 436:main.c        **** 
 437:main.c        ****   
 438:main.c        **** 
 439:main.c        **** int convertBackBinary(){
 993              		.loc 1 439 0
 994              		.cfi_startproc
 995              		@ args = 0, pretend = 0, frame = 8
 996              		@ frame_needed = 1, uses_anonymous_args = 0
 997              		@ link register save eliminated.
 998 0000 80B4     		push	{r7}
 999              		.cfi_def_cfa_offset 4
 1000              		.cfi_offset 7, -4
 1001 0002 83B0     		sub	sp, sp, #12
 1002              		.cfi_def_cfa_offset 16
 1003 0004 00AF     		add	r7, sp, #0
 1004              		.cfi_def_cfa_register 7
 440:main.c        **** 
 441:main.c        ****     int value1=0;
 1005              		.loc 1 441 0
 1006 0006 0023     		movs	r3, #0
 1007 0008 7B60     		str	r3, [r7, #4]
 442:main.c        ****     //int Q2 = lightDetectedBack[0];
 443:main.c        ****     //int Q1 = lightDetectedBack[1] ;
 444:main.c        ****     //int Q6 =lightDetectedBack[2];
 445:main.c        ****     value1 = value1 + lightDetectedBack[0] *4;
 1008              		.loc 1 445 0
 1009 000a 0B4B     		ldr	r3, .L45
 1010 000c 1B68     		ldr	r3, [r3]
 1011 000e 9B00     		lsls	r3, r3, #2
 1012 0010 7A68     		ldr	r2, [r7, #4]
 1013 0012 1344     		add	r3, r3, r2
 1014 0014 7B60     		str	r3, [r7, #4]
 446:main.c        ****     value1 =  value1 + lightDetectedBack[1] *2;
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 27


 1015              		.loc 1 446 0
 1016 0016 084B     		ldr	r3, .L45
 1017 0018 5B68     		ldr	r3, [r3, #4]
 1018 001a 5B00     		lsls	r3, r3, #1
 1019 001c 7A68     		ldr	r2, [r7, #4]
 1020 001e 1344     		add	r3, r3, r2
 1021 0020 7B60     		str	r3, [r7, #4]
 447:main.c        ****     value1 = value1 +  lightDetectedBack[2] *1;
 1022              		.loc 1 447 0
 1023 0022 054B     		ldr	r3, .L45
 1024 0024 9B68     		ldr	r3, [r3, #8]
 1025 0026 7A68     		ldr	r2, [r7, #4]
 1026 0028 1344     		add	r3, r3, r2
 1027 002a 7B60     		str	r3, [r7, #4]
 448:main.c        ****     return value1;
 1028              		.loc 1 448 0
 1029 002c 7B68     		ldr	r3, [r7, #4]
 449:main.c        **** 
 450:main.c        **** }
 1030              		.loc 1 450 0
 1031 002e 1846     		mov	r0, r3
 1032 0030 0C37     		adds	r7, r7, #12
 1033              		.cfi_def_cfa_offset 4
 1034 0032 BD46     		mov	sp, r7
 1035              		.cfi_def_cfa_register 13
 1036              		@ sp needed
 1037 0034 80BC     		pop	{r7}
 1038              		.cfi_restore 7
 1039              		.cfi_def_cfa_offset 0
 1040 0036 7047     		bx	lr
 1041              	.L46:
 1042              		.align	2
 1043              	.L45:
 1044 0038 00000000 		.word	lightDetectedBack
 1045              		.cfi_endproc
 1046              	.LFE77:
 1047              		.size	convertBackBinary, .-convertBackBinary
 1048              		.section	.text.convertSensorBinary,"ax",%progbits
 1049              		.align	2
 1050              		.global	convertSensorBinary
 1051              		.thumb
 1052              		.thumb_func
 1053              		.type	convertSensorBinary, %function
 1054              	convertSensorBinary:
 1055              	.LFB78:
 451:main.c        **** 
 452:main.c        **** int convertSensorBinary()
 453:main.c        **** {
 1056              		.loc 1 453 0
 1057              		.cfi_startproc
 1058              		@ args = 0, pretend = 0, frame = 16
 1059              		@ frame_needed = 1, uses_anonymous_args = 0
 1060              		@ link register save eliminated.
 1061 0000 80B4     		push	{r7}
 1062              		.cfi_def_cfa_offset 4
 1063              		.cfi_offset 7, -4
 1064 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 28


 1065              		.cfi_def_cfa_offset 24
 1066 0004 00AF     		add	r7, sp, #0
 1067              		.cfi_def_cfa_register 7
 454:main.c        ****    int value=0;
 1068              		.loc 1 454 0
 1069 0006 0023     		movs	r3, #0
 1070 0008 FB60     		str	r3, [r7, #12]
 455:main.c        ****   int Q3 = lightDetectedFront[0];
 1071              		.loc 1 455 0
 1072 000a 104B     		ldr	r3, .L49
 1073 000c 1B68     		ldr	r3, [r3]
 1074 000e BB60     		str	r3, [r7, #8]
 456:main.c        ****   int Q4 = lightDetectedFront[1];
 1075              		.loc 1 456 0
 1076 0010 0E4B     		ldr	r3, .L49
 1077 0012 5B68     		ldr	r3, [r3, #4]
 1078 0014 7B60     		str	r3, [r7, #4]
 457:main.c        ****    int Q5 = lightDetectedFront[2];
 1079              		.loc 1 457 0
 1080 0016 0D4B     		ldr	r3, .L49
 1081 0018 9B68     		ldr	r3, [r3, #8]
 1082 001a 3B60     		str	r3, [r7]
 458:main.c        ****   value=value + lightDetectedFront[0]*4;
 1083              		.loc 1 458 0
 1084 001c 0B4B     		ldr	r3, .L49
 1085 001e 1B68     		ldr	r3, [r3]
 1086 0020 9B00     		lsls	r3, r3, #2
 1087 0022 FA68     		ldr	r2, [r7, #12]
 1088 0024 1344     		add	r3, r3, r2
 1089 0026 FB60     		str	r3, [r7, #12]
 459:main.c        ****   value=value + lightDetectedFront[1]*2;
 1090              		.loc 1 459 0
 1091 0028 084B     		ldr	r3, .L49
 1092 002a 5B68     		ldr	r3, [r3, #4]
 1093 002c 5B00     		lsls	r3, r3, #1
 1094 002e FA68     		ldr	r2, [r7, #12]
 1095 0030 1344     		add	r3, r3, r2
 1096 0032 FB60     		str	r3, [r7, #12]
 460:main.c        ****   value=value + lightDetectedFront[2]*1;
 1097              		.loc 1 460 0
 1098 0034 054B     		ldr	r3, .L49
 1099 0036 9B68     		ldr	r3, [r3, #8]
 1100 0038 FA68     		ldr	r2, [r7, #12]
 1101 003a 1344     		add	r3, r3, r2
 1102 003c FB60     		str	r3, [r7, #12]
 461:main.c        ****     return value;
 1103              		.loc 1 461 0
 1104 003e FB68     		ldr	r3, [r7, #12]
 462:main.c        **** }
 1105              		.loc 1 462 0
 1106 0040 1846     		mov	r0, r3
 1107 0042 1437     		adds	r7, r7, #20
 1108              		.cfi_def_cfa_offset 4
 1109 0044 BD46     		mov	sp, r7
 1110              		.cfi_def_cfa_register 13
 1111              		@ sp needed
 1112 0046 80BC     		pop	{r7}
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 29


 1113              		.cfi_restore 7
 1114              		.cfi_def_cfa_offset 0
 1115 0048 7047     		bx	lr
 1116              	.L50:
 1117 004a 00BF     		.align	2
 1118              	.L49:
 1119 004c 00000000 		.word	lightDetectedFront
 1120              		.cfi_endproc
 1121              	.LFE78:
 1122              		.size	convertSensorBinary, .-convertSensorBinary
 1123              		.section	.text.usbPutString,"ax",%progbits
 1124              		.align	2
 1125              		.global	usbPutString
 1126              		.thumb
 1127              		.thumb_func
 1128              		.type	usbPutString, %function
 1129              	usbPutString:
 1130              	.LFB79:
 463:main.c        **** //* ========================================
 464:main.c        **** void usbPutString(char *s)
 465:main.c        **** {
 1131              		.loc 1 465 0
 1132              		.cfi_startproc
 1133              		@ args = 0, pretend = 0, frame = 8
 1134              		@ frame_needed = 1, uses_anonymous_args = 0
 1135 0000 80B5     		push	{r7, lr}
 1136              		.cfi_def_cfa_offset 8
 1137              		.cfi_offset 7, -8
 1138              		.cfi_offset 14, -4
 1139 0002 82B0     		sub	sp, sp, #8
 1140              		.cfi_def_cfa_offset 16
 1141 0004 00AF     		add	r7, sp, #0
 1142              		.cfi_def_cfa_register 7
 1143 0006 7860     		str	r0, [r7, #4]
 466:main.c        **** // !! Assumes that *s is a string with allocated space >=64 chars     
 467:main.c        **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 468:main.c        **** //  length to 62 char (63rd char is a '!')
 469:main.c        **** 
 470:main.c        **** #ifdef USE_USB     
 471:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1144              		.loc 1 471 0
 1145 0008 00BF     		nop
 1146              	.L52:
 1147              		.loc 1 471 0 is_stmt 0 discriminator 1
 1148 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 1149 000e 0346     		mov	r3, r0
 1150 0010 002B     		cmp	r3, #0
 1151 0012 FAD0     		beq	.L52
 472:main.c        ****     s[63]='\0';
 1152              		.loc 1 472 0 is_stmt 1
 1153 0014 7B68     		ldr	r3, [r7, #4]
 1154 0016 3F33     		adds	r3, r3, #63
 1155 0018 0022     		movs	r2, #0
 1156 001a 1A70     		strb	r2, [r3]
 473:main.c        ****     s[62]='!';
 1157              		.loc 1 473 0
 1158 001c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 30


 1159 001e 3E33     		adds	r3, r3, #62
 1160 0020 2122     		movs	r2, #33
 1161 0022 1A70     		strb	r2, [r3]
 474:main.c        ****     USBUART_PutData((uint8*)s,strlen(s));
 1162              		.loc 1 474 0
 1163 0024 7868     		ldr	r0, [r7, #4]
 1164 0026 FFF7FEFF 		bl	strlen
 1165 002a 0346     		mov	r3, r0
 1166 002c 9BB2     		uxth	r3, r3
 1167 002e 1946     		mov	r1, r3
 1168 0030 7868     		ldr	r0, [r7, #4]
 1169 0032 FFF7FEFF 		bl	USBUART_PutData
 475:main.c        **** #endif
 476:main.c        **** }
 1170              		.loc 1 476 0
 1171 0036 00BF     		nop
 1172 0038 0837     		adds	r7, r7, #8
 1173              		.cfi_def_cfa_offset 8
 1174 003a BD46     		mov	sp, r7
 1175              		.cfi_def_cfa_register 13
 1176              		@ sp needed
 1177 003c 80BD     		pop	{r7, pc}
 1178              		.cfi_endproc
 1179              	.LFE79:
 1180              		.size	usbPutString, .-usbPutString
 1181 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 1182              		.align	2
 1183              		.global	usbPutChar
 1184              		.thumb
 1185              		.thumb_func
 1186              		.type	usbPutChar, %function
 1187              	usbPutChar:
 1188              	.LFB80:
 477:main.c        **** //* ========================================
 478:main.c        **** void usbPutChar(char c)
 479:main.c        **** {
 1189              		.loc 1 479 0
 1190              		.cfi_startproc
 1191              		@ args = 0, pretend = 0, frame = 8
 1192              		@ frame_needed = 1, uses_anonymous_args = 0
 1193 0000 80B5     		push	{r7, lr}
 1194              		.cfi_def_cfa_offset 8
 1195              		.cfi_offset 7, -8
 1196              		.cfi_offset 14, -4
 1197 0002 82B0     		sub	sp, sp, #8
 1198              		.cfi_def_cfa_offset 16
 1199 0004 00AF     		add	r7, sp, #0
 1200              		.cfi_def_cfa_register 7
 1201 0006 0346     		mov	r3, r0
 1202 0008 FB71     		strb	r3, [r7, #7]
 480:main.c        **** #ifdef USE_USB     
 481:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1203              		.loc 1 481 0
 1204 000a 00BF     		nop
 1205              	.L54:
 1206              		.loc 1 481 0 is_stmt 0 discriminator 1
 1207 000c FFF7FEFF 		bl	USBUART_CDCIsReady
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 31


 1208 0010 0346     		mov	r3, r0
 1209 0012 002B     		cmp	r3, #0
 1210 0014 FAD0     		beq	.L54
 482:main.c        ****     USBUART_PutChar(c);
 1211              		.loc 1 482 0 is_stmt 1
 1212 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1213 0018 1846     		mov	r0, r3
 1214 001a FFF7FEFF 		bl	USBUART_PutChar
 483:main.c        **** #endif    
 484:main.c        **** }
 1215              		.loc 1 484 0
 1216 001e 00BF     		nop
 1217 0020 0837     		adds	r7, r7, #8
 1218              		.cfi_def_cfa_offset 8
 1219 0022 BD46     		mov	sp, r7
 1220              		.cfi_def_cfa_register 13
 1221              		@ sp needed
 1222 0024 80BD     		pop	{r7, pc}
 1223              		.cfi_endproc
 1224              	.LFE80:
 1225              		.size	usbPutChar, .-usbPutChar
 1226 0026 00BF     		.section	.text.handle_usb,"ax",%progbits
 1227              		.align	2
 1228              		.global	handle_usb
 1229              		.thumb
 1230              		.thumb_func
 1231              		.type	handle_usb, %function
 1232              	handle_usb:
 1233              	.LFB81:
 485:main.c        **** //* ========================================
 486:main.c        **** void handle_usb()
 487:main.c        **** {
 1234              		.loc 1 487 0
 1235              		.cfi_startproc
 1236              		@ args = 0, pretend = 0, frame = 8
 1237              		@ frame_needed = 1, uses_anonymous_args = 0
 1238 0000 80B5     		push	{r7, lr}
 1239              		.cfi_def_cfa_offset 8
 1240              		.cfi_offset 7, -8
 1241              		.cfi_offset 14, -4
 1242 0002 82B0     		sub	sp, sp, #8
 1243              		.cfi_def_cfa_offset 16
 1244 0004 00AF     		add	r7, sp, #0
 1245              		.cfi_def_cfa_register 7
 488:main.c        ****     // handles input at terminal, echos it back to the terminal
 489:main.c        ****     // turn echo OFF, key emulation: only CR
 490:main.c        ****     // entered string is made available in 'line' and 'flag_KB_string' is set
 491:main.c        ****     
 492:main.c        ****     static uint8 usbStarted = FALSE;
 493:main.c        ****     static uint16 usbBufCount = 0;
 494:main.c        ****     uint8 c = 0; 
 1246              		.loc 1 494 0
 1247 0006 0023     		movs	r3, #0
 1248 0008 FB71     		strb	r3, [r7, #7]
 495:main.c        ****     
 496:main.c        **** 
 497:main.c        ****     if (!usbStarted)
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 32


 1249              		.loc 1 497 0
 1250 000a 2B4B     		ldr	r3, .L65
 1251 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1252 000e 002B     		cmp	r3, #0
 1253 0010 0AD1     		bne	.L56
 498:main.c        ****     {
 499:main.c        ****         if (USBUART_GetConfiguration())
 1254              		.loc 1 499 0
 1255 0012 FFF7FEFF 		bl	USBUART_GetConfiguration
 1256 0016 0346     		mov	r3, r0
 1257 0018 002B     		cmp	r3, #0
 1258 001a 49D0     		beq	.L64
 500:main.c        ****         {
 501:main.c        ****             USBUART_CDC_Init();
 1259              		.loc 1 501 0
 1260 001c FFF7FEFF 		bl	USBUART_CDC_Init
 502:main.c        ****             usbStarted = TRUE;
 1261              		.loc 1 502 0
 1262 0020 254B     		ldr	r3, .L65
 1263 0022 0122     		movs	r2, #1
 1264 0024 1A70     		strb	r2, [r3]
 503:main.c        ****         }
 504:main.c        ****     }
 505:main.c        ****     else
 506:main.c        ****     {
 507:main.c        ****         if (USBUART_DataIsReady() != 0)
 508:main.c        ****         {  
 509:main.c        ****             c = USBUART_GetChar();
 510:main.c        **** 
 511:main.c        ****             if ((c == 13) || (c == 10))
 512:main.c        ****             {
 513:main.c        **** //                if (usbBufCount > 0)
 514:main.c        ****                 {
 515:main.c        ****                     entry[usbBufCount]= '\0';
 516:main.c        ****                     strcpy(line,entry);
 517:main.c        ****                     usbBufCount = 0;
 518:main.c        ****                     flag_KB_string = 1;
 519:main.c        ****                 }
 520:main.c        ****             }
 521:main.c        ****             else 
 522:main.c        ****             {
 523:main.c        ****                 if (((c == CHAR_BACKSP) || (c == CHAR_DEL) ) && (usbBufCount > 0) )
 524:main.c        ****                     usbBufCount--;
 525:main.c        ****                 else
 526:main.c        ****                 {
 527:main.c        ****                     if (usbBufCount > (BUF_SIZE-2) ) // one less else strtok triggers a crash
 528:main.c        ****                     {
 529:main.c        ****                        USBUART_PutChar('!');        
 530:main.c        ****                     }
 531:main.c        ****                     else
 532:main.c        ****                         entry[usbBufCount++] = c;  
 533:main.c        ****                 }  
 534:main.c        ****             }
 535:main.c        ****         }
 536:main.c        ****     }    
 537:main.c        **** }
 1265              		.loc 1 537 0
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 33


 1266 0026 43E0     		b	.L64
 1267              	.L56:
 507:main.c        ****         {  
 1268              		.loc 1 507 0
 1269 0028 FFF7FEFF 		bl	USBUART_DataIsReady
 1270 002c 0346     		mov	r3, r0
 1271 002e 002B     		cmp	r3, #0
 1272 0030 3ED0     		beq	.L64
 509:main.c        **** 
 1273              		.loc 1 509 0
 1274 0032 FFF7FEFF 		bl	USBUART_GetChar
 1275 0036 0346     		mov	r3, r0
 1276 0038 FB71     		strb	r3, [r7, #7]
 511:main.c        ****             {
 1277              		.loc 1 511 0
 1278 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1279 003c 0D2B     		cmp	r3, #13
 1280 003e 02D0     		beq	.L59
 511:main.c        ****             {
 1281              		.loc 1 511 0 is_stmt 0 discriminator 1
 1282 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1283 0042 0A2B     		cmp	r3, #10
 1284 0044 10D1     		bne	.L60
 1285              	.L59:
 515:main.c        ****                     strcpy(line,entry);
 1286              		.loc 1 515 0 is_stmt 1
 1287 0046 1D4B     		ldr	r3, .L65+4
 1288 0048 1B88     		ldrh	r3, [r3]
 1289 004a 1A46     		mov	r2, r3
 1290 004c 1C4B     		ldr	r3, .L65+8
 1291 004e 0021     		movs	r1, #0
 1292 0050 9954     		strb	r1, [r3, r2]
 516:main.c        ****                     usbBufCount = 0;
 1293              		.loc 1 516 0
 1294 0052 1B49     		ldr	r1, .L65+8
 1295 0054 1B48     		ldr	r0, .L65+12
 1296 0056 FFF7FEFF 		bl	strcpy
 517:main.c        ****                     flag_KB_string = 1;
 1297              		.loc 1 517 0
 1298 005a 184B     		ldr	r3, .L65+4
 1299 005c 0022     		movs	r2, #0
 1300 005e 1A80     		strh	r2, [r3]	@ movhi
 518:main.c        ****                 }
 1301              		.loc 1 518 0
 1302 0060 194B     		ldr	r3, .L65+16
 1303 0062 0122     		movs	r2, #1
 1304 0064 1A70     		strb	r2, [r3]
 1305 0066 23E0     		b	.L58
 1306              	.L60:
 523:main.c        ****                     usbBufCount--;
 1307              		.loc 1 523 0
 1308 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1309 006a 082B     		cmp	r3, #8
 1310 006c 02D0     		beq	.L61
 523:main.c        ****                     usbBufCount--;
 1311              		.loc 1 523 0 is_stmt 0 discriminator 2
 1312 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 34


 1313 0070 7F2B     		cmp	r3, #127
 1314 0072 0AD1     		bne	.L62
 1315              	.L61:
 523:main.c        ****                     usbBufCount--;
 1316              		.loc 1 523 0 discriminator 3
 1317 0074 114B     		ldr	r3, .L65+4
 1318 0076 1B88     		ldrh	r3, [r3]
 1319 0078 002B     		cmp	r3, #0
 1320 007a 06D0     		beq	.L62
 524:main.c        ****                 else
 1321              		.loc 1 524 0 is_stmt 1
 1322 007c 0F4B     		ldr	r3, .L65+4
 1323 007e 1B88     		ldrh	r3, [r3]
 1324 0080 013B     		subs	r3, r3, #1
 1325 0082 9AB2     		uxth	r2, r3
 1326 0084 0D4B     		ldr	r3, .L65+4
 1327 0086 1A80     		strh	r2, [r3]	@ movhi
 1328 0088 12E0     		b	.L58
 1329              	.L62:
 527:main.c        ****                     {
 1330              		.loc 1 527 0
 1331 008a 0C4B     		ldr	r3, .L65+4
 1332 008c 1B88     		ldrh	r3, [r3]
 1333 008e 3E2B     		cmp	r3, #62
 1334 0090 03D9     		bls	.L63
 529:main.c        ****                     }
 1335              		.loc 1 529 0
 1336 0092 2120     		movs	r0, #33
 1337 0094 FFF7FEFF 		bl	USBUART_PutChar
 1338              		.loc 1 537 0
 1339 0098 0AE0     		b	.L64
 1340              	.L63:
 532:main.c        ****                 }  
 1341              		.loc 1 532 0
 1342 009a 084B     		ldr	r3, .L65+4
 1343 009c 1B88     		ldrh	r3, [r3]
 1344 009e 5A1C     		adds	r2, r3, #1
 1345 00a0 91B2     		uxth	r1, r2
 1346 00a2 064A     		ldr	r2, .L65+4
 1347 00a4 1180     		strh	r1, [r2]	@ movhi
 1348 00a6 1946     		mov	r1, r3
 1349 00a8 054A     		ldr	r2, .L65+8
 1350 00aa FB79     		ldrb	r3, [r7, #7]
 1351 00ac 5354     		strb	r3, [r2, r1]
 1352              		.loc 1 537 0
 1353 00ae FFE7     		b	.L64
 1354              	.L58:
 1355              	.L64:
 1356 00b0 00BF     		nop
 1357 00b2 0837     		adds	r7, r7, #8
 1358              		.cfi_def_cfa_offset 8
 1359 00b4 BD46     		mov	sp, r7
 1360              		.cfi_def_cfa_register 13
 1361              		@ sp needed
 1362 00b6 80BD     		pop	{r7, pc}
 1363              	.L66:
 1364              		.align	2
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 35


 1365              	.L65:
 1366 00b8 45000000 		.word	usbStarted.8811
 1367 00bc 46000000 		.word	usbBufCount.8812
 1368 00c0 00000000 		.word	entry
 1369 00c4 00000000 		.word	line
 1370 00c8 00000000 		.word	flag_KB_string
 1371              		.cfi_endproc
 1372              	.LFE81:
 1373              		.size	handle_usb, .-handle_usb
 1374              		.bss
 1375              	usbStarted.8811:
 1376 0045 00       		.space	1
 1377              		.align	1
 1378              	usbBufCount.8812:
 1379 0046 0000     		.space	2
 1380              		.text
 1381              	.Letext0:
 1382              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1383              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1384              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1385              		.file 5 "vars.h"
 1386              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1387              		.section	.debug_info,"",%progbits
 1388              	.Ldebug_info0:
 1389 0000 27070000 		.4byte	0x727
 1390 0004 0400     		.2byte	0x4
 1391 0006 00000000 		.4byte	.Ldebug_abbrev0
 1392 000a 04       		.byte	0x4
 1393 000b 01       		.uleb128 0x1
 1394 000c B5000000 		.4byte	.LASF102
 1395 0010 0C       		.byte	0xc
 1396 0011 C1040000 		.4byte	.LASF103
 1397 0015 AF010000 		.4byte	.LASF104
 1398 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1399 001d 00000000 		.4byte	0
 1400 0021 00000000 		.4byte	.Ldebug_line0
 1401 0025 02       		.uleb128 0x2
 1402 0026 01       		.byte	0x1
 1403 0027 06       		.byte	0x6
 1404 0028 AE030000 		.4byte	.LASF0
 1405 002c 02       		.uleb128 0x2
 1406 002d 01       		.byte	0x1
 1407 002e 08       		.byte	0x8
 1408 002f 75030000 		.4byte	.LASF1
 1409 0033 02       		.uleb128 0x2
 1410 0034 02       		.byte	0x2
 1411 0035 05       		.byte	0x5
 1412 0036 8B000000 		.4byte	.LASF2
 1413 003a 02       		.uleb128 0x2
 1414 003b 02       		.byte	0x2
 1415 003c 07       		.byte	0x7
 1416 003d 5F040000 		.4byte	.LASF3
 1417 0041 03       		.uleb128 0x3
 1418 0042 00050000 		.4byte	.LASF12
 1419 0046 02       		.byte	0x2
 1420 0047 3F       		.byte	0x3f
 1421 0048 4C000000 		.4byte	0x4c
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 36


 1422 004c 02       		.uleb128 0x2
 1423 004d 04       		.byte	0x4
 1424 004e 05       		.byte	0x5
 1425 004f D2020000 		.4byte	.LASF4
 1426 0053 02       		.uleb128 0x2
 1427 0054 04       		.byte	0x4
 1428 0055 07       		.byte	0x7
 1429 0056 C8040000 		.4byte	.LASF5
 1430 005a 02       		.uleb128 0x2
 1431 005b 08       		.byte	0x8
 1432 005c 05       		.byte	0x5
 1433 005d 86020000 		.4byte	.LASF6
 1434 0061 02       		.uleb128 0x2
 1435 0062 08       		.byte	0x8
 1436 0063 07       		.byte	0x7
 1437 0064 BA030000 		.4byte	.LASF7
 1438 0068 04       		.uleb128 0x4
 1439 0069 04       		.byte	0x4
 1440 006a 05       		.byte	0x5
 1441 006b 696E7400 		.ascii	"int\000"
 1442 006f 02       		.uleb128 0x2
 1443 0070 04       		.byte	0x4
 1444 0071 07       		.byte	0x7
 1445 0072 DD030000 		.4byte	.LASF8
 1446 0076 02       		.uleb128 0x2
 1447 0077 08       		.byte	0x8
 1448 0078 04       		.byte	0x4
 1449 0079 62030000 		.4byte	.LASF9
 1450 007d 02       		.uleb128 0x2
 1451 007e 04       		.byte	0x4
 1452 007f 07       		.byte	0x7
 1453 0080 A2000000 		.4byte	.LASF10
 1454 0084 05       		.uleb128 0x5
 1455 0085 04       		.byte	0x4
 1456 0086 8A000000 		.4byte	0x8a
 1457 008a 02       		.uleb128 0x2
 1458 008b 01       		.byte	0x1
 1459 008c 08       		.byte	0x8
 1460 008d 32040000 		.4byte	.LASF11
 1461 0091 03       		.uleb128 0x3
 1462 0092 42040000 		.4byte	.LASF13
 1463 0096 03       		.byte	0x3
 1464 0097 2C       		.byte	0x2c
 1465 0098 41000000 		.4byte	0x41
 1466 009c 02       		.uleb128 0x2
 1467 009d 08       		.byte	0x8
 1468 009e 04       		.byte	0x4
 1469 009f 29000000 		.4byte	.LASF14
 1470 00a3 02       		.uleb128 0x2
 1471 00a4 04       		.byte	0x4
 1472 00a5 04       		.byte	0x4
 1473 00a6 66020000 		.4byte	.LASF15
 1474 00aa 06       		.uleb128 0x6
 1475 00ab A9010000 		.4byte	.LASF16
 1476 00af 04       		.byte	0x4
 1477 00b0 E401     		.2byte	0x1e4
 1478 00b2 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 37


 1479 00b6 06       		.uleb128 0x6
 1480 00b7 8C010000 		.4byte	.LASF17
 1481 00bb 04       		.byte	0x4
 1482 00bc E501     		.2byte	0x1e5
 1483 00be 3A000000 		.4byte	0x3a
 1484 00c2 06       		.uleb128 0x6
 1485 00c3 A1020000 		.4byte	.LASF18
 1486 00c7 04       		.byte	0x4
 1487 00c8 E701     		.2byte	0x1e7
 1488 00ca 25000000 		.4byte	0x25
 1489 00ce 06       		.uleb128 0x6
 1490 00cf A3010000 		.4byte	.LASF19
 1491 00d3 04       		.byte	0x4
 1492 00d4 E801     		.2byte	0x1e8
 1493 00d6 33000000 		.4byte	0x33
 1494 00da 07       		.uleb128 0x7
 1495 00db 99010000 		.4byte	.LASF105
 1496 00df 20       		.byte	0x20
 1497 00e0 05       		.byte	0x5
 1498 00e1 29       		.byte	0x29
 1499 00e2 B3010000 		.4byte	0x1b3
 1500 00e6 08       		.uleb128 0x8
 1501 00e7 CF050000 		.4byte	.LASF20
 1502 00eb 05       		.byte	0x5
 1503 00ec 2A       		.byte	0x2a
 1504 00ed C2000000 		.4byte	0xc2
 1505 00f1 00       		.byte	0
 1506 00f2 08       		.uleb128 0x8
 1507 00f3 93010000 		.4byte	.LASF21
 1508 00f7 05       		.byte	0x5
 1509 00f8 2B       		.byte	0x2b
 1510 00f9 AA000000 		.4byte	0xaa
 1511 00fd 01       		.byte	0x1
 1512 00fe 08       		.uleb128 0x8
 1513 00ff 37040000 		.4byte	.LASF22
 1514 0103 05       		.byte	0x5
 1515 0104 2C       		.byte	0x2c
 1516 0105 CE000000 		.4byte	0xce
 1517 0109 02       		.byte	0x2
 1518 010a 08       		.uleb128 0x8
 1519 010b 81050000 		.4byte	.LASF23
 1520 010f 05       		.byte	0x5
 1521 0110 2D       		.byte	0x2d
 1522 0111 CE000000 		.4byte	0xce
 1523 0115 04       		.byte	0x4
 1524 0116 08       		.uleb128 0x8
 1525 0117 D4050000 		.4byte	.LASF24
 1526 011b 05       		.byte	0x5
 1527 011c 2E       		.byte	0x2e
 1528 011d CE000000 		.4byte	0xce
 1529 0121 06       		.byte	0x6
 1530 0122 08       		.uleb128 0x8
 1531 0123 CA020000 		.4byte	.LASF25
 1532 0127 05       		.byte	0x5
 1533 0128 2F       		.byte	0x2f
 1534 0129 CE000000 		.4byte	0xce
 1535 012d 08       		.byte	0x8
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 38


 1536 012e 08       		.uleb128 0x8
 1537 012f 33050000 		.4byte	.LASF26
 1538 0133 05       		.byte	0x5
 1539 0134 30       		.byte	0x30
 1540 0135 CE000000 		.4byte	0xce
 1541 0139 0A       		.byte	0xa
 1542 013a 08       		.uleb128 0x8
 1543 013b 96030000 		.4byte	.LASF27
 1544 013f 05       		.byte	0x5
 1545 0140 31       		.byte	0x31
 1546 0141 CE000000 		.4byte	0xce
 1547 0145 0C       		.byte	0xc
 1548 0146 08       		.uleb128 0x8
 1549 0147 BD020000 		.4byte	.LASF28
 1550 014b 05       		.byte	0x5
 1551 014c 32       		.byte	0x32
 1552 014d CE000000 		.4byte	0xce
 1553 0151 0E       		.byte	0xe
 1554 0152 08       		.uleb128 0x8
 1555 0153 0E040000 		.4byte	.LASF29
 1556 0157 05       		.byte	0x5
 1557 0158 33       		.byte	0x33
 1558 0159 CE000000 		.4byte	0xce
 1559 015d 10       		.byte	0x10
 1560 015e 08       		.uleb128 0x8
 1561 015f 4A040000 		.4byte	.LASF30
 1562 0163 05       		.byte	0x5
 1563 0164 34       		.byte	0x34
 1564 0165 CE000000 		.4byte	0xce
 1565 0169 12       		.byte	0x12
 1566 016a 08       		.uleb128 0x8
 1567 016b 80040000 		.4byte	.LASF31
 1568 016f 05       		.byte	0x5
 1569 0170 35       		.byte	0x35
 1570 0171 CE000000 		.4byte	0xce
 1571 0175 14       		.byte	0x14
 1572 0176 08       		.uleb128 0x8
 1573 0177 AC050000 		.4byte	.LASF32
 1574 017b 05       		.byte	0x5
 1575 017c 36       		.byte	0x36
 1576 017d CE000000 		.4byte	0xce
 1577 0181 16       		.byte	0x16
 1578 0182 08       		.uleb128 0x8
 1579 0183 83000000 		.4byte	.LASF33
 1580 0187 05       		.byte	0x5
 1581 0188 37       		.byte	0x37
 1582 0189 CE000000 		.4byte	0xce
 1583 018d 18       		.byte	0x18
 1584 018e 08       		.uleb128 0x8
 1585 018f B5020000 		.4byte	.LASF34
 1586 0193 05       		.byte	0x5
 1587 0194 38       		.byte	0x38
 1588 0195 CE000000 		.4byte	0xce
 1589 0199 1A       		.byte	0x1a
 1590 019a 08       		.uleb128 0x8
 1591 019b 05040000 		.4byte	.LASF35
 1592 019f 05       		.byte	0x5
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 39


 1593 01a0 39       		.byte	0x39
 1594 01a1 CE000000 		.4byte	0xce
 1595 01a5 1C       		.byte	0x1c
 1596 01a6 08       		.uleb128 0x8
 1597 01a7 52040000 		.4byte	.LASF36
 1598 01ab 05       		.byte	0x5
 1599 01ac 3A       		.byte	0x3a
 1600 01ad CE000000 		.4byte	0xce
 1601 01b1 1E       		.byte	0x1e
 1602 01b2 00       		.byte	0
 1603 01b3 09       		.uleb128 0x9
 1604 01b4 18050000 		.4byte	.LASF37
 1605 01b8 01       		.byte	0x1
 1606 01b9 34       		.byte	0x34
 1607 01ba 00000000 		.4byte	.LFB64
 1608 01be 14000000 		.4byte	.LFE64-.LFB64
 1609 01c2 01       		.uleb128 0x1
 1610 01c3 9C       		.byte	0x9c
 1611 01c4 0A       		.uleb128 0xa
 1612 01c5 72040000 		.4byte	.LASF40
 1613 01c9 01       		.byte	0x1
 1614 01ca 3A       		.byte	0x3a
 1615 01cb 00000000 		.4byte	.LFB65
 1616 01cf 2E000000 		.4byte	.LFE65-.LFB65
 1617 01d3 01       		.uleb128 0x1
 1618 01d4 9C       		.byte	0x9c
 1619 01d5 E6010000 		.4byte	0x1e6
 1620 01d9 0B       		.uleb128 0xb
 1621 01da 7800     		.ascii	"x\000"
 1622 01dc 01       		.byte	0x1
 1623 01dd 3A       		.byte	0x3a
 1624 01de 68000000 		.4byte	0x68
 1625 01e2 02       		.uleb128 0x2
 1626 01e3 91       		.byte	0x91
 1627 01e4 74       		.sleb128 -12
 1628 01e5 00       		.byte	0
 1629 01e6 09       		.uleb128 0x9
 1630 01e7 67000000 		.4byte	.LASF38
 1631 01eb 01       		.byte	0x1
 1632 01ec 42       		.byte	0x42
 1633 01ed 00000000 		.4byte	.LFB66
 1634 01f1 14000000 		.4byte	.LFE66-.LFB66
 1635 01f5 01       		.uleb128 0x1
 1636 01f6 9C       		.byte	0x9c
 1637 01f7 09       		.uleb128 0x9
 1638 01f8 00000000 		.4byte	.LASF39
 1639 01fc 01       		.byte	0x1
 1640 01fd 48       		.byte	0x48
 1641 01fe 00000000 		.4byte	.LFB67
 1642 0202 14000000 		.4byte	.LFE67-.LFB67
 1643 0206 01       		.uleb128 0x1
 1644 0207 9C       		.byte	0x9c
 1645 0208 0A       		.uleb128 0xa
 1646 0209 0A050000 		.4byte	.LASF41
 1647 020d 01       		.byte	0x1
 1648 020e 4D       		.byte	0x4d
 1649 020f 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 40


 1650 0213 20000000 		.4byte	.LFE68-.LFB68
 1651 0217 01       		.uleb128 0x1
 1652 0218 9C       		.byte	0x9c
 1653 0219 2A020000 		.4byte	0x22a
 1654 021d 0B       		.uleb128 0xb
 1655 021e 7800     		.ascii	"x\000"
 1656 0220 01       		.byte	0x1
 1657 0221 4D       		.byte	0x4d
 1658 0222 AA000000 		.4byte	0xaa
 1659 0226 02       		.uleb128 0x2
 1660 0227 91       		.byte	0x91
 1661 0228 77       		.sleb128 -9
 1662 0229 00       		.byte	0
 1663 022a 0A       		.uleb128 0xa
 1664 022b B9050000 		.4byte	.LASF42
 1665 022f 01       		.byte	0x1
 1666 0230 58       		.byte	0x58
 1667 0231 00000000 		.4byte	.LFB69
 1668 0235 20000000 		.4byte	.LFE69-.LFB69
 1669 0239 01       		.uleb128 0x1
 1670 023a 9C       		.byte	0x9c
 1671 023b 4C020000 		.4byte	0x24c
 1672 023f 0B       		.uleb128 0xb
 1673 0240 7800     		.ascii	"x\000"
 1674 0242 01       		.byte	0x1
 1675 0243 58       		.byte	0x58
 1676 0244 68000000 		.4byte	0x68
 1677 0248 02       		.uleb128 0x2
 1678 0249 91       		.byte	0x91
 1679 024a 74       		.sleb128 -12
 1680 024b 00       		.byte	0
 1681 024c 0A       		.uleb128 0xa
 1682 024d D1030000 		.4byte	.LASF43
 1683 0251 01       		.byte	0x1
 1684 0252 61       		.byte	0x61
 1685 0253 00000000 		.4byte	.LFB70
 1686 0257 2A000000 		.4byte	.LFE70-.LFB70
 1687 025b 01       		.uleb128 0x1
 1688 025c 9C       		.byte	0x9c
 1689 025d 6E020000 		.4byte	0x26e
 1690 0261 0B       		.uleb128 0xb
 1691 0262 7800     		.ascii	"x\000"
 1692 0264 01       		.byte	0x1
 1693 0265 61       		.byte	0x61
 1694 0266 AA000000 		.4byte	0xaa
 1695 026a 02       		.uleb128 0x2
 1696 026b 91       		.byte	0x91
 1697 026c 77       		.sleb128 -9
 1698 026d 00       		.byte	0
 1699 026e 0A       		.uleb128 0xa
 1700 026f 50000000 		.4byte	.LASF44
 1701 0273 01       		.byte	0x1
 1702 0274 74       		.byte	0x74
 1703 0275 00000000 		.4byte	.LFB71
 1704 0279 E0000000 		.4byte	.LFE71-.LFB71
 1705 027d 01       		.uleb128 0x1
 1706 027e 9C       		.byte	0x9c
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 41


 1707 027f D8020000 		.4byte	0x2d8
 1708 0283 0C       		.uleb128 0xc
 1709 0284 61010000 		.4byte	.LASF45
 1710 0288 01       		.byte	0x1
 1711 0289 7C       		.byte	0x7c
 1712 028a CE000000 		.4byte	0xce
 1713 028e 02       		.uleb128 0x2
 1714 028f 91       		.byte	0x91
 1715 0290 76       		.sleb128 -10
 1716 0291 0C       		.uleb128 0xc
 1717 0292 69010000 		.4byte	.LASF46
 1718 0296 01       		.byte	0x1
 1719 0297 7D       		.byte	0x7d
 1720 0298 CE000000 		.4byte	0xce
 1721 029c 02       		.uleb128 0x2
 1722 029d 91       		.byte	0x91
 1723 029e 74       		.sleb128 -12
 1724 029f 0C       		.uleb128 0xc
 1725 02a0 71010000 		.4byte	.LASF47
 1726 02a4 01       		.byte	0x1
 1727 02a5 7E       		.byte	0x7e
 1728 02a6 CE000000 		.4byte	0xce
 1729 02aa 02       		.uleb128 0x2
 1730 02ab 91       		.byte	0x91
 1731 02ac 72       		.sleb128 -14
 1732 02ad 0C       		.uleb128 0xc
 1733 02ae 59010000 		.4byte	.LASF48
 1734 02b2 01       		.byte	0x1
 1735 02b3 81       		.byte	0x81
 1736 02b4 CE000000 		.4byte	0xce
 1737 02b8 02       		.uleb128 0x2
 1738 02b9 91       		.byte	0x91
 1739 02ba 70       		.sleb128 -16
 1740 02bb 0C       		.uleb128 0xc
 1741 02bc 51010000 		.4byte	.LASF49
 1742 02c0 01       		.byte	0x1
 1743 02c1 82       		.byte	0x82
 1744 02c2 CE000000 		.4byte	0xce
 1745 02c6 02       		.uleb128 0x2
 1746 02c7 91       		.byte	0x91
 1747 02c8 6E       		.sleb128 -18
 1748 02c9 0C       		.uleb128 0xc
 1749 02ca 79010000 		.4byte	.LASF50
 1750 02ce 01       		.byte	0x1
 1751 02cf 83       		.byte	0x83
 1752 02d0 CE000000 		.4byte	0xce
 1753 02d4 02       		.uleb128 0x2
 1754 02d5 91       		.byte	0x91
 1755 02d6 6C       		.sleb128 -20
 1756 02d7 00       		.byte	0
 1757 02d8 0D       		.uleb128 0xd
 1758 02d9 6C020000 		.4byte	.LASF58
 1759 02dd 01       		.byte	0x1
 1760 02de AE       		.byte	0xae
 1761 02df 00000000 		.4byte	.LFB72
 1762 02e3 0C000000 		.4byte	.LFE72-.LFB72
 1763 02e7 01       		.uleb128 0x1
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 42


 1764 02e8 9C       		.byte	0x9c
 1765 02e9 0E       		.uleb128 0xe
 1766 02ea 28050000 		.4byte	.LASF70
 1767 02ee 01       		.byte	0x1
 1768 02ef C1       		.byte	0xc1
 1769 02f0 00000000 		.4byte	.LFB73
 1770 02f4 C0000000 		.4byte	.LFE73-.LFB73
 1771 02f8 01       		.uleb128 0x1
 1772 02f9 9C       		.byte	0x9c
 1773 02fa 57030000 		.4byte	0x357
 1774 02fe 0C       		.uleb128 0xc
 1775 02ff DB020000 		.4byte	.LASF51
 1776 0303 01       		.byte	0x1
 1777 0304 C2       		.byte	0xc2
 1778 0305 CE000000 		.4byte	0xce
 1779 0309 02       		.uleb128 0x2
 1780 030a 91       		.byte	0x91
 1781 030b 76       		.sleb128 -10
 1782 030c 0C       		.uleb128 0xc
 1783 030d F0020000 		.4byte	.LASF52
 1784 0311 01       		.byte	0x1
 1785 0312 C3       		.byte	0xc3
 1786 0313 CE000000 		.4byte	0xce
 1787 0317 02       		.uleb128 0x2
 1788 0318 91       		.byte	0x91
 1789 0319 74       		.sleb128 -12
 1790 031a 0C       		.uleb128 0xc
 1791 031b 4D030000 		.4byte	.LASF53
 1792 031f 01       		.byte	0x1
 1793 0320 C4       		.byte	0xc4
 1794 0321 CE000000 		.4byte	0xce
 1795 0325 02       		.uleb128 0x2
 1796 0326 91       		.byte	0x91
 1797 0327 72       		.sleb128 -14
 1798 0328 0C       		.uleb128 0xc
 1799 0329 3E030000 		.4byte	.LASF54
 1800 032d 01       		.byte	0x1
 1801 032e C5       		.byte	0xc5
 1802 032f CE000000 		.4byte	0xce
 1803 0333 02       		.uleb128 0x2
 1804 0334 91       		.byte	0x91
 1805 0335 70       		.sleb128 -16
 1806 0336 0C       		.uleb128 0xc
 1807 0337 05030000 		.4byte	.LASF55
 1808 033b 01       		.byte	0x1
 1809 033c C6       		.byte	0xc6
 1810 033d 57030000 		.4byte	0x357
 1811 0341 04       		.uleb128 0x4
 1812 0342 91       		.byte	0x91
 1813 0343 E0B17F   		.sleb128 -10016
 1814 0346 0C       		.uleb128 0xc
 1815 0347 9F050000 		.4byte	.LASF56
 1816 034b 01       		.byte	0x1
 1817 034c C8       		.byte	0xc8
 1818 034d 57030000 		.4byte	0x357
 1819 0351 04       		.uleb128 0x4
 1820 0352 91       		.byte	0x91
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 43


 1821 0353 D0E37E   		.sleb128 -20016
 1822 0356 00       		.byte	0
 1823 0357 0F       		.uleb128 0xf
 1824 0358 8A000000 		.4byte	0x8a
 1825 035c 68030000 		.4byte	0x368
 1826 0360 10       		.uleb128 0x10
 1827 0361 7D000000 		.4byte	0x7d
 1828 0365 0F27     		.2byte	0x270f
 1829 0367 00       		.byte	0
 1830 0368 0A       		.uleb128 0xa
 1831 0369 48010000 		.4byte	.LASF57
 1832 036d 01       		.byte	0x1
 1833 036e D0       		.byte	0xd0
 1834 036f 00000000 		.4byte	.LFB74
 1835 0373 1A000000 		.4byte	.LFE74-.LFB74
 1836 0377 01       		.uleb128 0x1
 1837 0378 9C       		.byte	0x9c
 1838 0379 8A030000 		.4byte	0x38a
 1839 037d 0B       		.uleb128 0xb
 1840 037e 7800     		.ascii	"x\000"
 1841 0380 01       		.byte	0x1
 1842 0381 D0       		.byte	0xd0
 1843 0382 68000000 		.4byte	0x68
 1844 0386 02       		.uleb128 0x2
 1845 0387 91       		.byte	0x91
 1846 0388 74       		.sleb128 -12
 1847 0389 00       		.byte	0
 1848 038a 11       		.uleb128 0x11
 1849 038b 0A000000 		.4byte	.LASF59
 1850 038f 01       		.byte	0x1
 1851 0390 E8       		.byte	0xe8
 1852 0391 00000000 		.4byte	.LFB75
 1853 0395 0C000000 		.4byte	.LFE75-.LFB75
 1854 0399 01       		.uleb128 0x1
 1855 039a 9C       		.byte	0x9c
 1856 039b 12       		.uleb128 0x12
 1857 039c 43010000 		.4byte	.LASF60
 1858 03a0 01       		.byte	0x1
 1859 03a1 F5       		.byte	0xf5
 1860 03a2 68000000 		.4byte	0x68
 1861 03a6 00000000 		.4byte	.LFB76
 1862 03aa 58010000 		.4byte	.LFE76-.LFB76
 1863 03ae 01       		.uleb128 0x1
 1864 03af 9C       		.byte	0x9c
 1865 03b0 EC030000 		.4byte	0x3ec
 1866 03b4 13       		.uleb128 0x13
 1867 03b5 46050000 		.4byte	.LASF61
 1868 03b9 01       		.byte	0x1
 1869 03ba 1801     		.2byte	0x118
 1870 03bc 68000000 		.4byte	0x68
 1871 03c0 02       		.uleb128 0x2
 1872 03c1 91       		.byte	0x91
 1873 03c2 74       		.sleb128 -12
 1874 03c3 14       		.uleb128 0x14
 1875 03c4 54000000 		.4byte	.LBB2
 1876 03c8 E6000000 		.4byte	.LBE2-.LBB2
 1877 03cc 13       		.uleb128 0x13
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 44


 1878 03cd 16040000 		.4byte	.LASF62
 1879 03d1 01       		.byte	0x1
 1880 03d2 5B01     		.2byte	0x15b
 1881 03d4 68000000 		.4byte	0x68
 1882 03d8 02       		.uleb128 0x2
 1883 03d9 91       		.byte	0x91
 1884 03da 70       		.sleb128 -16
 1885 03db 13       		.uleb128 0x13
 1886 03dc 89040000 		.4byte	.LASF63
 1887 03e0 01       		.byte	0x1
 1888 03e1 5C01     		.2byte	0x15c
 1889 03e3 68000000 		.4byte	0x68
 1890 03e7 02       		.uleb128 0x2
 1891 03e8 91       		.byte	0x91
 1892 03e9 6C       		.sleb128 -20
 1893 03ea 00       		.byte	0
 1894 03eb 00       		.byte	0
 1895 03ec 15       		.uleb128 0x15
 1896 03ed 20040000 		.4byte	.LASF64
 1897 03f1 01       		.byte	0x1
 1898 03f2 B701     		.2byte	0x1b7
 1899 03f4 68000000 		.4byte	0x68
 1900 03f8 00000000 		.4byte	.LFB77
 1901 03fc 3C000000 		.4byte	.LFE77-.LFB77
 1902 0400 01       		.uleb128 0x1
 1903 0401 9C       		.byte	0x9c
 1904 0402 16040000 		.4byte	0x416
 1905 0406 13       		.uleb128 0x13
 1906 0407 6E030000 		.4byte	.LASF65
 1907 040b 01       		.byte	0x1
 1908 040c B901     		.2byte	0x1b9
 1909 040e 68000000 		.4byte	0x68
 1910 0412 02       		.uleb128 0x2
 1911 0413 91       		.byte	0x91
 1912 0414 74       		.sleb128 -12
 1913 0415 00       		.byte	0
 1914 0416 15       		.uleb128 0x15
 1915 0417 AD040000 		.4byte	.LASF66
 1916 041b 01       		.byte	0x1
 1917 041c C401     		.2byte	0x1c4
 1918 041e 68000000 		.4byte	0x68
 1919 0422 00000000 		.4byte	.LFB78
 1920 0426 50000000 		.4byte	.LFE78-.LFB78
 1921 042a 01       		.uleb128 0x1
 1922 042b 9C       		.byte	0x9c
 1923 042c 6A040000 		.4byte	0x46a
 1924 0430 13       		.uleb128 0x13
 1925 0431 99050000 		.4byte	.LASF67
 1926 0435 01       		.byte	0x1
 1927 0436 C601     		.2byte	0x1c6
 1928 0438 68000000 		.4byte	0x68
 1929 043c 02       		.uleb128 0x2
 1930 043d 91       		.byte	0x91
 1931 043e 74       		.sleb128 -12
 1932 043f 16       		.uleb128 0x16
 1933 0440 513300   		.ascii	"Q3\000"
 1934 0443 01       		.byte	0x1
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 45


 1935 0444 C701     		.2byte	0x1c7
 1936 0446 68000000 		.4byte	0x68
 1937 044a 02       		.uleb128 0x2
 1938 044b 91       		.byte	0x91
 1939 044c 70       		.sleb128 -16
 1940 044d 16       		.uleb128 0x16
 1941 044e 513400   		.ascii	"Q4\000"
 1942 0451 01       		.byte	0x1
 1943 0452 C801     		.2byte	0x1c8
 1944 0454 68000000 		.4byte	0x68
 1945 0458 02       		.uleb128 0x2
 1946 0459 91       		.byte	0x91
 1947 045a 6C       		.sleb128 -20
 1948 045b 16       		.uleb128 0x16
 1949 045c 513500   		.ascii	"Q5\000"
 1950 045f 01       		.byte	0x1
 1951 0460 C901     		.2byte	0x1c9
 1952 0462 68000000 		.4byte	0x68
 1953 0466 02       		.uleb128 0x2
 1954 0467 91       		.byte	0x91
 1955 0468 68       		.sleb128 -24
 1956 0469 00       		.byte	0
 1957 046a 17       		.uleb128 0x17
 1958 046b 94020000 		.4byte	.LASF68
 1959 046f 01       		.byte	0x1
 1960 0470 D001     		.2byte	0x1d0
 1961 0472 00000000 		.4byte	.LFB79
 1962 0476 3E000000 		.4byte	.LFE79-.LFB79
 1963 047a 01       		.uleb128 0x1
 1964 047b 9C       		.byte	0x9c
 1965 047c 8E040000 		.4byte	0x48e
 1966 0480 18       		.uleb128 0x18
 1967 0481 7300     		.ascii	"s\000"
 1968 0483 01       		.byte	0x1
 1969 0484 D001     		.2byte	0x1d0
 1970 0486 84000000 		.4byte	0x84
 1971 048a 02       		.uleb128 0x2
 1972 048b 91       		.byte	0x91
 1973 048c 74       		.sleb128 -12
 1974 048d 00       		.byte	0
 1975 048e 17       		.uleb128 0x17
 1976 048f 3C000000 		.4byte	.LASF69
 1977 0493 01       		.byte	0x1
 1978 0494 DE01     		.2byte	0x1de
 1979 0496 00000000 		.4byte	.LFB80
 1980 049a 26000000 		.4byte	.LFE80-.LFB80
 1981 049e 01       		.uleb128 0x1
 1982 049f 9C       		.byte	0x9c
 1983 04a0 B2040000 		.4byte	0x4b2
 1984 04a4 18       		.uleb128 0x18
 1985 04a5 6300     		.ascii	"c\000"
 1986 04a7 01       		.byte	0x1
 1987 04a8 DE01     		.2byte	0x1de
 1988 04aa 8A000000 		.4byte	0x8a
 1989 04ae 02       		.uleb128 0x2
 1990 04af 91       		.byte	0x91
 1991 04b0 77       		.sleb128 -9
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 46


 1992 04b1 00       		.byte	0
 1993 04b2 19       		.uleb128 0x19
 1994 04b3 5A050000 		.4byte	.LASF71
 1995 04b7 01       		.byte	0x1
 1996 04b8 E601     		.2byte	0x1e6
 1997 04ba 00000000 		.4byte	.LFB81
 1998 04be CC000000 		.4byte	.LFE81-.LFB81
 1999 04c2 01       		.uleb128 0x1
 2000 04c3 9C       		.byte	0x9c
 2001 04c4 FA040000 		.4byte	0x4fa
 2002 04c8 13       		.uleb128 0x13
 2003 04c9 DA040000 		.4byte	.LASF72
 2004 04cd 01       		.byte	0x1
 2005 04ce EC01     		.2byte	0x1ec
 2006 04d0 AA000000 		.4byte	0xaa
 2007 04d4 05       		.uleb128 0x5
 2008 04d5 03       		.byte	0x3
 2009 04d6 45000000 		.4byte	usbStarted.8811
 2010 04da 13       		.uleb128 0x13
 2011 04db F9030000 		.4byte	.LASF73
 2012 04df 01       		.byte	0x1
 2013 04e0 ED01     		.2byte	0x1ed
 2014 04e2 B6000000 		.4byte	0xb6
 2015 04e6 05       		.uleb128 0x5
 2016 04e7 03       		.byte	0x3
 2017 04e8 46000000 		.4byte	usbBufCount.8812
 2018 04ec 16       		.uleb128 0x16
 2019 04ed 6300     		.ascii	"c\000"
 2020 04ef 01       		.byte	0x1
 2021 04f0 EE01     		.2byte	0x1ee
 2022 04f2 AA000000 		.4byte	0xaa
 2023 04f6 02       		.uleb128 0x2
 2024 04f7 91       		.byte	0x91
 2025 04f8 77       		.sleb128 -9
 2026 04f9 00       		.byte	0
 2027 04fa 0C       		.uleb128 0xc
 2028 04fb EE040000 		.4byte	.LASF74
 2029 04ff 01       		.byte	0x1
 2030 0500 AD       		.byte	0xad
 2031 0501 0B050000 		.4byte	0x50b
 2032 0505 05       		.uleb128 0x5
 2033 0506 03       		.byte	0x3
 2034 0507 44000000 		.4byte	count
 2035 050b 1A       		.uleb128 0x1a
 2036 050c C2000000 		.4byte	0xc2
 2037 0510 1B       		.uleb128 0x1b
 2038 0511 8C050000 		.4byte	.LASF75
 2039 0515 06       		.byte	0x6
 2040 0516 1207     		.2byte	0x712
 2041 0518 1C050000 		.4byte	0x51c
 2042 051c 1A       		.uleb128 0x1a
 2043 051d 91000000 		.4byte	0x91
 2044 0521 1C       		.uleb128 0x1c
 2045 0522 747300   		.ascii	"ts\000"
 2046 0525 05       		.byte	0x5
 2047 0526 10       		.byte	0x10
 2048 0527 AA000000 		.4byte	0xaa
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 47


 2049 052b 05       		.uleb128 0x5
 2050 052c 03       		.byte	0x3
 2051 052d 00000000 		.4byte	ts
 2052 0531 1D       		.uleb128 0x1d
 2053 0532 22000000 		.4byte	.LASF76
 2054 0536 05       		.byte	0x5
 2055 0537 11       		.byte	0x11
 2056 0538 B6000000 		.4byte	0xb6
 2057 053c 05       		.uleb128 0x5
 2058 053d 03       		.byte	0x3
 2059 053e 00000000 		.4byte	ts_enc
 2060 0542 1D       		.uleb128 0x1d
 2061 0543 50050000 		.4byte	.LASF77
 2062 0547 05       		.byte	0x5
 2063 0548 12       		.byte	0x12
 2064 0549 B6000000 		.4byte	0xb6
 2065 054d 05       		.uleb128 0x5
 2066 054e 03       		.byte	0x3
 2067 054f 00000000 		.4byte	ts_update
 2068 0553 1D       		.uleb128 0x1d
 2069 0554 E5040000 		.4byte	.LASF78
 2070 0558 05       		.byte	0x5
 2071 0559 13       		.byte	0x13
 2072 055a B6000000 		.4byte	0xb6
 2073 055e 05       		.uleb128 0x5
 2074 055f 03       		.byte	0x3
 2075 0560 00000000 		.4byte	ts_speed
 2076 0564 1D       		.uleb128 0x1d
 2077 0565 3B050000 		.4byte	.LASF79
 2078 0569 05       		.byte	0x5
 2079 056a 14       		.byte	0x14
 2080 056b B6000000 		.4byte	0xb6
 2081 056f 05       		.uleb128 0x5
 2082 0570 03       		.byte	0x3
 2083 0571 00000000 		.4byte	ts_display
 2084 0575 1D       		.uleb128 0x1d
 2085 0576 F4040000 		.4byte	.LASF80
 2086 057a 05       		.byte	0x5
 2087 057b 16       		.byte	0x16
 2088 057c AA000000 		.4byte	0xaa
 2089 0580 05       		.uleb128 0x5
 2090 0581 03       		.byte	0x3
 2091 0582 00000000 		.4byte	flag_ts_enc
 2092 0586 1D       		.uleb128 0x1d
 2093 0587 A6020000 		.4byte	.LASF81
 2094 058b 05       		.byte	0x5
 2095 058c 17       		.byte	0x17
 2096 058d AA000000 		.4byte	0xaa
 2097 0591 05       		.uleb128 0x5
 2098 0592 03       		.byte	0x3
 2099 0593 00000000 		.4byte	flag_ts_update
 2100 0597 1D       		.uleb128 0x1d
 2101 0598 9F040000 		.4byte	.LASF82
 2102 059c 05       		.byte	0x5
 2103 059d 18       		.byte	0x18
 2104 059e AA000000 		.4byte	0xaa
 2105 05a2 05       		.uleb128 0x5
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 48


 2106 05a3 03       		.byte	0x3
 2107 05a4 00000000 		.4byte	flag_ts_speed
 2108 05a8 1D       		.uleb128 0x1d
 2109 05a9 26030000 		.4byte	.LASF83
 2110 05ad 05       		.byte	0x5
 2111 05ae 19       		.byte	0x19
 2112 05af AA000000 		.4byte	0xaa
 2113 05b3 05       		.uleb128 0x5
 2114 05b4 03       		.byte	0x3
 2115 05b5 00000000 		.4byte	flag_ts_display
 2116 05b9 1D       		.uleb128 0x1d
 2117 05ba 36030000 		.4byte	.LASF84
 2118 05be 05       		.byte	0x5
 2119 05bf 1C       		.byte	0x1c
 2120 05c0 AA000000 		.4byte	0xaa
 2121 05c4 05       		.uleb128 0x5
 2122 05c5 03       		.byte	0x3
 2123 05c6 00000000 		.4byte	flag_rx
 2124 05ca 1D       		.uleb128 0x1d
 2125 05cb 30000000 		.4byte	.LASF85
 2126 05cf 05       		.byte	0x5
 2127 05d0 1D       		.byte	0x1d
 2128 05d1 AA000000 		.4byte	0xaa
 2129 05d5 05       		.uleb128 0x5
 2130 05d6 03       		.byte	0x3
 2131 05d7 00000000 		.4byte	flag_packet
 2132 05db 1D       		.uleb128 0x1d
 2133 05dc EA030000 		.4byte	.LASF86
 2134 05e0 05       		.byte	0x5
 2135 05e1 1E       		.byte	0x1e
 2136 05e2 AA000000 		.4byte	0xaa
 2137 05e6 05       		.uleb128 0x5
 2138 05e7 03       		.byte	0x3
 2139 05e8 00000000 		.4byte	flag_KB_string
 2140 05ec 1D       		.uleb128 0x1d
 2141 05ed 9F030000 		.4byte	.LASF87
 2142 05f1 05       		.byte	0x5
 2143 05f2 20       		.byte	0x20
 2144 05f3 AA000000 		.4byte	0xaa
 2145 05f7 05       		.uleb128 0x5
 2146 05f8 03       		.byte	0x3
 2147 05f9 00000000 		.4byte	dataready_flag
 2148 05fd 1D       		.uleb128 0x1d
 2149 05fe 65050000 		.4byte	.LASF88
 2150 0602 05       		.byte	0x5
 2151 0603 22       		.byte	0x22
 2152 0604 AA000000 		.4byte	0xaa
 2153 0608 05       		.uleb128 0x5
 2154 0609 03       		.byte	0x3
 2155 060a 00000000 		.4byte	flag_rf_transmission_active
 2156 060e 0F       		.uleb128 0xf
 2157 060f 8A000000 		.4byte	0x8a
 2158 0613 1E060000 		.4byte	0x61e
 2159 0617 1E       		.uleb128 0x1e
 2160 0618 7D000000 		.4byte	0x7d
 2161 061c 3F       		.byte	0x3f
 2162 061d 00       		.byte	0
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 49


 2163 061e 1D       		.uleb128 0x1d
 2164 061f 91040000 		.4byte	.LASF89
 2165 0623 05       		.byte	0x5
 2166 0624 25       		.byte	0x25
 2167 0625 0E060000 		.4byte	0x60e
 2168 0629 05       		.uleb128 0x5
 2169 062a 03       		.byte	0x3
 2170 062b 00000000 		.4byte	displaystring
 2171 062f 1D       		.uleb128 0x1d
 2172 0630 21030000 		.4byte	.LASF90
 2173 0634 05       		.byte	0x5
 2174 0635 26       		.byte	0x26
 2175 0636 0E060000 		.4byte	0x60e
 2176 063a 05       		.uleb128 0x5
 2177 063b 03       		.byte	0x3
 2178 063c 00000000 		.4byte	line
 2179 0640 1D       		.uleb128 0x1d
 2180 0641 5C030000 		.4byte	.LASF91
 2181 0645 05       		.byte	0x5
 2182 0646 26       		.byte	0x26
 2183 0647 0E060000 		.4byte	0x60e
 2184 064b 05       		.uleb128 0x5
 2185 064c 03       		.byte	0x3
 2186 064d 00000000 		.4byte	entry
 2187 0651 0F       		.uleb128 0xf
 2188 0652 AA000000 		.4byte	0xaa
 2189 0656 61060000 		.4byte	0x661
 2190 065a 1E       		.uleb128 0x1e
 2191 065b 7D000000 		.4byte	0x7d
 2192 065f 3F       		.byte	0x3f
 2193 0660 00       		.byte	0
 2194 0661 1D       		.uleb128 0x1d
 2195 0662 AB000000 		.4byte	.LASF92
 2196 0666 05       		.byte	0x5
 2197 0667 27       		.byte	0x27
 2198 0668 51060000 		.4byte	0x651
 2199 066c 05       		.uleb128 0x5
 2200 066d 03       		.byte	0x3
 2201 066e 00000000 		.4byte	usbBuffer
 2202 0672 1D       		.uleb128 0x1d
 2203 0673 95000000 		.4byte	.LASF93
 2204 0677 05       		.byte	0x5
 2205 0678 3C       		.byte	0x3c
 2206 0679 DA000000 		.4byte	0xda
 2207 067d 05       		.uleb128 0x5
 2208 067e 03       		.byte	0x3
 2209 067f 00000000 		.4byte	system_state
 2210 0683 1D       		.uleb128 0x1d
 2211 0684 48020000 		.4byte	.LASF94
 2212 0688 01       		.byte	0x1
 2213 0689 6C       		.byte	0x6c
 2214 068a 68000000 		.4byte	0x68
 2215 068e 05       		.uleb128 0x5
 2216 068f 03       		.byte	0x3
 2217 0690 00000000 		.4byte	changeMotor
 2218 0694 1D       		.uleb128 0x1d
 2219 0695 78000000 		.4byte	.LASF95
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 50


 2220 0699 01       		.byte	0x1
 2221 069a 6D       		.byte	0x6d
 2222 069b 68000000 		.4byte	0x68
 2223 069f 05       		.uleb128 0x5
 2224 06a0 03       		.byte	0x3
 2225 06a1 00000000 		.4byte	checkLight
 2226 06a5 1D       		.uleb128 0x1d
 2227 06a6 81010000 		.4byte	.LASF96
 2228 06aa 01       		.byte	0x1
 2229 06ab 6E       		.byte	0x6e
 2230 06ac 68000000 		.4byte	0x68
 2231 06b0 05       		.uleb128 0x5
 2232 06b1 03       		.byte	0x3
 2233 06b2 00000000 		.4byte	lightState
 2234 06b6 0F       		.uleb128 0xf
 2235 06b7 C6060000 		.4byte	0x6c6
 2236 06bb C6060000 		.4byte	0x6c6
 2237 06bf 1E       		.uleb128 0x1e
 2238 06c0 7D000000 		.4byte	0x7d
 2239 06c4 02       		.byte	0x2
 2240 06c5 00       		.byte	0
 2241 06c6 1A       		.uleb128 0x1a
 2242 06c7 68000000 		.4byte	0x68
 2243 06cb 1D       		.uleb128 0x1d
 2244 06cc 83030000 		.4byte	.LASF97
 2245 06d0 01       		.byte	0x1
 2246 06d1 6F       		.byte	0x6f
 2247 06d2 DC060000 		.4byte	0x6dc
 2248 06d6 05       		.uleb128 0x5
 2249 06d7 03       		.byte	0x3
 2250 06d8 00000000 		.4byte	lightDetectedFront
 2251 06dc 1A       		.uleb128 0x1a
 2252 06dd B6060000 		.4byte	0x6b6
 2253 06e1 1D       		.uleb128 0x1d
 2254 06e2 54020000 		.4byte	.LASF98
 2255 06e6 01       		.byte	0x1
 2256 06e7 70       		.byte	0x70
 2257 06e8 F2060000 		.4byte	0x6f2
 2258 06ec 05       		.uleb128 0x5
 2259 06ed 03       		.byte	0x3
 2260 06ee 00000000 		.4byte	lightDetectedBack
 2261 06f2 1A       		.uleb128 0x1a
 2262 06f3 B6060000 		.4byte	0x6b6
 2263 06f7 1D       		.uleb128 0x1d
 2264 06f8 47000000 		.4byte	.LASF99
 2265 06fc 01       		.byte	0x1
 2266 06fd 71       		.byte	0x71
 2267 06fe C6060000 		.4byte	0x6c6
 2268 0702 05       		.uleb128 0x5
 2269 0703 03       		.byte	0x3
 2270 0704 00000000 		.4byte	counteoc
 2271 0708 1D       		.uleb128 0x1d
 2272 0709 12030000 		.4byte	.LASF100
 2273 070d 01       		.byte	0x1
 2274 070e 72       		.byte	0x72
 2275 070f C6060000 		.4byte	0x6c6
 2276 0713 05       		.uleb128 0x5
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 51


 2277 0714 03       		.byte	0x3
 2278 0715 00000000 		.4byte	processSensors
 2279 0719 1D       		.uleb128 0x1d
 2280 071a C8050000 		.4byte	.LASF101
 2281 071e 01       		.byte	0x1
 2282 071f 73       		.byte	0x73
 2283 0720 C6060000 		.4byte	0x6c6
 2284 0724 05       		.uleb128 0x5
 2285 0725 03       		.byte	0x3
 2286 0726 00000000 		.4byte	middle
 2287 072a 00       		.byte	0
 2288              		.section	.debug_abbrev,"",%progbits
 2289              	.Ldebug_abbrev0:
 2290 0000 01       		.uleb128 0x1
 2291 0001 11       		.uleb128 0x11
 2292 0002 01       		.byte	0x1
 2293 0003 25       		.uleb128 0x25
 2294 0004 0E       		.uleb128 0xe
 2295 0005 13       		.uleb128 0x13
 2296 0006 0B       		.uleb128 0xb
 2297 0007 03       		.uleb128 0x3
 2298 0008 0E       		.uleb128 0xe
 2299 0009 1B       		.uleb128 0x1b
 2300 000a 0E       		.uleb128 0xe
 2301 000b 55       		.uleb128 0x55
 2302 000c 17       		.uleb128 0x17
 2303 000d 11       		.uleb128 0x11
 2304 000e 01       		.uleb128 0x1
 2305 000f 10       		.uleb128 0x10
 2306 0010 17       		.uleb128 0x17
 2307 0011 00       		.byte	0
 2308 0012 00       		.byte	0
 2309 0013 02       		.uleb128 0x2
 2310 0014 24       		.uleb128 0x24
 2311 0015 00       		.byte	0
 2312 0016 0B       		.uleb128 0xb
 2313 0017 0B       		.uleb128 0xb
 2314 0018 3E       		.uleb128 0x3e
 2315 0019 0B       		.uleb128 0xb
 2316 001a 03       		.uleb128 0x3
 2317 001b 0E       		.uleb128 0xe
 2318 001c 00       		.byte	0
 2319 001d 00       		.byte	0
 2320 001e 03       		.uleb128 0x3
 2321 001f 16       		.uleb128 0x16
 2322 0020 00       		.byte	0
 2323 0021 03       		.uleb128 0x3
 2324 0022 0E       		.uleb128 0xe
 2325 0023 3A       		.uleb128 0x3a
 2326 0024 0B       		.uleb128 0xb
 2327 0025 3B       		.uleb128 0x3b
 2328 0026 0B       		.uleb128 0xb
 2329 0027 49       		.uleb128 0x49
 2330 0028 13       		.uleb128 0x13
 2331 0029 00       		.byte	0
 2332 002a 00       		.byte	0
 2333 002b 04       		.uleb128 0x4
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 52


 2334 002c 24       		.uleb128 0x24
 2335 002d 00       		.byte	0
 2336 002e 0B       		.uleb128 0xb
 2337 002f 0B       		.uleb128 0xb
 2338 0030 3E       		.uleb128 0x3e
 2339 0031 0B       		.uleb128 0xb
 2340 0032 03       		.uleb128 0x3
 2341 0033 08       		.uleb128 0x8
 2342 0034 00       		.byte	0
 2343 0035 00       		.byte	0
 2344 0036 05       		.uleb128 0x5
 2345 0037 0F       		.uleb128 0xf
 2346 0038 00       		.byte	0
 2347 0039 0B       		.uleb128 0xb
 2348 003a 0B       		.uleb128 0xb
 2349 003b 49       		.uleb128 0x49
 2350 003c 13       		.uleb128 0x13
 2351 003d 00       		.byte	0
 2352 003e 00       		.byte	0
 2353 003f 06       		.uleb128 0x6
 2354 0040 16       		.uleb128 0x16
 2355 0041 00       		.byte	0
 2356 0042 03       		.uleb128 0x3
 2357 0043 0E       		.uleb128 0xe
 2358 0044 3A       		.uleb128 0x3a
 2359 0045 0B       		.uleb128 0xb
 2360 0046 3B       		.uleb128 0x3b
 2361 0047 05       		.uleb128 0x5
 2362 0048 49       		.uleb128 0x49
 2363 0049 13       		.uleb128 0x13
 2364 004a 00       		.byte	0
 2365 004b 00       		.byte	0
 2366 004c 07       		.uleb128 0x7
 2367 004d 13       		.uleb128 0x13
 2368 004e 01       		.byte	0x1
 2369 004f 03       		.uleb128 0x3
 2370 0050 0E       		.uleb128 0xe
 2371 0051 0B       		.uleb128 0xb
 2372 0052 0B       		.uleb128 0xb
 2373 0053 3A       		.uleb128 0x3a
 2374 0054 0B       		.uleb128 0xb
 2375 0055 3B       		.uleb128 0x3b
 2376 0056 0B       		.uleb128 0xb
 2377 0057 01       		.uleb128 0x1
 2378 0058 13       		.uleb128 0x13
 2379 0059 00       		.byte	0
 2380 005a 00       		.byte	0
 2381 005b 08       		.uleb128 0x8
 2382 005c 0D       		.uleb128 0xd
 2383 005d 00       		.byte	0
 2384 005e 03       		.uleb128 0x3
 2385 005f 0E       		.uleb128 0xe
 2386 0060 3A       		.uleb128 0x3a
 2387 0061 0B       		.uleb128 0xb
 2388 0062 3B       		.uleb128 0x3b
 2389 0063 0B       		.uleb128 0xb
 2390 0064 49       		.uleb128 0x49
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 53


 2391 0065 13       		.uleb128 0x13
 2392 0066 38       		.uleb128 0x38
 2393 0067 0B       		.uleb128 0xb
 2394 0068 00       		.byte	0
 2395 0069 00       		.byte	0
 2396 006a 09       		.uleb128 0x9
 2397 006b 2E       		.uleb128 0x2e
 2398 006c 00       		.byte	0
 2399 006d 3F       		.uleb128 0x3f
 2400 006e 19       		.uleb128 0x19
 2401 006f 03       		.uleb128 0x3
 2402 0070 0E       		.uleb128 0xe
 2403 0071 3A       		.uleb128 0x3a
 2404 0072 0B       		.uleb128 0xb
 2405 0073 3B       		.uleb128 0x3b
 2406 0074 0B       		.uleb128 0xb
 2407 0075 11       		.uleb128 0x11
 2408 0076 01       		.uleb128 0x1
 2409 0077 12       		.uleb128 0x12
 2410 0078 06       		.uleb128 0x6
 2411 0079 40       		.uleb128 0x40
 2412 007a 18       		.uleb128 0x18
 2413 007b 9642     		.uleb128 0x2116
 2414 007d 19       		.uleb128 0x19
 2415 007e 00       		.byte	0
 2416 007f 00       		.byte	0
 2417 0080 0A       		.uleb128 0xa
 2418 0081 2E       		.uleb128 0x2e
 2419 0082 01       		.byte	0x1
 2420 0083 3F       		.uleb128 0x3f
 2421 0084 19       		.uleb128 0x19
 2422 0085 03       		.uleb128 0x3
 2423 0086 0E       		.uleb128 0xe
 2424 0087 3A       		.uleb128 0x3a
 2425 0088 0B       		.uleb128 0xb
 2426 0089 3B       		.uleb128 0x3b
 2427 008a 0B       		.uleb128 0xb
 2428 008b 27       		.uleb128 0x27
 2429 008c 19       		.uleb128 0x19
 2430 008d 11       		.uleb128 0x11
 2431 008e 01       		.uleb128 0x1
 2432 008f 12       		.uleb128 0x12
 2433 0090 06       		.uleb128 0x6
 2434 0091 40       		.uleb128 0x40
 2435 0092 18       		.uleb128 0x18
 2436 0093 9642     		.uleb128 0x2116
 2437 0095 19       		.uleb128 0x19
 2438 0096 01       		.uleb128 0x1
 2439 0097 13       		.uleb128 0x13
 2440 0098 00       		.byte	0
 2441 0099 00       		.byte	0
 2442 009a 0B       		.uleb128 0xb
 2443 009b 05       		.uleb128 0x5
 2444 009c 00       		.byte	0
 2445 009d 03       		.uleb128 0x3
 2446 009e 08       		.uleb128 0x8
 2447 009f 3A       		.uleb128 0x3a
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 54


 2448 00a0 0B       		.uleb128 0xb
 2449 00a1 3B       		.uleb128 0x3b
 2450 00a2 0B       		.uleb128 0xb
 2451 00a3 49       		.uleb128 0x49
 2452 00a4 13       		.uleb128 0x13
 2453 00a5 02       		.uleb128 0x2
 2454 00a6 18       		.uleb128 0x18
 2455 00a7 00       		.byte	0
 2456 00a8 00       		.byte	0
 2457 00a9 0C       		.uleb128 0xc
 2458 00aa 34       		.uleb128 0x34
 2459 00ab 00       		.byte	0
 2460 00ac 03       		.uleb128 0x3
 2461 00ad 0E       		.uleb128 0xe
 2462 00ae 3A       		.uleb128 0x3a
 2463 00af 0B       		.uleb128 0xb
 2464 00b0 3B       		.uleb128 0x3b
 2465 00b1 0B       		.uleb128 0xb
 2466 00b2 49       		.uleb128 0x49
 2467 00b3 13       		.uleb128 0x13
 2468 00b4 02       		.uleb128 0x2
 2469 00b5 18       		.uleb128 0x18
 2470 00b6 00       		.byte	0
 2471 00b7 00       		.byte	0
 2472 00b8 0D       		.uleb128 0xd
 2473 00b9 2E       		.uleb128 0x2e
 2474 00ba 00       		.byte	0
 2475 00bb 3F       		.uleb128 0x3f
 2476 00bc 19       		.uleb128 0x19
 2477 00bd 03       		.uleb128 0x3
 2478 00be 0E       		.uleb128 0xe
 2479 00bf 3A       		.uleb128 0x3a
 2480 00c0 0B       		.uleb128 0xb
 2481 00c1 3B       		.uleb128 0x3b
 2482 00c2 0B       		.uleb128 0xb
 2483 00c3 27       		.uleb128 0x27
 2484 00c4 19       		.uleb128 0x19
 2485 00c5 11       		.uleb128 0x11
 2486 00c6 01       		.uleb128 0x1
 2487 00c7 12       		.uleb128 0x12
 2488 00c8 06       		.uleb128 0x6
 2489 00c9 40       		.uleb128 0x40
 2490 00ca 18       		.uleb128 0x18
 2491 00cb 9742     		.uleb128 0x2117
 2492 00cd 19       		.uleb128 0x19
 2493 00ce 00       		.byte	0
 2494 00cf 00       		.byte	0
 2495 00d0 0E       		.uleb128 0xe
 2496 00d1 2E       		.uleb128 0x2e
 2497 00d2 01       		.byte	0x1
 2498 00d3 3F       		.uleb128 0x3f
 2499 00d4 19       		.uleb128 0x19
 2500 00d5 03       		.uleb128 0x3
 2501 00d6 0E       		.uleb128 0xe
 2502 00d7 3A       		.uleb128 0x3a
 2503 00d8 0B       		.uleb128 0xb
 2504 00d9 3B       		.uleb128 0x3b
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 55


 2505 00da 0B       		.uleb128 0xb
 2506 00db 11       		.uleb128 0x11
 2507 00dc 01       		.uleb128 0x1
 2508 00dd 12       		.uleb128 0x12
 2509 00de 06       		.uleb128 0x6
 2510 00df 40       		.uleb128 0x40
 2511 00e0 18       		.uleb128 0x18
 2512 00e1 9642     		.uleb128 0x2116
 2513 00e3 19       		.uleb128 0x19
 2514 00e4 01       		.uleb128 0x1
 2515 00e5 13       		.uleb128 0x13
 2516 00e6 00       		.byte	0
 2517 00e7 00       		.byte	0
 2518 00e8 0F       		.uleb128 0xf
 2519 00e9 01       		.uleb128 0x1
 2520 00ea 01       		.byte	0x1
 2521 00eb 49       		.uleb128 0x49
 2522 00ec 13       		.uleb128 0x13
 2523 00ed 01       		.uleb128 0x1
 2524 00ee 13       		.uleb128 0x13
 2525 00ef 00       		.byte	0
 2526 00f0 00       		.byte	0
 2527 00f1 10       		.uleb128 0x10
 2528 00f2 21       		.uleb128 0x21
 2529 00f3 00       		.byte	0
 2530 00f4 49       		.uleb128 0x49
 2531 00f5 13       		.uleb128 0x13
 2532 00f6 2F       		.uleb128 0x2f
 2533 00f7 05       		.uleb128 0x5
 2534 00f8 00       		.byte	0
 2535 00f9 00       		.byte	0
 2536 00fa 11       		.uleb128 0x11
 2537 00fb 2E       		.uleb128 0x2e
 2538 00fc 00       		.byte	0
 2539 00fd 3F       		.uleb128 0x3f
 2540 00fe 19       		.uleb128 0x19
 2541 00ff 03       		.uleb128 0x3
 2542 0100 0E       		.uleb128 0xe
 2543 0101 3A       		.uleb128 0x3a
 2544 0102 0B       		.uleb128 0xb
 2545 0103 3B       		.uleb128 0x3b
 2546 0104 0B       		.uleb128 0xb
 2547 0105 27       		.uleb128 0x27
 2548 0106 19       		.uleb128 0x19
 2549 0107 11       		.uleb128 0x11
 2550 0108 01       		.uleb128 0x1
 2551 0109 12       		.uleb128 0x12
 2552 010a 06       		.uleb128 0x6
 2553 010b 40       		.uleb128 0x40
 2554 010c 18       		.uleb128 0x18
 2555 010d 9642     		.uleb128 0x2116
 2556 010f 19       		.uleb128 0x19
 2557 0110 00       		.byte	0
 2558 0111 00       		.byte	0
 2559 0112 12       		.uleb128 0x12
 2560 0113 2E       		.uleb128 0x2e
 2561 0114 01       		.byte	0x1
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 56


 2562 0115 3F       		.uleb128 0x3f
 2563 0116 19       		.uleb128 0x19
 2564 0117 03       		.uleb128 0x3
 2565 0118 0E       		.uleb128 0xe
 2566 0119 3A       		.uleb128 0x3a
 2567 011a 0B       		.uleb128 0xb
 2568 011b 3B       		.uleb128 0x3b
 2569 011c 0B       		.uleb128 0xb
 2570 011d 49       		.uleb128 0x49
 2571 011e 13       		.uleb128 0x13
 2572 011f 11       		.uleb128 0x11
 2573 0120 01       		.uleb128 0x1
 2574 0121 12       		.uleb128 0x12
 2575 0122 06       		.uleb128 0x6
 2576 0123 40       		.uleb128 0x40
 2577 0124 18       		.uleb128 0x18
 2578 0125 9642     		.uleb128 0x2116
 2579 0127 19       		.uleb128 0x19
 2580 0128 01       		.uleb128 0x1
 2581 0129 13       		.uleb128 0x13
 2582 012a 00       		.byte	0
 2583 012b 00       		.byte	0
 2584 012c 13       		.uleb128 0x13
 2585 012d 34       		.uleb128 0x34
 2586 012e 00       		.byte	0
 2587 012f 03       		.uleb128 0x3
 2588 0130 0E       		.uleb128 0xe
 2589 0131 3A       		.uleb128 0x3a
 2590 0132 0B       		.uleb128 0xb
 2591 0133 3B       		.uleb128 0x3b
 2592 0134 05       		.uleb128 0x5
 2593 0135 49       		.uleb128 0x49
 2594 0136 13       		.uleb128 0x13
 2595 0137 02       		.uleb128 0x2
 2596 0138 18       		.uleb128 0x18
 2597 0139 00       		.byte	0
 2598 013a 00       		.byte	0
 2599 013b 14       		.uleb128 0x14
 2600 013c 0B       		.uleb128 0xb
 2601 013d 01       		.byte	0x1
 2602 013e 11       		.uleb128 0x11
 2603 013f 01       		.uleb128 0x1
 2604 0140 12       		.uleb128 0x12
 2605 0141 06       		.uleb128 0x6
 2606 0142 00       		.byte	0
 2607 0143 00       		.byte	0
 2608 0144 15       		.uleb128 0x15
 2609 0145 2E       		.uleb128 0x2e
 2610 0146 01       		.byte	0x1
 2611 0147 3F       		.uleb128 0x3f
 2612 0148 19       		.uleb128 0x19
 2613 0149 03       		.uleb128 0x3
 2614 014a 0E       		.uleb128 0xe
 2615 014b 3A       		.uleb128 0x3a
 2616 014c 0B       		.uleb128 0xb
 2617 014d 3B       		.uleb128 0x3b
 2618 014e 05       		.uleb128 0x5
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 57


 2619 014f 49       		.uleb128 0x49
 2620 0150 13       		.uleb128 0x13
 2621 0151 11       		.uleb128 0x11
 2622 0152 01       		.uleb128 0x1
 2623 0153 12       		.uleb128 0x12
 2624 0154 06       		.uleb128 0x6
 2625 0155 40       		.uleb128 0x40
 2626 0156 18       		.uleb128 0x18
 2627 0157 9742     		.uleb128 0x2117
 2628 0159 19       		.uleb128 0x19
 2629 015a 01       		.uleb128 0x1
 2630 015b 13       		.uleb128 0x13
 2631 015c 00       		.byte	0
 2632 015d 00       		.byte	0
 2633 015e 16       		.uleb128 0x16
 2634 015f 34       		.uleb128 0x34
 2635 0160 00       		.byte	0
 2636 0161 03       		.uleb128 0x3
 2637 0162 08       		.uleb128 0x8
 2638 0163 3A       		.uleb128 0x3a
 2639 0164 0B       		.uleb128 0xb
 2640 0165 3B       		.uleb128 0x3b
 2641 0166 05       		.uleb128 0x5
 2642 0167 49       		.uleb128 0x49
 2643 0168 13       		.uleb128 0x13
 2644 0169 02       		.uleb128 0x2
 2645 016a 18       		.uleb128 0x18
 2646 016b 00       		.byte	0
 2647 016c 00       		.byte	0
 2648 016d 17       		.uleb128 0x17
 2649 016e 2E       		.uleb128 0x2e
 2650 016f 01       		.byte	0x1
 2651 0170 3F       		.uleb128 0x3f
 2652 0171 19       		.uleb128 0x19
 2653 0172 03       		.uleb128 0x3
 2654 0173 0E       		.uleb128 0xe
 2655 0174 3A       		.uleb128 0x3a
 2656 0175 0B       		.uleb128 0xb
 2657 0176 3B       		.uleb128 0x3b
 2658 0177 05       		.uleb128 0x5
 2659 0178 27       		.uleb128 0x27
 2660 0179 19       		.uleb128 0x19
 2661 017a 11       		.uleb128 0x11
 2662 017b 01       		.uleb128 0x1
 2663 017c 12       		.uleb128 0x12
 2664 017d 06       		.uleb128 0x6
 2665 017e 40       		.uleb128 0x40
 2666 017f 18       		.uleb128 0x18
 2667 0180 9642     		.uleb128 0x2116
 2668 0182 19       		.uleb128 0x19
 2669 0183 01       		.uleb128 0x1
 2670 0184 13       		.uleb128 0x13
 2671 0185 00       		.byte	0
 2672 0186 00       		.byte	0
 2673 0187 18       		.uleb128 0x18
 2674 0188 05       		.uleb128 0x5
 2675 0189 00       		.byte	0
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 58


 2676 018a 03       		.uleb128 0x3
 2677 018b 08       		.uleb128 0x8
 2678 018c 3A       		.uleb128 0x3a
 2679 018d 0B       		.uleb128 0xb
 2680 018e 3B       		.uleb128 0x3b
 2681 018f 05       		.uleb128 0x5
 2682 0190 49       		.uleb128 0x49
 2683 0191 13       		.uleb128 0x13
 2684 0192 02       		.uleb128 0x2
 2685 0193 18       		.uleb128 0x18
 2686 0194 00       		.byte	0
 2687 0195 00       		.byte	0
 2688 0196 19       		.uleb128 0x19
 2689 0197 2E       		.uleb128 0x2e
 2690 0198 01       		.byte	0x1
 2691 0199 3F       		.uleb128 0x3f
 2692 019a 19       		.uleb128 0x19
 2693 019b 03       		.uleb128 0x3
 2694 019c 0E       		.uleb128 0xe
 2695 019d 3A       		.uleb128 0x3a
 2696 019e 0B       		.uleb128 0xb
 2697 019f 3B       		.uleb128 0x3b
 2698 01a0 05       		.uleb128 0x5
 2699 01a1 11       		.uleb128 0x11
 2700 01a2 01       		.uleb128 0x1
 2701 01a3 12       		.uleb128 0x12
 2702 01a4 06       		.uleb128 0x6
 2703 01a5 40       		.uleb128 0x40
 2704 01a6 18       		.uleb128 0x18
 2705 01a7 9642     		.uleb128 0x2116
 2706 01a9 19       		.uleb128 0x19
 2707 01aa 01       		.uleb128 0x1
 2708 01ab 13       		.uleb128 0x13
 2709 01ac 00       		.byte	0
 2710 01ad 00       		.byte	0
 2711 01ae 1A       		.uleb128 0x1a
 2712 01af 35       		.uleb128 0x35
 2713 01b0 00       		.byte	0
 2714 01b1 49       		.uleb128 0x49
 2715 01b2 13       		.uleb128 0x13
 2716 01b3 00       		.byte	0
 2717 01b4 00       		.byte	0
 2718 01b5 1B       		.uleb128 0x1b
 2719 01b6 34       		.uleb128 0x34
 2720 01b7 00       		.byte	0
 2721 01b8 03       		.uleb128 0x3
 2722 01b9 0E       		.uleb128 0xe
 2723 01ba 3A       		.uleb128 0x3a
 2724 01bb 0B       		.uleb128 0xb
 2725 01bc 3B       		.uleb128 0x3b
 2726 01bd 05       		.uleb128 0x5
 2727 01be 49       		.uleb128 0x49
 2728 01bf 13       		.uleb128 0x13
 2729 01c0 3F       		.uleb128 0x3f
 2730 01c1 19       		.uleb128 0x19
 2731 01c2 3C       		.uleb128 0x3c
 2732 01c3 19       		.uleb128 0x19
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 59


 2733 01c4 00       		.byte	0
 2734 01c5 00       		.byte	0
 2735 01c6 1C       		.uleb128 0x1c
 2736 01c7 34       		.uleb128 0x34
 2737 01c8 00       		.byte	0
 2738 01c9 03       		.uleb128 0x3
 2739 01ca 08       		.uleb128 0x8
 2740 01cb 3A       		.uleb128 0x3a
 2741 01cc 0B       		.uleb128 0xb
 2742 01cd 3B       		.uleb128 0x3b
 2743 01ce 0B       		.uleb128 0xb
 2744 01cf 49       		.uleb128 0x49
 2745 01d0 13       		.uleb128 0x13
 2746 01d1 3F       		.uleb128 0x3f
 2747 01d2 19       		.uleb128 0x19
 2748 01d3 02       		.uleb128 0x2
 2749 01d4 18       		.uleb128 0x18
 2750 01d5 00       		.byte	0
 2751 01d6 00       		.byte	0
 2752 01d7 1D       		.uleb128 0x1d
 2753 01d8 34       		.uleb128 0x34
 2754 01d9 00       		.byte	0
 2755 01da 03       		.uleb128 0x3
 2756 01db 0E       		.uleb128 0xe
 2757 01dc 3A       		.uleb128 0x3a
 2758 01dd 0B       		.uleb128 0xb
 2759 01de 3B       		.uleb128 0x3b
 2760 01df 0B       		.uleb128 0xb
 2761 01e0 49       		.uleb128 0x49
 2762 01e1 13       		.uleb128 0x13
 2763 01e2 3F       		.uleb128 0x3f
 2764 01e3 19       		.uleb128 0x19
 2765 01e4 02       		.uleb128 0x2
 2766 01e5 18       		.uleb128 0x18
 2767 01e6 00       		.byte	0
 2768 01e7 00       		.byte	0
 2769 01e8 1E       		.uleb128 0x1e
 2770 01e9 21       		.uleb128 0x21
 2771 01ea 00       		.byte	0
 2772 01eb 49       		.uleb128 0x49
 2773 01ec 13       		.uleb128 0x13
 2774 01ed 2F       		.uleb128 0x2f
 2775 01ee 0B       		.uleb128 0xb
 2776 01ef 00       		.byte	0
 2777 01f0 00       		.byte	0
 2778 01f1 00       		.byte	0
 2779              		.section	.debug_aranges,"",%progbits
 2780 0000 A4000000 		.4byte	0xa4
 2781 0004 0200     		.2byte	0x2
 2782 0006 00000000 		.4byte	.Ldebug_info0
 2783 000a 04       		.byte	0x4
 2784 000b 00       		.byte	0
 2785 000c 0000     		.2byte	0
 2786 000e 0000     		.2byte	0
 2787 0010 00000000 		.4byte	.LFB64
 2788 0014 14000000 		.4byte	.LFE64-.LFB64
 2789 0018 00000000 		.4byte	.LFB65
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 60


 2790 001c 2E000000 		.4byte	.LFE65-.LFB65
 2791 0020 00000000 		.4byte	.LFB66
 2792 0024 14000000 		.4byte	.LFE66-.LFB66
 2793 0028 00000000 		.4byte	.LFB67
 2794 002c 14000000 		.4byte	.LFE67-.LFB67
 2795 0030 00000000 		.4byte	.LFB68
 2796 0034 20000000 		.4byte	.LFE68-.LFB68
 2797 0038 00000000 		.4byte	.LFB69
 2798 003c 20000000 		.4byte	.LFE69-.LFB69
 2799 0040 00000000 		.4byte	.LFB70
 2800 0044 2A000000 		.4byte	.LFE70-.LFB70
 2801 0048 00000000 		.4byte	.LFB71
 2802 004c E0000000 		.4byte	.LFE71-.LFB71
 2803 0050 00000000 		.4byte	.LFB72
 2804 0054 0C000000 		.4byte	.LFE72-.LFB72
 2805 0058 00000000 		.4byte	.LFB73
 2806 005c C0000000 		.4byte	.LFE73-.LFB73
 2807 0060 00000000 		.4byte	.LFB74
 2808 0064 1A000000 		.4byte	.LFE74-.LFB74
 2809 0068 00000000 		.4byte	.LFB75
 2810 006c 0C000000 		.4byte	.LFE75-.LFB75
 2811 0070 00000000 		.4byte	.LFB76
 2812 0074 58010000 		.4byte	.LFE76-.LFB76
 2813 0078 00000000 		.4byte	.LFB77
 2814 007c 3C000000 		.4byte	.LFE77-.LFB77
 2815 0080 00000000 		.4byte	.LFB78
 2816 0084 50000000 		.4byte	.LFE78-.LFB78
 2817 0088 00000000 		.4byte	.LFB79
 2818 008c 3E000000 		.4byte	.LFE79-.LFB79
 2819 0090 00000000 		.4byte	.LFB80
 2820 0094 26000000 		.4byte	.LFE80-.LFB80
 2821 0098 00000000 		.4byte	.LFB81
 2822 009c CC000000 		.4byte	.LFE81-.LFB81
 2823 00a0 00000000 		.4byte	0
 2824 00a4 00000000 		.4byte	0
 2825              		.section	.debug_ranges,"",%progbits
 2826              	.Ldebug_ranges0:
 2827 0000 00000000 		.4byte	.LFB64
 2828 0004 14000000 		.4byte	.LFE64
 2829 0008 00000000 		.4byte	.LFB65
 2830 000c 2E000000 		.4byte	.LFE65
 2831 0010 00000000 		.4byte	.LFB66
 2832 0014 14000000 		.4byte	.LFE66
 2833 0018 00000000 		.4byte	.LFB67
 2834 001c 14000000 		.4byte	.LFE67
 2835 0020 00000000 		.4byte	.LFB68
 2836 0024 20000000 		.4byte	.LFE68
 2837 0028 00000000 		.4byte	.LFB69
 2838 002c 20000000 		.4byte	.LFE69
 2839 0030 00000000 		.4byte	.LFB70
 2840 0034 2A000000 		.4byte	.LFE70
 2841 0038 00000000 		.4byte	.LFB71
 2842 003c E0000000 		.4byte	.LFE71
 2843 0040 00000000 		.4byte	.LFB72
 2844 0044 0C000000 		.4byte	.LFE72
 2845 0048 00000000 		.4byte	.LFB73
 2846 004c C0000000 		.4byte	.LFE73
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 61


 2847 0050 00000000 		.4byte	.LFB74
 2848 0054 1A000000 		.4byte	.LFE74
 2849 0058 00000000 		.4byte	.LFB75
 2850 005c 0C000000 		.4byte	.LFE75
 2851 0060 00000000 		.4byte	.LFB76
 2852 0064 58010000 		.4byte	.LFE76
 2853 0068 00000000 		.4byte	.LFB77
 2854 006c 3C000000 		.4byte	.LFE77
 2855 0070 00000000 		.4byte	.LFB78
 2856 0074 50000000 		.4byte	.LFE78
 2857 0078 00000000 		.4byte	.LFB79
 2858 007c 3E000000 		.4byte	.LFE79
 2859 0080 00000000 		.4byte	.LFB80
 2860 0084 26000000 		.4byte	.LFE80
 2861 0088 00000000 		.4byte	.LFB81
 2862 008c CC000000 		.4byte	.LFE81
 2863 0090 00000000 		.4byte	0
 2864 0094 00000000 		.4byte	0
 2865              		.section	.debug_line,"",%progbits
 2866              	.Ldebug_line0:
 2867 0000 4F030000 		.section	.debug_str,"MS",%progbits,1
 2867      02005601 
 2867      00000201 
 2867      FB0E0D00 
 2867      01010101 
 2868              	.LASF39:
 2869 0000 6D6F746F 		.ascii	"motorStop\000"
 2869      7253746F 
 2869      7000
 2870              	.LASF59:
 2871 000a 6973725F 		.ascii	"isr_TS_Interrupt_sample\000"
 2871      54535F49 
 2871      6E746572 
 2871      72757074 
 2871      5F73616D 
 2872              	.LASF76:
 2873 0022 74735F65 		.ascii	"ts_enc\000"
 2873      6E6300
 2874              	.LASF14:
 2875 0029 646F7562 		.ascii	"double\000"
 2875      6C6500
 2876              	.LASF85:
 2877 0030 666C6167 		.ascii	"flag_packet\000"
 2877      5F706163 
 2877      6B657400 
 2878              	.LASF69:
 2879 003c 75736250 		.ascii	"usbPutChar\000"
 2879      75744368 
 2879      617200
 2880              	.LASF99:
 2881 0047 636F756E 		.ascii	"counteoc\000"
 2881      74656F63 
 2881      00
 2882              	.LASF44:
 2883 0050 6973725F 		.ascii	"isr_eoc_Interrupt_test\000"
 2883      656F635F 
 2883      496E7465 
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 62


 2883      72727570 
 2883      745F7465 
 2884              	.LASF38:
 2885 0067 6D6F746F 		.ascii	"motorGoBackwards\000"
 2885      72476F42 
 2885      61636B77 
 2885      61726473 
 2885      00
 2886              	.LASF95:
 2887 0078 63686563 		.ascii	"checkLight\000"
 2887      6B4C6967 
 2887      687400
 2888              	.LASF33:
 2889 0083 67325F78 		.ascii	"g2_xpos\000"
 2889      706F7300 
 2890              	.LASF2:
 2891 008b 73686F72 		.ascii	"short int\000"
 2891      7420696E 
 2891      7400
 2892              	.LASF93:
 2893 0095 73797374 		.ascii	"system_state\000"
 2893      656D5F73 
 2893      74617465 
 2893      00
 2894              	.LASF10:
 2895 00a2 73697A65 		.ascii	"sizetype\000"
 2895      74797065 
 2895      00
 2896              	.LASF92:
 2897 00ab 75736242 		.ascii	"usbBuffer\000"
 2897      75666665 
 2897      7200
 2898              	.LASF102:
 2899 00b5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2899      43313120 
 2899      352E342E 
 2899      31203230 
 2899      31363036 
 2900 00e8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2900      20726576 
 2900      6973696F 
 2900      6E203233 
 2900      37373135 
 2901 011b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2901      66756E63 
 2901      74696F6E 
 2901      2D736563 
 2901      74696F6E 
 2902              	.LASF60:
 2903 0143 6D61696E 		.ascii	"main\000"
 2903      00
 2904              	.LASF57:
 2905 0148 6D6F746F 		.ascii	"motorRun\000"
 2905      7252756E 
 2905      00
 2906              	.LASF49:
 2907 0151 76616C75 		.ascii	"valueQ1\000"
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 63


 2907      65513100 
 2908              	.LASF48:
 2909 0159 76616C75 		.ascii	"valueQ2\000"
 2909      65513200 
 2910              	.LASF45:
 2911 0161 76616C75 		.ascii	"valueQ3\000"
 2911      65513300 
 2912              	.LASF46:
 2913 0169 76616C75 		.ascii	"valueQ4\000"
 2913      65513400 
 2914              	.LASF47:
 2915 0171 76616C75 		.ascii	"valueQ5\000"
 2915      65513500 
 2916              	.LASF50:
 2917 0179 76616C75 		.ascii	"valueQ6\000"
 2917      65513600 
 2918              	.LASF96:
 2919 0181 6C696768 		.ascii	"lightState\000"
 2919      74537461 
 2919      746500
 2920              	.LASF17:
 2921 018c 75696E74 		.ascii	"uint16\000"
 2921      313600
 2922              	.LASF21:
 2923 0193 696E6465 		.ascii	"index\000"
 2923      7800
 2924              	.LASF105:
 2925 0199 64617461 		.ascii	"data_main\000"
 2925      5F6D6169 
 2925      6E00
 2926              	.LASF19:
 2927 01a3 696E7431 		.ascii	"int16\000"
 2927      3600
 2928              	.LASF16:
 2929 01a9 75696E74 		.ascii	"uint8\000"
 2929      3800
 2930              	.LASF104:
 2931 01af 5C5C6669 		.ascii	"\\\\files.auckland.ac.nz\\myhome\\Documents\\GitHub"
 2931      6C65732E 
 2931      6175636B 
 2931      6C616E64 
 2931      2E61632E 
 2932 01dd 5C70726F 		.ascii	"\\project-project_group_11\\COMPSYS 301\\psoc stude"
 2932      6A656374 
 2932      2D70726F 
 2932      6A656374 
 2932      5F67726F 
 2933 020d 6E742070 		.ascii	"nt pack\\psoc student pack\\psoc_code_base\\CS301_C"
 2933      61636B5C 
 2933      70736F63 
 2933      20737475 
 2933      64656E74 
 2934 023d 6C617373 		.ascii	"lass.cydsn\000"
 2934      2E637964 
 2934      736E00
 2935              	.LASF94:
 2936 0248 6368616E 		.ascii	"changeMotor\000"
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 64


 2936      67654D6F 
 2936      746F7200 
 2937              	.LASF98:
 2938 0254 6C696768 		.ascii	"lightDetectedBack\000"
 2938      74446574 
 2938      65637465 
 2938      64426163 
 2938      6B00
 2939              	.LASF15:
 2940 0266 666C6F61 		.ascii	"float\000"
 2940      7400
 2941              	.LASF58:
 2942 026c 6973725F 		.ascii	"isr_motor_interrupt_speed\000"
 2942      6D6F746F 
 2942      725F696E 
 2942      74657272 
 2942      7570745F 
 2943              	.LASF6:
 2944 0286 6C6F6E67 		.ascii	"long long int\000"
 2944      206C6F6E 
 2944      6720696E 
 2944      7400
 2945              	.LASF68:
 2946 0294 75736250 		.ascii	"usbPutString\000"
 2946      75745374 
 2946      72696E67 
 2946      00
 2947              	.LASF18:
 2948 02a1 696E7438 		.ascii	"int8\000"
 2948      00
 2949              	.LASF81:
 2950 02a6 666C6167 		.ascii	"flag_ts_update\000"
 2950      5F74735F 
 2950      75706461 
 2950      746500
 2951              	.LASF34:
 2952 02b5 67325F79 		.ascii	"g2_ypos\000"
 2952      706F7300 
 2953              	.LASF28:
 2954 02bd 67305F64 		.ascii	"g0_direction\000"
 2954      69726563 
 2954      74696F6E 
 2954      00
 2955              	.LASF25:
 2956 02ca 67305F78 		.ascii	"g0_xpos\000"
 2956      706F7300 
 2957              	.LASF4:
 2958 02d2 6C6F6E67 		.ascii	"long int\000"
 2958      20696E74 
 2958      00
 2959              	.LASF51:
 2960 02db 62656769 		.ascii	"beginningCountMotor1\000"
 2960      6E6E696E 
 2960      67436F75 
 2960      6E744D6F 
 2960      746F7231 
 2961              	.LASF52:
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 65


 2962 02f0 62656769 		.ascii	"beginningCountMotor2\000"
 2962      6E6E696E 
 2962      67436F75 
 2962      6E744D6F 
 2962      746F7232 
 2963              	.LASF55:
 2964 0305 6D6F746F 		.ascii	"motor1String\000"
 2964      72315374 
 2964      72696E67 
 2964      00
 2965              	.LASF100:
 2966 0312 70726F63 		.ascii	"processSensors\000"
 2966      65737353 
 2966      656E736F 
 2966      727300
 2967              	.LASF90:
 2968 0321 6C696E65 		.ascii	"line\000"
 2968      00
 2969              	.LASF83:
 2970 0326 666C6167 		.ascii	"flag_ts_display\000"
 2970      5F74735F 
 2970      64697370 
 2970      6C617900 
 2971              	.LASF84:
 2972 0336 666C6167 		.ascii	"flag_rx\000"
 2972      5F727800 
 2973              	.LASF54:
 2974 033e 656E6443 		.ascii	"endCountMotor1\000"
 2974      6F756E74 
 2974      4D6F746F 
 2974      723100
 2975              	.LASF53:
 2976 034d 656E6443 		.ascii	"endCountMotor2\000"
 2976      6F756E74 
 2976      4D6F746F 
 2976      723200
 2977              	.LASF91:
 2978 035c 656E7472 		.ascii	"entry\000"
 2978      7900
 2979              	.LASF9:
 2980 0362 6C6F6E67 		.ascii	"long double\000"
 2980      20646F75 
 2980      626C6500 
 2981              	.LASF65:
 2982 036e 76616C75 		.ascii	"value1\000"
 2982      653100
 2983              	.LASF1:
 2984 0375 756E7369 		.ascii	"unsigned char\000"
 2984      676E6564 
 2984      20636861 
 2984      7200
 2985              	.LASF97:
 2986 0383 6C696768 		.ascii	"lightDetectedFront\000"
 2986      74446574 
 2986      65637465 
 2986      6446726F 
 2986      6E7400
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 66


 2987              	.LASF27:
 2988 0396 67305F73 		.ascii	"g0_speed\000"
 2988      70656564 
 2988      00
 2989              	.LASF87:
 2990 039f 64617461 		.ascii	"dataready_flag\000"
 2990      72656164 
 2990      795F666C 
 2990      616700
 2991              	.LASF0:
 2992 03ae 7369676E 		.ascii	"signed char\000"
 2992      65642063 
 2992      68617200 
 2993              	.LASF7:
 2994 03ba 6C6F6E67 		.ascii	"long long unsigned int\000"
 2994      206C6F6E 
 2994      6720756E 
 2994      7369676E 
 2994      65642069 
 2995              	.LASF43:
 2996 03d1 6D6F746F 		.ascii	"motorCircle\000"
 2996      72436972 
 2996      636C6500 
 2997              	.LASF8:
 2998 03dd 756E7369 		.ascii	"unsigned int\000"
 2998      676E6564 
 2998      20696E74 
 2998      00
 2999              	.LASF86:
 3000 03ea 666C6167 		.ascii	"flag_KB_string\000"
 3000      5F4B425F 
 3000      73747269 
 3000      6E6700
 3001              	.LASF73:
 3002 03f9 75736242 		.ascii	"usbBufCount\000"
 3002      7566436F 
 3002      756E7400 
 3003              	.LASF35:
 3004 0405 67325F73 		.ascii	"g2_speed\000"
 3004      70656564 
 3004      00
 3005              	.LASF29:
 3006 040e 67315F78 		.ascii	"g1_xpos\000"
 3006      706F7300 
 3007              	.LASF62:
 3008 0416 6F706572 		.ascii	"operation\000"
 3008      6174696F 
 3008      6E00
 3009              	.LASF64:
 3010 0420 636F6E76 		.ascii	"convertBackBinary\000"
 3010      65727442 
 3010      61636B42 
 3010      696E6172 
 3010      7900
 3011              	.LASF11:
 3012 0432 63686172 		.ascii	"char\000"
 3012      00
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 67


 3013              	.LASF22:
 3014 0437 726F626F 		.ascii	"robot_xpos\000"
 3014      745F7870 
 3014      6F7300
 3015              	.LASF13:
 3016 0442 696E7433 		.ascii	"int32_t\000"
 3016      325F7400 
 3017              	.LASF30:
 3018 044a 67315F79 		.ascii	"g1_ypos\000"
 3018      706F7300 
 3019              	.LASF36:
 3020 0452 67325F64 		.ascii	"g2_direction\000"
 3020      69726563 
 3020      74696F6E 
 3020      00
 3021              	.LASF3:
 3022 045f 73686F72 		.ascii	"short unsigned int\000"
 3022      7420756E 
 3022      7369676E 
 3022      65642069 
 3022      6E7400
 3023              	.LASF40:
 3024 0472 6D6F746F 		.ascii	"motorSetSpeed\000"
 3024      72536574 
 3024      53706565 
 3024      6400
 3025              	.LASF31:
 3026 0480 67315F73 		.ascii	"g1_speed\000"
 3026      70656564 
 3026      00
 3027              	.LASF63:
 3028 0489 6261636B 		.ascii	"backOps\000"
 3028      4F707300 
 3029              	.LASF89:
 3030 0491 64697370 		.ascii	"displaystring\000"
 3030      6C617973 
 3030      7472696E 
 3030      6700
 3031              	.LASF82:
 3032 049f 666C6167 		.ascii	"flag_ts_speed\000"
 3032      5F74735F 
 3032      73706565 
 3032      6400
 3033              	.LASF66:
 3034 04ad 636F6E76 		.ascii	"convertSensorBinary\000"
 3034      65727453 
 3034      656E736F 
 3034      7242696E 
 3034      61727900 
 3035              	.LASF103:
 3036 04c1 6D61696E 		.ascii	"main.c\000"
 3036      2E6300
 3037              	.LASF5:
 3038 04c8 6C6F6E67 		.ascii	"long unsigned int\000"
 3038      20756E73 
 3038      69676E65 
 3038      6420696E 
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 68


 3038      7400
 3039              	.LASF72:
 3040 04da 75736253 		.ascii	"usbStarted\000"
 3040      74617274 
 3040      656400
 3041              	.LASF78:
 3042 04e5 74735F73 		.ascii	"ts_speed\000"
 3042      70656564 
 3042      00
 3043              	.LASF74:
 3044 04ee 636F756E 		.ascii	"count\000"
 3044      7400
 3045              	.LASF80:
 3046 04f4 666C6167 		.ascii	"flag_ts_enc\000"
 3046      5F74735F 
 3046      656E6300 
 3047              	.LASF12:
 3048 0500 5F5F696E 		.ascii	"__int32_t\000"
 3048      7433325F 
 3048      7400
 3049              	.LASF41:
 3050 050a 6D6F746F 		.ascii	"motorTurnLeft\000"
 3050      72547572 
 3050      6E4C6566 
 3050      7400
 3051              	.LASF37:
 3052 0518 6D6F746F 		.ascii	"motorGoStraight\000"
 3052      72476F53 
 3052      74726169 
 3052      67687400 
 3053              	.LASF70:
 3054 0528 6D6F746F 		.ascii	"motorCount\000"
 3054      72436F75 
 3054      6E7400
 3055              	.LASF26:
 3056 0533 67305F79 		.ascii	"g0_ypos\000"
 3056      706F7300 
 3057              	.LASF79:
 3058 053b 74735F64 		.ascii	"ts_display\000"
 3058      6973706C 
 3058      617900
 3059              	.LASF61:
 3060 0546 6C617374 		.ascii	"lastState\000"
 3060      53746174 
 3060      6500
 3061              	.LASF77:
 3062 0550 74735F75 		.ascii	"ts_update\000"
 3062      70646174 
 3062      6500
 3063              	.LASF71:
 3064 055a 68616E64 		.ascii	"handle_usb\000"
 3064      6C655F75 
 3064      736200
 3065              	.LASF88:
 3066 0565 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3066      5F72665F 
 3066      7472616E 
ARM GAS  C:\Users\amul339\AppData\Local\Temp\ccM4V7Xe.s 			page 69


 3066      736D6973 
 3066      73696F6E 
 3067              	.LASF23:
 3068 0581 726F626F 		.ascii	"robot_ypos\000"
 3068      745F7970 
 3068      6F7300
 3069              	.LASF75:
 3070 058c 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3070      52784275 
 3070      66666572 
 3070      00
 3071              	.LASF67:
 3072 0599 76616C75 		.ascii	"value\000"
 3072      6500
 3073              	.LASF56:
 3074 059f 6D6F746F 		.ascii	"motor2String\000"
 3074      72325374 
 3074      72696E67 
 3074      00
 3075              	.LASF32:
 3076 05ac 67315F64 		.ascii	"g1_direction\000"
 3076      69726563 
 3076      74696F6E 
 3076      00
 3077              	.LASF42:
 3078 05b9 6D6F746F 		.ascii	"motorTurnRight\000"
 3078      72547572 
 3078      6E526967 
 3078      687400
 3079              	.LASF101:
 3080 05c8 6D696464 		.ascii	"middle\000"
 3080      6C6500
 3081              	.LASF20:
 3082 05cf 72737369 		.ascii	"rssi\000"
 3082      00
 3083              	.LASF24:
 3084 05d4 726F626F 		.ascii	"robot_orientation\000"
 3084      745F6F72 
 3084      69656E74 
 3084      6174696F 
 3084      6E00
 3085              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
