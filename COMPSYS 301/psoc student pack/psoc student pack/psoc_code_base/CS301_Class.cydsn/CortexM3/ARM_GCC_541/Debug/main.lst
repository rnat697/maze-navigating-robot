ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.section	.text.motorGoStraight,"ax",%progbits
 107              		.align	2
 108              		.global	motorGoStraight
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 3


 109              		.thumb
 110              		.thumb_func
 111              		.type	motorGoStraight, %function
 112              	motorGoStraight:
 113              	.LFB64:
 114              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        **** */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <stdbool.h>
  19:main.c        **** #include <string.h>
  20:main.c        **** #include <stdlib.h>
  21:main.c        **** #include <math.h>
  22:main.c        **** #include <project.h>
  23:main.c        **** //* ========================================
  24:main.c        **** #include "defines.h"
  25:main.c        **** #include "vars.h"
  26:main.c        **** #include "isr_eoc.h"
  27:main.c        **** //* ========================================
  28:main.c        **** void usbPutString(char *s);
  29:main.c        **** void usbPutChar(char c);
  30:main.c        **** void handle_usb();
  31:main.c        **** //* ========================================
  32:main.c        **** 
  33:main.c        **** 
  34:main.c        **** #define rota180 500 //turns
  35:main.c        **** #define rota90Left 250
  36:main.c        **** 
  37:main.c        **** #define moveSlow 50
  38:main.c        **** #define travelDist 326 // how
  39:main.c        **** #define Q1CHANNEL 3
  40:main.c        **** #define Q2CHANNEL 5 
  41:main.c        **** #define Q3CHANNEL 0
  42:main.c        **** #define Q4CHANNEL 1
  43:main.c        **** #define Q5CHANNEL 2
  44:main.c        **** #define Q6CHANNEL 4
  45:main.c        **** 
  46:main.c        **** CY_ISR_PROTO(isr_eoc_Interrupt_test);
  47:main.c        **** CY_ISR_PROTO(isr_motor_interrupt_speed);
  48:main.c        **** CY_ISR_PROTO(isr_TS_interrupt_sample);
  49:main.c        **** int convertSensorBinary();
  50:main.c        **** 
  51:main.c        **** void motorGoStraight(){
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 4


 115              		.loc 1 51 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119 0000 80B5     		push	{r7, lr}
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 7, -8
 122              		.cfi_offset 14, -4
 123 0002 00AF     		add	r7, sp, #0
 124              		.cfi_def_cfa_register 7
  52:main.c        ****     ////PWM_1_WriteCompare(150); // left wheel near power switch is stronker than right wheel //150
  53:main.c        ****     //M1_IN2_Write(0);
  54:main.c        ****     PWM_1_WriteCompare(200);//200
 125              		.loc 1 54 0
 126 0004 C820     		movs	r0, #200
 127 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  55:main.c        ****     PWM_2_WriteCompare(50); //50
 128              		.loc 1 55 0
 129 000a 3220     		movs	r0, #50
 130 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  56:main.c        **** }
 131              		.loc 1 56 0
 132 0010 00BF     		nop
 133 0012 80BD     		pop	{r7, pc}
 134              		.cfi_endproc
 135              	.LFE64:
 136              		.size	motorGoStraight, .-motorGoStraight
 137              		.section	.text.motorGoBackwards,"ax",%progbits
 138              		.align	2
 139              		.global	motorGoBackwards
 140              		.thumb
 141              		.thumb_func
 142              		.type	motorGoBackwards, %function
 143              	motorGoBackwards:
 144              	.LFB65:
  57:main.c        **** void motorGoBackwards(){
 145              		.loc 1 57 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 1, uses_anonymous_args = 0
 149 0000 80B5     		push	{r7, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 00AF     		add	r7, sp, #0
 154              		.cfi_def_cfa_register 7
  58:main.c        ****     
  59:main.c        ****     //M1_IN2_Write(0);
  60:main.c        ****     PWM_1_WriteCompare(55); //55
 155              		.loc 1 60 0
 156 0004 3720     		movs	r0, #55
 157 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  61:main.c        ****     PWM_2_WriteCompare(201); //201
 158              		.loc 1 61 0
 159 000a C920     		movs	r0, #201
 160 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  62:main.c        **** }
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 5


 161              		.loc 1 62 0
 162 0010 00BF     		nop
 163 0012 80BD     		pop	{r7, pc}
 164              		.cfi_endproc
 165              	.LFE65:
 166              		.size	motorGoBackwards, .-motorGoBackwards
 167              		.section	.text.motorStop,"ax",%progbits
 168              		.align	2
 169              		.global	motorStop
 170              		.thumb
 171              		.thumb_func
 172              		.type	motorStop, %function
 173              	motorStop:
 174              	.LFB66:
  63:main.c        **** void motorStop(){
 175              		.loc 1 63 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 1, uses_anonymous_args = 0
 179 0000 80B5     		push	{r7, lr}
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 7, -8
 182              		.cfi_offset 14, -4
 183 0002 00AF     		add	r7, sp, #0
 184              		.cfi_def_cfa_register 7
  64:main.c        ****     PWM_1_WriteCompare(127); 
 185              		.loc 1 64 0
 186 0004 7F20     		movs	r0, #127
 187 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  65:main.c        ****     PWM_2_WriteCompare(127);
 188              		.loc 1 65 0
 189 000a 7F20     		movs	r0, #127
 190 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  66:main.c        **** }
 191              		.loc 1 66 0
 192 0010 00BF     		nop
 193 0012 80BD     		pop	{r7, pc}
 194              		.cfi_endproc
 195              	.LFE66:
 196              		.size	motorStop, .-motorStop
 197              		.section	.text.motorTurnLeft,"ax",%progbits
 198              		.align	2
 199              		.global	motorTurnLeft
 200              		.thumb
 201              		.thumb_func
 202              		.type	motorTurnLeft, %function
 203              	motorTurnLeft:
 204              	.LFB67:
  67:main.c        **** 
  68:main.c        **** void motorTurnLeft(uint8 x){
 205              		.loc 1 68 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 8
 208              		@ frame_needed = 1, uses_anonymous_args = 0
 209 0000 80B5     		push	{r7, lr}
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 7, -8
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 6


 212              		.cfi_offset 14, -4
 213 0002 82B0     		sub	sp, sp, #8
 214              		.cfi_def_cfa_offset 16
 215 0004 00AF     		add	r7, sp, #0
 216              		.cfi_def_cfa_register 7
 217 0006 0346     		mov	r3, r0
 218 0008 FB71     		strb	r3, [r7, #7]
  69:main.c        ****     // TO DO
  70:main.c        ****     
  71:main.c        ****     PWM_1_WriteCompare(x); //55
 219              		.loc 1 71 0
 220 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 221 000c 1846     		mov	r0, r3
 222 000e FFF7FEFF 		bl	PWM_1_WriteCompare
  72:main.c        ****     PWM_2_WriteCompare(125); //201
 223              		.loc 1 72 0
 224 0012 7D20     		movs	r0, #125
 225 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
  73:main.c        ****     
  74:main.c        ****     
  75:main.c        ****     
  76:main.c        ****     //255
  77:main.c        **** }
 226              		.loc 1 77 0
 227 0018 00BF     		nop
 228 001a 0837     		adds	r7, r7, #8
 229              		.cfi_def_cfa_offset 8
 230 001c BD46     		mov	sp, r7
 231              		.cfi_def_cfa_register 13
 232              		@ sp needed
 233 001e 80BD     		pop	{r7, pc}
 234              		.cfi_endproc
 235              	.LFE67:
 236              		.size	motorTurnLeft, .-motorTurnLeft
 237              		.section	.text.motorTurnRight,"ax",%progbits
 238              		.align	2
 239              		.global	motorTurnRight
 240              		.thumb
 241              		.thumb_func
 242              		.type	motorTurnRight, %function
 243              	motorTurnRight:
 244              	.LFB68:
  78:main.c        **** 
  79:main.c        **** void motorTurnRight(int x){
 245              		.loc 1 79 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 8
 248              		@ frame_needed = 1, uses_anonymous_args = 0
 249 0000 80B5     		push	{r7, lr}
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 7, -8
 252              		.cfi_offset 14, -4
 253 0002 82B0     		sub	sp, sp, #8
 254              		.cfi_def_cfa_offset 16
 255 0004 00AF     		add	r7, sp, #0
 256              		.cfi_def_cfa_register 7
 257 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 7


  80:main.c        ****     // TO DO
  81:main.c        ****     
  82:main.c        ****     PWM_1_WriteCompare(127);//200
 258              		.loc 1 82 0
 259 0008 7F20     		movs	r0, #127
 260 000a FFF7FEFF 		bl	PWM_1_WriteCompare
  83:main.c        ****     PWM_2_WriteCompare(x); //50
 261              		.loc 1 83 0
 262 000e 7B68     		ldr	r3, [r7, #4]
 263 0010 DBB2     		uxtb	r3, r3
 264 0012 1846     		mov	r0, r3
 265 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
  84:main.c        **** 
  85:main.c        **** }
 266              		.loc 1 85 0
 267 0018 00BF     		nop
 268 001a 0837     		adds	r7, r7, #8
 269              		.cfi_def_cfa_offset 8
 270 001c BD46     		mov	sp, r7
 271              		.cfi_def_cfa_register 13
 272              		@ sp needed
 273 001e 80BD     		pop	{r7, pc}
 274              		.cfi_endproc
 275              	.LFE68:
 276              		.size	motorTurnRight, .-motorTurnRight
 277              		.global	changeMotor
 278              		.bss
 279 0012 0000     		.align	2
 280              		.type	changeMotor, %object
 281              		.size	changeMotor, 4
 282              	changeMotor:
 283 0014 00000000 		.space	4
 284              		.global	checkLight
 285              		.align	2
 286              		.type	checkLight, %object
 287              		.size	checkLight, 4
 288              	checkLight:
 289 0018 00000000 		.space	4
 290              		.global	lightState
 291              		.align	2
 292              		.type	lightState, %object
 293              		.size	lightState, 4
 294              	lightState:
 295 001c 00000000 		.space	4
 296              		.global	lightDetectedFront
 297              		.align	2
 298              		.type	lightDetectedFront, %object
 299              		.size	lightDetectedFront, 12
 300              	lightDetectedFront:
 301 0020 00000000 		.space	12
 301      00000000 
 301      00000000 
 302              		.global	counteoc
 303              		.align	2
 304              		.type	counteoc, %object
 305              		.size	counteoc, 4
 306              	counteoc:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 8


 307 002c 00000000 		.space	4
 308              		.global	processSensors
 309              		.align	2
 310              		.type	processSensors, %object
 311              		.size	processSensors, 4
 312              	processSensors:
 313 0030 00000000 		.space	4
 314              		.section	.text.isr_eoc_Interrupt_test,"ax",%progbits
 315              		.align	2
 316              		.global	isr_eoc_Interrupt_test
 317              		.thumb
 318              		.thumb_func
 319              		.type	isr_eoc_Interrupt_test, %function
 320              	isr_eoc_Interrupt_test:
 321              	.LFB69:
  86:main.c        **** int changeMotor=0;
  87:main.c        **** int checkLight =0;
  88:main.c        **** int lightState=0;
  89:main.c        **** volatile int lightDetectedFront[3] = {0,0,0};
  90:main.c        **** volatile int counteoc = 0;
  91:main.c        **** volatile int processSensors = 0;
  92:main.c        **** CY_ISR(isr_eoc_Interrupt_test)
  93:main.c        **** {
 322              		.loc 1 93 0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 8
 325              		@ frame_needed = 1, uses_anonymous_args = 0
 326 0000 80B5     		push	{r7, lr}
 327              		.cfi_def_cfa_offset 8
 328              		.cfi_offset 7, -8
 329              		.cfi_offset 14, -4
 330 0002 82B0     		sub	sp, sp, #8
 331              		.cfi_def_cfa_offset 16
 332 0004 00AF     		add	r7, sp, #0
 333              		.cfi_def_cfa_register 7
  94:main.c        ****     #ifdef isr_test_INTERRUPT_INTERRUPT_CALLBACK
  95:main.c        ****         isr_TS_Interrupt_InterruptCallback();
  96:main.c        ****     #endif /* isr_eoc_INTERRUPT_INTERRUPT_CALLBACK */ 
  97:main.c        **** 
  98:main.c        ****     /*  Place your Interrupt code here. */
  99:main.c        ****     /* `#START isr_eoc_Interrupt` */
 100:main.c        ****     int16 valueQ3 =  ADC_GetResult16(Q3CHANNEL);
 334              		.loc 1 100 0
 335 0006 0020     		movs	r0, #0
 336 0008 FFF7FEFF 		bl	ADC_GetResult16
 337 000c 0346     		mov	r3, r0
 338 000e FB80     		strh	r3, [r7, #6]	@ movhi
 101:main.c        ****     int16 valueQ4 =  ADC_GetResult16(Q4CHANNEL);
 339              		.loc 1 101 0
 340 0010 0120     		movs	r0, #1
 341 0012 FFF7FEFF 		bl	ADC_GetResult16
 342 0016 0346     		mov	r3, r0
 343 0018 BB80     		strh	r3, [r7, #4]	@ movhi
 102:main.c        ****     int16 valueQ5 =  ADC_GetResult16(Q5CHANNEL);
 344              		.loc 1 102 0
 345 001a 0220     		movs	r0, #2
 346 001c FFF7FEFF 		bl	ADC_GetResult16
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 9


 347 0020 0346     		mov	r3, r0
 348 0022 7B80     		strh	r3, [r7, #2]	@ movhi
 103:main.c        ****     // get value from ADC then convert to DAC to send to external LEDs
 104:main.c        ****     if (counteoc < 10) {
 349              		.loc 1 104 0
 350 0024 154B     		ldr	r3, .L13
 351 0026 1B68     		ldr	r3, [r3]
 352 0028 092B     		cmp	r3, #9
 353 002a 20DC     		bgt	.L7
 105:main.c        ****         //2211
 106:main.c        ****         if (valueQ3 >= 2211) {
 354              		.loc 1 106 0
 355 002c B7F90630 		ldrsh	r3, [r7, #6]
 356 0030 40F6A202 		movw	r2, #2210
 357 0034 9342     		cmp	r3, r2
 358 0036 02DD     		ble	.L8
 107:main.c        ****         //set flag for white light detected
 108:main.c        ****         lightDetectedFront[0] = 1;
 359              		.loc 1 108 0
 360 0038 114B     		ldr	r3, .L13+4
 361 003a 0122     		movs	r2, #1
 362 003c 1A60     		str	r2, [r3]
 363              	.L8:
 109:main.c        ****         }
 110:main.c        ****         if (valueQ4 >= 2211) {
 364              		.loc 1 110 0
 365 003e B7F90430 		ldrsh	r3, [r7, #4]
 366 0042 40F6A202 		movw	r2, #2210
 367 0046 9342     		cmp	r3, r2
 368 0048 02DD     		ble	.L9
 111:main.c        ****         //set flag for white light detected
 112:main.c        ****         lightDetectedFront[1] = 1;
 369              		.loc 1 112 0
 370 004a 0D4B     		ldr	r3, .L13+4
 371 004c 0122     		movs	r2, #1
 372 004e 5A60     		str	r2, [r3, #4]
 373              	.L9:
 113:main.c        ****         }
 114:main.c        ****     
 115:main.c        ****         if (valueQ5 >= 2211) {
 374              		.loc 1 115 0
 375 0050 B7F90230 		ldrsh	r3, [r7, #2]
 376 0054 40F6A202 		movw	r2, #2210
 377 0058 9342     		cmp	r3, r2
 378 005a 02DD     		ble	.L10
 116:main.c        ****         //set flag for white light detected
 117:main.c        ****         lightDetectedFront[2] = 1;
 379              		.loc 1 117 0
 380 005c 084B     		ldr	r3, .L13+4
 381 005e 0122     		movs	r2, #1
 382 0060 9A60     		str	r2, [r3, #8]
 383              	.L10:
 118:main.c        ****         }
 119:main.c        ****         
 120:main.c        ****         counteoc++;
 384              		.loc 1 120 0
 385 0062 064B     		ldr	r3, .L13
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 10


 386 0064 1B68     		ldr	r3, [r3]
 387 0066 0133     		adds	r3, r3, #1
 388 0068 044A     		ldr	r2, .L13
 389 006a 1360     		str	r3, [r2]
 121:main.c        ****     } else {
 122:main.c        ****         processSensors = 1;   
 123:main.c        ****        
 124:main.c        ****     }
 125:main.c        ****     /* `#END` */
 126:main.c        **** }
 390              		.loc 1 126 0
 391 006c 02E0     		b	.L12
 392              	.L7:
 122:main.c        ****        
 393              		.loc 1 122 0
 394 006e 054B     		ldr	r3, .L13+8
 395 0070 0122     		movs	r2, #1
 396 0072 1A60     		str	r2, [r3]
 397              	.L12:
 398              		.loc 1 126 0
 399 0074 00BF     		nop
 400 0076 0837     		adds	r7, r7, #8
 401              		.cfi_def_cfa_offset 8
 402 0078 BD46     		mov	sp, r7
 403              		.cfi_def_cfa_register 13
 404              		@ sp needed
 405 007a 80BD     		pop	{r7, pc}
 406              	.L14:
 407              		.align	2
 408              	.L13:
 409 007c 00000000 		.word	counteoc
 410 0080 00000000 		.word	lightDetectedFront
 411 0084 00000000 		.word	processSensors
 412              		.cfi_endproc
 413              	.LFE69:
 414              		.size	isr_eoc_Interrupt_test, .-isr_eoc_Interrupt_test
 415              		.bss
 416              	count:
 417 0034 00       		.space	1
 418              		.section	.text.isr_motor_interrupt_speed,"ax",%progbits
 419              		.align	2
 420              		.global	isr_motor_interrupt_speed
 421              		.thumb
 422              		.thumb_func
 423              		.type	isr_motor_interrupt_speed, %function
 424              	isr_motor_interrupt_speed:
 425              	.LFB70:
 127:main.c        **** // NEED TO INCREASE/DECREASE SPEED TOO
 128:main.c        **** // AND IMPLEMENT LIGHT SENSOR THINGS
 129:main.c        **** volatile static int8 count;
 130:main.c        **** CY_ISR(isr_motor_interrupt_speed)
 131:main.c        **** {
 426              		.loc 1 131 0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 0
 429              		@ frame_needed = 1, uses_anonymous_args = 0
 430              		@ link register save eliminated.
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 11


 431 0000 80B4     		push	{r7}
 432              		.cfi_def_cfa_offset 4
 433              		.cfi_offset 7, -4
 434 0002 00AF     		add	r7, sp, #0
 435              		.cfi_def_cfa_register 7
 132:main.c        ****     #ifdef isr_motor_INTERRUPT_INTERRUPT_CALLBACK
 133:main.c        ****         isr_motor_Interrupt_InterruptCallback();
 134:main.c        ****     #endif /* isr_motor_INTERRUPT_INTERRUPT_CALLBACK */ 
 135:main.c        **** 
 136:main.c        ****     /*  Place your Interrupt code here. */
 137:main.c        ****     /* `#START isr_motor_Interrupt` */
 138:main.c        ****       /*int16 currCountMotor2 = QuadDec_M2_GetCounter();
 139:main.c        ****       int16 currCountMotor1 = QuadDec_M1_GetCounter();  
 140:main.c        ****       
 141:main.c        ****      speedMotor1 = (currCountMotor1 - prevcountMotor1) / 0.2;
 142:main.c        ****      speedMotor2 = (currCountMotor2 - prevcountMotor2) / 0.2;
 143:main.c        ****     
 144:main.c        ****       prevcountMotor1 = currCountMotor1;
 145:main.c        ****       prevcountMotor2 = currCountMotor2;*/
 146:main.c        ****     
 147:main.c        ****     /* `#END` */
 148:main.c        **** }
 436              		.loc 1 148 0
 437 0004 00BF     		nop
 438 0006 BD46     		mov	sp, r7
 439              		.cfi_def_cfa_register 13
 440              		@ sp needed
 441 0008 80BC     		pop	{r7}
 442              		.cfi_restore 7
 443              		.cfi_def_cfa_offset 0
 444 000a 7047     		bx	lr
 445              		.cfi_endproc
 446              	.LFE70:
 447              		.size	isr_motor_interrupt_speed, .-isr_motor_interrupt_speed
 448              		.section	.rodata
 449              		.align	2
 450              	.LC0:
 451 0000 4D6F746F 		.ascii	"Motor 1 - start count: %d, end count: %d \012\000"
 451      72203120 
 451      2D207374 
 451      61727420 
 451      636F756E 
 452 002b 00       		.align	2
 453              	.LC1:
 454 002c 4D6F746F 		.ascii	"Motor 2 - start count: %d, end count: %d \012\000"
 454      72203220 
 454      2D207374 
 454      61727420 
 454      636F756E 
 455              		.section	.text.motorCount,"ax",%progbits
 456              		.align	2
 457              		.global	motorCount
 458              		.thumb
 459              		.thumb_func
 460              		.type	motorCount, %function
 461              	motorCount:
 462              	.LFB71:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 12


 149:main.c        **** void motorCount(){
 463              		.loc 1 149 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 20008
 466              		@ frame_needed = 1, uses_anonymous_args = 0
 467 0000 80B5     		push	{r7, lr}
 468              		.cfi_def_cfa_offset 8
 469              		.cfi_offset 7, -8
 470              		.cfi_offset 14, -4
 471 0002 ADF59C4D 		sub	sp, sp, #19968
 472              		.cfi_def_cfa_offset 19976
 473 0006 8AB0     		sub	sp, sp, #40
 474              		.cfi_def_cfa_offset 20016
 475 0008 00AF     		add	r7, sp, #0
 476              		.cfi_def_cfa_register 7
 150:main.c        ****     int16 beginningCountMotor1 = 0;
 477              		.loc 1 150 0
 478 000a 0023     		movs	r3, #0
 479 000c 07F59C42 		add	r2, r7, #19968
 480 0010 02F12602 		add	r2, r2, #38
 481 0014 1380     		strh	r3, [r2]	@ movhi
 151:main.c        ****     int16 beginningCountMotor2 = 0;
 482              		.loc 1 151 0
 483 0016 0023     		movs	r3, #0
 484 0018 07F59C42 		add	r2, r7, #19968
 485 001c 02F12402 		add	r2, r2, #36
 486 0020 1380     		strh	r3, [r2]	@ movhi
 152:main.c        ****     int16 endCountMotor2 = QuadDec_M2_GetCounter();
 487              		.loc 1 152 0
 488 0022 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 489 0026 0346     		mov	r3, r0
 490 0028 07F59C42 		add	r2, r7, #19968
 491 002c 02F12202 		add	r2, r2, #34
 492 0030 1380     		strh	r3, [r2]	@ movhi
 153:main.c        ****     int16 endCountMotor1 = QuadDec_M1_GetCounter();
 493              		.loc 1 153 0
 494 0032 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 495 0036 0346     		mov	r3, r0
 496 0038 07F59C42 		add	r2, r7, #19968
 497 003c 02F12002 		add	r2, r2, #32
 498 0040 1380     		strh	r3, [r2]	@ movhi
 154:main.c        ****     char motor1String[10000]; 
 155:main.c        ****     sprintf(motor1String,"Motor 1 - start count: %d, end count: %d \n", beginningCountMotor1, endCo
 499              		.loc 1 155 0
 500 0042 07F59C43 		add	r3, r7, #19968
 501 0046 03F12603 		add	r3, r3, #38
 502 004a B3F90020 		ldrsh	r2, [r3]
 503 004e 07F59C43 		add	r3, r7, #19968
 504 0052 03F12003 		add	r3, r3, #32
 505 0056 B3F90030 		ldrsh	r3, [r3]
 506 005a 07F51C50 		add	r0, r7, #9984
 507 005e 00F12800 		add	r0, r0, #40
 508 0062 1838     		subs	r0, r0, #24
 509 0064 1449     		ldr	r1, .L17
 510 0066 FFF7FEFF 		bl	sprintf
 156:main.c        ****     char motor2String[10000];
 157:main.c        ****     sprintf(motor2String,"Motor 2 - start count: %d, end count: %d \n", beginningCountMotor2 , endC
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 13


 511              		.loc 1 157 0
 512 006a 07F59C43 		add	r3, r7, #19968
 513 006e 03F12403 		add	r3, r3, #36
 514 0072 B3F90020 		ldrsh	r2, [r3]
 515 0076 07F59C43 		add	r3, r7, #19968
 516 007a 03F12203 		add	r3, r3, #34
 517 007e B3F90030 		ldrsh	r3, [r3]
 518 0082 07F12800 		add	r0, r7, #40
 519 0086 2838     		subs	r0, r0, #40
 520 0088 0C49     		ldr	r1, .L17+4
 521 008a FFF7FEFF 		bl	sprintf
 158:main.c        ****     
 159:main.c        ****     usbPutString(motor1String);
 522              		.loc 1 159 0
 523 008e 07F51C53 		add	r3, r7, #9984
 524 0092 03F12803 		add	r3, r3, #40
 525 0096 183B     		subs	r3, r3, #24
 526 0098 1846     		mov	r0, r3
 527 009a FFF7FEFF 		bl	usbPutString
 160:main.c        ****     usbPutString(motor2String);
 528              		.loc 1 160 0
 529 009e 07F12803 		add	r3, r7, #40
 530 00a2 283B     		subs	r3, r3, #40
 531 00a4 1846     		mov	r0, r3
 532 00a6 FFF7FEFF 		bl	usbPutString
 161:main.c        **** 
 162:main.c        **** }
 533              		.loc 1 162 0
 534 00aa 00BF     		nop
 535 00ac 07F59C47 		add	r7, r7, #19968
 536 00b0 2837     		adds	r7, r7, #40
 537              		.cfi_def_cfa_offset 8
 538 00b2 BD46     		mov	sp, r7
 539              		.cfi_def_cfa_register 13
 540              		@ sp needed
 541 00b4 80BD     		pop	{r7, pc}
 542              	.L18:
 543 00b6 00BF     		.align	2
 544              	.L17:
 545 00b8 00000000 		.word	.LC0
 546 00bc 2C000000 		.word	.LC1
 547              		.cfi_endproc
 548              	.LFE71:
 549              		.size	motorCount, .-motorCount
 550              		.section	.text.motorRun,"ax",%progbits
 551              		.align	2
 552              		.global	motorRun
 553              		.thumb
 554              		.thumb_func
 555              		.type	motorRun, %function
 556              	motorRun:
 557              	.LFB72:
 163:main.c        **** 
 164:main.c        **** void motorRun(){
 558              		.loc 1 164 0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 14


 561              		@ frame_needed = 1, uses_anonymous_args = 0
 562 0000 80B5     		push	{r7, lr}
 563              		.cfi_def_cfa_offset 8
 564              		.cfi_offset 7, -8
 565              		.cfi_offset 14, -4
 566 0002 00AF     		add	r7, sp, #0
 567              		.cfi_def_cfa_register 7
 165:main.c        ****     
 166:main.c        ****     
 167:main.c        ****     
 168:main.c        ****     PWM_1_Start();
 568              		.loc 1 168 0
 569 0004 FFF7FEFF 		bl	PWM_1_Start
 169:main.c        ****     PWM_2_Start();
 570              		.loc 1 169 0
 571 0008 FFF7FEFF 		bl	PWM_2_Start
 170:main.c        **** 
 171:main.c        **** 
 172:main.c        ****     motorStop();
 572              		.loc 1 172 0
 573 000c FFF7FEFF 		bl	motorStop
 173:main.c        ****     CyDelay(2000); // so we have time to set the robot up
 574              		.loc 1 173 0
 575 0010 4FF4FA60 		mov	r0, #2000
 576 0014 FFF7FEFF 		bl	CyDelay
 174:main.c        ****     motorGoStraight();
 577              		.loc 1 174 0
 578 0018 FFF7FEFF 		bl	motorGoStraight
 175:main.c        ****     CyDelay(2000);
 579              		.loc 1 175 0
 580 001c 4FF4FA60 		mov	r0, #2000
 581 0020 FFF7FEFF 		bl	CyDelay
 176:main.c        ****     motorStop();
 582              		.loc 1 176 0
 583 0024 FFF7FEFF 		bl	motorStop
 177:main.c        ****     
 178:main.c        ****     //motorGoBackwards();
 179:main.c        **** 
 180:main.c        ****     
 181:main.c        ****     //CyDelay(2000);
 182:main.c        ****  
 183:main.c        ****     //motorStop();
 184:main.c        ****     //motorCount();//checks count per second.
 185:main.c        **** 
 186:main.c        **** }
 584              		.loc 1 186 0
 585 0028 00BF     		nop
 586 002a 80BD     		pop	{r7, pc}
 587              		.cfi_endproc
 588              	.LFE72:
 589              		.size	motorRun, .-motorRun
 590              		.section	.text.isr_TS_Interrupt_sample,"ax",%progbits
 591              		.align	2
 592              		.global	isr_TS_Interrupt_sample
 593              		.thumb
 594              		.thumb_func
 595              		.type	isr_TS_Interrupt_sample, %function
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 15


 596              	isr_TS_Interrupt_sample:
 597              	.LFB73:
 187:main.c        **** CY_ISR(isr_TS_Interrupt_sample)
 188:main.c        **** {
 598              		.loc 1 188 0
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 0
 601              		@ frame_needed = 1, uses_anonymous_args = 0
 602 0000 80B5     		push	{r7, lr}
 603              		.cfi_def_cfa_offset 8
 604              		.cfi_offset 7, -8
 605              		.cfi_offset 14, -4
 606 0002 00AF     		add	r7, sp, #0
 607              		.cfi_def_cfa_register 7
 189:main.c        ****     #ifdef isr_TS_INTERRUPT_INTERRUPT_CALLBACK
 190:main.c        ****         isr_TS_Interrupt_InterruptCallback();
 191:main.c        ****     #endif /* isr_TS_INTERRUPT_INTERRUPT_CALLBACK */ 
 192:main.c        ****         ADC_StartConvert();
 608              		.loc 1 192 0
 609 0004 FFF7FEFF 		bl	ADC_StartConvert
 193:main.c        ****     /*  Place your Interrupt code here. */
 194:main.c        ****     /* `#START isr_TS_Interrupt` */
 195:main.c        **** 
 196:main.c        ****     /* `#END` */
 197:main.c        **** }
 610              		.loc 1 197 0
 611 0008 00BF     		nop
 612 000a 80BD     		pop	{r7, pc}
 613              		.cfi_endproc
 614              	.LFE73:
 615              		.size	isr_TS_Interrupt_sample, .-isr_TS_Interrupt_sample
 616              		.section	.text.main,"ax",%progbits
 617              		.align	2
 618              		.global	main
 619              		.thumb
 620              		.thumb_func
 621              		.type	main, %function
 622              	main:
 623              	.LFB74:
 198:main.c        **** 
 199:main.c        **** 
 200:main.c        **** int main()
 201:main.c        **** {
 624              		.loc 1 201 0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 8
 627              		@ frame_needed = 1, uses_anonymous_args = 0
 628 0000 80B5     		push	{r7, lr}
 629              		.cfi_def_cfa_offset 8
 630              		.cfi_offset 7, -8
 631              		.cfi_offset 14, -4
 632 0002 82B0     		sub	sp, sp, #8
 633              		.cfi_def_cfa_offset 16
 634 0004 00AF     		add	r7, sp, #0
 635              		.cfi_def_cfa_register 7
 202:main.c        ****     
 203:main.c        **** 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 16


 204:main.c        **** // --------------------------------    
 205:main.c        **** // ----- INITIALIZATIONS ----------
 206:main.c        ****     CYGlobalIntEnable;
 636              		.loc 1 206 0
 637              		.syntax unified
 638              	@ 206 "main.c" 1
 639 0006 62B6     		CPSIE   i
 640              	@ 0 "" 2
 207:main.c        ****     count  = 0;
 641              		.loc 1 207 0
 642              		.thumb
 643              		.syntax unified
 644 0008 354B     		ldr	r3, .L32
 645 000a 0022     		movs	r2, #0
 646 000c 1A70     		strb	r2, [r3]
 208:main.c        ****     
 209:main.c        ****     ADC_Start();
 647              		.loc 1 209 0
 648 000e FFF7FEFF 		bl	ADC_Start
 210:main.c        ****     Timer_TS_Start();
 649              		.loc 1 210 0
 650 0012 FFF7FEFF 		bl	Timer_TS_Start
 211:main.c        ****     Timer_Motor_Start();
 651              		.loc 1 211 0
 652 0016 FFF7FEFF 		bl	Timer_Motor_Start
 212:main.c        ****     QuadDec_M1_Start();
 653              		.loc 1 212 0
 654 001a FFF7FEFF 		bl	QuadDec_M1_Start
 213:main.c        ****     QuadDec_M2_Start(); //init the quadencoder,
 655              		.loc 1 213 0
 656 001e FFF7FEFF 		bl	QuadDec_M2_Start
 214:main.c        ****     //isr_motor_StartEx(isr_motor_interrupt_speed);
 215:main.c        ****     
 216:main.c        ****     isr_TS_StartEx(isr_TS_Interrupt_sample);
 657              		.loc 1 216 0
 658 0022 3048     		ldr	r0, .L32+4
 659 0024 FFF7FEFF 		bl	isr_TS_StartEx
 217:main.c        ****     isr_eoc_StartEx(isr_eoc_Interrupt_test);
 660              		.loc 1 217 0
 661 0028 2F48     		ldr	r0, .L32+8
 662 002a FFF7FEFF 		bl	isr_eoc_StartEx
 218:main.c        ****     
 219:main.c        ****     
 220:main.c        ****     //ADC_StartConvert();
 221:main.c        ****     
 222:main.c        ****     PWM_1_Start();
 663              		.loc 1 222 0
 664 002e FFF7FEFF 		bl	PWM_1_Start
 223:main.c        ****     PWM_2_Start();
 665              		.loc 1 223 0
 666 0032 FFF7FEFF 		bl	PWM_2_Start
 224:main.c        ****     
 225:main.c        ****     LED_Write(0);
 667              		.loc 1 225 0
 668 0036 0020     		movs	r0, #0
 669 0038 FFF7FEFF 		bl	LED_Write
 226:main.c        ****     ///////IF NOT USINNG MOTOR RUN DO PWM START STUFF
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 17


 227:main.c        ****     // SO write compare is a measure of speed
 228:main.c        ****     // And Cy delay delays the running of the motor and duration that it travels
 229:main.c        ****     //look at motor RUn config above for more info.
 230:main.c        ****     motorStop();
 670              		.loc 1 230 0
 671 003c FFF7FEFF 		bl	motorStop
 231:main.c        ****     CyDelay(2000); // to prep PARTY PART!! WHOOP WHOOP
 672              		.loc 1 231 0
 673 0040 4FF4FA60 		mov	r0, #2000
 674 0044 FFF7FEFF 		bl	CyDelay
 675              	.L31:
 232:main.c        ****    /* while(QuadDec_M1_GetCounter()<travelDist){
 233:main.c        ****     //where counter is value we want it to stop at.
 234:main.c        ****         motorGoStraight();
 235:main.c        ****     
 236:main.c        ****     
 237:main.c        ****     }*/
 238:main.c        **** 
 239:main.c        ****     
 240:main.c        ****     //motorStop();
 241:main.c        ****    // CyDelay(2000); // so we have time to set the robot up
 242:main.c        ****     //motorTurnLeft();
 243:main.c        ****     //motorStop();
 244:main.c        ****     //motorCount();//checks count per second.
 245:main.c        ****      
 246:main.c        ****     
 247:main.c        ****     
 248:main.c        **** 
 249:main.c        ****     
 250:main.c        **** 
 251:main.c        ****     
 252:main.c        **** // ------USB SETUP ----------------    
 253:main.c        **** //#ifdef USE_USB    
 254:main.c        **** //    USBUART_Start(0,USBUART_5V_OPERATION);
 255:main.c        **** //#endif        
 256:main.c        **** //        
 257:main.c        **** //    RF_BT_SELECT_Write(0);
 258:main.c        **** //    motorCount();//checks count per second.
 259:main.c        **** 
 260:main.c        ****     //usbPutString(displaystring);
 261:main.c        ****     while(1)
 262:main.c        ****     {
 263:main.c        ****         /* Place your application code here. */
 264:main.c        ****         
 265:main.c        ****         //if Q3 SENSES BLACK LIGHT BUT Q4 DOES NOT SENSE THE BLACK LIGHT MOVE TOWARDS THE RIGHT TO 
 266:main.c        ****     // IF Q3 AND Q4 SENSES TURN 90 DEGREES LEFT - intersection
 267:main.c        ****     // IF Q5 BUT NOT Q4 SENSES BLACK LIGHT MOVE TOWARDS THE LEFT TO REALIGN CENTER
 268:main.c        ****     // IF Q5 AND Q4 TURN 90 DEGREES RIGHT - intersection
 269:main.c        ****        
 270:main.c        ****         if (processSensors == 1) {
 676              		.loc 1 270 0
 677 0048 284B     		ldr	r3, .L32+12
 678 004a 1B68     		ldr	r3, [r3]
 679 004c 012B     		cmp	r3, #1
 680 004e FBD1     		bne	.L31
 681              	.LBB2:
 271:main.c        ****             
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 18


 272:main.c        ****             //make decision
 273:main.c        ****             
 274:main.c        ****             //checks intersection
 275:main.c        ****             //int leftIntersection= (lightDetectedFront[0] == 1 && lightDetectedFront[1]==1);
 276:main.c        ****             //int rightIntersection=  (lightDetectedFront[2] == 1 && lightDetectedFront[1]==1);
 277:main.c        ****             
 278:main.c        ****            //check intersectin
 279:main.c        ****             ///mazeIntersection(leftIntersection,rightIntersection);
 280:main.c        ****         
 281:main.c        ****             int operation = convertSensorBinary();
 682              		.loc 1 281 0
 683 0050 FFF7FEFF 		bl	convertSensorBinary
 684 0054 7860     		str	r0, [r7, #4]
 282:main.c        ****             
 283:main.c        ****             switch(operation){
 685              		.loc 1 283 0
 686 0056 7B68     		ldr	r3, [r7, #4]
 687 0058 072B     		cmp	r3, #7
 688 005a 2DD8     		bhi	.L23
 689 005c 01A2     		adr	r2, .L25
 690 005e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 691 0062 00BF     		.p2align 2
 692              	.L25:
 693 0064 AD000000 		.word	.L24+1
 694 0068 B9000000 		.word	.L23+1
 695 006c B9000000 		.word	.L23+1
 696 0070 9F000000 		.word	.L26+1
 697 0074 B9000000 		.word	.L23+1
 698 0078 93000000 		.word	.L27+1
 699 007c 85000000 		.word	.L28+1
 700 0080 B3000000 		.word	.L29+1
 701              		.p2align 1
 702              	.L28:
 284:main.c        ****             //where 1 is on white, 0 is on black.
 285:main.c        **** //                case 0: // all sensors are in black
 286:main.c        **** //                    motorStop();
 287:main.c        **** //                    //motorGoStraight();
 288:main.c        **** //                    //motorTurnLeft(50);
 289:main.c        **** //                    LED_Write(0);
 290:main.c        **** //                    break;
 291:main.c        ****                 
 292:main.c        ****                 case 6:// 1 1 0 // Q5 under black
 293:main.c        ****                     motorTurnRight(50);
 703              		.loc 1 293 0
 704 0084 3220     		movs	r0, #50
 705 0086 FFF7FEFF 		bl	motorTurnRight
 294:main.c        ****                     LED_Write(1);
 706              		.loc 1 294 0
 707 008a 0120     		movs	r0, #1
 708 008c FFF7FEFF 		bl	LED_Write
 295:main.c        ****                     break;
 709              		.loc 1 295 0
 710 0090 15E0     		b	.L30
 711              	.L27:
 296:main.c        ****                 
 297:main.c        ****                case 5:// 101 // Q4 under black
 298:main.c        ****                     motorGoStraight();
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 19


 712              		.loc 1 298 0
 713 0092 FFF7FEFF 		bl	motorGoStraight
 299:main.c        ****                     LED_Write(0);
 714              		.loc 1 299 0
 715 0096 0020     		movs	r0, #0
 716 0098 FFF7FEFF 		bl	LED_Write
 300:main.c        ****                     break;
 717              		.loc 1 300 0
 718 009c 0FE0     		b	.L30
 719              	.L26:
 301:main.c        ****                case 3:// 0 1 1 // Q3 under black
 302:main.c        ****                     motorTurnLeft(50);
 720              		.loc 1 302 0
 721 009e 3220     		movs	r0, #50
 722 00a0 FFF7FEFF 		bl	motorTurnLeft
 303:main.c        ****                     LED_Write(1);
 723              		.loc 1 303 0
 724 00a4 0120     		movs	r0, #1
 725 00a6 FFF7FEFF 		bl	LED_Write
 304:main.c        ****                     break;
 726              		.loc 1 304 0
 727 00aa 08E0     		b	.L30
 728              	.L24:
 305:main.c        ****                 case 0: // 111 // ALL UNDER WHITE
 306:main.c        ****                     motorStop();
 729              		.loc 1 306 0
 730 00ac FFF7FEFF 		bl	motorStop
 307:main.c        ****                     break;
 731              		.loc 1 307 0
 732 00b0 05E0     		b	.L30
 733              	.L29:
 308:main.c        ****                 case 7:
 309:main.c        ****                     motorStop();
 734              		.loc 1 309 0
 735 00b2 FFF7FEFF 		bl	motorStop
 310:main.c        ****                     break;
 736              		.loc 1 310 0
 737 00b6 02E0     		b	.L30
 738              	.L23:
 311:main.c        ****                 default: 
 312:main.c        ****                     motorStop();
 739              		.loc 1 312 0
 740 00b8 FFF7FEFF 		bl	motorStop
 313:main.c        ****                     break;
 741              		.loc 1 313 0
 742 00bc 00BF     		nop
 743              	.L30:
 314:main.c        ****             
 315:main.c        ****             }
 316:main.c        ****             
 317:main.c        ****             
 318:main.c        **** //            if(leftIntersection){
 319:main.c        **** //                motorTurnLeft(55);
 320:main.c        **** //            
 321:main.c        **** //            
 322:main.c        **** //                CyDelay(250);
 323:main.c        **** //            }
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 20


 324:main.c        **** //            
 325:main.c        **** //            if(rightIntersection){
 326:main.c        **** //                motorTurnRight(55);
 327:main.c        **** //                
 328:main.c        **** //                CyDelay(250);//small rotation need small time
 329:main.c        **** //            
 330:main.c        **** //            }
 331:main.c        ****             
 332:main.c        **** //            //Slight turns
 333:main.c        **** //            if(lightDetectedFront[0] == 1 && lightDetectedFront[1]==0){
 334:main.c        **** //                motorTurnRight(140);
 335:main.c        **** //                CyDelay(20);//small rotation need small time
 336:main.c        **** //            }
 337:main.c        **** //            
 338:main.c        **** //            if(lightDetectedFront[2] == 0 && lightDetectedFront[1]==1){
 339:main.c        **** //                motorTurnLeft(140);
 340:main.c        **** //                CyDelay(20);//small rotation need small time
 341:main.c        **** //            }
 342:main.c        **** 
 343:main.c        ****            
 344:main.c        ****             //reset variable.
 345:main.c        ****             processSensors = 0;
 744              		.loc 1 345 0
 745 00be 0B4B     		ldr	r3, .L32+12
 746 00c0 0022     		movs	r2, #0
 747 00c2 1A60     		str	r2, [r3]
 346:main.c        ****             //reset counter
 347:main.c        ****              counteoc = 0;
 748              		.loc 1 347 0
 749 00c4 0A4B     		ldr	r3, .L32+16
 750 00c6 0022     		movs	r2, #0
 751 00c8 1A60     		str	r2, [r3]
 348:main.c        ****             //reset flags for lightsensors because it checks every 10 iterations, adds delay/
 349:main.c        ****             lightDetectedFront[0] = 0;
 752              		.loc 1 349 0
 753 00ca 0A4B     		ldr	r3, .L32+20
 754 00cc 0022     		movs	r2, #0
 755 00ce 1A60     		str	r2, [r3]
 350:main.c        ****             lightDetectedFront[1] = 0;
 756              		.loc 1 350 0
 757 00d0 084B     		ldr	r3, .L32+20
 758 00d2 0022     		movs	r2, #0
 759 00d4 5A60     		str	r2, [r3, #4]
 351:main.c        ****             lightDetectedFront[2] = 0;
 760              		.loc 1 351 0
 761 00d6 074B     		ldr	r3, .L32+20
 762 00d8 0022     		movs	r2, #0
 763 00da 9A60     		str	r2, [r3, #8]
 764              	.LBE2:
 352:main.c        ****           
 353:main.c        ****         }
 354:main.c        ****         
 355:main.c        ****     }   
 765              		.loc 1 355 0
 766 00dc B4E7     		b	.L31
 767              	.L33:
 768 00de 00BF     		.align	2
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 21


 769              	.L32:
 770 00e0 34000000 		.word	count
 771 00e4 00000000 		.word	isr_TS_Interrupt_sample
 772 00e8 00000000 		.word	isr_eoc_Interrupt_test
 773 00ec 00000000 		.word	processSensors
 774 00f0 00000000 		.word	counteoc
 775 00f4 00000000 		.word	lightDetectedFront
 776              		.cfi_endproc
 777              	.LFE74:
 778              		.size	main, .-main
 779              		.section	.text.convertSensorBinary,"ax",%progbits
 780              		.align	2
 781              		.global	convertSensorBinary
 782              		.thumb
 783              		.thumb_func
 784              		.type	convertSensorBinary, %function
 785              	convertSensorBinary:
 786              	.LFB75:
 356:main.c        **** }
 357:main.c        **** 
 358:main.c        ****   
 359:main.c        **** 
 360:main.c        **** 
 361:main.c        **** 
 362:main.c        **** int convertSensorBinary()
 363:main.c        **** {
 787              		.loc 1 363 0
 788              		.cfi_startproc
 789              		@ args = 0, pretend = 0, frame = 8
 790              		@ frame_needed = 1, uses_anonymous_args = 0
 791              		@ link register save eliminated.
 792 0000 80B4     		push	{r7}
 793              		.cfi_def_cfa_offset 4
 794              		.cfi_offset 7, -4
 795 0002 83B0     		sub	sp, sp, #12
 796              		.cfi_def_cfa_offset 16
 797 0004 00AF     		add	r7, sp, #0
 798              		.cfi_def_cfa_register 7
 364:main.c        ****    int value=0;
 799              		.loc 1 364 0
 800 0006 0023     		movs	r3, #0
 801 0008 7B60     		str	r3, [r7, #4]
 365:main.c        ****   value=value + lightDetectedFront[0]*4;
 802              		.loc 1 365 0
 803 000a 0B4B     		ldr	r3, .L36
 804 000c 1B68     		ldr	r3, [r3]
 805 000e 9B00     		lsls	r3, r3, #2
 806 0010 7A68     		ldr	r2, [r7, #4]
 807 0012 1344     		add	r3, r3, r2
 808 0014 7B60     		str	r3, [r7, #4]
 366:main.c        ****   value=value + lightDetectedFront[1]*2;
 809              		.loc 1 366 0
 810 0016 084B     		ldr	r3, .L36
 811 0018 5B68     		ldr	r3, [r3, #4]
 812 001a 5B00     		lsls	r3, r3, #1
 813 001c 7A68     		ldr	r2, [r7, #4]
 814 001e 1344     		add	r3, r3, r2
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 22


 815 0020 7B60     		str	r3, [r7, #4]
 367:main.c        ****   value=value + lightDetectedFront[2]*1;
 816              		.loc 1 367 0
 817 0022 054B     		ldr	r3, .L36
 818 0024 9B68     		ldr	r3, [r3, #8]
 819 0026 7A68     		ldr	r2, [r7, #4]
 820 0028 1344     		add	r3, r3, r2
 821 002a 7B60     		str	r3, [r7, #4]
 368:main.c        ****     return value;
 822              		.loc 1 368 0
 823 002c 7B68     		ldr	r3, [r7, #4]
 369:main.c        **** }
 824              		.loc 1 369 0
 825 002e 1846     		mov	r0, r3
 826 0030 0C37     		adds	r7, r7, #12
 827              		.cfi_def_cfa_offset 4
 828 0032 BD46     		mov	sp, r7
 829              		.cfi_def_cfa_register 13
 830              		@ sp needed
 831 0034 80BC     		pop	{r7}
 832              		.cfi_restore 7
 833              		.cfi_def_cfa_offset 0
 834 0036 7047     		bx	lr
 835              	.L37:
 836              		.align	2
 837              	.L36:
 838 0038 00000000 		.word	lightDetectedFront
 839              		.cfi_endproc
 840              	.LFE75:
 841              		.size	convertSensorBinary, .-convertSensorBinary
 842              		.section	.text.usbPutString,"ax",%progbits
 843              		.align	2
 844              		.global	usbPutString
 845              		.thumb
 846              		.thumb_func
 847              		.type	usbPutString, %function
 848              	usbPutString:
 849              	.LFB76:
 370:main.c        **** //* ========================================
 371:main.c        **** void usbPutString(char *s)
 372:main.c        **** {
 850              		.loc 1 372 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 8
 853              		@ frame_needed = 1, uses_anonymous_args = 0
 854 0000 80B5     		push	{r7, lr}
 855              		.cfi_def_cfa_offset 8
 856              		.cfi_offset 7, -8
 857              		.cfi_offset 14, -4
 858 0002 82B0     		sub	sp, sp, #8
 859              		.cfi_def_cfa_offset 16
 860 0004 00AF     		add	r7, sp, #0
 861              		.cfi_def_cfa_register 7
 862 0006 7860     		str	r0, [r7, #4]
 373:main.c        **** // !! Assumes that *s is a string with allocated space >=64 chars     
 374:main.c        **** //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 375:main.c        **** //  length to 62 char (63rd char is a '!')
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 23


 376:main.c        **** 
 377:main.c        **** #ifdef USE_USB     
 378:main.c        ****     while (USBUART_CDCIsReady() == 0);
 863              		.loc 1 378 0
 864 0008 00BF     		nop
 865              	.L39:
 866              		.loc 1 378 0 is_stmt 0 discriminator 1
 867 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 868 000e 0346     		mov	r3, r0
 869 0010 002B     		cmp	r3, #0
 870 0012 FAD0     		beq	.L39
 379:main.c        ****     s[63]='\0';
 871              		.loc 1 379 0 is_stmt 1
 872 0014 7B68     		ldr	r3, [r7, #4]
 873 0016 3F33     		adds	r3, r3, #63
 874 0018 0022     		movs	r2, #0
 875 001a 1A70     		strb	r2, [r3]
 380:main.c        ****     s[62]='!';
 876              		.loc 1 380 0
 877 001c 7B68     		ldr	r3, [r7, #4]
 878 001e 3E33     		adds	r3, r3, #62
 879 0020 2122     		movs	r2, #33
 880 0022 1A70     		strb	r2, [r3]
 381:main.c        ****     USBUART_PutData((uint8*)s,strlen(s));
 881              		.loc 1 381 0
 882 0024 7868     		ldr	r0, [r7, #4]
 883 0026 FFF7FEFF 		bl	strlen
 884 002a 0346     		mov	r3, r0
 885 002c 9BB2     		uxth	r3, r3
 886 002e 1946     		mov	r1, r3
 887 0030 7868     		ldr	r0, [r7, #4]
 888 0032 FFF7FEFF 		bl	USBUART_PutData
 382:main.c        **** #endif
 383:main.c        **** }
 889              		.loc 1 383 0
 890 0036 00BF     		nop
 891 0038 0837     		adds	r7, r7, #8
 892              		.cfi_def_cfa_offset 8
 893 003a BD46     		mov	sp, r7
 894              		.cfi_def_cfa_register 13
 895              		@ sp needed
 896 003c 80BD     		pop	{r7, pc}
 897              		.cfi_endproc
 898              	.LFE76:
 899              		.size	usbPutString, .-usbPutString
 900 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 901              		.align	2
 902              		.global	usbPutChar
 903              		.thumb
 904              		.thumb_func
 905              		.type	usbPutChar, %function
 906              	usbPutChar:
 907              	.LFB77:
 384:main.c        **** //* ========================================
 385:main.c        **** void usbPutChar(char c)
 386:main.c        **** {
 908              		.loc 1 386 0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 24


 909              		.cfi_startproc
 910              		@ args = 0, pretend = 0, frame = 8
 911              		@ frame_needed = 1, uses_anonymous_args = 0
 912 0000 80B5     		push	{r7, lr}
 913              		.cfi_def_cfa_offset 8
 914              		.cfi_offset 7, -8
 915              		.cfi_offset 14, -4
 916 0002 82B0     		sub	sp, sp, #8
 917              		.cfi_def_cfa_offset 16
 918 0004 00AF     		add	r7, sp, #0
 919              		.cfi_def_cfa_register 7
 920 0006 0346     		mov	r3, r0
 921 0008 FB71     		strb	r3, [r7, #7]
 387:main.c        **** #ifdef USE_USB     
 388:main.c        ****     while (USBUART_CDCIsReady() == 0);
 922              		.loc 1 388 0
 923 000a 00BF     		nop
 924              	.L41:
 925              		.loc 1 388 0 is_stmt 0 discriminator 1
 926 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 927 0010 0346     		mov	r3, r0
 928 0012 002B     		cmp	r3, #0
 929 0014 FAD0     		beq	.L41
 389:main.c        ****     USBUART_PutChar(c);
 930              		.loc 1 389 0 is_stmt 1
 931 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 932 0018 1846     		mov	r0, r3
 933 001a FFF7FEFF 		bl	USBUART_PutChar
 390:main.c        **** #endif    
 391:main.c        **** }
 934              		.loc 1 391 0
 935 001e 00BF     		nop
 936 0020 0837     		adds	r7, r7, #8
 937              		.cfi_def_cfa_offset 8
 938 0022 BD46     		mov	sp, r7
 939              		.cfi_def_cfa_register 13
 940              		@ sp needed
 941 0024 80BD     		pop	{r7, pc}
 942              		.cfi_endproc
 943              	.LFE77:
 944              		.size	usbPutChar, .-usbPutChar
 945 0026 00BF     		.section	.text.handle_usb,"ax",%progbits
 946              		.align	2
 947              		.global	handle_usb
 948              		.thumb
 949              		.thumb_func
 950              		.type	handle_usb, %function
 951              	handle_usb:
 952              	.LFB78:
 392:main.c        **** //* ========================================
 393:main.c        **** void handle_usb()
 394:main.c        **** {
 953              		.loc 1 394 0
 954              		.cfi_startproc
 955              		@ args = 0, pretend = 0, frame = 8
 956              		@ frame_needed = 1, uses_anonymous_args = 0
 957 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 25


 958              		.cfi_def_cfa_offset 8
 959              		.cfi_offset 7, -8
 960              		.cfi_offset 14, -4
 961 0002 82B0     		sub	sp, sp, #8
 962              		.cfi_def_cfa_offset 16
 963 0004 00AF     		add	r7, sp, #0
 964              		.cfi_def_cfa_register 7
 395:main.c        ****     // handles input at terminal, echos it back to the terminal
 396:main.c        ****     // turn echo OFF, key emulation: only CR
 397:main.c        ****     // entered string is made available in 'line' and 'flag_KB_string' is set
 398:main.c        ****     
 399:main.c        ****     static uint8 usbStarted = FALSE;
 400:main.c        ****     static uint16 usbBufCount = 0;
 401:main.c        ****     uint8 c = 0; 
 965              		.loc 1 401 0
 966 0006 0023     		movs	r3, #0
 967 0008 FB71     		strb	r3, [r7, #7]
 402:main.c        ****     
 403:main.c        **** 
 404:main.c        ****     if (!usbStarted)
 968              		.loc 1 404 0
 969 000a 2B4B     		ldr	r3, .L52
 970 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971 000e 002B     		cmp	r3, #0
 972 0010 0AD1     		bne	.L43
 405:main.c        ****     {
 406:main.c        ****         if (USBUART_GetConfiguration())
 973              		.loc 1 406 0
 974 0012 FFF7FEFF 		bl	USBUART_GetConfiguration
 975 0016 0346     		mov	r3, r0
 976 0018 002B     		cmp	r3, #0
 977 001a 49D0     		beq	.L51
 407:main.c        ****         {
 408:main.c        ****             USBUART_CDC_Init();
 978              		.loc 1 408 0
 979 001c FFF7FEFF 		bl	USBUART_CDC_Init
 409:main.c        ****             usbStarted = TRUE;
 980              		.loc 1 409 0
 981 0020 254B     		ldr	r3, .L52
 982 0022 0122     		movs	r2, #1
 983 0024 1A70     		strb	r2, [r3]
 410:main.c        ****         }
 411:main.c        ****     }
 412:main.c        ****     else
 413:main.c        ****     {
 414:main.c        ****         if (USBUART_DataIsReady() != 0)
 415:main.c        ****         {  
 416:main.c        ****             c = USBUART_GetChar();
 417:main.c        **** 
 418:main.c        ****             if ((c == 13) || (c == 10))
 419:main.c        ****             {
 420:main.c        **** //                if (usbBufCount > 0)
 421:main.c        ****                 {
 422:main.c        ****                     entry[usbBufCount]= '\0';
 423:main.c        ****                     strcpy(line,entry);
 424:main.c        ****                     usbBufCount = 0;
 425:main.c        ****                     flag_KB_string = 1;
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 26


 426:main.c        ****                 }
 427:main.c        ****             }
 428:main.c        ****             else 
 429:main.c        ****             {
 430:main.c        ****                 if (((c == CHAR_BACKSP) || (c == CHAR_DEL) ) && (usbBufCount > 0) )
 431:main.c        ****                     usbBufCount--;
 432:main.c        ****                 else
 433:main.c        ****                 {
 434:main.c        ****                     if (usbBufCount > (BUF_SIZE-2) ) // one less else strtok triggers a crash
 435:main.c        ****                     {
 436:main.c        ****                        USBUART_PutChar('!');        
 437:main.c        ****                     }
 438:main.c        ****                     else
 439:main.c        ****                         entry[usbBufCount++] = c;  
 440:main.c        ****                 }  
 441:main.c        ****             }
 442:main.c        ****         }
 443:main.c        ****     }    
 444:main.c        **** }
 984              		.loc 1 444 0
 985 0026 43E0     		b	.L51
 986              	.L43:
 414:main.c        ****         {  
 987              		.loc 1 414 0
 988 0028 FFF7FEFF 		bl	USBUART_DataIsReady
 989 002c 0346     		mov	r3, r0
 990 002e 002B     		cmp	r3, #0
 991 0030 3ED0     		beq	.L51
 416:main.c        **** 
 992              		.loc 1 416 0
 993 0032 FFF7FEFF 		bl	USBUART_GetChar
 994 0036 0346     		mov	r3, r0
 995 0038 FB71     		strb	r3, [r7, #7]
 418:main.c        ****             {
 996              		.loc 1 418 0
 997 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 998 003c 0D2B     		cmp	r3, #13
 999 003e 02D0     		beq	.L46
 418:main.c        ****             {
 1000              		.loc 1 418 0 is_stmt 0 discriminator 1
 1001 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1002 0042 0A2B     		cmp	r3, #10
 1003 0044 10D1     		bne	.L47
 1004              	.L46:
 422:main.c        ****                     strcpy(line,entry);
 1005              		.loc 1 422 0 is_stmt 1
 1006 0046 1D4B     		ldr	r3, .L52+4
 1007 0048 1B88     		ldrh	r3, [r3]
 1008 004a 1A46     		mov	r2, r3
 1009 004c 1C4B     		ldr	r3, .L52+8
 1010 004e 0021     		movs	r1, #0
 1011 0050 9954     		strb	r1, [r3, r2]
 423:main.c        ****                     usbBufCount = 0;
 1012              		.loc 1 423 0
 1013 0052 1B49     		ldr	r1, .L52+8
 1014 0054 1B48     		ldr	r0, .L52+12
 1015 0056 FFF7FEFF 		bl	strcpy
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 27


 424:main.c        ****                     flag_KB_string = 1;
 1016              		.loc 1 424 0
 1017 005a 184B     		ldr	r3, .L52+4
 1018 005c 0022     		movs	r2, #0
 1019 005e 1A80     		strh	r2, [r3]	@ movhi
 425:main.c        ****                 }
 1020              		.loc 1 425 0
 1021 0060 194B     		ldr	r3, .L52+16
 1022 0062 0122     		movs	r2, #1
 1023 0064 1A70     		strb	r2, [r3]
 1024 0066 23E0     		b	.L45
 1025              	.L47:
 430:main.c        ****                     usbBufCount--;
 1026              		.loc 1 430 0
 1027 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1028 006a 082B     		cmp	r3, #8
 1029 006c 02D0     		beq	.L48
 430:main.c        ****                     usbBufCount--;
 1030              		.loc 1 430 0 is_stmt 0 discriminator 2
 1031 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1032 0070 7F2B     		cmp	r3, #127
 1033 0072 0AD1     		bne	.L49
 1034              	.L48:
 430:main.c        ****                     usbBufCount--;
 1035              		.loc 1 430 0 discriminator 3
 1036 0074 114B     		ldr	r3, .L52+4
 1037 0076 1B88     		ldrh	r3, [r3]
 1038 0078 002B     		cmp	r3, #0
 1039 007a 06D0     		beq	.L49
 431:main.c        ****                 else
 1040              		.loc 1 431 0 is_stmt 1
 1041 007c 0F4B     		ldr	r3, .L52+4
 1042 007e 1B88     		ldrh	r3, [r3]
 1043 0080 013B     		subs	r3, r3, #1
 1044 0082 9AB2     		uxth	r2, r3
 1045 0084 0D4B     		ldr	r3, .L52+4
 1046 0086 1A80     		strh	r2, [r3]	@ movhi
 1047 0088 12E0     		b	.L45
 1048              	.L49:
 434:main.c        ****                     {
 1049              		.loc 1 434 0
 1050 008a 0C4B     		ldr	r3, .L52+4
 1051 008c 1B88     		ldrh	r3, [r3]
 1052 008e 3E2B     		cmp	r3, #62
 1053 0090 03D9     		bls	.L50
 436:main.c        ****                     }
 1054              		.loc 1 436 0
 1055 0092 2120     		movs	r0, #33
 1056 0094 FFF7FEFF 		bl	USBUART_PutChar
 1057              		.loc 1 444 0
 1058 0098 0AE0     		b	.L51
 1059              	.L50:
 439:main.c        ****                 }  
 1060              		.loc 1 439 0
 1061 009a 084B     		ldr	r3, .L52+4
 1062 009c 1B88     		ldrh	r3, [r3]
 1063 009e 5A1C     		adds	r2, r3, #1
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 28


 1064 00a0 91B2     		uxth	r1, r2
 1065 00a2 064A     		ldr	r2, .L52+4
 1066 00a4 1180     		strh	r1, [r2]	@ movhi
 1067 00a6 1946     		mov	r1, r3
 1068 00a8 054A     		ldr	r2, .L52+8
 1069 00aa FB79     		ldrb	r3, [r7, #7]
 1070 00ac 5354     		strb	r3, [r2, r1]
 1071              		.loc 1 444 0
 1072 00ae FFE7     		b	.L51
 1073              	.L45:
 1074              	.L51:
 1075 00b0 00BF     		nop
 1076 00b2 0837     		adds	r7, r7, #8
 1077              		.cfi_def_cfa_offset 8
 1078 00b4 BD46     		mov	sp, r7
 1079              		.cfi_def_cfa_register 13
 1080              		@ sp needed
 1081 00b6 80BD     		pop	{r7, pc}
 1082              	.L53:
 1083              		.align	2
 1084              	.L52:
 1085 00b8 35000000 		.word	usbStarted.8789
 1086 00bc 36000000 		.word	usbBufCount.8790
 1087 00c0 00000000 		.word	entry
 1088 00c4 00000000 		.word	line
 1089 00c8 00000000 		.word	flag_KB_string
 1090              		.cfi_endproc
 1091              	.LFE78:
 1092              		.size	handle_usb, .-handle_usb
 1093              		.bss
 1094              	usbStarted.8789:
 1095 0035 00       		.space	1
 1096              		.align	1
 1097              	usbBufCount.8790:
 1098 0036 0000     		.space	2
 1099              		.text
 1100              	.Letext0:
 1101              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1102              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1103              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1104              		.file 5 "vars.h"
 1105              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1106              		.section	.debug_info,"",%progbits
 1107              	.Ldebug_info0:
 1108 0000 0F060000 		.4byte	0x60f
 1109 0004 0400     		.2byte	0x4
 1110 0006 00000000 		.4byte	.Ldebug_abbrev0
 1111 000a 04       		.byte	0x4
 1112 000b 01       		.uleb128 0x1
 1113 000c B5000000 		.4byte	.LASF91
 1114 0010 0C       		.byte	0xc
 1115 0011 5C040000 		.4byte	.LASF92
 1116 0015 8D010000 		.4byte	.LASF93
 1117 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1118 001d 00000000 		.4byte	0
 1119 0021 00000000 		.4byte	.Ldebug_line0
 1120 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 29


 1121 0026 01       		.byte	0x1
 1122 0027 06       		.byte	0x6
 1123 0028 73030000 		.4byte	.LASF0
 1124 002c 02       		.uleb128 0x2
 1125 002d 01       		.byte	0x1
 1126 002e 08       		.byte	0x8
 1127 002f 3A030000 		.4byte	.LASF1
 1128 0033 02       		.uleb128 0x2
 1129 0034 02       		.byte	0x2
 1130 0035 05       		.byte	0x5
 1131 0036 8B000000 		.4byte	.LASF2
 1132 003a 02       		.uleb128 0x2
 1133 003b 02       		.byte	0x2
 1134 003c 07       		.byte	0x7
 1135 003d 10040000 		.4byte	.LASF3
 1136 0041 03       		.uleb128 0x3
 1137 0042 9B040000 		.4byte	.LASF12
 1138 0046 02       		.byte	0x2
 1139 0047 3F       		.byte	0x3f
 1140 0048 4C000000 		.4byte	0x4c
 1141 004c 02       		.uleb128 0x2
 1142 004d 04       		.byte	0x4
 1143 004e 05       		.byte	0x5
 1144 004f A3020000 		.4byte	.LASF4
 1145 0053 02       		.uleb128 0x2
 1146 0054 04       		.byte	0x4
 1147 0055 07       		.byte	0x7
 1148 0056 63040000 		.4byte	.LASF5
 1149 005a 02       		.uleb128 0x2
 1150 005b 08       		.byte	0x8
 1151 005c 05       		.byte	0x5
 1152 005d 57020000 		.4byte	.LASF6
 1153 0061 02       		.uleb128 0x2
 1154 0062 08       		.byte	0x8
 1155 0063 07       		.byte	0x7
 1156 0064 7F030000 		.4byte	.LASF7
 1157 0068 04       		.uleb128 0x4
 1158 0069 04       		.byte	0x4
 1159 006a 05       		.byte	0x5
 1160 006b 696E7400 		.ascii	"int\000"
 1161 006f 02       		.uleb128 0x2
 1162 0070 04       		.byte	0x4
 1163 0071 07       		.byte	0x7
 1164 0072 96030000 		.4byte	.LASF8
 1165 0076 02       		.uleb128 0x2
 1166 0077 08       		.byte	0x8
 1167 0078 04       		.byte	0x4
 1168 0079 2E030000 		.4byte	.LASF9
 1169 007d 02       		.uleb128 0x2
 1170 007e 04       		.byte	0x4
 1171 007f 07       		.byte	0x7
 1172 0080 A2000000 		.4byte	.LASF10
 1173 0084 05       		.uleb128 0x5
 1174 0085 04       		.byte	0x4
 1175 0086 8A000000 		.4byte	0x8a
 1176 008a 02       		.uleb128 0x2
 1177 008b 01       		.byte	0x1
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 30


 1178 008c 08       		.byte	0x8
 1179 008d E3030000 		.4byte	.LASF11
 1180 0091 03       		.uleb128 0x3
 1181 0092 F3030000 		.4byte	.LASF13
 1182 0096 03       		.byte	0x3
 1183 0097 2C       		.byte	0x2c
 1184 0098 41000000 		.4byte	0x41
 1185 009c 02       		.uleb128 0x2
 1186 009d 08       		.byte	0x8
 1187 009e 04       		.byte	0x4
 1188 009f 29000000 		.4byte	.LASF14
 1189 00a3 02       		.uleb128 0x2
 1190 00a4 04       		.byte	0x4
 1191 00a5 04       		.byte	0x4
 1192 00a6 37020000 		.4byte	.LASF15
 1193 00aa 06       		.uleb128 0x6
 1194 00ab 87010000 		.4byte	.LASF16
 1195 00af 04       		.byte	0x4
 1196 00b0 E401     		.2byte	0x1e4
 1197 00b2 2C000000 		.4byte	0x2c
 1198 00b6 06       		.uleb128 0x6
 1199 00b7 74010000 		.4byte	.LASF17
 1200 00bb 04       		.byte	0x4
 1201 00bc E501     		.2byte	0x1e5
 1202 00be 3A000000 		.4byte	0x3a
 1203 00c2 06       		.uleb128 0x6
 1204 00c3 72020000 		.4byte	.LASF18
 1205 00c7 04       		.byte	0x4
 1206 00c8 E701     		.2byte	0x1e7
 1207 00ca 25000000 		.4byte	0x25
 1208 00ce 06       		.uleb128 0x6
 1209 00cf 81010000 		.4byte	.LASF19
 1210 00d3 04       		.byte	0x4
 1211 00d4 E801     		.2byte	0x1e8
 1212 00d6 33000000 		.4byte	0x33
 1213 00da 07       		.uleb128 0x7
 1214 00db D9030000 		.4byte	.LASF94
 1215 00df 20       		.byte	0x20
 1216 00e0 05       		.byte	0x5
 1217 00e1 29       		.byte	0x29
 1218 00e2 B3010000 		.4byte	0x1b3
 1219 00e6 08       		.uleb128 0x8
 1220 00e7 59050000 		.4byte	.LASF20
 1221 00eb 05       		.byte	0x5
 1222 00ec 2A       		.byte	0x2a
 1223 00ed C2000000 		.4byte	0xc2
 1224 00f1 00       		.byte	0
 1225 00f2 08       		.uleb128 0x8
 1226 00f3 7B010000 		.4byte	.LASF21
 1227 00f7 05       		.byte	0x5
 1228 00f8 2B       		.byte	0x2b
 1229 00f9 AA000000 		.4byte	0xaa
 1230 00fd 01       		.byte	0x1
 1231 00fe 08       		.uleb128 0x8
 1232 00ff E8030000 		.4byte	.LASF22
 1233 0103 05       		.byte	0x5
 1234 0104 2C       		.byte	0x2c
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 31


 1235 0105 CE000000 		.4byte	0xce
 1236 0109 02       		.byte	0x2
 1237 010a 08       		.uleb128 0x8
 1238 010b 12050000 		.4byte	.LASF23
 1239 010f 05       		.byte	0x5
 1240 0110 2D       		.byte	0x2d
 1241 0111 CE000000 		.4byte	0xce
 1242 0115 04       		.byte	0x4
 1243 0116 08       		.uleb128 0x8
 1244 0117 5E050000 		.4byte	.LASF24
 1245 011b 05       		.byte	0x5
 1246 011c 2E       		.byte	0x2e
 1247 011d CE000000 		.4byte	0xce
 1248 0121 06       		.byte	0x6
 1249 0122 08       		.uleb128 0x8
 1250 0123 9B020000 		.4byte	.LASF25
 1251 0127 05       		.byte	0x5
 1252 0128 2F       		.byte	0x2f
 1253 0129 CE000000 		.4byte	0xce
 1254 012d 08       		.byte	0x8
 1255 012e 08       		.uleb128 0x8
 1256 012f CE040000 		.4byte	.LASF26
 1257 0133 05       		.byte	0x5
 1258 0134 30       		.byte	0x30
 1259 0135 CE000000 		.4byte	0xce
 1260 0139 0A       		.byte	0xa
 1261 013a 08       		.uleb128 0x8
 1262 013b 5B030000 		.4byte	.LASF27
 1263 013f 05       		.byte	0x5
 1264 0140 31       		.byte	0x31
 1265 0141 CE000000 		.4byte	0xce
 1266 0145 0C       		.byte	0xc
 1267 0146 08       		.uleb128 0x8
 1268 0147 8E020000 		.4byte	.LASF28
 1269 014b 05       		.byte	0x5
 1270 014c 32       		.byte	0x32
 1271 014d CE000000 		.4byte	0xce
 1272 0151 0E       		.byte	0xe
 1273 0152 08       		.uleb128 0x8
 1274 0153 C7030000 		.4byte	.LASF29
 1275 0157 05       		.byte	0x5
 1276 0158 33       		.byte	0x33
 1277 0159 CE000000 		.4byte	0xce
 1278 015d 10       		.byte	0x10
 1279 015e 08       		.uleb128 0x8
 1280 015f FB030000 		.4byte	.LASF30
 1281 0163 05       		.byte	0x5
 1282 0164 34       		.byte	0x34
 1283 0165 CE000000 		.4byte	0xce
 1284 0169 12       		.byte	0x12
 1285 016a 08       		.uleb128 0x8
 1286 016b 23040000 		.4byte	.LASF31
 1287 016f 05       		.byte	0x5
 1288 0170 35       		.byte	0x35
 1289 0171 CE000000 		.4byte	0xce
 1290 0175 14       		.byte	0x14
 1291 0176 08       		.uleb128 0x8
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 32


 1292 0177 3D050000 		.4byte	.LASF32
 1293 017b 05       		.byte	0x5
 1294 017c 36       		.byte	0x36
 1295 017d CE000000 		.4byte	0xce
 1296 0181 16       		.byte	0x16
 1297 0182 08       		.uleb128 0x8
 1298 0183 83000000 		.4byte	.LASF33
 1299 0187 05       		.byte	0x5
 1300 0188 37       		.byte	0x37
 1301 0189 CE000000 		.4byte	0xce
 1302 018d 18       		.byte	0x18
 1303 018e 08       		.uleb128 0x8
 1304 018f 86020000 		.4byte	.LASF34
 1305 0193 05       		.byte	0x5
 1306 0194 38       		.byte	0x38
 1307 0195 CE000000 		.4byte	0xce
 1308 0199 1A       		.byte	0x1a
 1309 019a 08       		.uleb128 0x8
 1310 019b BE030000 		.4byte	.LASF35
 1311 019f 05       		.byte	0x5
 1312 01a0 39       		.byte	0x39
 1313 01a1 CE000000 		.4byte	0xce
 1314 01a5 1C       		.byte	0x1c
 1315 01a6 08       		.uleb128 0x8
 1316 01a7 03040000 		.4byte	.LASF36
 1317 01ab 05       		.byte	0x5
 1318 01ac 3A       		.byte	0x3a
 1319 01ad CE000000 		.4byte	0xce
 1320 01b1 1E       		.byte	0x1e
 1321 01b2 00       		.byte	0
 1322 01b3 09       		.uleb128 0x9
 1323 01b4 B3040000 		.4byte	.LASF37
 1324 01b8 01       		.byte	0x1
 1325 01b9 33       		.byte	0x33
 1326 01ba 00000000 		.4byte	.LFB64
 1327 01be 14000000 		.4byte	.LFE64-.LFB64
 1328 01c2 01       		.uleb128 0x1
 1329 01c3 9C       		.byte	0x9c
 1330 01c4 09       		.uleb128 0x9
 1331 01c5 67000000 		.4byte	.LASF38
 1332 01c9 01       		.byte	0x1
 1333 01ca 39       		.byte	0x39
 1334 01cb 00000000 		.4byte	.LFB65
 1335 01cf 14000000 		.4byte	.LFE65-.LFB65
 1336 01d3 01       		.uleb128 0x1
 1337 01d4 9C       		.byte	0x9c
 1338 01d5 09       		.uleb128 0x9
 1339 01d6 00000000 		.4byte	.LASF39
 1340 01da 01       		.byte	0x1
 1341 01db 3F       		.byte	0x3f
 1342 01dc 00000000 		.4byte	.LFB66
 1343 01e0 14000000 		.4byte	.LFE66-.LFB66
 1344 01e4 01       		.uleb128 0x1
 1345 01e5 9C       		.byte	0x9c
 1346 01e6 0A       		.uleb128 0xa
 1347 01e7 A5040000 		.4byte	.LASF40
 1348 01eb 01       		.byte	0x1
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 33


 1349 01ec 44       		.byte	0x44
 1350 01ed 00000000 		.4byte	.LFB67
 1351 01f1 20000000 		.4byte	.LFE67-.LFB67
 1352 01f5 01       		.uleb128 0x1
 1353 01f6 9C       		.byte	0x9c
 1354 01f7 08020000 		.4byte	0x208
 1355 01fb 0B       		.uleb128 0xb
 1356 01fc 7800     		.ascii	"x\000"
 1357 01fe 01       		.byte	0x1
 1358 01ff 44       		.byte	0x44
 1359 0200 AA000000 		.4byte	0xaa
 1360 0204 02       		.uleb128 0x2
 1361 0205 91       		.byte	0x91
 1362 0206 77       		.sleb128 -9
 1363 0207 00       		.byte	0
 1364 0208 0A       		.uleb128 0xa
 1365 0209 4A050000 		.4byte	.LASF41
 1366 020d 01       		.byte	0x1
 1367 020e 4F       		.byte	0x4f
 1368 020f 00000000 		.4byte	.LFB68
 1369 0213 20000000 		.4byte	.LFE68-.LFB68
 1370 0217 01       		.uleb128 0x1
 1371 0218 9C       		.byte	0x9c
 1372 0219 2A020000 		.4byte	0x22a
 1373 021d 0B       		.uleb128 0xb
 1374 021e 7800     		.ascii	"x\000"
 1375 0220 01       		.byte	0x1
 1376 0221 4F       		.byte	0x4f
 1377 0222 68000000 		.4byte	0x68
 1378 0226 02       		.uleb128 0x2
 1379 0227 91       		.byte	0x91
 1380 0228 74       		.sleb128 -12
 1381 0229 00       		.byte	0
 1382 022a 0A       		.uleb128 0xa
 1383 022b 50000000 		.4byte	.LASF42
 1384 022f 01       		.byte	0x1
 1385 0230 5C       		.byte	0x5c
 1386 0231 00000000 		.4byte	.LFB69
 1387 0235 88000000 		.4byte	.LFE69-.LFB69
 1388 0239 01       		.uleb128 0x1
 1389 023a 9C       		.byte	0x9c
 1390 023b 6A020000 		.4byte	0x26a
 1391 023f 0C       		.uleb128 0xc
 1392 0240 48010000 		.4byte	.LASF43
 1393 0244 01       		.byte	0x1
 1394 0245 64       		.byte	0x64
 1395 0246 CE000000 		.4byte	0xce
 1396 024a 02       		.uleb128 0x2
 1397 024b 91       		.byte	0x91
 1398 024c 76       		.sleb128 -10
 1399 024d 0C       		.uleb128 0xc
 1400 024e 50010000 		.4byte	.LASF44
 1401 0252 01       		.byte	0x1
 1402 0253 65       		.byte	0x65
 1403 0254 CE000000 		.4byte	0xce
 1404 0258 02       		.uleb128 0x2
 1405 0259 91       		.byte	0x91
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 34


 1406 025a 74       		.sleb128 -12
 1407 025b 0C       		.uleb128 0xc
 1408 025c 58010000 		.4byte	.LASF45
 1409 0260 01       		.byte	0x1
 1410 0261 66       		.byte	0x66
 1411 0262 CE000000 		.4byte	0xce
 1412 0266 02       		.uleb128 0x2
 1413 0267 91       		.byte	0x91
 1414 0268 72       		.sleb128 -14
 1415 0269 00       		.byte	0
 1416 026a 0D       		.uleb128 0xd
 1417 026b 3D020000 		.4byte	.LASF53
 1418 026f 01       		.byte	0x1
 1419 0270 82       		.byte	0x82
 1420 0271 00000000 		.4byte	.LFB70
 1421 0275 0C000000 		.4byte	.LFE70-.LFB70
 1422 0279 01       		.uleb128 0x1
 1423 027a 9C       		.byte	0x9c
 1424 027b 0E       		.uleb128 0xe
 1425 027c C3040000 		.4byte	.LASF61
 1426 0280 01       		.byte	0x1
 1427 0281 95       		.byte	0x95
 1428 0282 00000000 		.4byte	.LFB71
 1429 0286 C0000000 		.4byte	.LFE71-.LFB71
 1430 028a 01       		.uleb128 0x1
 1431 028b 9C       		.byte	0x9c
 1432 028c E9020000 		.4byte	0x2e9
 1433 0290 0C       		.uleb128 0xc
 1434 0291 AC020000 		.4byte	.LASF46
 1435 0295 01       		.byte	0x1
 1436 0296 96       		.byte	0x96
 1437 0297 CE000000 		.4byte	0xce
 1438 029b 02       		.uleb128 0x2
 1439 029c 91       		.byte	0x91
 1440 029d 76       		.sleb128 -10
 1441 029e 0C       		.uleb128 0xc
 1442 029f C1020000 		.4byte	.LASF47
 1443 02a3 01       		.byte	0x1
 1444 02a4 97       		.byte	0x97
 1445 02a5 CE000000 		.4byte	0xce
 1446 02a9 02       		.uleb128 0x2
 1447 02aa 91       		.byte	0x91
 1448 02ab 74       		.sleb128 -12
 1449 02ac 0C       		.uleb128 0xc
 1450 02ad 19030000 		.4byte	.LASF48
 1451 02b1 01       		.byte	0x1
 1452 02b2 98       		.byte	0x98
 1453 02b3 CE000000 		.4byte	0xce
 1454 02b7 02       		.uleb128 0x2
 1455 02b8 91       		.byte	0x91
 1456 02b9 72       		.sleb128 -14
 1457 02ba 0C       		.uleb128 0xc
 1458 02bb 0A030000 		.4byte	.LASF49
 1459 02bf 01       		.byte	0x1
 1460 02c0 99       		.byte	0x99
 1461 02c1 CE000000 		.4byte	0xce
 1462 02c5 02       		.uleb128 0x2
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 35


 1463 02c6 91       		.byte	0x91
 1464 02c7 70       		.sleb128 -16
 1465 02c8 0C       		.uleb128 0xc
 1466 02c9 D6020000 		.4byte	.LASF50
 1467 02cd 01       		.byte	0x1
 1468 02ce 9A       		.byte	0x9a
 1469 02cf E9020000 		.4byte	0x2e9
 1470 02d3 04       		.uleb128 0x4
 1471 02d4 91       		.byte	0x91
 1472 02d5 E0B17F   		.sleb128 -10016
 1473 02d8 0C       		.uleb128 0xc
 1474 02d9 30050000 		.4byte	.LASF51
 1475 02dd 01       		.byte	0x1
 1476 02de 9C       		.byte	0x9c
 1477 02df E9020000 		.4byte	0x2e9
 1478 02e3 04       		.uleb128 0x4
 1479 02e4 91       		.byte	0x91
 1480 02e5 D0E37E   		.sleb128 -20016
 1481 02e8 00       		.byte	0
 1482 02e9 0F       		.uleb128 0xf
 1483 02ea 8A000000 		.4byte	0x8a
 1484 02ee FA020000 		.4byte	0x2fa
 1485 02f2 10       		.uleb128 0x10
 1486 02f3 7D000000 		.4byte	0x7d
 1487 02f7 0F27     		.2byte	0x270f
 1488 02f9 00       		.byte	0
 1489 02fa 09       		.uleb128 0x9
 1490 02fb 60010000 		.4byte	.LASF52
 1491 02ff 01       		.byte	0x1
 1492 0300 A4       		.byte	0xa4
 1493 0301 00000000 		.4byte	.LFB72
 1494 0305 2C000000 		.4byte	.LFE72-.LFB72
 1495 0309 01       		.uleb128 0x1
 1496 030a 9C       		.byte	0x9c
 1497 030b 11       		.uleb128 0x11
 1498 030c 0A000000 		.4byte	.LASF54
 1499 0310 01       		.byte	0x1
 1500 0311 BB       		.byte	0xbb
 1501 0312 00000000 		.4byte	.LFB73
 1502 0316 0C000000 		.4byte	.LFE73-.LFB73
 1503 031a 01       		.uleb128 0x1
 1504 031b 9C       		.byte	0x9c
 1505 031c 12       		.uleb128 0x12
 1506 031d 43010000 		.4byte	.LASF55
 1507 0321 01       		.byte	0x1
 1508 0322 C8       		.byte	0xc8
 1509 0323 68000000 		.4byte	0x68
 1510 0327 00000000 		.4byte	.LFB74
 1511 032b F8000000 		.4byte	.LFE74-.LFB74
 1512 032f 01       		.uleb128 0x1
 1513 0330 9C       		.byte	0x9c
 1514 0331 4F030000 		.4byte	0x34f
 1515 0335 13       		.uleb128 0x13
 1516 0336 50000000 		.4byte	.LBB2
 1517 033a 8C000000 		.4byte	.LBE2-.LBB2
 1518 033e 14       		.uleb128 0x14
 1519 033f CF030000 		.4byte	.LASF56
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 36


 1520 0343 01       		.byte	0x1
 1521 0344 1901     		.2byte	0x119
 1522 0346 68000000 		.4byte	0x68
 1523 034a 02       		.uleb128 0x2
 1524 034b 91       		.byte	0x91
 1525 034c 74       		.sleb128 -12
 1526 034d 00       		.byte	0
 1527 034e 00       		.byte	0
 1528 034f 15       		.uleb128 0x15
 1529 0350 48040000 		.4byte	.LASF57
 1530 0354 01       		.byte	0x1
 1531 0355 6A01     		.2byte	0x16a
 1532 0357 68000000 		.4byte	0x68
 1533 035b 00000000 		.4byte	.LFB75
 1534 035f 3C000000 		.4byte	.LFE75-.LFB75
 1535 0363 01       		.uleb128 0x1
 1536 0364 9C       		.byte	0x9c
 1537 0365 79030000 		.4byte	0x379
 1538 0369 14       		.uleb128 0x14
 1539 036a 2A050000 		.4byte	.LASF58
 1540 036e 01       		.byte	0x1
 1541 036f 6C01     		.2byte	0x16c
 1542 0371 68000000 		.4byte	0x68
 1543 0375 02       		.uleb128 0x2
 1544 0376 91       		.byte	0x91
 1545 0377 74       		.sleb128 -12
 1546 0378 00       		.byte	0
 1547 0379 16       		.uleb128 0x16
 1548 037a 65020000 		.4byte	.LASF59
 1549 037e 01       		.byte	0x1
 1550 037f 7301     		.2byte	0x173
 1551 0381 00000000 		.4byte	.LFB76
 1552 0385 3E000000 		.4byte	.LFE76-.LFB76
 1553 0389 01       		.uleb128 0x1
 1554 038a 9C       		.byte	0x9c
 1555 038b 9D030000 		.4byte	0x39d
 1556 038f 17       		.uleb128 0x17
 1557 0390 7300     		.ascii	"s\000"
 1558 0392 01       		.byte	0x1
 1559 0393 7301     		.2byte	0x173
 1560 0395 84000000 		.4byte	0x84
 1561 0399 02       		.uleb128 0x2
 1562 039a 91       		.byte	0x91
 1563 039b 74       		.sleb128 -12
 1564 039c 00       		.byte	0
 1565 039d 16       		.uleb128 0x16
 1566 039e 3C000000 		.4byte	.LASF60
 1567 03a2 01       		.byte	0x1
 1568 03a3 8101     		.2byte	0x181
 1569 03a5 00000000 		.4byte	.LFB77
 1570 03a9 26000000 		.4byte	.LFE77-.LFB77
 1571 03ad 01       		.uleb128 0x1
 1572 03ae 9C       		.byte	0x9c
 1573 03af C1030000 		.4byte	0x3c1
 1574 03b3 17       		.uleb128 0x17
 1575 03b4 6300     		.ascii	"c\000"
 1576 03b6 01       		.byte	0x1
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 37


 1577 03b7 8101     		.2byte	0x181
 1578 03b9 8A000000 		.4byte	0x8a
 1579 03bd 02       		.uleb128 0x2
 1580 03be 91       		.byte	0x91
 1581 03bf 77       		.sleb128 -9
 1582 03c0 00       		.byte	0
 1583 03c1 18       		.uleb128 0x18
 1584 03c2 EB040000 		.4byte	.LASF62
 1585 03c6 01       		.byte	0x1
 1586 03c7 8901     		.2byte	0x189
 1587 03c9 00000000 		.4byte	.LFB78
 1588 03cd CC000000 		.4byte	.LFE78-.LFB78
 1589 03d1 01       		.uleb128 0x1
 1590 03d2 9C       		.byte	0x9c
 1591 03d3 09040000 		.4byte	0x409
 1592 03d7 14       		.uleb128 0x14
 1593 03d8 75040000 		.4byte	.LASF63
 1594 03dc 01       		.byte	0x1
 1595 03dd 8F01     		.2byte	0x18f
 1596 03df AA000000 		.4byte	0xaa
 1597 03e3 05       		.uleb128 0x5
 1598 03e4 03       		.byte	0x3
 1599 03e5 35000000 		.4byte	usbStarted.8789
 1600 03e9 14       		.uleb128 0x14
 1601 03ea B2030000 		.4byte	.LASF64
 1602 03ee 01       		.byte	0x1
 1603 03ef 9001     		.2byte	0x190
 1604 03f1 B6000000 		.4byte	0xb6
 1605 03f5 05       		.uleb128 0x5
 1606 03f6 03       		.byte	0x3
 1607 03f7 36000000 		.4byte	usbBufCount.8790
 1608 03fb 19       		.uleb128 0x19
 1609 03fc 6300     		.ascii	"c\000"
 1610 03fe 01       		.byte	0x1
 1611 03ff 9101     		.2byte	0x191
 1612 0401 AA000000 		.4byte	0xaa
 1613 0405 02       		.uleb128 0x2
 1614 0406 91       		.byte	0x91
 1615 0407 77       		.sleb128 -9
 1616 0408 00       		.byte	0
 1617 0409 0C       		.uleb128 0xc
 1618 040a 89040000 		.4byte	.LASF65
 1619 040e 01       		.byte	0x1
 1620 040f 81       		.byte	0x81
 1621 0410 1A040000 		.4byte	0x41a
 1622 0414 05       		.uleb128 0x5
 1623 0415 03       		.byte	0x3
 1624 0416 34000000 		.4byte	count
 1625 041a 1A       		.uleb128 0x1a
 1626 041b C2000000 		.4byte	0xc2
 1627 041f 1B       		.uleb128 0x1b
 1628 0420 1D050000 		.4byte	.LASF66
 1629 0424 06       		.byte	0x6
 1630 0425 1207     		.2byte	0x712
 1631 0427 2B040000 		.4byte	0x42b
 1632 042b 1A       		.uleb128 0x1a
 1633 042c 91000000 		.4byte	0x91
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 38


 1634 0430 1C       		.uleb128 0x1c
 1635 0431 747300   		.ascii	"ts\000"
 1636 0434 05       		.byte	0x5
 1637 0435 10       		.byte	0x10
 1638 0436 AA000000 		.4byte	0xaa
 1639 043a 05       		.uleb128 0x5
 1640 043b 03       		.byte	0x3
 1641 043c 00000000 		.4byte	ts
 1642 0440 1D       		.uleb128 0x1d
 1643 0441 22000000 		.4byte	.LASF67
 1644 0445 05       		.byte	0x5
 1645 0446 11       		.byte	0x11
 1646 0447 B6000000 		.4byte	0xb6
 1647 044b 05       		.uleb128 0x5
 1648 044c 03       		.byte	0x3
 1649 044d 00000000 		.4byte	ts_enc
 1650 0451 1D       		.uleb128 0x1d
 1651 0452 E1040000 		.4byte	.LASF68
 1652 0456 05       		.byte	0x5
 1653 0457 12       		.byte	0x12
 1654 0458 B6000000 		.4byte	0xb6
 1655 045c 05       		.uleb128 0x5
 1656 045d 03       		.byte	0x3
 1657 045e 00000000 		.4byte	ts_update
 1658 0462 1D       		.uleb128 0x1d
 1659 0463 80040000 		.4byte	.LASF69
 1660 0467 05       		.byte	0x5
 1661 0468 13       		.byte	0x13
 1662 0469 B6000000 		.4byte	0xb6
 1663 046d 05       		.uleb128 0x5
 1664 046e 03       		.byte	0x3
 1665 046f 00000000 		.4byte	ts_speed
 1666 0473 1D       		.uleb128 0x1d
 1667 0474 D6040000 		.4byte	.LASF70
 1668 0478 05       		.byte	0x5
 1669 0479 14       		.byte	0x14
 1670 047a B6000000 		.4byte	0xb6
 1671 047e 05       		.uleb128 0x5
 1672 047f 03       		.byte	0x3
 1673 0480 00000000 		.4byte	ts_display
 1674 0484 1D       		.uleb128 0x1d
 1675 0485 8F040000 		.4byte	.LASF71
 1676 0489 05       		.byte	0x5
 1677 048a 16       		.byte	0x16
 1678 048b AA000000 		.4byte	0xaa
 1679 048f 05       		.uleb128 0x5
 1680 0490 03       		.byte	0x3
 1681 0491 00000000 		.4byte	flag_ts_enc
 1682 0495 1D       		.uleb128 0x1d
 1683 0496 77020000 		.4byte	.LASF72
 1684 049a 05       		.byte	0x5
 1685 049b 17       		.byte	0x17
 1686 049c AA000000 		.4byte	0xaa
 1687 04a0 05       		.uleb128 0x5
 1688 04a1 03       		.byte	0x3
 1689 04a2 00000000 		.4byte	flag_ts_update
 1690 04a6 1D       		.uleb128 0x1d
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 39


 1691 04a7 3A040000 		.4byte	.LASF73
 1692 04ab 05       		.byte	0x5
 1693 04ac 18       		.byte	0x18
 1694 04ad AA000000 		.4byte	0xaa
 1695 04b1 05       		.uleb128 0x5
 1696 04b2 03       		.byte	0x3
 1697 04b3 00000000 		.4byte	flag_ts_speed
 1698 04b7 1D       		.uleb128 0x1d
 1699 04b8 F2020000 		.4byte	.LASF74
 1700 04bc 05       		.byte	0x5
 1701 04bd 19       		.byte	0x19
 1702 04be AA000000 		.4byte	0xaa
 1703 04c2 05       		.uleb128 0x5
 1704 04c3 03       		.byte	0x3
 1705 04c4 00000000 		.4byte	flag_ts_display
 1706 04c8 1D       		.uleb128 0x1d
 1707 04c9 02030000 		.4byte	.LASF75
 1708 04cd 05       		.byte	0x5
 1709 04ce 1C       		.byte	0x1c
 1710 04cf AA000000 		.4byte	0xaa
 1711 04d3 05       		.uleb128 0x5
 1712 04d4 03       		.byte	0x3
 1713 04d5 00000000 		.4byte	flag_rx
 1714 04d9 1D       		.uleb128 0x1d
 1715 04da 30000000 		.4byte	.LASF76
 1716 04de 05       		.byte	0x5
 1717 04df 1D       		.byte	0x1d
 1718 04e0 AA000000 		.4byte	0xaa
 1719 04e4 05       		.uleb128 0x5
 1720 04e5 03       		.byte	0x3
 1721 04e6 00000000 		.4byte	flag_packet
 1722 04ea 1D       		.uleb128 0x1d
 1723 04eb A3030000 		.4byte	.LASF77
 1724 04ef 05       		.byte	0x5
 1725 04f0 1E       		.byte	0x1e
 1726 04f1 AA000000 		.4byte	0xaa
 1727 04f5 05       		.uleb128 0x5
 1728 04f6 03       		.byte	0x3
 1729 04f7 00000000 		.4byte	flag_KB_string
 1730 04fb 1D       		.uleb128 0x1d
 1731 04fc 64030000 		.4byte	.LASF78
 1732 0500 05       		.byte	0x5
 1733 0501 20       		.byte	0x20
 1734 0502 AA000000 		.4byte	0xaa
 1735 0506 05       		.uleb128 0x5
 1736 0507 03       		.byte	0x3
 1737 0508 00000000 		.4byte	dataready_flag
 1738 050c 1D       		.uleb128 0x1d
 1739 050d F6040000 		.4byte	.LASF79
 1740 0511 05       		.byte	0x5
 1741 0512 22       		.byte	0x22
 1742 0513 AA000000 		.4byte	0xaa
 1743 0517 05       		.uleb128 0x5
 1744 0518 03       		.byte	0x3
 1745 0519 00000000 		.4byte	flag_rf_transmission_active
 1746 051d 0F       		.uleb128 0xf
 1747 051e 8A000000 		.4byte	0x8a
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 40


 1748 0522 2D050000 		.4byte	0x52d
 1749 0526 1E       		.uleb128 0x1e
 1750 0527 7D000000 		.4byte	0x7d
 1751 052b 3F       		.byte	0x3f
 1752 052c 00       		.byte	0
 1753 052d 1D       		.uleb128 0x1d
 1754 052e 2C040000 		.4byte	.LASF80
 1755 0532 05       		.byte	0x5
 1756 0533 25       		.byte	0x25
 1757 0534 1D050000 		.4byte	0x51d
 1758 0538 05       		.uleb128 0x5
 1759 0539 03       		.byte	0x3
 1760 053a 00000000 		.4byte	displaystring
 1761 053e 1D       		.uleb128 0x1d
 1762 053f 32020000 		.4byte	.LASF81
 1763 0543 05       		.byte	0x5
 1764 0544 26       		.byte	0x26
 1765 0545 1D050000 		.4byte	0x51d
 1766 0549 05       		.uleb128 0x5
 1767 054a 03       		.byte	0x3
 1768 054b 00000000 		.4byte	line
 1769 054f 1D       		.uleb128 0x1d
 1770 0550 28030000 		.4byte	.LASF82
 1771 0554 05       		.byte	0x5
 1772 0555 26       		.byte	0x26
 1773 0556 1D050000 		.4byte	0x51d
 1774 055a 05       		.uleb128 0x5
 1775 055b 03       		.byte	0x3
 1776 055c 00000000 		.4byte	entry
 1777 0560 0F       		.uleb128 0xf
 1778 0561 AA000000 		.4byte	0xaa
 1779 0565 70050000 		.4byte	0x570
 1780 0569 1E       		.uleb128 0x1e
 1781 056a 7D000000 		.4byte	0x7d
 1782 056e 3F       		.byte	0x3f
 1783 056f 00       		.byte	0
 1784 0570 1D       		.uleb128 0x1d
 1785 0571 AB000000 		.4byte	.LASF83
 1786 0575 05       		.byte	0x5
 1787 0576 27       		.byte	0x27
 1788 0577 60050000 		.4byte	0x560
 1789 057b 05       		.uleb128 0x5
 1790 057c 03       		.byte	0x3
 1791 057d 00000000 		.4byte	usbBuffer
 1792 0581 1D       		.uleb128 0x1d
 1793 0582 95000000 		.4byte	.LASF84
 1794 0586 05       		.byte	0x5
 1795 0587 3C       		.byte	0x3c
 1796 0588 DA000000 		.4byte	0xda
 1797 058c 05       		.uleb128 0x5
 1798 058d 03       		.byte	0x3
 1799 058e 00000000 		.4byte	system_state
 1800 0592 1D       		.uleb128 0x1d
 1801 0593 26020000 		.4byte	.LASF85
 1802 0597 01       		.byte	0x1
 1803 0598 56       		.byte	0x56
 1804 0599 68000000 		.4byte	0x68
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 41


 1805 059d 05       		.uleb128 0x5
 1806 059e 03       		.byte	0x3
 1807 059f 00000000 		.4byte	changeMotor
 1808 05a3 1D       		.uleb128 0x1d
 1809 05a4 78000000 		.4byte	.LASF86
 1810 05a8 01       		.byte	0x1
 1811 05a9 57       		.byte	0x57
 1812 05aa 68000000 		.4byte	0x68
 1813 05ae 05       		.uleb128 0x5
 1814 05af 03       		.byte	0x3
 1815 05b0 00000000 		.4byte	checkLight
 1816 05b4 1D       		.uleb128 0x1d
 1817 05b5 69010000 		.4byte	.LASF87
 1818 05b9 01       		.byte	0x1
 1819 05ba 58       		.byte	0x58
 1820 05bb 68000000 		.4byte	0x68
 1821 05bf 05       		.uleb128 0x5
 1822 05c0 03       		.byte	0x3
 1823 05c1 00000000 		.4byte	lightState
 1824 05c5 0F       		.uleb128 0xf
 1825 05c6 D5050000 		.4byte	0x5d5
 1826 05ca D5050000 		.4byte	0x5d5
 1827 05ce 1E       		.uleb128 0x1e
 1828 05cf 7D000000 		.4byte	0x7d
 1829 05d3 02       		.byte	0x2
 1830 05d4 00       		.byte	0
 1831 05d5 1A       		.uleb128 0x1a
 1832 05d6 68000000 		.4byte	0x68
 1833 05da 1D       		.uleb128 0x1d
 1834 05db 48030000 		.4byte	.LASF88
 1835 05df 01       		.byte	0x1
 1836 05e0 59       		.byte	0x59
 1837 05e1 EB050000 		.4byte	0x5eb
 1838 05e5 05       		.uleb128 0x5
 1839 05e6 03       		.byte	0x3
 1840 05e7 00000000 		.4byte	lightDetectedFront
 1841 05eb 1A       		.uleb128 0x1a
 1842 05ec C5050000 		.4byte	0x5c5
 1843 05f0 1D       		.uleb128 0x1d
 1844 05f1 47000000 		.4byte	.LASF89
 1845 05f5 01       		.byte	0x1
 1846 05f6 5A       		.byte	0x5a
 1847 05f7 D5050000 		.4byte	0x5d5
 1848 05fb 05       		.uleb128 0x5
 1849 05fc 03       		.byte	0x3
 1850 05fd 00000000 		.4byte	counteoc
 1851 0601 1D       		.uleb128 0x1d
 1852 0602 E3020000 		.4byte	.LASF90
 1853 0606 01       		.byte	0x1
 1854 0607 5B       		.byte	0x5b
 1855 0608 D5050000 		.4byte	0x5d5
 1856 060c 05       		.uleb128 0x5
 1857 060d 03       		.byte	0x3
 1858 060e 00000000 		.4byte	processSensors
 1859 0612 00       		.byte	0
 1860              		.section	.debug_abbrev,"",%progbits
 1861              	.Ldebug_abbrev0:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 42


 1862 0000 01       		.uleb128 0x1
 1863 0001 11       		.uleb128 0x11
 1864 0002 01       		.byte	0x1
 1865 0003 25       		.uleb128 0x25
 1866 0004 0E       		.uleb128 0xe
 1867 0005 13       		.uleb128 0x13
 1868 0006 0B       		.uleb128 0xb
 1869 0007 03       		.uleb128 0x3
 1870 0008 0E       		.uleb128 0xe
 1871 0009 1B       		.uleb128 0x1b
 1872 000a 0E       		.uleb128 0xe
 1873 000b 55       		.uleb128 0x55
 1874 000c 17       		.uleb128 0x17
 1875 000d 11       		.uleb128 0x11
 1876 000e 01       		.uleb128 0x1
 1877 000f 10       		.uleb128 0x10
 1878 0010 17       		.uleb128 0x17
 1879 0011 00       		.byte	0
 1880 0012 00       		.byte	0
 1881 0013 02       		.uleb128 0x2
 1882 0014 24       		.uleb128 0x24
 1883 0015 00       		.byte	0
 1884 0016 0B       		.uleb128 0xb
 1885 0017 0B       		.uleb128 0xb
 1886 0018 3E       		.uleb128 0x3e
 1887 0019 0B       		.uleb128 0xb
 1888 001a 03       		.uleb128 0x3
 1889 001b 0E       		.uleb128 0xe
 1890 001c 00       		.byte	0
 1891 001d 00       		.byte	0
 1892 001e 03       		.uleb128 0x3
 1893 001f 16       		.uleb128 0x16
 1894 0020 00       		.byte	0
 1895 0021 03       		.uleb128 0x3
 1896 0022 0E       		.uleb128 0xe
 1897 0023 3A       		.uleb128 0x3a
 1898 0024 0B       		.uleb128 0xb
 1899 0025 3B       		.uleb128 0x3b
 1900 0026 0B       		.uleb128 0xb
 1901 0027 49       		.uleb128 0x49
 1902 0028 13       		.uleb128 0x13
 1903 0029 00       		.byte	0
 1904 002a 00       		.byte	0
 1905 002b 04       		.uleb128 0x4
 1906 002c 24       		.uleb128 0x24
 1907 002d 00       		.byte	0
 1908 002e 0B       		.uleb128 0xb
 1909 002f 0B       		.uleb128 0xb
 1910 0030 3E       		.uleb128 0x3e
 1911 0031 0B       		.uleb128 0xb
 1912 0032 03       		.uleb128 0x3
 1913 0033 08       		.uleb128 0x8
 1914 0034 00       		.byte	0
 1915 0035 00       		.byte	0
 1916 0036 05       		.uleb128 0x5
 1917 0037 0F       		.uleb128 0xf
 1918 0038 00       		.byte	0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 43


 1919 0039 0B       		.uleb128 0xb
 1920 003a 0B       		.uleb128 0xb
 1921 003b 49       		.uleb128 0x49
 1922 003c 13       		.uleb128 0x13
 1923 003d 00       		.byte	0
 1924 003e 00       		.byte	0
 1925 003f 06       		.uleb128 0x6
 1926 0040 16       		.uleb128 0x16
 1927 0041 00       		.byte	0
 1928 0042 03       		.uleb128 0x3
 1929 0043 0E       		.uleb128 0xe
 1930 0044 3A       		.uleb128 0x3a
 1931 0045 0B       		.uleb128 0xb
 1932 0046 3B       		.uleb128 0x3b
 1933 0047 05       		.uleb128 0x5
 1934 0048 49       		.uleb128 0x49
 1935 0049 13       		.uleb128 0x13
 1936 004a 00       		.byte	0
 1937 004b 00       		.byte	0
 1938 004c 07       		.uleb128 0x7
 1939 004d 13       		.uleb128 0x13
 1940 004e 01       		.byte	0x1
 1941 004f 03       		.uleb128 0x3
 1942 0050 0E       		.uleb128 0xe
 1943 0051 0B       		.uleb128 0xb
 1944 0052 0B       		.uleb128 0xb
 1945 0053 3A       		.uleb128 0x3a
 1946 0054 0B       		.uleb128 0xb
 1947 0055 3B       		.uleb128 0x3b
 1948 0056 0B       		.uleb128 0xb
 1949 0057 01       		.uleb128 0x1
 1950 0058 13       		.uleb128 0x13
 1951 0059 00       		.byte	0
 1952 005a 00       		.byte	0
 1953 005b 08       		.uleb128 0x8
 1954 005c 0D       		.uleb128 0xd
 1955 005d 00       		.byte	0
 1956 005e 03       		.uleb128 0x3
 1957 005f 0E       		.uleb128 0xe
 1958 0060 3A       		.uleb128 0x3a
 1959 0061 0B       		.uleb128 0xb
 1960 0062 3B       		.uleb128 0x3b
 1961 0063 0B       		.uleb128 0xb
 1962 0064 49       		.uleb128 0x49
 1963 0065 13       		.uleb128 0x13
 1964 0066 38       		.uleb128 0x38
 1965 0067 0B       		.uleb128 0xb
 1966 0068 00       		.byte	0
 1967 0069 00       		.byte	0
 1968 006a 09       		.uleb128 0x9
 1969 006b 2E       		.uleb128 0x2e
 1970 006c 00       		.byte	0
 1971 006d 3F       		.uleb128 0x3f
 1972 006e 19       		.uleb128 0x19
 1973 006f 03       		.uleb128 0x3
 1974 0070 0E       		.uleb128 0xe
 1975 0071 3A       		.uleb128 0x3a
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 44


 1976 0072 0B       		.uleb128 0xb
 1977 0073 3B       		.uleb128 0x3b
 1978 0074 0B       		.uleb128 0xb
 1979 0075 11       		.uleb128 0x11
 1980 0076 01       		.uleb128 0x1
 1981 0077 12       		.uleb128 0x12
 1982 0078 06       		.uleb128 0x6
 1983 0079 40       		.uleb128 0x40
 1984 007a 18       		.uleb128 0x18
 1985 007b 9642     		.uleb128 0x2116
 1986 007d 19       		.uleb128 0x19
 1987 007e 00       		.byte	0
 1988 007f 00       		.byte	0
 1989 0080 0A       		.uleb128 0xa
 1990 0081 2E       		.uleb128 0x2e
 1991 0082 01       		.byte	0x1
 1992 0083 3F       		.uleb128 0x3f
 1993 0084 19       		.uleb128 0x19
 1994 0085 03       		.uleb128 0x3
 1995 0086 0E       		.uleb128 0xe
 1996 0087 3A       		.uleb128 0x3a
 1997 0088 0B       		.uleb128 0xb
 1998 0089 3B       		.uleb128 0x3b
 1999 008a 0B       		.uleb128 0xb
 2000 008b 27       		.uleb128 0x27
 2001 008c 19       		.uleb128 0x19
 2002 008d 11       		.uleb128 0x11
 2003 008e 01       		.uleb128 0x1
 2004 008f 12       		.uleb128 0x12
 2005 0090 06       		.uleb128 0x6
 2006 0091 40       		.uleb128 0x40
 2007 0092 18       		.uleb128 0x18
 2008 0093 9642     		.uleb128 0x2116
 2009 0095 19       		.uleb128 0x19
 2010 0096 01       		.uleb128 0x1
 2011 0097 13       		.uleb128 0x13
 2012 0098 00       		.byte	0
 2013 0099 00       		.byte	0
 2014 009a 0B       		.uleb128 0xb
 2015 009b 05       		.uleb128 0x5
 2016 009c 00       		.byte	0
 2017 009d 03       		.uleb128 0x3
 2018 009e 08       		.uleb128 0x8
 2019 009f 3A       		.uleb128 0x3a
 2020 00a0 0B       		.uleb128 0xb
 2021 00a1 3B       		.uleb128 0x3b
 2022 00a2 0B       		.uleb128 0xb
 2023 00a3 49       		.uleb128 0x49
 2024 00a4 13       		.uleb128 0x13
 2025 00a5 02       		.uleb128 0x2
 2026 00a6 18       		.uleb128 0x18
 2027 00a7 00       		.byte	0
 2028 00a8 00       		.byte	0
 2029 00a9 0C       		.uleb128 0xc
 2030 00aa 34       		.uleb128 0x34
 2031 00ab 00       		.byte	0
 2032 00ac 03       		.uleb128 0x3
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 45


 2033 00ad 0E       		.uleb128 0xe
 2034 00ae 3A       		.uleb128 0x3a
 2035 00af 0B       		.uleb128 0xb
 2036 00b0 3B       		.uleb128 0x3b
 2037 00b1 0B       		.uleb128 0xb
 2038 00b2 49       		.uleb128 0x49
 2039 00b3 13       		.uleb128 0x13
 2040 00b4 02       		.uleb128 0x2
 2041 00b5 18       		.uleb128 0x18
 2042 00b6 00       		.byte	0
 2043 00b7 00       		.byte	0
 2044 00b8 0D       		.uleb128 0xd
 2045 00b9 2E       		.uleb128 0x2e
 2046 00ba 00       		.byte	0
 2047 00bb 3F       		.uleb128 0x3f
 2048 00bc 19       		.uleb128 0x19
 2049 00bd 03       		.uleb128 0x3
 2050 00be 0E       		.uleb128 0xe
 2051 00bf 3A       		.uleb128 0x3a
 2052 00c0 0B       		.uleb128 0xb
 2053 00c1 3B       		.uleb128 0x3b
 2054 00c2 0B       		.uleb128 0xb
 2055 00c3 27       		.uleb128 0x27
 2056 00c4 19       		.uleb128 0x19
 2057 00c5 11       		.uleb128 0x11
 2058 00c6 01       		.uleb128 0x1
 2059 00c7 12       		.uleb128 0x12
 2060 00c8 06       		.uleb128 0x6
 2061 00c9 40       		.uleb128 0x40
 2062 00ca 18       		.uleb128 0x18
 2063 00cb 9742     		.uleb128 0x2117
 2064 00cd 19       		.uleb128 0x19
 2065 00ce 00       		.byte	0
 2066 00cf 00       		.byte	0
 2067 00d0 0E       		.uleb128 0xe
 2068 00d1 2E       		.uleb128 0x2e
 2069 00d2 01       		.byte	0x1
 2070 00d3 3F       		.uleb128 0x3f
 2071 00d4 19       		.uleb128 0x19
 2072 00d5 03       		.uleb128 0x3
 2073 00d6 0E       		.uleb128 0xe
 2074 00d7 3A       		.uleb128 0x3a
 2075 00d8 0B       		.uleb128 0xb
 2076 00d9 3B       		.uleb128 0x3b
 2077 00da 0B       		.uleb128 0xb
 2078 00db 11       		.uleb128 0x11
 2079 00dc 01       		.uleb128 0x1
 2080 00dd 12       		.uleb128 0x12
 2081 00de 06       		.uleb128 0x6
 2082 00df 40       		.uleb128 0x40
 2083 00e0 18       		.uleb128 0x18
 2084 00e1 9642     		.uleb128 0x2116
 2085 00e3 19       		.uleb128 0x19
 2086 00e4 01       		.uleb128 0x1
 2087 00e5 13       		.uleb128 0x13
 2088 00e6 00       		.byte	0
 2089 00e7 00       		.byte	0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 46


 2090 00e8 0F       		.uleb128 0xf
 2091 00e9 01       		.uleb128 0x1
 2092 00ea 01       		.byte	0x1
 2093 00eb 49       		.uleb128 0x49
 2094 00ec 13       		.uleb128 0x13
 2095 00ed 01       		.uleb128 0x1
 2096 00ee 13       		.uleb128 0x13
 2097 00ef 00       		.byte	0
 2098 00f0 00       		.byte	0
 2099 00f1 10       		.uleb128 0x10
 2100 00f2 21       		.uleb128 0x21
 2101 00f3 00       		.byte	0
 2102 00f4 49       		.uleb128 0x49
 2103 00f5 13       		.uleb128 0x13
 2104 00f6 2F       		.uleb128 0x2f
 2105 00f7 05       		.uleb128 0x5
 2106 00f8 00       		.byte	0
 2107 00f9 00       		.byte	0
 2108 00fa 11       		.uleb128 0x11
 2109 00fb 2E       		.uleb128 0x2e
 2110 00fc 00       		.byte	0
 2111 00fd 3F       		.uleb128 0x3f
 2112 00fe 19       		.uleb128 0x19
 2113 00ff 03       		.uleb128 0x3
 2114 0100 0E       		.uleb128 0xe
 2115 0101 3A       		.uleb128 0x3a
 2116 0102 0B       		.uleb128 0xb
 2117 0103 3B       		.uleb128 0x3b
 2118 0104 0B       		.uleb128 0xb
 2119 0105 27       		.uleb128 0x27
 2120 0106 19       		.uleb128 0x19
 2121 0107 11       		.uleb128 0x11
 2122 0108 01       		.uleb128 0x1
 2123 0109 12       		.uleb128 0x12
 2124 010a 06       		.uleb128 0x6
 2125 010b 40       		.uleb128 0x40
 2126 010c 18       		.uleb128 0x18
 2127 010d 9642     		.uleb128 0x2116
 2128 010f 19       		.uleb128 0x19
 2129 0110 00       		.byte	0
 2130 0111 00       		.byte	0
 2131 0112 12       		.uleb128 0x12
 2132 0113 2E       		.uleb128 0x2e
 2133 0114 01       		.byte	0x1
 2134 0115 3F       		.uleb128 0x3f
 2135 0116 19       		.uleb128 0x19
 2136 0117 03       		.uleb128 0x3
 2137 0118 0E       		.uleb128 0xe
 2138 0119 3A       		.uleb128 0x3a
 2139 011a 0B       		.uleb128 0xb
 2140 011b 3B       		.uleb128 0x3b
 2141 011c 0B       		.uleb128 0xb
 2142 011d 49       		.uleb128 0x49
 2143 011e 13       		.uleb128 0x13
 2144 011f 11       		.uleb128 0x11
 2145 0120 01       		.uleb128 0x1
 2146 0121 12       		.uleb128 0x12
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 47


 2147 0122 06       		.uleb128 0x6
 2148 0123 40       		.uleb128 0x40
 2149 0124 18       		.uleb128 0x18
 2150 0125 9642     		.uleb128 0x2116
 2151 0127 19       		.uleb128 0x19
 2152 0128 01       		.uleb128 0x1
 2153 0129 13       		.uleb128 0x13
 2154 012a 00       		.byte	0
 2155 012b 00       		.byte	0
 2156 012c 13       		.uleb128 0x13
 2157 012d 0B       		.uleb128 0xb
 2158 012e 01       		.byte	0x1
 2159 012f 11       		.uleb128 0x11
 2160 0130 01       		.uleb128 0x1
 2161 0131 12       		.uleb128 0x12
 2162 0132 06       		.uleb128 0x6
 2163 0133 00       		.byte	0
 2164 0134 00       		.byte	0
 2165 0135 14       		.uleb128 0x14
 2166 0136 34       		.uleb128 0x34
 2167 0137 00       		.byte	0
 2168 0138 03       		.uleb128 0x3
 2169 0139 0E       		.uleb128 0xe
 2170 013a 3A       		.uleb128 0x3a
 2171 013b 0B       		.uleb128 0xb
 2172 013c 3B       		.uleb128 0x3b
 2173 013d 05       		.uleb128 0x5
 2174 013e 49       		.uleb128 0x49
 2175 013f 13       		.uleb128 0x13
 2176 0140 02       		.uleb128 0x2
 2177 0141 18       		.uleb128 0x18
 2178 0142 00       		.byte	0
 2179 0143 00       		.byte	0
 2180 0144 15       		.uleb128 0x15
 2181 0145 2E       		.uleb128 0x2e
 2182 0146 01       		.byte	0x1
 2183 0147 3F       		.uleb128 0x3f
 2184 0148 19       		.uleb128 0x19
 2185 0149 03       		.uleb128 0x3
 2186 014a 0E       		.uleb128 0xe
 2187 014b 3A       		.uleb128 0x3a
 2188 014c 0B       		.uleb128 0xb
 2189 014d 3B       		.uleb128 0x3b
 2190 014e 05       		.uleb128 0x5
 2191 014f 49       		.uleb128 0x49
 2192 0150 13       		.uleb128 0x13
 2193 0151 11       		.uleb128 0x11
 2194 0152 01       		.uleb128 0x1
 2195 0153 12       		.uleb128 0x12
 2196 0154 06       		.uleb128 0x6
 2197 0155 40       		.uleb128 0x40
 2198 0156 18       		.uleb128 0x18
 2199 0157 9742     		.uleb128 0x2117
 2200 0159 19       		.uleb128 0x19
 2201 015a 01       		.uleb128 0x1
 2202 015b 13       		.uleb128 0x13
 2203 015c 00       		.byte	0
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 48


 2204 015d 00       		.byte	0
 2205 015e 16       		.uleb128 0x16
 2206 015f 2E       		.uleb128 0x2e
 2207 0160 01       		.byte	0x1
 2208 0161 3F       		.uleb128 0x3f
 2209 0162 19       		.uleb128 0x19
 2210 0163 03       		.uleb128 0x3
 2211 0164 0E       		.uleb128 0xe
 2212 0165 3A       		.uleb128 0x3a
 2213 0166 0B       		.uleb128 0xb
 2214 0167 3B       		.uleb128 0x3b
 2215 0168 05       		.uleb128 0x5
 2216 0169 27       		.uleb128 0x27
 2217 016a 19       		.uleb128 0x19
 2218 016b 11       		.uleb128 0x11
 2219 016c 01       		.uleb128 0x1
 2220 016d 12       		.uleb128 0x12
 2221 016e 06       		.uleb128 0x6
 2222 016f 40       		.uleb128 0x40
 2223 0170 18       		.uleb128 0x18
 2224 0171 9642     		.uleb128 0x2116
 2225 0173 19       		.uleb128 0x19
 2226 0174 01       		.uleb128 0x1
 2227 0175 13       		.uleb128 0x13
 2228 0176 00       		.byte	0
 2229 0177 00       		.byte	0
 2230 0178 17       		.uleb128 0x17
 2231 0179 05       		.uleb128 0x5
 2232 017a 00       		.byte	0
 2233 017b 03       		.uleb128 0x3
 2234 017c 08       		.uleb128 0x8
 2235 017d 3A       		.uleb128 0x3a
 2236 017e 0B       		.uleb128 0xb
 2237 017f 3B       		.uleb128 0x3b
 2238 0180 05       		.uleb128 0x5
 2239 0181 49       		.uleb128 0x49
 2240 0182 13       		.uleb128 0x13
 2241 0183 02       		.uleb128 0x2
 2242 0184 18       		.uleb128 0x18
 2243 0185 00       		.byte	0
 2244 0186 00       		.byte	0
 2245 0187 18       		.uleb128 0x18
 2246 0188 2E       		.uleb128 0x2e
 2247 0189 01       		.byte	0x1
 2248 018a 3F       		.uleb128 0x3f
 2249 018b 19       		.uleb128 0x19
 2250 018c 03       		.uleb128 0x3
 2251 018d 0E       		.uleb128 0xe
 2252 018e 3A       		.uleb128 0x3a
 2253 018f 0B       		.uleb128 0xb
 2254 0190 3B       		.uleb128 0x3b
 2255 0191 05       		.uleb128 0x5
 2256 0192 11       		.uleb128 0x11
 2257 0193 01       		.uleb128 0x1
 2258 0194 12       		.uleb128 0x12
 2259 0195 06       		.uleb128 0x6
 2260 0196 40       		.uleb128 0x40
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 49


 2261 0197 18       		.uleb128 0x18
 2262 0198 9642     		.uleb128 0x2116
 2263 019a 19       		.uleb128 0x19
 2264 019b 01       		.uleb128 0x1
 2265 019c 13       		.uleb128 0x13
 2266 019d 00       		.byte	0
 2267 019e 00       		.byte	0
 2268 019f 19       		.uleb128 0x19
 2269 01a0 34       		.uleb128 0x34
 2270 01a1 00       		.byte	0
 2271 01a2 03       		.uleb128 0x3
 2272 01a3 08       		.uleb128 0x8
 2273 01a4 3A       		.uleb128 0x3a
 2274 01a5 0B       		.uleb128 0xb
 2275 01a6 3B       		.uleb128 0x3b
 2276 01a7 05       		.uleb128 0x5
 2277 01a8 49       		.uleb128 0x49
 2278 01a9 13       		.uleb128 0x13
 2279 01aa 02       		.uleb128 0x2
 2280 01ab 18       		.uleb128 0x18
 2281 01ac 00       		.byte	0
 2282 01ad 00       		.byte	0
 2283 01ae 1A       		.uleb128 0x1a
 2284 01af 35       		.uleb128 0x35
 2285 01b0 00       		.byte	0
 2286 01b1 49       		.uleb128 0x49
 2287 01b2 13       		.uleb128 0x13
 2288 01b3 00       		.byte	0
 2289 01b4 00       		.byte	0
 2290 01b5 1B       		.uleb128 0x1b
 2291 01b6 34       		.uleb128 0x34
 2292 01b7 00       		.byte	0
 2293 01b8 03       		.uleb128 0x3
 2294 01b9 0E       		.uleb128 0xe
 2295 01ba 3A       		.uleb128 0x3a
 2296 01bb 0B       		.uleb128 0xb
 2297 01bc 3B       		.uleb128 0x3b
 2298 01bd 05       		.uleb128 0x5
 2299 01be 49       		.uleb128 0x49
 2300 01bf 13       		.uleb128 0x13
 2301 01c0 3F       		.uleb128 0x3f
 2302 01c1 19       		.uleb128 0x19
 2303 01c2 3C       		.uleb128 0x3c
 2304 01c3 19       		.uleb128 0x19
 2305 01c4 00       		.byte	0
 2306 01c5 00       		.byte	0
 2307 01c6 1C       		.uleb128 0x1c
 2308 01c7 34       		.uleb128 0x34
 2309 01c8 00       		.byte	0
 2310 01c9 03       		.uleb128 0x3
 2311 01ca 08       		.uleb128 0x8
 2312 01cb 3A       		.uleb128 0x3a
 2313 01cc 0B       		.uleb128 0xb
 2314 01cd 3B       		.uleb128 0x3b
 2315 01ce 0B       		.uleb128 0xb
 2316 01cf 49       		.uleb128 0x49
 2317 01d0 13       		.uleb128 0x13
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 50


 2318 01d1 3F       		.uleb128 0x3f
 2319 01d2 19       		.uleb128 0x19
 2320 01d3 02       		.uleb128 0x2
 2321 01d4 18       		.uleb128 0x18
 2322 01d5 00       		.byte	0
 2323 01d6 00       		.byte	0
 2324 01d7 1D       		.uleb128 0x1d
 2325 01d8 34       		.uleb128 0x34
 2326 01d9 00       		.byte	0
 2327 01da 03       		.uleb128 0x3
 2328 01db 0E       		.uleb128 0xe
 2329 01dc 3A       		.uleb128 0x3a
 2330 01dd 0B       		.uleb128 0xb
 2331 01de 3B       		.uleb128 0x3b
 2332 01df 0B       		.uleb128 0xb
 2333 01e0 49       		.uleb128 0x49
 2334 01e1 13       		.uleb128 0x13
 2335 01e2 3F       		.uleb128 0x3f
 2336 01e3 19       		.uleb128 0x19
 2337 01e4 02       		.uleb128 0x2
 2338 01e5 18       		.uleb128 0x18
 2339 01e6 00       		.byte	0
 2340 01e7 00       		.byte	0
 2341 01e8 1E       		.uleb128 0x1e
 2342 01e9 21       		.uleb128 0x21
 2343 01ea 00       		.byte	0
 2344 01eb 49       		.uleb128 0x49
 2345 01ec 13       		.uleb128 0x13
 2346 01ed 2F       		.uleb128 0x2f
 2347 01ee 0B       		.uleb128 0xb
 2348 01ef 00       		.byte	0
 2349 01f0 00       		.byte	0
 2350 01f1 00       		.byte	0
 2351              		.section	.debug_aranges,"",%progbits
 2352 0000 8C000000 		.4byte	0x8c
 2353 0004 0200     		.2byte	0x2
 2354 0006 00000000 		.4byte	.Ldebug_info0
 2355 000a 04       		.byte	0x4
 2356 000b 00       		.byte	0
 2357 000c 0000     		.2byte	0
 2358 000e 0000     		.2byte	0
 2359 0010 00000000 		.4byte	.LFB64
 2360 0014 14000000 		.4byte	.LFE64-.LFB64
 2361 0018 00000000 		.4byte	.LFB65
 2362 001c 14000000 		.4byte	.LFE65-.LFB65
 2363 0020 00000000 		.4byte	.LFB66
 2364 0024 14000000 		.4byte	.LFE66-.LFB66
 2365 0028 00000000 		.4byte	.LFB67
 2366 002c 20000000 		.4byte	.LFE67-.LFB67
 2367 0030 00000000 		.4byte	.LFB68
 2368 0034 20000000 		.4byte	.LFE68-.LFB68
 2369 0038 00000000 		.4byte	.LFB69
 2370 003c 88000000 		.4byte	.LFE69-.LFB69
 2371 0040 00000000 		.4byte	.LFB70
 2372 0044 0C000000 		.4byte	.LFE70-.LFB70
 2373 0048 00000000 		.4byte	.LFB71
 2374 004c C0000000 		.4byte	.LFE71-.LFB71
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 51


 2375 0050 00000000 		.4byte	.LFB72
 2376 0054 2C000000 		.4byte	.LFE72-.LFB72
 2377 0058 00000000 		.4byte	.LFB73
 2378 005c 0C000000 		.4byte	.LFE73-.LFB73
 2379 0060 00000000 		.4byte	.LFB74
 2380 0064 F8000000 		.4byte	.LFE74-.LFB74
 2381 0068 00000000 		.4byte	.LFB75
 2382 006c 3C000000 		.4byte	.LFE75-.LFB75
 2383 0070 00000000 		.4byte	.LFB76
 2384 0074 3E000000 		.4byte	.LFE76-.LFB76
 2385 0078 00000000 		.4byte	.LFB77
 2386 007c 26000000 		.4byte	.LFE77-.LFB77
 2387 0080 00000000 		.4byte	.LFB78
 2388 0084 CC000000 		.4byte	.LFE78-.LFB78
 2389 0088 00000000 		.4byte	0
 2390 008c 00000000 		.4byte	0
 2391              		.section	.debug_ranges,"",%progbits
 2392              	.Ldebug_ranges0:
 2393 0000 00000000 		.4byte	.LFB64
 2394 0004 14000000 		.4byte	.LFE64
 2395 0008 00000000 		.4byte	.LFB65
 2396 000c 14000000 		.4byte	.LFE65
 2397 0010 00000000 		.4byte	.LFB66
 2398 0014 14000000 		.4byte	.LFE66
 2399 0018 00000000 		.4byte	.LFB67
 2400 001c 20000000 		.4byte	.LFE67
 2401 0020 00000000 		.4byte	.LFB68
 2402 0024 20000000 		.4byte	.LFE68
 2403 0028 00000000 		.4byte	.LFB69
 2404 002c 88000000 		.4byte	.LFE69
 2405 0030 00000000 		.4byte	.LFB70
 2406 0034 0C000000 		.4byte	.LFE70
 2407 0038 00000000 		.4byte	.LFB71
 2408 003c C0000000 		.4byte	.LFE71
 2409 0040 00000000 		.4byte	.LFB72
 2410 0044 2C000000 		.4byte	.LFE72
 2411 0048 00000000 		.4byte	.LFB73
 2412 004c 0C000000 		.4byte	.LFE73
 2413 0050 00000000 		.4byte	.LFB74
 2414 0054 F8000000 		.4byte	.LFE74
 2415 0058 00000000 		.4byte	.LFB75
 2416 005c 3C000000 		.4byte	.LFE75
 2417 0060 00000000 		.4byte	.LFB76
 2418 0064 3E000000 		.4byte	.LFE76
 2419 0068 00000000 		.4byte	.LFB77
 2420 006c 26000000 		.4byte	.LFE77
 2421 0070 00000000 		.4byte	.LFB78
 2422 0074 CC000000 		.4byte	.LFE78
 2423 0078 00000000 		.4byte	0
 2424 007c 00000000 		.4byte	0
 2425              		.section	.debug_line,"",%progbits
 2426              	.Ldebug_line0:
 2427 0000 F6020000 		.section	.debug_str,"MS",%progbits,1
 2427      02005601 
 2427      00000201 
 2427      FB0E0D00 
 2427      01010101 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 52


 2428              	.LASF39:
 2429 0000 6D6F746F 		.ascii	"motorStop\000"
 2429      7253746F 
 2429      7000
 2430              	.LASF54:
 2431 000a 6973725F 		.ascii	"isr_TS_Interrupt_sample\000"
 2431      54535F49 
 2431      6E746572 
 2431      72757074 
 2431      5F73616D 
 2432              	.LASF67:
 2433 0022 74735F65 		.ascii	"ts_enc\000"
 2433      6E6300
 2434              	.LASF14:
 2435 0029 646F7562 		.ascii	"double\000"
 2435      6C6500
 2436              	.LASF76:
 2437 0030 666C6167 		.ascii	"flag_packet\000"
 2437      5F706163 
 2437      6B657400 
 2438              	.LASF60:
 2439 003c 75736250 		.ascii	"usbPutChar\000"
 2439      75744368 
 2439      617200
 2440              	.LASF89:
 2441 0047 636F756E 		.ascii	"counteoc\000"
 2441      74656F63 
 2441      00
 2442              	.LASF42:
 2443 0050 6973725F 		.ascii	"isr_eoc_Interrupt_test\000"
 2443      656F635F 
 2443      496E7465 
 2443      72727570 
 2443      745F7465 
 2444              	.LASF38:
 2445 0067 6D6F746F 		.ascii	"motorGoBackwards\000"
 2445      72476F42 
 2445      61636B77 
 2445      61726473 
 2445      00
 2446              	.LASF86:
 2447 0078 63686563 		.ascii	"checkLight\000"
 2447      6B4C6967 
 2447      687400
 2448              	.LASF33:
 2449 0083 67325F78 		.ascii	"g2_xpos\000"
 2449      706F7300 
 2450              	.LASF2:
 2451 008b 73686F72 		.ascii	"short int\000"
 2451      7420696E 
 2451      7400
 2452              	.LASF84:
 2453 0095 73797374 		.ascii	"system_state\000"
 2453      656D5F73 
 2453      74617465 
 2453      00
 2454              	.LASF10:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 53


 2455 00a2 73697A65 		.ascii	"sizetype\000"
 2455      74797065 
 2455      00
 2456              	.LASF83:
 2457 00ab 75736242 		.ascii	"usbBuffer\000"
 2457      75666665 
 2457      7200
 2458              	.LASF91:
 2459 00b5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2459      43313120 
 2459      352E342E 
 2459      31203230 
 2459      31363036 
 2460 00e8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2460      20726576 
 2460      6973696F 
 2460      6E203233 
 2460      37373135 
 2461 011b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2461      66756E63 
 2461      74696F6E 
 2461      2D736563 
 2461      74696F6E 
 2462              	.LASF55:
 2463 0143 6D61696E 		.ascii	"main\000"
 2463      00
 2464              	.LASF43:
 2465 0148 76616C75 		.ascii	"valueQ3\000"
 2465      65513300 
 2466              	.LASF44:
 2467 0150 76616C75 		.ascii	"valueQ4\000"
 2467      65513400 
 2468              	.LASF45:
 2469 0158 76616C75 		.ascii	"valueQ5\000"
 2469      65513500 
 2470              	.LASF52:
 2471 0160 6D6F746F 		.ascii	"motorRun\000"
 2471      7252756E 
 2471      00
 2472              	.LASF87:
 2473 0169 6C696768 		.ascii	"lightState\000"
 2473      74537461 
 2473      746500
 2474              	.LASF17:
 2475 0174 75696E74 		.ascii	"uint16\000"
 2475      313600
 2476              	.LASF21:
 2477 017b 696E6465 		.ascii	"index\000"
 2477      7800
 2478              	.LASF19:
 2479 0181 696E7431 		.ascii	"int16\000"
 2479      3600
 2480              	.LASF16:
 2481 0187 75696E74 		.ascii	"uint8\000"
 2481      3800
 2482              	.LASF93:
 2483 018d 5C5C6669 		.ascii	"\\\\files.auckland.ac.nz\\myhome\\Documents\\GitHub"
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 54


 2483      6C65732E 
 2483      6175636B 
 2483      6C616E64 
 2483      2E61632E 
 2484 01bb 5C70726F 		.ascii	"\\project-project_group_11\\COMPSYS 301\\psoc stude"
 2484      6A656374 
 2484      2D70726F 
 2484      6A656374 
 2484      5F67726F 
 2485 01eb 6E742070 		.ascii	"nt pack\\psoc student pack\\psoc_code_base\\CS301_C"
 2485      61636B5C 
 2485      70736F63 
 2485      20737475 
 2485      64656E74 
 2486 021b 6C617373 		.ascii	"lass.cydsn\000"
 2486      2E637964 
 2486      736E00
 2487              	.LASF85:
 2488 0226 6368616E 		.ascii	"changeMotor\000"
 2488      67654D6F 
 2488      746F7200 
 2489              	.LASF81:
 2490 0232 6C696E65 		.ascii	"line\000"
 2490      00
 2491              	.LASF15:
 2492 0237 666C6F61 		.ascii	"float\000"
 2492      7400
 2493              	.LASF53:
 2494 023d 6973725F 		.ascii	"isr_motor_interrupt_speed\000"
 2494      6D6F746F 
 2494      725F696E 
 2494      74657272 
 2494      7570745F 
 2495              	.LASF6:
 2496 0257 6C6F6E67 		.ascii	"long long int\000"
 2496      206C6F6E 
 2496      6720696E 
 2496      7400
 2497              	.LASF59:
 2498 0265 75736250 		.ascii	"usbPutString\000"
 2498      75745374 
 2498      72696E67 
 2498      00
 2499              	.LASF18:
 2500 0272 696E7438 		.ascii	"int8\000"
 2500      00
 2501              	.LASF72:
 2502 0277 666C6167 		.ascii	"flag_ts_update\000"
 2502      5F74735F 
 2502      75706461 
 2502      746500
 2503              	.LASF34:
 2504 0286 67325F79 		.ascii	"g2_ypos\000"
 2504      706F7300 
 2505              	.LASF28:
 2506 028e 67305F64 		.ascii	"g0_direction\000"
 2506      69726563 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 55


 2506      74696F6E 
 2506      00
 2507              	.LASF25:
 2508 029b 67305F78 		.ascii	"g0_xpos\000"
 2508      706F7300 
 2509              	.LASF4:
 2510 02a3 6C6F6E67 		.ascii	"long int\000"
 2510      20696E74 
 2510      00
 2511              	.LASF46:
 2512 02ac 62656769 		.ascii	"beginningCountMotor1\000"
 2512      6E6E696E 
 2512      67436F75 
 2512      6E744D6F 
 2512      746F7231 
 2513              	.LASF47:
 2514 02c1 62656769 		.ascii	"beginningCountMotor2\000"
 2514      6E6E696E 
 2514      67436F75 
 2514      6E744D6F 
 2514      746F7232 
 2515              	.LASF50:
 2516 02d6 6D6F746F 		.ascii	"motor1String\000"
 2516      72315374 
 2516      72696E67 
 2516      00
 2517              	.LASF90:
 2518 02e3 70726F63 		.ascii	"processSensors\000"
 2518      65737353 
 2518      656E736F 
 2518      727300
 2519              	.LASF74:
 2520 02f2 666C6167 		.ascii	"flag_ts_display\000"
 2520      5F74735F 
 2520      64697370 
 2520      6C617900 
 2521              	.LASF75:
 2522 0302 666C6167 		.ascii	"flag_rx\000"
 2522      5F727800 
 2523              	.LASF49:
 2524 030a 656E6443 		.ascii	"endCountMotor1\000"
 2524      6F756E74 
 2524      4D6F746F 
 2524      723100
 2525              	.LASF48:
 2526 0319 656E6443 		.ascii	"endCountMotor2\000"
 2526      6F756E74 
 2526      4D6F746F 
 2526      723200
 2527              	.LASF82:
 2528 0328 656E7472 		.ascii	"entry\000"
 2528      7900
 2529              	.LASF9:
 2530 032e 6C6F6E67 		.ascii	"long double\000"
 2530      20646F75 
 2530      626C6500 
 2531              	.LASF1:
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 56


 2532 033a 756E7369 		.ascii	"unsigned char\000"
 2532      676E6564 
 2532      20636861 
 2532      7200
 2533              	.LASF88:
 2534 0348 6C696768 		.ascii	"lightDetectedFront\000"
 2534      74446574 
 2534      65637465 
 2534      6446726F 
 2534      6E7400
 2535              	.LASF27:
 2536 035b 67305F73 		.ascii	"g0_speed\000"
 2536      70656564 
 2536      00
 2537              	.LASF78:
 2538 0364 64617461 		.ascii	"dataready_flag\000"
 2538      72656164 
 2538      795F666C 
 2538      616700
 2539              	.LASF0:
 2540 0373 7369676E 		.ascii	"signed char\000"
 2540      65642063 
 2540      68617200 
 2541              	.LASF7:
 2542 037f 6C6F6E67 		.ascii	"long long unsigned int\000"
 2542      206C6F6E 
 2542      6720756E 
 2542      7369676E 
 2542      65642069 
 2543              	.LASF8:
 2544 0396 756E7369 		.ascii	"unsigned int\000"
 2544      676E6564 
 2544      20696E74 
 2544      00
 2545              	.LASF77:
 2546 03a3 666C6167 		.ascii	"flag_KB_string\000"
 2546      5F4B425F 
 2546      73747269 
 2546      6E6700
 2547              	.LASF64:
 2548 03b2 75736242 		.ascii	"usbBufCount\000"
 2548      7566436F 
 2548      756E7400 
 2549              	.LASF35:
 2550 03be 67325F73 		.ascii	"g2_speed\000"
 2550      70656564 
 2550      00
 2551              	.LASF29:
 2552 03c7 67315F78 		.ascii	"g1_xpos\000"
 2552      706F7300 
 2553              	.LASF56:
 2554 03cf 6F706572 		.ascii	"operation\000"
 2554      6174696F 
 2554      6E00
 2555              	.LASF94:
 2556 03d9 64617461 		.ascii	"data_main\000"
 2556      5F6D6169 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 57


 2556      6E00
 2557              	.LASF11:
 2558 03e3 63686172 		.ascii	"char\000"
 2558      00
 2559              	.LASF22:
 2560 03e8 726F626F 		.ascii	"robot_xpos\000"
 2560      745F7870 
 2560      6F7300
 2561              	.LASF13:
 2562 03f3 696E7433 		.ascii	"int32_t\000"
 2562      325F7400 
 2563              	.LASF30:
 2564 03fb 67315F79 		.ascii	"g1_ypos\000"
 2564      706F7300 
 2565              	.LASF36:
 2566 0403 67325F64 		.ascii	"g2_direction\000"
 2566      69726563 
 2566      74696F6E 
 2566      00
 2567              	.LASF3:
 2568 0410 73686F72 		.ascii	"short unsigned int\000"
 2568      7420756E 
 2568      7369676E 
 2568      65642069 
 2568      6E7400
 2569              	.LASF31:
 2570 0423 67315F73 		.ascii	"g1_speed\000"
 2570      70656564 
 2570      00
 2571              	.LASF80:
 2572 042c 64697370 		.ascii	"displaystring\000"
 2572      6C617973 
 2572      7472696E 
 2572      6700
 2573              	.LASF73:
 2574 043a 666C6167 		.ascii	"flag_ts_speed\000"
 2574      5F74735F 
 2574      73706565 
 2574      6400
 2575              	.LASF57:
 2576 0448 636F6E76 		.ascii	"convertSensorBinary\000"
 2576      65727453 
 2576      656E736F 
 2576      7242696E 
 2576      61727900 
 2577              	.LASF92:
 2578 045c 6D61696E 		.ascii	"main.c\000"
 2578      2E6300
 2579              	.LASF5:
 2580 0463 6C6F6E67 		.ascii	"long unsigned int\000"
 2580      20756E73 
 2580      69676E65 
 2580      6420696E 
 2580      7400
 2581              	.LASF63:
 2582 0475 75736253 		.ascii	"usbStarted\000"
 2582      74617274 
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 58


 2582      656400
 2583              	.LASF69:
 2584 0480 74735F73 		.ascii	"ts_speed\000"
 2584      70656564 
 2584      00
 2585              	.LASF65:
 2586 0489 636F756E 		.ascii	"count\000"
 2586      7400
 2587              	.LASF71:
 2588 048f 666C6167 		.ascii	"flag_ts_enc\000"
 2588      5F74735F 
 2588      656E6300 
 2589              	.LASF12:
 2590 049b 5F5F696E 		.ascii	"__int32_t\000"
 2590      7433325F 
 2590      7400
 2591              	.LASF40:
 2592 04a5 6D6F746F 		.ascii	"motorTurnLeft\000"
 2592      72547572 
 2592      6E4C6566 
 2592      7400
 2593              	.LASF37:
 2594 04b3 6D6F746F 		.ascii	"motorGoStraight\000"
 2594      72476F53 
 2594      74726169 
 2594      67687400 
 2595              	.LASF61:
 2596 04c3 6D6F746F 		.ascii	"motorCount\000"
 2596      72436F75 
 2596      6E7400
 2597              	.LASF26:
 2598 04ce 67305F79 		.ascii	"g0_ypos\000"
 2598      706F7300 
 2599              	.LASF70:
 2600 04d6 74735F64 		.ascii	"ts_display\000"
 2600      6973706C 
 2600      617900
 2601              	.LASF68:
 2602 04e1 74735F75 		.ascii	"ts_update\000"
 2602      70646174 
 2602      6500
 2603              	.LASF62:
 2604 04eb 68616E64 		.ascii	"handle_usb\000"
 2604      6C655F75 
 2604      736200
 2605              	.LASF79:
 2606 04f6 666C6167 		.ascii	"flag_rf_transmission_active\000"
 2606      5F72665F 
 2606      7472616E 
 2606      736D6973 
 2606      73696F6E 
 2607              	.LASF23:
 2608 0512 726F626F 		.ascii	"robot_ypos\000"
 2608      745F7970 
 2608      6F7300
 2609              	.LASF66:
 2610 051d 49544D5F 		.ascii	"ITM_RxBuffer\000"
ARM GAS  C:\Users\smiy200\AppData\Local\Temp\ccJxhEU2.s 			page 59


 2610      52784275 
 2610      66666572 
 2610      00
 2611              	.LASF58:
 2612 052a 76616C75 		.ascii	"value\000"
 2612      6500
 2613              	.LASF51:
 2614 0530 6D6F746F 		.ascii	"motor2String\000"
 2614      72325374 
 2614      72696E67 
 2614      00
 2615              	.LASF32:
 2616 053d 67315F64 		.ascii	"g1_direction\000"
 2616      69726563 
 2616      74696F6E 
 2616      00
 2617              	.LASF41:
 2618 054a 6D6F746F 		.ascii	"motorTurnRight\000"
 2618      72547572 
 2618      6E526967 
 2618      687400
 2619              	.LASF20:
 2620 0559 72737369 		.ascii	"rssi\000"
 2620      00
 2621              	.LASF24:
 2622 055e 726F626F 		.ascii	"robot_orientation\000"
 2622      745F6F72 
 2622      69656E74 
 2622      6174696F 
 2622      6E00
 2623              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
